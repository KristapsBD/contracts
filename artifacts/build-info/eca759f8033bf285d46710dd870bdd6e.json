{
	"id": "eca759f8033bf285d46710dd870bdd6e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Test,sol.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v4.2.3\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport './IERC721A.sol';\r\n\r\n/**\r\n * @dev Interface of ERC721 token receiver.\r\n */\r\ninterface ERC721A__IERC721Receiver {\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n\r\n/**\r\n * @title ERC721A\r\n *\r\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\r\n * Non-Fungible Token Standard, including the Metadata extension.\r\n * Optimized for lower gas during batch mints.\r\n *\r\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\r\n * starting from `_startTokenId()`.\r\n *\r\n * Assumptions:\r\n *\r\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\r\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\r\n */\r\ncontract ERC721A is IERC721A {\r\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\r\n    struct TokenApprovalRef {\r\n        address value;\r\n    }\r\n\r\n    // =============================================================\r\n    //                           CONSTANTS\r\n    // =============================================================\r\n\r\n    // Mask of an entry in packed address data.\r\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\r\n\r\n    // The bit position of `numberMinted` in packed address data.\r\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\r\n\r\n    // The bit position of `numberBurned` in packed address data.\r\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\r\n\r\n    // The bit position of `aux` in packed address data.\r\n    uint256 private constant _BITPOS_AUX = 192;\r\n\r\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\r\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\r\n\r\n    // The bit position of `startTimestamp` in packed ownership.\r\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\r\n\r\n    // The bit mask of the `burned` bit in packed ownership.\r\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\r\n\r\n    // The bit position of the `nextInitialized` bit in packed ownership.\r\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\r\n\r\n    // The bit mask of the `nextInitialized` bit in packed ownership.\r\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\r\n\r\n    // The bit position of `extraData` in packed ownership.\r\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\r\n\r\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\r\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\r\n\r\n    // The mask of the lower 160 bits for addresses.\r\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\r\n\r\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\r\n    // This limit is to prevent overflows on the address data entries.\r\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\r\n    // is required to cause an overflow, which is unrealistic.\r\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\r\n\r\n    // The `Transfer` event signature is given by:\r\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\r\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\r\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\r\n\r\n    // =============================================================\r\n    //                            STORAGE\r\n    // =============================================================\r\n\r\n    // The next token ID to be minted.\r\n    uint256 private _currentIndex;\r\n\r\n    // The number of tokens burned.\r\n    uint256 private _burnCounter;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    // Mapping from token ID to ownership details\r\n    // An empty struct value does not necessarily mean the token is unowned.\r\n    // See {_packedOwnershipOf} implementation for details.\r\n    //\r\n    // Bits Layout:\r\n    // - [0..159]   `addr`\r\n    // - [160..223] `startTimestamp`\r\n    // - [224]      `burned`\r\n    // - [225]      `nextInitialized`\r\n    // - [232..255] `extraData`\r\n    mapping(uint256 => uint256) private _packedOwnerships;\r\n\r\n    // Mapping owner address to address data.\r\n    //\r\n    // Bits Layout:\r\n    // - [0..63]    `balance`\r\n    // - [64..127]  `numberMinted`\r\n    // - [128..191] `numberBurned`\r\n    // - [192..255] `aux`\r\n    mapping(address => uint256) private _packedAddressData;\r\n\r\n    // Mapping from token ID to approved address.\r\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\r\n\r\n    // Mapping from owner to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    // =============================================================\r\n    //                          CONSTRUCTOR\r\n    // =============================================================\r\n\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _currentIndex = _startTokenId();\r\n    }\r\n\r\n    // =============================================================\r\n    //                   TOKEN COUNTING OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the starting token ID.\r\n     * To change the starting token ID, please override this function.\r\n     */\r\n    function _startTokenId() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the next token ID to be minted.\r\n     */\r\n    function _nextTokenId() internal view virtual returns (uint256) {\r\n        return _currentIndex;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total number of tokens in existence.\r\n     * Burned tokens will reduce the count.\r\n     * To get the total number of tokens minted, please see {_totalMinted}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        // Counter underflow is impossible as _burnCounter cannot be incremented\r\n        // more than `_currentIndex - _startTokenId()` times.\r\n        unchecked {\r\n            return _currentIndex - _burnCounter - _startTokenId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total amount of tokens minted in the contract.\r\n     */\r\n    function _totalMinted() internal view virtual returns (uint256) {\r\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\r\n        // and it is initialized to `_startTokenId()`.\r\n        unchecked {\r\n            return _currentIndex - _startTokenId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total number of tokens burned.\r\n     */\r\n    function _totalBurned() internal view virtual returns (uint256) {\r\n        return _burnCounter;\r\n    }\r\n\r\n    // =============================================================\r\n    //                    ADDRESS DATA OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in `owner`'s account.\r\n     */\r\n    function balanceOf(address owner) public view virtual override returns (uint256) {\r\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\r\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens minted by `owner`.\r\n     */\r\n    function _numberMinted(address owner) internal view returns (uint256) {\r\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens burned by or on behalf of `owner`.\r\n     */\r\n    function _numberBurned(address owner) internal view returns (uint256) {\r\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    /**\r\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     */\r\n    function _getAux(address owner) internal view returns (uint64) {\r\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\r\n    }\r\n\r\n    /**\r\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     * If there are multiple variables, please pack them into a uint64.\r\n     */\r\n    function _setAux(address owner, uint64 aux) internal virtual {\r\n        uint256 packed = _packedAddressData[owner];\r\n        uint256 auxCasted;\r\n        // Cast `aux` with assembly to avoid redundant masking.\r\n        assembly {\r\n            auxCasted := aux\r\n        }\r\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\r\n        _packedAddressData[owner] = packed;\r\n    }\r\n\r\n    // =============================================================\r\n    //                            IERC165\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        // The interface IDs are constants representing the first 4 bytes\r\n        // of the XOR of all function selectors in the interface.\r\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\r\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\r\n        return\r\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\r\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\r\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\r\n    }\r\n\r\n    // =============================================================\r\n    //                        IERC721Metadata\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, it can be overridden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return '';\r\n    }\r\n\r\n    // =============================================================\r\n    //                     OWNERSHIPS OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\r\n        return address(uint160(_packedOwnershipOf(tokenId)));\r\n    }\r\n\r\n    /**\r\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\r\n     * It gradually moves to O(1) as tokens get transferred around over time.\r\n     */\r\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\r\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\r\n     */\r\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\r\n        return _unpackedOwnership(_packedOwnerships[index]);\r\n    }\r\n\r\n    /**\r\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\r\n     */\r\n    function _initializeOwnershipAt(uint256 index) internal virtual {\r\n        if (_packedOwnerships[index] == 0) {\r\n            _packedOwnerships[index] = _packedOwnershipOf(index);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the packed ownership data of `tokenId`.\r\n     */\r\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\r\n        uint256 curr = tokenId;\r\n\r\n        unchecked {\r\n            if (_startTokenId() <= curr)\r\n                if (curr < _currentIndex) {\r\n                    uint256 packed = _packedOwnerships[curr];\r\n                    // If not burned.\r\n                    if (packed & _BITMASK_BURNED == 0) {\r\n                        // Invariant:\r\n                        // There will always be an initialized ownership slot\r\n                        // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\r\n                        // before an unintialized ownership slot\r\n                        // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\r\n                        // Hence, `curr` will not underflow.\r\n                        //\r\n                        // We can directly compare the packed value.\r\n                        // If the address is zero, packed will be zero.\r\n                        while (packed == 0) {\r\n                            packed = _packedOwnerships[--curr];\r\n                        }\r\n                        return packed;\r\n                    }\r\n                }\r\n        }\r\n        revert OwnerQueryForNonexistentToken();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\r\n     */\r\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\r\n        ownership.addr = address(uint160(packed));\r\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\r\n        ownership.burned = packed & _BITMASK_BURNED != 0;\r\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\r\n    }\r\n\r\n    /**\r\n     * @dev Packs ownership data into a single uint256.\r\n     */\r\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\r\n        assembly {\r\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            owner := and(owner, _BITMASK_ADDRESS)\r\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\r\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\r\n     */\r\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\r\n        // For branchless setting of the `nextInitialized` flag.\r\n        assembly {\r\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\r\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\r\n        }\r\n    }\r\n\r\n    // =============================================================\r\n    //                      APPROVAL OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the\r\n     * zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) public payable virtual override {\r\n        address owner = ownerOf(tokenId);\r\n\r\n        if (_msgSenderERC721A() != owner)\r\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\r\n                revert ApprovalCallerNotOwnerNorApproved();\r\n            }\r\n\r\n        _tokenApprovals[tokenId].value = to;\r\n        emit Approval(owner, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\r\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\r\n\r\n        return _tokenApprovals[tokenId].value;\r\n    }\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom}\r\n     * for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\r\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `tokenId` exists.\r\n     *\r\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\r\n     *\r\n     * Tokens start existing when they are minted. See {_mint}.\r\n     */\r\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\r\n        return\r\n            _startTokenId() <= tokenId &&\r\n            tokenId < _currentIndex && // If within bounds,\r\n            _packedOwnerships[tokenId] & _BITMASK_BURNED == 0; // and not burned.\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\r\n     */\r\n    function _isSenderApprovedOrOwner(\r\n        address approvedAddress,\r\n        address owner,\r\n        address msgSender\r\n    ) private pure returns (bool result) {\r\n        assembly {\r\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            owner := and(owner, _BITMASK_ADDRESS)\r\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\r\n            // `msgSender == owner || msgSender == approvedAddress`.\r\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\r\n     */\r\n    function _getApprovedSlotAndAddress(uint256 tokenId)\r\n        private\r\n        view\r\n        returns (uint256 approvedAddressSlot, address approvedAddress)\r\n    {\r\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\r\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\r\n        assembly {\r\n            approvedAddressSlot := tokenApproval.slot\r\n            approvedAddress := sload(approvedAddressSlot)\r\n        }\r\n    }\r\n\r\n    // =============================================================\r\n    //                      TRANSFER OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token\r\n     * by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public payable virtual override {\r\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\r\n\r\n        if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner();\r\n\r\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\r\n\r\n        // The nested ifs save around 20+ gas over a compound boolean condition.\r\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\r\n            if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\r\n\r\n        if (to == address(0)) revert TransferToZeroAddress();\r\n\r\n        _beforeTokenTransfers(from, to, tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner.\r\n        assembly {\r\n            if approvedAddress {\r\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\r\n                sstore(approvedAddressSlot, 0)\r\n            }\r\n        }\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\r\n        unchecked {\r\n            // We can directly increment and decrement the balances.\r\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\r\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\r\n\r\n            // Updates:\r\n            // - `address` to the next owner.\r\n            // - `startTimestamp` to the timestamp of transfering.\r\n            // - `burned` to `false`.\r\n            // - `nextInitialized` to `true`.\r\n            _packedOwnerships[tokenId] = _packOwnershipData(\r\n                to,\r\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\r\n            );\r\n\r\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\r\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\r\n                uint256 nextTokenId = tokenId + 1;\r\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\r\n                if (_packedOwnerships[nextTokenId] == 0) {\r\n                    // If the next slot is within bounds.\r\n                    if (nextTokenId != _currentIndex) {\r\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\r\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, tokenId);\r\n        _afterTokenTransfers(from, to, tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public payable virtual override {\r\n        safeTransferFrom(from, to, tokenId, '');\r\n    }\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token\r\n     * by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement\r\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) public payable virtual override {\r\n        transferFrom(from, to, tokenId);\r\n        if (to.code.length != 0)\r\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\r\n                revert TransferToNonERC721ReceiverImplementer();\r\n            }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before a set of serially-ordered token IDs\r\n     * are about to be transferred. This includes minting.\r\n     * And also called before burning one token.\r\n     *\r\n     * `startTokenId` - the first token ID to be transferred.\r\n     * `quantity` - the amount to be transferred.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, `tokenId` will be burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _beforeTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after a set of serially-ordered token IDs\r\n     * have been transferred. This includes minting.\r\n     * And also called after one token has been burned.\r\n     *\r\n     * `startTokenId` - the first token ID to be transferred.\r\n     * `quantity` - the amount to be transferred.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` has been minted for `to`.\r\n     * - When `to` is zero, `tokenId` has been burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _afterTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\r\n     *\r\n     * `from` - Previous owner of the given token ID.\r\n     * `to` - Target address that will receive the token.\r\n     * `tokenId` - Token ID to be transferred.\r\n     * `_data` - Optional data to send along with the call.\r\n     *\r\n     * Returns whether the call correctly returned the expected magic value.\r\n     */\r\n    function _checkContractOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) private returns (bool) {\r\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\r\n            bytes4 retval\r\n        ) {\r\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\r\n        } catch (bytes memory reason) {\r\n            if (reason.length == 0) {\r\n                revert TransferToNonERC721ReceiverImplementer();\r\n            } else {\r\n                assembly {\r\n                    revert(add(32, reason), mload(reason))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // =============================================================\r\n    //                        MINT OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {Transfer} event for each mint.\r\n     */\r\n    function _mint(address to, uint256 quantity) internal virtual {\r\n        uint256 startTokenId = _currentIndex;\r\n        if (quantity == 0) revert MintZeroQuantity();\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are incredibly unrealistic.\r\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\r\n        // `tokenId` has a maximum limit of 2**256.\r\n        unchecked {\r\n            // Updates:\r\n            // - `balance += quantity`.\r\n            // - `numberMinted += quantity`.\r\n            //\r\n            // We can directly add to the `balance` and `numberMinted`.\r\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\r\n\r\n            // Updates:\r\n            // - `address` to the owner.\r\n            // - `startTimestamp` to the timestamp of minting.\r\n            // - `burned` to `false`.\r\n            // - `nextInitialized` to `quantity == 1`.\r\n            _packedOwnerships[startTokenId] = _packOwnershipData(\r\n                to,\r\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\r\n            );\r\n\r\n            uint256 toMasked;\r\n            uint256 end = startTokenId + quantity;\r\n\r\n            // Use assembly to loop and emit the `Transfer` event for gas savings.\r\n            // The duplicated `log4` removes an extra check and reduces stack juggling.\r\n            // The assembly, together with the surrounding Solidity code, have been\r\n            // delicately arranged to nudge the compiler into producing optimized opcodes.\r\n            assembly {\r\n                // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n                toMasked := and(to, _BITMASK_ADDRESS)\r\n                // Emit the `Transfer` event.\r\n                log4(\r\n                    0, // Start of data (0, since no data).\r\n                    0, // End of data (0, since no data).\r\n                    _TRANSFER_EVENT_SIGNATURE, // Signature.\r\n                    0, // `address(0)`.\r\n                    toMasked, // `to`.\r\n                    startTokenId // `tokenId`.\r\n                )\r\n\r\n                // The `iszero(eq(,))` check ensures that large values of `quantity`\r\n                // that overflows uint256 will make the loop run out of gas.\r\n                // The compiler will optimize the `iszero` away for performance.\r\n                for {\r\n                    let tokenId := add(startTokenId, 1)\r\n                } iszero(eq(tokenId, end)) {\r\n                    tokenId := add(tokenId, 1)\r\n                } {\r\n                    // Emit the `Transfer` event. Similar to above.\r\n                    log4(0, 0, _TRANSFER_EVENT_SIGNATURE, 0, toMasked, tokenId)\r\n                }\r\n            }\r\n            if (toMasked == 0) revert MintToZeroAddress();\r\n\r\n            _currentIndex = end;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * This function is intended for efficient minting only during contract creation.\r\n     *\r\n     * It emits only one {ConsecutiveTransfer} as defined in\r\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\r\n     * instead of a sequence of {Transfer} event(s).\r\n     *\r\n     * Calling this function outside of contract creation WILL make your contract\r\n     * non-compliant with the ERC721 standard.\r\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\r\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {ConsecutiveTransfer} event.\r\n     */\r\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\r\n        uint256 startTokenId = _currentIndex;\r\n        if (to == address(0)) revert MintToZeroAddress();\r\n        if (quantity == 0) revert MintZeroQuantity();\r\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) revert MintERC2309QuantityExceedsLimit();\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\r\n        unchecked {\r\n            // Updates:\r\n            // - `balance += quantity`.\r\n            // - `numberMinted += quantity`.\r\n            //\r\n            // We can directly add to the `balance` and `numberMinted`.\r\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\r\n\r\n            // Updates:\r\n            // - `address` to the owner.\r\n            // - `startTimestamp` to the timestamp of minting.\r\n            // - `burned` to `false`.\r\n            // - `nextInitialized` to `quantity == 1`.\r\n            _packedOwnerships[startTokenId] = _packOwnershipData(\r\n                to,\r\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\r\n            );\r\n\r\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\r\n\r\n            _currentIndex = startTokenId + quantity;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n\r\n    /**\r\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - If `to` refers to a smart contract, it must implement\r\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * See {_mint}.\r\n     *\r\n     * Emits a {Transfer} event for each mint.\r\n     */\r\n    function _safeMint(\r\n        address to,\r\n        uint256 quantity,\r\n        bytes memory _data\r\n    ) internal virtual {\r\n        _mint(to, quantity);\r\n\r\n        unchecked {\r\n            if (to.code.length != 0) {\r\n                uint256 end = _currentIndex;\r\n                uint256 index = end - quantity;\r\n                do {\r\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\r\n                        revert TransferToNonERC721ReceiverImplementer();\r\n                    }\r\n                } while (index < end);\r\n                // Reentrancy protection.\r\n                if (_currentIndex != end) revert();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\r\n     */\r\n    function _safeMint(address to, uint256 quantity) internal virtual {\r\n        _safeMint(to, quantity, '');\r\n    }\r\n\r\n    // =============================================================\r\n    //                        BURN OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Equivalent to `_burn(tokenId, false)`.\r\n     */\r\n    function _burn(uint256 tokenId) internal virtual {\r\n        _burn(tokenId, false);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\r\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\r\n\r\n        address from = address(uint160(prevOwnershipPacked));\r\n\r\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\r\n\r\n        if (approvalCheck) {\r\n            // The nested ifs save around 20+ gas over a compound boolean condition.\r\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\r\n                if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\r\n        }\r\n\r\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner.\r\n        assembly {\r\n            if approvedAddress {\r\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\r\n                sstore(approvedAddressSlot, 0)\r\n            }\r\n        }\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\r\n        unchecked {\r\n            // Updates:\r\n            // - `balance -= 1`.\r\n            // - `numberBurned += 1`.\r\n            //\r\n            // We can directly decrement the balance, and increment the number burned.\r\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\r\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\r\n\r\n            // Updates:\r\n            // - `address` to the last owner.\r\n            // - `startTimestamp` to the timestamp of burning.\r\n            // - `burned` to `true`.\r\n            // - `nextInitialized` to `true`.\r\n            _packedOwnerships[tokenId] = _packOwnershipData(\r\n                from,\r\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\r\n            );\r\n\r\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\r\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\r\n                uint256 nextTokenId = tokenId + 1;\r\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\r\n                if (_packedOwnerships[nextTokenId] == 0) {\r\n                    // If the next slot is within bounds.\r\n                    if (nextTokenId != _currentIndex) {\r\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\r\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, address(0), tokenId);\r\n        _afterTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\r\n        unchecked {\r\n            _burnCounter++;\r\n        }\r\n    }\r\n\r\n    // =============================================================\r\n    //                     EXTRA DATA OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Directly sets the extra data for the ownership data `index`.\r\n     */\r\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\r\n        uint256 packed = _packedOwnerships[index];\r\n        if (packed == 0) revert OwnershipNotInitializedForExtraData();\r\n        uint256 extraDataCasted;\r\n        // Cast `extraData` with assembly to avoid redundant masking.\r\n        assembly {\r\n            extraDataCasted := extraData\r\n        }\r\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\r\n        _packedOwnerships[index] = packed;\r\n    }\r\n\r\n    /**\r\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\r\n     * Intended to be overridden by the cosumer contract.\r\n     *\r\n     * `previousExtraData` - the value of `extraData` before transfer.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, `tokenId` will be burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _extraData(\r\n        address from,\r\n        address to,\r\n        uint24 previousExtraData\r\n    ) internal view virtual returns (uint24) {}\r\n\r\n    /**\r\n     * @dev Returns the next extra data for the packed ownership data.\r\n     * The returned result is shifted into position.\r\n     */\r\n    function _nextExtraData(\r\n        address from,\r\n        address to,\r\n        uint256 prevOwnershipPacked\r\n    ) private view returns (uint256) {\r\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\r\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\r\n    }\r\n\r\n    // =============================================================\r\n    //                       OTHER OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the message sender (defaults to `msg.sender`).\r\n     *\r\n     * If you are writing GSN compatible contracts, you need to override this function.\r\n     */\r\n    function _msgSenderERC721A() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a uint256 to its ASCII string decimal representation.\r\n     */\r\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\r\n        assembly {\r\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\r\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\r\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\r\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\r\n            let m := add(mload(0x40), 0xa0)\r\n            // Update the free memory pointer to allocate.\r\n            mstore(0x40, m)\r\n            // Assign the `str` to the end.\r\n            str := sub(m, 0x20)\r\n            // Zeroize the slot after the string.\r\n            mstore(str, 0)\r\n\r\n            // Cache the end of the memory to calculate the length later.\r\n            let end := str\r\n\r\n            // We write the string from rightmost digit to leftmost digit.\r\n            // The following is essentially a do-while loop that also handles the zero case.\r\n            // prettier-ignore\r\n            for { let temp := value } 1 {} {\r\n                str := sub(str, 1)\r\n                // Write the character to the pointer.\r\n                // The ASCII index of the '0' character is 48.\r\n                mstore8(str, add(48, mod(temp, 10)))\r\n                // Keep dividing `temp` until zero.\r\n                temp := div(temp, 10)\r\n                // prettier-ignore\r\n                if iszero(temp) { break }\r\n            }\r\n\r\n            let length := sub(end, str)\r\n            // Move the pointer 32 bytes leftwards to make room for the length.\r\n            str := sub(str, 0x20)\r\n            // Store the length.\r\n            mstore(str, length)\r\n        }\r\n    }\r\n}"
			},
			"contracts/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v4.2.3\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\n/**\r\n * @dev Interface of ERC721A.\r\n */\r\ninterface IERC721A {\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error ApprovalCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error ApprovalQueryForNonexistentToken();\r\n\r\n    /**\r\n     * Cannot query the balance for the zero address.\r\n     */\r\n    error BalanceQueryForZeroAddress();\r\n\r\n    /**\r\n     * Cannot mint to the zero address.\r\n     */\r\n    error MintToZeroAddress();\r\n\r\n    /**\r\n     * The quantity of tokens minted must be more than zero.\r\n     */\r\n    error MintZeroQuantity();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error OwnerQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error TransferCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token must be owned by `from`.\r\n     */\r\n    error TransferFromIncorrectOwner();\r\n\r\n    /**\r\n     * Cannot safely transfer to a contract that does not implement the\r\n     * ERC721Receiver interface.\r\n     */\r\n    error TransferToNonERC721ReceiverImplementer();\r\n\r\n    /**\r\n     * Cannot transfer to the zero address.\r\n     */\r\n    error TransferToZeroAddress();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error URIQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\r\n     */\r\n    error MintERC2309QuantityExceedsLimit();\r\n\r\n    /**\r\n     * The `extraData` cannot be set on an unintialized ownership slot.\r\n     */\r\n    error OwnershipNotInitializedForExtraData();\r\n\r\n    // =============================================================\r\n    //                            STRUCTS\r\n    // =============================================================\r\n\r\n    struct TokenOwnership {\r\n        // The address of the owner.\r\n        address addr;\r\n        // Stores the start time of ownership with minimal overhead for tokenomics.\r\n        uint64 startTimestamp;\r\n        // Whether the token has been burned.\r\n        bool burned;\r\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\r\n        uint24 extraData;\r\n    }\r\n\r\n    // =============================================================\r\n    //                         TOKEN COUNTERS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the total number of tokens in existence.\r\n     * Burned tokens will reduce the count.\r\n     * To get the total number of tokens minted, please see {_totalMinted}.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    // =============================================================\r\n    //                            IERC165\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n\r\n    // =============================================================\r\n    //                            IERC721\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables\r\n     * (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in `owner`'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\r\n     * checking first that contract recipients are aware of the ERC721 protocol\r\n     * to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be have been allowed to move\r\n     * this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement\r\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external payable;\r\n\r\n    /**\r\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external payable;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\r\n     * whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token\r\n     * by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external payable;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the\r\n     * zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external payable;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom}\r\n     * for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n\r\n    // =============================================================\r\n    //                        IERC721Metadata\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n\r\n    // =============================================================\r\n    //                           IERC2309\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\r\n     * (inclusive) is transferred from `from` to `to`, as defined in the\r\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\r\n     *\r\n     * See {_mintERC2309} for more details.\r\n     */\r\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC721A.sol\":{\"keccak256\":\"0x0cc0cb5618668629dac85790004802788f3d70ac70a915f40cd93eae2a3a8449\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbf8819d86a329142250ae75ce5eb4e55de52474a66dc83c19eea989fe0d5e7b\",\"dweb:/ipfs/Qme2a2B1owbqJUUtGBQ9sfriko5SAcxeTwqESp3xtxxAeM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Test,sol.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Test,sol.sol\":930:42437  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Test,sol.sol\":5085:5243  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Test,sol.sol\":5160:5165  name_ */\n  dup2\n    /* \"contracts/Test,sol.sol\":5152:5157  _name */\n  0x02\n    /* \"contracts/Test,sol.sol\":5152:5165  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/Test,sol.sol\":5186:5193  symbol_ */\n  dup1\n    /* \"contracts/Test,sol.sol\":5176:5183  _symbol */\n  0x03\n    /* \"contracts/Test,sol.sol\":5176:5193  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/Test,sol.sol\":5220:5235  _startTokenId() */\n  tag_9\n    /* \"contracts/Test,sol.sol\":5220:5233  _startTokenId */\n  shl(0x20, tag_10)\n    /* \"contracts/Test,sol.sol\":5220:5235  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"contracts/Test,sol.sol\":5204:5217  _currentIndex */\n  0x00\n    /* \"contracts/Test,sol.sol\":5204:5235  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Test,sol.sol\":5085:5243  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/Test,sol.sol\":930:42437  contract ERC721A is IERC721A {... */\n  jump(tag_11)\n    /* \"contracts/Test,sol.sol\":5579:5671  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_10:\n    /* \"contracts/Test,sol.sol\":5635:5642  uint256 */\n  0x00\n    /* \"contracts/Test,sol.sol\":5579:5671  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_13:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_14:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_15:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_16:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_17:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_18:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_19:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_20:\n    /* \"#utility.yul\":957:984   */\n  tag_54\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_18\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_56\n  tag_19\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1030:1118   */\ntag_55:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_21:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_58\n  tag_13\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_59\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_20\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_22:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_62\n  tag_19\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1434:1490   */\ntag_61:\n    /* \"#utility.yul\":1508:1537   */\n  tag_63\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_18\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_23:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_65:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_65)\ntag_67:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_24:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_69\n    /* \"#utility.yul\":1992:2041   */\n  tag_70\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_22\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1976:2042   */\n  tag_21\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_72\n  tag_17\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2117:2229   */\ntag_71:\n    /* \"#utility.yul\":2238:2290   */\n  tag_73\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_23\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_25:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_76\n  tag_16\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2399:2521   */\ntag_75:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_77\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_24\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_80\n  tag_14\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2801:2920   */\ntag_79:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_82\n  tag_15\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2996:3113   */\ntag_81:\n    /* \"#utility.yul\":3137:3211   */\n  tag_83\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_25\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_85\n  tag_15\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3298:3415   */\ntag_84:\n    /* \"#utility.yul\":3439:3513   */\n  tag_86\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_25\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_26:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_27:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_28:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_90:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_91\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_92\n  tag_27\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4057:4141   */\ntag_91:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_29:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_30:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_31:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_32:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_97\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_31\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4772:4811   */\n  tag_98\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_31\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_33:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_34:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_35:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_102\n    /* \"#utility.yul\":5161:5195   */\n  tag_103\n    /* \"#utility.yul\":5170:5194   */\n  tag_104\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_33\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5161:5195   */\n  tag_34\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5143:5196   */\n  tag_33\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_36:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_37:\n    /* \"#utility.yul\":5399:5438   */\n  tag_107\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_35\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5460:5551   */\n  tag_108\n    /* \"#utility.yul\":5509:5550   */\n  tag_109\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_36\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_32\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_38:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_39:\n    /* \"#utility.yul\":5720:5752   */\n  tag_112\n  tag_38\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5761:5826   */\n  tag_113\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_37\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_40:\n    /* \"#utility.yul\":5898:6018   */\ntag_115:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_118\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_39\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_115)\ntag_117:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_41:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_121\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_29\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6249:6278   */\n  tag_122\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_30\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_123:\n    /* \"#utility.yul\":6476:6556   */\n  tag_124\n    /* \"#utility.yul\":6532:6554   */\n  tag_125\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_30\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_40\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_120:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_42:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_43:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_128\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_42\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_44:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_130\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_43\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_7:\n    /* \"#utility.yul\":7293:7330   */\n  tag_132\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_26\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_134\n  tag_19\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":7381:7437   */\ntag_133:\n    /* \"#utility.yul\":7461:7499   */\n  tag_135\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_28\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7546:7613   */\n  tag_136\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_41\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_138\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_139:\n    /* \"#utility.yul\":8487:8554   */\n  tag_140\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_44\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_137)\n    /* \"#utility.yul\":7708:8326   */\ntag_138:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_141\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_29\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_142:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_142)\ntag_144:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_146\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_43\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_145:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_137:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Test,sol.sol\":930:42437  contract ERC721A is IERC721A {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Test,sol.sol\":930:42437  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_16:\n      dup1\n      0x095ea7b3\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Test,sol.sol\":9410:10049  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Test,sol.sol\":10312:10412  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Test,sol.sol\":16803:17021  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Test,sol.sol\":16236:16644  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contracts/Test,sol.sol\":6063:6386  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Test,sol.sol\":20442:23267  function transferFrom(... */\n    tag_7:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/Test,sol.sol\":23363:23556  function safeTransferFrom(... */\n    tag_8:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/Test,sol.sol\":11705:11857  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Test,sol.sol\":7247:7480  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Test,sol.sol\":10488:10592  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Test,sol.sol\":17361:17595  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/Test,sol.sol\":24154:24561  function safeTransferFrom(... */\n    tag_13:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"contracts/Test,sol.sol\":10698:11016  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Test,sol.sol\":17752:17916  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Test,sol.sol\":9410:10049  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_23:\n        /* \"contracts/Test,sol.sol\":9495:9499  bool */\n      0x00\n        /* \"contracts/Test,sol.sol\":9834:9844  0x01ffc9a7 */\n      0x01ffc9a7\n        /* \"contracts/Test,sol.sol\":9819:9844  interfaceId == 0x01ffc9a7 */\n      0xe0\n      shl\n        /* \"contracts/Test,sol.sol\":9819:9830  interfaceId */\n      dup3\n        /* \"contracts/Test,sol.sol\":9819:9844  interfaceId == 0x01ffc9a7 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/Test,sol.sol\":9819:9921  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_90\n      jumpi\n      pop\n        /* \"contracts/Test,sol.sol\":9911:9921  0x80ac58cd */\n      0x80ac58cd\n        /* \"contracts/Test,sol.sol\":9896:9921  interfaceId == 0x80ac58cd */\n      0xe0\n      shl\n        /* \"contracts/Test,sol.sol\":9896:9907  interfaceId */\n      dup3\n        /* \"contracts/Test,sol.sol\":9896:9921  interfaceId == 0x80ac58cd */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/Test,sol.sol\":9819:9921  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_90:\n        /* \"contracts/Test,sol.sol\":9819:9998  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_91\n      jumpi\n      pop\n        /* \"contracts/Test,sol.sol\":9988:9998  0x5b5e139f */\n      0x5b5e139f\n        /* \"contracts/Test,sol.sol\":9973:9998  interfaceId == 0x5b5e139f */\n      0xe0\n      shl\n        /* \"contracts/Test,sol.sol\":9973:9984  interfaceId */\n      dup3\n        /* \"contracts/Test,sol.sol\":9973:9998  interfaceId == 0x5b5e139f */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/Test,sol.sol\":9819:9998  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_91:\n        /* \"contracts/Test,sol.sol\":9799:9998  return... */\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":9410:10049  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":10312:10412  function name() public view virtual override returns (string memory) {... */\n    tag_28:\n        /* \"contracts/Test,sol.sol\":10366:10379  string memory */\n      0x60\n        /* \"contracts/Test,sol.sol\":10399:10404  _name */\n      0x02\n        /* \"contracts/Test,sol.sol\":10392:10404  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":10312:10412  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":16803:17021  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_35:\n        /* \"contracts/Test,sol.sol\":16879:16886  address */\n      0x00\n        /* \"contracts/Test,sol.sol\":16904:16920  _exists(tokenId) */\n      tag_100\n        /* \"contracts/Test,sol.sol\":16912:16919  tokenId */\n      dup3\n        /* \"contracts/Test,sol.sol\":16904:16911  _exists */\n      tag_101\n        /* \"contracts/Test,sol.sol\":16904:16920  _exists(tokenId) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/Test,sol.sol\":16899:16963  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_102\n      jumpi\n        /* \"contracts/Test,sol.sol\":16929:16963  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Test,sol.sol\":16899:16963  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_102:\n        /* \"contracts/Test,sol.sol\":16983:16998  _tokenApprovals */\n      0x06\n        /* \"contracts/Test,sol.sol\":16983:17007  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/Test,sol.sol\":16999:17006  tokenId */\n      dup4\n        /* \"contracts/Test,sol.sol\":16983:17007  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Test,sol.sol\":16983:17013  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Test,sol.sol\":16976:17013  return _tokenApprovals[tokenId].value */\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":16803:17021  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":16236:16644  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_41:\n        /* \"contracts/Test,sol.sol\":16325:16338  address owner */\n      0x00\n        /* \"contracts/Test,sol.sol\":16341:16357  ownerOf(tokenId) */\n      tag_104\n        /* \"contracts/Test,sol.sol\":16349:16356  tokenId */\n      dup3\n        /* \"contracts/Test,sol.sol\":16341:16348  ownerOf */\n      tag_57\n        /* \"contracts/Test,sol.sol\":16341:16357  ownerOf(tokenId) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/Test,sol.sol\":16325:16357  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":16397:16402  owner */\n      dup1\n        /* \"contracts/Test,sol.sol\":16374:16402  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Test,sol.sol\":16374:16393  _msgSenderERC721A() */\n      tag_105\n        /* \"contracts/Test,sol.sol\":16374:16391  _msgSenderERC721A */\n      tag_106\n        /* \"contracts/Test,sol.sol\":16374:16393  _msgSenderERC721A() */\n      jump\t// in\n    tag_105:\n        /* \"contracts/Test,sol.sol\":16374:16402  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Test,sol.sol\":16370:16545  if (_msgSenderERC721A() != owner)... */\n      tag_107\n      jumpi\n        /* \"contracts/Test,sol.sol\":16422:16466  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_108\n        /* \"contracts/Test,sol.sol\":16439:16444  owner */\n      dup2\n        /* \"contracts/Test,sol.sol\":16446:16465  _msgSenderERC721A() */\n      tag_109\n        /* \"contracts/Test,sol.sol\":16446:16463  _msgSenderERC721A */\n      tag_106\n        /* \"contracts/Test,sol.sol\":16446:16465  _msgSenderERC721A() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/Test,sol.sol\":16422:16438  isApprovedForAll */\n      tag_87\n        /* \"contracts/Test,sol.sol\":16422:16466  isApprovedForAll(owner, _msgSenderERC721A()) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/Test,sol.sol\":16417:16545  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_110\n      jumpi\n        /* \"contracts/Test,sol.sol\":16494:16529  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Test,sol.sol\":16417:16545  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_110:\n        /* \"contracts/Test,sol.sol\":16370:16545  if (_msgSenderERC721A() != owner)... */\n    tag_107:\n        /* \"contracts/Test,sol.sol\":16590:16592  to */\n      dup3\n        /* \"contracts/Test,sol.sol\":16557:16572  _tokenApprovals */\n      0x06\n        /* \"contracts/Test,sol.sol\":16557:16581  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/Test,sol.sol\":16573:16580  tokenId */\n      dup5\n        /* \"contracts/Test,sol.sol\":16557:16581  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Test,sol.sol\":16557:16587  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n        /* \"contracts/Test,sol.sol\":16557:16592  _tokenApprovals[tokenId].value = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test,sol.sol\":16628:16635  tokenId */\n      dup2\n        /* \"contracts/Test,sol.sol\":16624:16626  to */\n      dup4\n        /* \"contracts/Test,sol.sol\":16608:16636  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Test,sol.sol\":16617:16622  owner */\n      dup3\n        /* \"contracts/Test,sol.sol\":16608:16636  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Test,sol.sol\":16314:16644  {... */\n      pop\n        /* \"contracts/Test,sol.sol\":16236:16644  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":6063:6386  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_44:\n        /* \"contracts/Test,sol.sol\":6124:6131  uint256 */\n      0x00\n        /* \"contracts/Test,sol.sol\":6352:6367  _startTokenId() */\n      tag_112\n        /* \"contracts/Test,sol.sol\":6352:6365  _startTokenId */\n      tag_113\n        /* \"contracts/Test,sol.sol\":6352:6367  _startTokenId() */\n      jump\t// in\n    tag_112:\n        /* \"contracts/Test,sol.sol\":6337:6349  _burnCounter */\n      sload(0x01)\n        /* \"contracts/Test,sol.sol\":6321:6334  _currentIndex */\n      sload(0x00)\n        /* \"contracts/Test,sol.sol\":6321:6349  _currentIndex - _burnCounter */\n      sub\n        /* \"contracts/Test,sol.sol\":6321:6367  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"contracts/Test,sol.sol\":6314:6367  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":6063:6386  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":20442:23267  function transferFrom(... */\n    tag_50:\n        /* \"contracts/Test,sol.sol\":20584:20611  uint256 prevOwnershipPacked */\n      0x00\n        /* \"contracts/Test,sol.sol\":20614:20641  _packedOwnershipOf(tokenId) */\n      tag_115\n        /* \"contracts/Test,sol.sol\":20633:20640  tokenId */\n      dup3\n        /* \"contracts/Test,sol.sol\":20614:20632  _packedOwnershipOf */\n      tag_116\n        /* \"contracts/Test,sol.sol\":20614:20641  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_115:\n        /* \"contracts/Test,sol.sol\":20584:20641  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":20699:20703  from */\n      dup4\n        /* \"contracts/Test,sol.sol\":20658:20703  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Test,sol.sol\":20674:20693  prevOwnershipPacked */\n      dup2\n        /* \"contracts/Test,sol.sol\":20658:20703  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Test,sol.sol\":20654:20740  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_117\n      jumpi\n        /* \"contracts/Test,sol.sol\":20712:20740  TransferFromIncorrectOwner() */\n      mload(0x40)\n      0xa114810000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Test,sol.sol\":20654:20740  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_117:\n        /* \"contracts/Test,sol.sol\":20754:20781  uint256 approvedAddressSlot */\n      0x00\n        /* \"contracts/Test,sol.sol\":20783:20806  address approvedAddress */\n      dup1\n        /* \"contracts/Test,sol.sol\":20810:20845  _getApprovedSlotAndAddress(tokenId) */\n      tag_118\n        /* \"contracts/Test,sol.sol\":20837:20844  tokenId */\n      dup5\n        /* \"contracts/Test,sol.sol\":20810:20836  _getApprovedSlotAndAddress */\n      tag_119\n        /* \"contracts/Test,sol.sol\":20810:20845  _getApprovedSlotAndAddress(tokenId) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/Test,sol.sol\":20753:20845  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Test,sol.sol\":20945:21013  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      tag_120\n        /* \"contracts/Test,sol.sol\":20970:20985  approvedAddress */\n      dup2\n        /* \"contracts/Test,sol.sol\":20987:20991  from */\n      dup8\n        /* \"contracts/Test,sol.sol\":20993:21012  _msgSenderERC721A() */\n      tag_121\n        /* \"contracts/Test,sol.sol\":20993:21010  _msgSenderERC721A */\n      tag_106\n        /* \"contracts/Test,sol.sol\":20993:21012  _msgSenderERC721A() */\n      jump\t// in\n    tag_121:\n        /* \"contracts/Test,sol.sol\":20945:20969  _isSenderApprovedOrOwner */\n      tag_122\n        /* \"contracts/Test,sol.sol\":20945:21013  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/Test,sol.sol\":20940:21120  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_123\n      jumpi\n        /* \"contracts/Test,sol.sol\":21033:21076  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_124\n        /* \"contracts/Test,sol.sol\":21050:21054  from */\n      dup7\n        /* \"contracts/Test,sol.sol\":21056:21075  _msgSenderERC721A() */\n      tag_125\n        /* \"contracts/Test,sol.sol\":21056:21073  _msgSenderERC721A */\n      tag_106\n        /* \"contracts/Test,sol.sol\":21056:21075  _msgSenderERC721A() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/Test,sol.sol\":21033:21049  isApprovedForAll */\n      tag_87\n        /* \"contracts/Test,sol.sol\":21033:21076  isApprovedForAll(from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/Test,sol.sol\":21028:21120  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_126\n      jumpi\n        /* \"contracts/Test,sol.sol\":21085:21120  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Test,sol.sol\":21028:21120  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_126:\n        /* \"contracts/Test,sol.sol\":20940:21120  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n    tag_123:\n        /* \"contracts/Test,sol.sol\":21151:21152  0 */\n      0x00\n        /* \"contracts/Test,sol.sol\":21137:21153  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Test,sol.sol\":21137:21139  to */\n      dup6\n        /* \"contracts/Test,sol.sol\":21137:21153  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Test,sol.sol\":21133:21185  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_127\n      jumpi\n        /* \"contracts/Test,sol.sol\":21162:21185  TransferToZeroAddress() */\n      mload(0x40)\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Test,sol.sol\":21133:21185  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_127:\n        /* \"contracts/Test,sol.sol\":21198:21241  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_128\n        /* \"contracts/Test,sol.sol\":21220:21224  from */\n      dup7\n        /* \"contracts/Test,sol.sol\":21226:21228  to */\n      dup7\n        /* \"contracts/Test,sol.sol\":21230:21237  tokenId */\n      dup7\n        /* \"contracts/Test,sol.sol\":21239:21240  1 */\n      0x01\n        /* \"contracts/Test,sol.sol\":21198:21219  _beforeTokenTransfers */\n      tag_129\n        /* \"contracts/Test,sol.sol\":21198:21241  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/Test,sol.sol\":21334:21349  approvedAddress */\n      dup1\n        /* \"contracts/Test,sol.sol\":21331:21491  if approvedAddress {... */\n      iszero\n      tag_130\n      jumpi\n        /* \"contracts/Test,sol.sol\":21474:21475  0 */\n      0x00\n        /* \"contracts/Test,sol.sol\":21453:21472  approvedAddressSlot */\n      dup3\n        /* \"contracts/Test,sol.sol\":21446:21476  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"contracts/Test,sol.sol\":21331:21491  if approvedAddress {... */\n    tag_130:\n        /* \"contracts/Test,sol.sol\":21871:21889  _packedAddressData */\n      0x05\n        /* \"contracts/Test,sol.sol\":21871:21895  _packedAddressData[from] */\n      0x00\n        /* \"contracts/Test,sol.sol\":21890:21894  from */\n      dup8\n        /* \"contracts/Test,sol.sol\":21871:21895  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Test,sol.sol\":21869:21895  --_packedAddressData[from] */\n      dup2\n      sload\n      0x01\n      swap1\n      sub\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test,sol.sol\":21940:21958  _packedAddressData */\n      0x05\n        /* \"contracts/Test,sol.sol\":21940:21962  _packedAddressData[to] */\n      0x00\n        /* \"contracts/Test,sol.sol\":21959:21961  to */\n      dup7\n        /* \"contracts/Test,sol.sol\":21940:21962  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Test,sol.sol\":21938:21962  ++_packedAddressData[to] */\n      dup2\n      sload\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test,sol.sol\":22262:22408  _packOwnershipData(... */\n      tag_131\n        /* \"contracts/Test,sol.sol\":22299:22301  to */\n      dup6\n        /* \"contracts/Test,sol.sol\":22348:22393  _nextExtraData(from, to, prevOwnershipPacked) */\n      tag_132\n        /* \"contracts/Test,sol.sol\":22363:22367  from */\n      dup9\n        /* \"contracts/Test,sol.sol\":22369:22371  to */\n      dup9\n        /* \"contracts/Test,sol.sol\":22373:22392  prevOwnershipPacked */\n      dup8\n        /* \"contracts/Test,sol.sol\":22348:22362  _nextExtraData */\n      tag_133\n        /* \"contracts/Test,sol.sol\":22348:22393  _nextExtraData(from, to, prevOwnershipPacked) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/Test,sol.sol\":2462:2470  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"contracts/Test,sol.sol\":22320:22393  _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked) */\n      or\n        /* \"contracts/Test,sol.sol\":22262:22280  _packOwnershipData */\n      tag_134\n        /* \"contracts/Test,sol.sol\":22262:22408  _packOwnershipData(... */\n      jump\t// in\n    tag_131:\n        /* \"contracts/Test,sol.sol\":22233:22250  _packedOwnerships */\n      0x04\n        /* \"contracts/Test,sol.sol\":22233:22259  _packedOwnerships[tokenId] */\n      0x00\n        /* \"contracts/Test,sol.sol\":22251:22258  tokenId */\n      dup7\n        /* \"contracts/Test,sol.sol\":22233:22259  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Test,sol.sol\":22233:22408  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test,sol.sol\":22579:22580  0 */\n      0x00\n        /* \"contracts/Test,sol.sol\":2462:2470  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"contracts/Test,sol.sol\":22528:22547  prevOwnershipPacked */\n      dup5\n        /* \"contracts/Test,sol.sol\":22528:22575  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      and\n        /* \"contracts/Test,sol.sol\":22528:22580  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      sub\n        /* \"contracts/Test,sol.sol\":22524:23151  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_135\n      jumpi\n        /* \"contracts/Test,sol.sol\":22601:22620  uint256 nextTokenId */\n      0x00\n        /* \"contracts/Test,sol.sol\":22633:22634  1 */\n      0x01\n        /* \"contracts/Test,sol.sol\":22623:22630  tokenId */\n      dup6\n        /* \"contracts/Test,sol.sol\":22623:22634  tokenId + 1 */\n      add\n        /* \"contracts/Test,sol.sol\":22601:22634  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":22790:22791  0 */\n      0x00\n        /* \"contracts/Test,sol.sol\":22756:22773  _packedOwnerships */\n      0x04\n        /* \"contracts/Test,sol.sol\":22756:22786  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"contracts/Test,sol.sol\":22774:22785  nextTokenId */\n      dup4\n        /* \"contracts/Test,sol.sol\":22756:22786  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Test,sol.sol\":22756:22791  _packedOwnerships[nextTokenId] == 0 */\n      sub\n        /* \"contracts/Test,sol.sol\":22752:23136  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_136\n      jumpi\n        /* \"contracts/Test,sol.sol\":22894:22907  _currentIndex */\n      sload(0x00)\n        /* \"contracts/Test,sol.sol\":22879:22890  nextTokenId */\n      dup2\n        /* \"contracts/Test,sol.sol\":22879:22907  nextTokenId != _currentIndex */\n      eq\n        /* \"contracts/Test,sol.sol\":22875:23117  if (nextTokenId != _currentIndex) {... */\n      tag_137\n      jumpi\n        /* \"contracts/Test,sol.sol\":23074:23093  prevOwnershipPacked */\n      dup4\n        /* \"contracts/Test,sol.sol\":23041:23058  _packedOwnerships */\n      0x04\n        /* \"contracts/Test,sol.sol\":23041:23071  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"contracts/Test,sol.sol\":23059:23070  nextTokenId */\n      dup4\n        /* \"contracts/Test,sol.sol\":23041:23071  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Test,sol.sol\":23041:23093  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test,sol.sol\":22875:23117  if (nextTokenId != _currentIndex) {... */\n    tag_137:\n        /* \"contracts/Test,sol.sol\":22752:23136  if (_packedOwnerships[nextTokenId] == 0) {... */\n    tag_136:\n        /* \"contracts/Test,sol.sol\":22582:23151  {... */\n      pop\n        /* \"contracts/Test,sol.sol\":22524:23151  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_135:\n        /* \"contracts/Test,sol.sol\":23198:23205  tokenId */\n      dup4\n        /* \"contracts/Test,sol.sol\":23194:23196  to */\n      dup6\n        /* \"contracts/Test,sol.sol\":23179:23206  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Test,sol.sol\":23188:23192  from */\n      dup8\n        /* \"contracts/Test,sol.sol\":23179:23206  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Test,sol.sol\":23217:23259  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_138\n        /* \"contracts/Test,sol.sol\":23238:23242  from */\n      dup7\n        /* \"contracts/Test,sol.sol\":23244:23246  to */\n      dup7\n        /* \"contracts/Test,sol.sol\":23248:23255  tokenId */\n      dup7\n        /* \"contracts/Test,sol.sol\":23257:23258  1 */\n      0x01\n        /* \"contracts/Test,sol.sol\":23217:23237  _afterTokenTransfers */\n      tag_139\n        /* \"contracts/Test,sol.sol\":23217:23259  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/Test,sol.sol\":20573:23267  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Test,sol.sol\":20442:23267  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":23363:23556  function safeTransferFrom(... */\n    tag_53:\n        /* \"contracts/Test,sol.sol\":23509:23548  safeTransferFrom(from, to, tokenId, '') */\n      tag_141\n        /* \"contracts/Test,sol.sol\":23526:23530  from */\n      dup4\n        /* \"contracts/Test,sol.sol\":23532:23534  to */\n      dup4\n        /* \"contracts/Test,sol.sol\":23536:23543  tokenId */\n      dup4\n        /* \"contracts/Test,sol.sol\":23509:23548  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/Test,sol.sol\":23509:23525  safeTransferFrom */\n      tag_77\n        /* \"contracts/Test,sol.sol\":23509:23548  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_141:\n        /* \"contracts/Test,sol.sol\":23363:23556  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":11705:11857  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_57:\n        /* \"contracts/Test,sol.sol\":11777:11784  address */\n      0x00\n        /* \"contracts/Test,sol.sol\":11820:11847  _packedOwnershipOf(tokenId) */\n      tag_143\n        /* \"contracts/Test,sol.sol\":11839:11846  tokenId */\n      dup3\n        /* \"contracts/Test,sol.sol\":11820:11838  _packedOwnershipOf */\n      tag_116\n        /* \"contracts/Test,sol.sol\":11820:11847  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_143:\n        /* \"contracts/Test,sol.sol\":11797:11849  return address(uint160(_packedOwnershipOf(tokenId))) */\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":11705:11857  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":7247:7480  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_63:\n        /* \"contracts/Test,sol.sol\":7319:7326  uint256 */\n      0x00\n        /* \"contracts/Test,sol.sol\":7360:7361  0 */\n      dup1\n        /* \"contracts/Test,sol.sol\":7343:7362  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Test,sol.sol\":7343:7348  owner */\n      dup3\n        /* \"contracts/Test,sol.sol\":7343:7362  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Test,sol.sol\":7339:7399  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_145\n      jumpi\n        /* \"contracts/Test,sol.sol\":7371:7399  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Test,sol.sol\":7339:7399  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_145:\n        /* \"contracts/Test,sol.sol\":1406:1419  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"contracts/Test,sol.sol\":7417:7435  _packedAddressData */\n      0x05\n        /* \"contracts/Test,sol.sol\":7417:7442  _packedAddressData[owner] */\n      0x00\n        /* \"contracts/Test,sol.sol\":7436:7441  owner */\n      dup5\n        /* \"contracts/Test,sol.sol\":7417:7442  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Test,sol.sol\":7417:7472  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n        /* \"contracts/Test,sol.sol\":7410:7472  return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":7247:7480  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":10488:10592  function symbol() public view virtual override returns (string memory) {... */\n    tag_67:\n        /* \"contracts/Test,sol.sol\":10544:10557  string memory */\n      0x60\n        /* \"contracts/Test,sol.sol\":10577:10584  _symbol */\n      0x03\n        /* \"contracts/Test,sol.sol\":10570:10584  return _symbol */\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_94\n      jump\t// in\n    tag_147:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_148\n      swap1\n      tag_94\n      jump\t// in\n    tag_148:\n      dup1\n      iszero\n      tag_149\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_150\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_149)\n    tag_150:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_151:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_151\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":10488:10592  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":17361:17595  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_73:\n        /* \"contracts/Test,sol.sol\":17508:17516  approved */\n      dup1\n        /* \"contracts/Test,sol.sol\":17456:17474  _operatorApprovals */\n      0x07\n        /* \"contracts/Test,sol.sol\":17456:17495  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n        /* \"contracts/Test,sol.sol\":17475:17494  _msgSenderERC721A() */\n      tag_153\n        /* \"contracts/Test,sol.sol\":17475:17492  _msgSenderERC721A */\n      tag_106\n        /* \"contracts/Test,sol.sol\":17475:17494  _msgSenderERC721A() */\n      jump\t// in\n    tag_153:\n        /* \"contracts/Test,sol.sol\":17456:17495  _operatorApprovals[_msgSenderERC721A()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Test,sol.sol\":17456:17505  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0x00\n        /* \"contracts/Test,sol.sol\":17496:17504  operator */\n      dup5\n        /* \"contracts/Test,sol.sol\":17456:17505  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Test,sol.sol\":17456:17516  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test,sol.sol\":17568:17576  operator */\n      dup2\n        /* \"contracts/Test,sol.sol\":17532:17587  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Test,sol.sol\":17547:17566  _msgSenderERC721A() */\n      tag_154\n        /* \"contracts/Test,sol.sol\":17547:17564  _msgSenderERC721A */\n      tag_106\n        /* \"contracts/Test,sol.sol\":17547:17566  _msgSenderERC721A() */\n      jump\t// in\n    tag_154:\n        /* \"contracts/Test,sol.sol\":17532:17587  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/Test,sol.sol\":17578:17586  approved */\n      dup4\n        /* \"contracts/Test,sol.sol\":17532:17587  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      tag_155\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Test,sol.sol\":17361:17595  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":24154:24561  function safeTransferFrom(... */\n    tag_77:\n        /* \"contracts/Test,sol.sol\":24329:24360  transferFrom(from, to, tokenId) */\n      tag_157\n        /* \"contracts/Test,sol.sol\":24342:24346  from */\n      dup5\n        /* \"contracts/Test,sol.sol\":24348:24350  to */\n      dup5\n        /* \"contracts/Test,sol.sol\":24352:24359  tokenId */\n      dup5\n        /* \"contracts/Test,sol.sol\":24329:24341  transferFrom */\n      tag_50\n        /* \"contracts/Test,sol.sol\":24329:24360  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_157:\n        /* \"contracts/Test,sol.sol\":24393:24394  0 */\n      0x00\n        /* \"contracts/Test,sol.sol\":24375:24377  to */\n      dup4\n        /* \"contracts/Test,sol.sol\":24375:24389  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/Test,sol.sol\":24375:24394  to.code.length != 0 */\n      eq\n        /* \"contracts/Test,sol.sol\":24371:24554  if (to.code.length != 0)... */\n      tag_158\n      jumpi\n        /* \"contracts/Test,sol.sol\":24414:24470  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_159\n        /* \"contracts/Test,sol.sol\":24445:24449  from */\n      dup5\n        /* \"contracts/Test,sol.sol\":24451:24453  to */\n      dup5\n        /* \"contracts/Test,sol.sol\":24455:24462  tokenId */\n      dup5\n        /* \"contracts/Test,sol.sol\":24464:24469  _data */\n      dup5\n        /* \"contracts/Test,sol.sol\":24414:24444  _checkContractOnERC721Received */\n      tag_160\n        /* \"contracts/Test,sol.sol\":24414:24470  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/Test,sol.sol\":24409:24554  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_161\n      jumpi\n        /* \"contracts/Test,sol.sol\":24498:24538  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Test,sol.sol\":24409:24554  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_161:\n        /* \"contracts/Test,sol.sol\":24371:24554  if (to.code.length != 0)... */\n    tag_158:\n        /* \"contracts/Test,sol.sol\":24154:24561  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":10698:11016  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_81:\n        /* \"contracts/Test,sol.sol\":10771:10784  string memory */\n      0x60\n        /* \"contracts/Test,sol.sol\":10802:10818  _exists(tokenId) */\n      tag_163\n        /* \"contracts/Test,sol.sol\":10810:10817  tokenId */\n      dup3\n        /* \"contracts/Test,sol.sol\":10802:10809  _exists */\n      tag_101\n        /* \"contracts/Test,sol.sol\":10802:10818  _exists(tokenId) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/Test,sol.sol\":10797:10856  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_164\n      jumpi\n        /* \"contracts/Test,sol.sol\":10827:10856  URIQueryForNonexistentToken() */\n      mload(0x40)\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Test,sol.sol\":10797:10856  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_164:\n        /* \"contracts/Test,sol.sol\":10869:10890  string memory baseURI */\n      0x00\n        /* \"contracts/Test,sol.sol\":10893:10903  _baseURI() */\n      tag_165\n        /* \"contracts/Test,sol.sol\":10893:10901  _baseURI */\n      tag_166\n        /* \"contracts/Test,sol.sol\":10893:10903  _baseURI() */\n      jump\t// in\n    tag_165:\n        /* \"contracts/Test,sol.sol\":10869:10903  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":10946:10947  0 */\n      0x00\n        /* \"contracts/Test,sol.sol\":10927:10934  baseURI */\n      dup2\n        /* \"contracts/Test,sol.sol\":10921:10942  bytes(baseURI).length */\n      mload\n        /* \"contracts/Test,sol.sol\":10921:10947  bytes(baseURI).length != 0 */\n      sub\n        /* \"contracts/Test,sol.sol\":10921:11008  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_167\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_168)\n    tag_167:\n        /* \"contracts/Test,sol.sol\":10974:10981  baseURI */\n      dup1\n        /* \"contracts/Test,sol.sol\":10983:11001  _toString(tokenId) */\n      tag_169\n        /* \"contracts/Test,sol.sol\":10993:11000  tokenId */\n      dup5\n        /* \"contracts/Test,sol.sol\":10983:10992  _toString */\n      tag_170\n        /* \"contracts/Test,sol.sol\":10983:11001  _toString(tokenId) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/Test,sol.sol\":10957:11002  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_171\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/Test,sol.sol\":10921:11008  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_168:\n        /* \"contracts/Test,sol.sol\":10914:11008  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap2\n      pop\n      pop\n        /* \"contracts/Test,sol.sol\":10698:11016  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":17752:17916  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_87:\n        /* \"contracts/Test,sol.sol\":17849:17853  bool */\n      0x00\n        /* \"contracts/Test,sol.sol\":17873:17891  _operatorApprovals */\n      0x07\n        /* \"contracts/Test,sol.sol\":17873:17898  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/Test,sol.sol\":17892:17897  owner */\n      dup5\n        /* \"contracts/Test,sol.sol\":17873:17898  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Test,sol.sol\":17873:17908  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/Test,sol.sol\":17899:17907  operator */\n      dup4\n        /* \"contracts/Test,sol.sol\":17873:17908  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Test,sol.sol\":17866:17908  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":17752:17916  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":18174:18456  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_101:\n        /* \"contracts/Test,sol.sol\":18239:18243  bool */\n      0x00\n        /* \"contracts/Test,sol.sol\":18295:18302  tokenId */\n      dup2\n        /* \"contracts/Test,sol.sol\":18276:18291  _startTokenId() */\n      tag_175\n        /* \"contracts/Test,sol.sol\":18276:18289  _startTokenId */\n      tag_113\n        /* \"contracts/Test,sol.sol\":18276:18291  _startTokenId() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/Test,sol.sol\":18276:18302  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \"contracts/Test,sol.sol\":18276:18342  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_176\n      jumpi\n      pop\n        /* \"contracts/Test,sol.sol\":18329:18342  _currentIndex */\n      sload(0x00)\n        /* \"contracts/Test,sol.sol\":18319:18326  tokenId */\n      dup3\n        /* \"contracts/Test,sol.sol\":18319:18342  tokenId < _currentIndex */\n      lt\n        /* \"contracts/Test,sol.sol\":18276:18342  _startTokenId() <= tokenId &&... */\n    tag_176:\n        /* \"contracts/Test,sol.sol\":18276:18429  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_177\n      jumpi\n      pop\n        /* \"contracts/Test,sol.sol\":18428:18429  0 */\n      0x00\n        /* \"contracts/Test,sol.sol\":2182:2190  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"contracts/Test,sol.sol\":18380:18397  _packedOwnerships */\n      0x04\n        /* \"contracts/Test,sol.sol\":18380:18406  _packedOwnerships[tokenId] */\n      0x00\n        /* \"contracts/Test,sol.sol\":18398:18405  tokenId */\n      dup6\n        /* \"contracts/Test,sol.sol\":18380:18406  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Test,sol.sol\":18380:18424  _packedOwnerships[tokenId] & _BITMASK_BURNED */\n      and\n        /* \"contracts/Test,sol.sol\":18380:18429  _packedOwnerships[tokenId] & _BITMASK_BURNED == 0 */\n      eq\n        /* \"contracts/Test,sol.sol\":18276:18429  _startTokenId() <= tokenId &&... */\n    tag_177:\n        /* \"contracts/Test,sol.sol\":18256:18429  return... */\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":18174:18456  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":40482:40587  function _msgSenderERC721A() internal view virtual returns (address) {... */\n    tag_106:\n        /* \"contracts/Test,sol.sol\":40542:40549  address */\n      0x00\n        /* \"contracts/Test,sol.sol\":40569:40579  msg.sender */\n      caller\n        /* \"contracts/Test,sol.sol\":40562:40579  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":40482:40587  function _msgSenderERC721A() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":5579:5671  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_113:\n        /* \"contracts/Test,sol.sol\":5635:5642  uint256 */\n      0x00\n        /* \"contracts/Test,sol.sol\":5579:5671  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":12860:14135  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_116:\n        /* \"contracts/Test,sol.sol\":12927:12934  uint256 */\n      0x00\n        /* \"contracts/Test,sol.sol\":12947:12959  uint256 curr */\n      dup1\n        /* \"contracts/Test,sol.sol\":12962:12969  tokenId */\n      dup3\n        /* \"contracts/Test,sol.sol\":12947:12969  uint256 curr = tokenId */\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":13030:13034  curr */\n      dup1\n        /* \"contracts/Test,sol.sol\":13011:13026  _startTokenId() */\n      tag_181\n        /* \"contracts/Test,sol.sol\":13011:13024  _startTokenId */\n      tag_113\n        /* \"contracts/Test,sol.sol\":13011:13026  _startTokenId() */\n      jump\t// in\n    tag_181:\n        /* \"contracts/Test,sol.sol\":13011:13034  _startTokenId() <= curr */\n      gt\n        /* \"contracts/Test,sol.sol\":13007:14068  if (_startTokenId() <= curr)... */\n      tag_182\n      jumpi\n        /* \"contracts/Test,sol.sol\":13064:13077  _currentIndex */\n      sload(0x00)\n        /* \"contracts/Test,sol.sol\":13057:13061  curr */\n      dup2\n        /* \"contracts/Test,sol.sol\":13057:13077  curr < _currentIndex */\n      lt\n        /* \"contracts/Test,sol.sol\":13053:14068  if (curr < _currentIndex) {... */\n      iszero\n      tag_183\n      jumpi\n        /* \"contracts/Test,sol.sol\":13102:13116  uint256 packed */\n      0x00\n        /* \"contracts/Test,sol.sol\":13119:13136  _packedOwnerships */\n      0x04\n        /* \"contracts/Test,sol.sol\":13119:13142  _packedOwnerships[curr] */\n      0x00\n        /* \"contracts/Test,sol.sol\":13137:13141  curr */\n      dup4\n        /* \"contracts/Test,sol.sol\":13119:13142  _packedOwnerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Test,sol.sol\":13102:13142  uint256 packed = _packedOwnerships[curr] */\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":13236:13237  0 */\n      0x00\n        /* \"contracts/Test,sol.sol\":2182:2190  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"contracts/Test,sol.sol\":13208:13214  packed */\n      dup3\n        /* \"contracts/Test,sol.sol\":13208:13232  packed & _BITMASK_BURNED */\n      and\n        /* \"contracts/Test,sol.sol\":13208:13237  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"contracts/Test,sol.sol\":13204:14049  if (packed & _BITMASK_BURNED == 0) {... */\n      tag_184\n      jumpi\n        /* \"contracts/Test,sol.sol\":13873:13986  while (packed == 0) {... */\n    tag_185:\n        /* \"contracts/Test,sol.sol\":13890:13891  0 */\n      0x00\n        /* \"contracts/Test,sol.sol\":13880:13886  packed */\n      dup2\n        /* \"contracts/Test,sol.sol\":13880:13891  packed == 0 */\n      sub\n        /* \"contracts/Test,sol.sol\":13873:13986  while (packed == 0) {... */\n      tag_186\n      jumpi\n        /* \"contracts/Test,sol.sol\":13933:13950  _packedOwnerships */\n      0x04\n        /* \"contracts/Test,sol.sol\":13933:13958  _packedOwnerships[--curr] */\n      0x00\n        /* \"contracts/Test,sol.sol\":13951:13957  --curr */\n      dup4\n      0x01\n      swap1\n      sub\n      swap4\n      pop\n      dup4\n        /* \"contracts/Test,sol.sol\":13933:13958  _packedOwnerships[--curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Test,sol.sol\":13924:13958  packed = _packedOwnerships[--curr] */\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":13873:13986  while (packed == 0) {... */\n      jump(tag_185)\n    tag_186:\n        /* \"contracts/Test,sol.sol\":14019:14025  packed */\n      dup1\n        /* \"contracts/Test,sol.sol\":14012:14025  return packed */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_180)\n        /* \"contracts/Test,sol.sol\":13204:14049  if (packed & _BITMASK_BURNED == 0) {... */\n    tag_184:\n        /* \"contracts/Test,sol.sol\":13079:14068  {... */\n      pop\n        /* \"contracts/Test,sol.sol\":13053:14068  if (curr < _currentIndex) {... */\n    tag_183:\n        /* \"contracts/Test,sol.sol\":13007:14068  if (_startTokenId() <= curr)... */\n    tag_182:\n        /* \"contracts/Test,sol.sol\":14096:14127  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Test,sol.sol\":12860:14135  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_180:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":19337:19822  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n    tag_119:\n        /* \"contracts/Test,sol.sol\":19439:19466  uint256 approvedAddressSlot */\n      0x00\n        /* \"contracts/Test,sol.sol\":19468:19491  address approvedAddress */\n      dup1\n        /* \"contracts/Test,sol.sol\":19509:19547  TokenApprovalRef storage tokenApproval */\n      0x00\n        /* \"contracts/Test,sol.sol\":19550:19565  _tokenApprovals */\n      0x06\n        /* \"contracts/Test,sol.sol\":19550:19574  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/Test,sol.sol\":19566:19573  tokenId */\n      dup6\n        /* \"contracts/Test,sol.sol\":19550:19574  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Test,sol.sol\":19509:19574  TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":19727:19745  tokenApproval.slot */\n      dup1\n        /* \"contracts/Test,sol.sol\":19704:19745  approvedAddressSlot := tokenApproval.slot */\n      swap3\n      pop\n        /* \"contracts/Test,sol.sol\":19784:19803  approvedAddressSlot */\n      dup3\n        /* \"contracts/Test,sol.sol\":19778:19804  sload(approvedAddressSlot) */\n      sload\n        /* \"contracts/Test,sol.sol\":19759:19804  approvedAddress := sload(approvedAddressSlot) */\n      swap2\n      pop\n        /* \"contracts/Test,sol.sol\":19689:19815  {... */\n      pop\n        /* \"contracts/Test,sol.sol\":19337:19822  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":18565:19224  function _isSenderApprovedOrOwner(... */\n    tag_122:\n        /* \"contracts/Test,sol.sol\":18714:18725  bool result */\n      0x00\n        /* \"contracts/Test,sol.sol\":18879:18895  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Test,sol.sol\":18872:18877  owner */\n      dup4\n        /* \"contracts/Test,sol.sol\":18868:18896  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"contracts/Test,sol.sol\":18859:18896  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"contracts/Test,sol.sol\":19039:19055  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Test,sol.sol\":19028:19037  msgSender */\n      dup3\n        /* \"contracts/Test,sol.sol\":19024:19056  and(msgSender, _BITMASK_ADDRESS) */\n      and\n        /* \"contracts/Test,sol.sol\":19011:19056  msgSender := and(msgSender, _BITMASK_ADDRESS) */\n      swap2\n      pop\n        /* \"contracts/Test,sol.sol\":19189:19204  approvedAddress */\n      dup4\n        /* \"contracts/Test,sol.sol\":19178:19187  msgSender */\n      dup3\n        /* \"contracts/Test,sol.sol\":19175:19205  eq(msgSender, approvedAddress) */\n      eq\n        /* \"contracts/Test,sol.sol\":19167:19172  owner */\n      dup4\n        /* \"contracts/Test,sol.sol\":19156:19165  msgSender */\n      dup4\n        /* \"contracts/Test,sol.sol\":19153:19173  eq(msgSender, owner) */\n      eq\n        /* \"contracts/Test,sol.sol\":19150:19206  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"contracts/Test,sol.sol\":19140:19206  result := or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":18565:19224  function _isSenderApprovedOrOwner(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":25223:25382  function _beforeTokenTransfers(... */\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":39791:40102  function _nextExtraData(... */\n    tag_133:\n        /* \"contracts/Test,sol.sol\":39926:39933  uint256 */\n      0x00\n        /* \"contracts/Test,sol.sol\":39946:39962  uint24 extraData */\n      dup1\n        /* \"contracts/Test,sol.sol\":2586:2589  232 */\n      0xe8\n        /* \"contracts/Test,sol.sol\":39972:39991  prevOwnershipPacked */\n      dup4\n        /* \"contracts/Test,sol.sol\":39972:40013  prevOwnershipPacked >> _BITPOS_EXTRA_DATA */\n      swap1\n      shr\n        /* \"contracts/Test,sol.sol\":39946:40014  uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA) */\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":2586:2589  232 */\n      0xe8\n        /* \"contracts/Test,sol.sol\":40040:40071  _extraData(from, to, extraData) */\n      tag_191\n        /* \"contracts/Test,sol.sol\":40051:40055  from */\n      dup7\n        /* \"contracts/Test,sol.sol\":40057:40059  to */\n      dup7\n        /* \"contracts/Test,sol.sol\":40061:40070  extraData */\n      dup5\n        /* \"contracts/Test,sol.sol\":40040:40050  _extraData */\n      tag_192\n        /* \"contracts/Test,sol.sol\":40040:40071  _extraData(from, to, extraData) */\n      jump\t// in\n    tag_191:\n        /* \"contracts/Test,sol.sol\":40032:40072  uint256(_extraData(from, to, extraData)) */\n      0xffffff\n      and\n        /* \"contracts/Test,sol.sol\":40032:40094  uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap1\n      shl\n        /* \"contracts/Test,sol.sol\":40025:40094  return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap2\n      pop\n      pop\n        /* \"contracts/Test,sol.sol\":39791:40102  function _nextExtraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":14683:15133  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n    tag_134:\n        /* \"contracts/Test,sol.sol\":14763:14777  uint256 result */\n      0x00\n        /* \"contracts/Test,sol.sol\":14931:14947  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Test,sol.sol\":14924:14929  owner */\n      dup4\n        /* \"contracts/Test,sol.sol\":14920:14948  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"contracts/Test,sol.sol\":14911:14948  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"contracts/Test,sol.sol\":15108:15113  flags */\n      dup2\n        /* \"contracts/Test,sol.sol\":15094:15105  timestamp() */\n      timestamp\n        /* \"contracts/Test,sol.sol\":15069:15092  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"contracts/Test,sol.sol\":15065:15106  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"contracts/Test,sol.sol\":15062:15114  or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"contracts/Test,sol.sol\":15055:15060  owner */\n      dup4\n        /* \"contracts/Test,sol.sol\":15052:15115  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"contracts/Test,sol.sol\":15042:15115  result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":14683:15133  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":26047:26205  function _afterTokenTransfers(... */\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":26645:27361  function _checkContractOnERC721Received(... */\n    tag_160:\n        /* \"contracts/Test,sol.sol\":26808:26812  bool */\n      0x00\n        /* \"contracts/Test,sol.sol\":26854:26856  to */\n      dup4\n        /* \"contracts/Test,sol.sol\":26829:26874  ERC721A__IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"contracts/Test,sol.sol\":26875:26894  _msgSenderERC721A() */\n      tag_196\n        /* \"contracts/Test,sol.sol\":26875:26892  _msgSenderERC721A */\n      tag_106\n        /* \"contracts/Test,sol.sol\":26875:26894  _msgSenderERC721A() */\n      jump\t// in\n    tag_196:\n        /* \"contracts/Test,sol.sol\":26896:26900  from */\n      dup8\n        /* \"contracts/Test,sol.sol\":26902:26909  tokenId */\n      dup7\n        /* \"contracts/Test,sol.sol\":26911:26916  _data */\n      dup7\n        /* \"contracts/Test,sol.sol\":26829:26917  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_199\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      0x01\n    tag_199:\n        /* \"contracts/Test,sol.sol\":26825:27354  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_202\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_207\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_206)\n    tag_207:\n      0x60\n      swap2\n      pop\n    tag_206:\n      pop\n        /* \"contracts/Test,sol.sol\":27129:27130  0 */\n      0x00\n        /* \"contracts/Test,sol.sol\":27112:27118  reason */\n      dup2\n        /* \"contracts/Test,sol.sol\":27112:27125  reason.length */\n      mload\n        /* \"contracts/Test,sol.sol\":27112:27130  reason.length == 0 */\n      sub\n        /* \"contracts/Test,sol.sol\":27108:27343  if (reason.length == 0) {... */\n      tag_208\n      jumpi\n        /* \"contracts/Test,sol.sol\":27158:27198  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Test,sol.sol\":27108:27343  if (reason.length == 0) {... */\n    tag_208:\n        /* \"contracts/Test,sol.sol\":27301:27307  reason */\n      dup1\n        /* \"contracts/Test,sol.sol\":27295:27308  mload(reason) */\n      mload\n        /* \"contracts/Test,sol.sol\":27286:27292  reason */\n      dup2\n        /* \"contracts/Test,sol.sol\":27282:27284  32 */\n      0x20\n        /* \"contracts/Test,sol.sol\":27278:27293  add(32, reason) */\n      add\n        /* \"contracts/Test,sol.sol\":27271:27309  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/Test,sol.sol\":26825:27354  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_202:\n        /* \"contracts/Test,sol.sol\":26998:27052  ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/Test,sol.sol\":26988:27052  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/Test,sol.sol\":26988:26994  retval */\n      dup2\n        /* \"contracts/Test,sol.sol\":26988:27052  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/Test,sol.sol\":26981:27052  return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"contracts/Test,sol.sol\":26645:27361  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":11268:11362  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_166:\n        /* \"contracts/Test,sol.sol\":11319:11332  string memory */\n      0x60\n        /* \"contracts/Test,sol.sol\":11345:11354  return '' */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":11268:11362  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":40689:42434  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_170:\n        /* \"contracts/Test,sol.sol\":40754:40771  string memory str */\n      0x60\n        /* \"contracts/Test,sol.sol\":41188:41192  0xa0 */\n      0xa0\n        /* \"contracts/Test,sol.sol\":41181:41185  0x40 */\n      0x40\n        /* \"contracts/Test,sol.sol\":41175:41186  mload(0x40) */\n      mload\n        /* \"contracts/Test,sol.sol\":41171:41193  add(mload(0x40), 0xa0) */\n      add\n        /* \"contracts/Test,sol.sol\":41280:41281  m */\n      dup1\n        /* \"contracts/Test,sol.sol\":41274:41278  0x40 */\n      0x40\n        /* \"contracts/Test,sol.sol\":41267:41282  mstore(0x40, m) */\n      mstore\n        /* \"contracts/Test,sol.sol\":41355:41359  0x20 */\n      0x20\n        /* \"contracts/Test,sol.sol\":41352:41353  m */\n      dup2\n        /* \"contracts/Test,sol.sol\":41348:41360  sub(m, 0x20) */\n      sub\n        /* \"contracts/Test,sol.sol\":41341:41360  str := sub(m, 0x20) */\n      swap2\n      pop\n        /* \"contracts/Test,sol.sol\":41437:41438  0 */\n      0x00\n        /* \"contracts/Test,sol.sol\":41432:41435  str */\n      dup3\n        /* \"contracts/Test,sol.sol\":41425:41439  mstore(str, 0) */\n      mstore\n        /* \"contracts/Test,sol.sol\":41541:41544  str */\n      dup2\n        /* \"contracts/Test,sol.sol\":41780:41785  value */\n      dup4\n        /* \"contracts/Test,sol.sol\":41762:42190  for { let temp := value } 1 {} {... */\n    tag_213:\n        /* \"contracts/Test,sol.sol\":41788:41789  1 */\n      0x01\n        /* \"contracts/Test,sol.sol\":41762:42190  for { let temp := value } 1 {} {... */\n      iszero\n      tag_215\n      jumpi\n        /* \"contracts/Test,sol.sol\":41828:41829  1 */\n      0x01\n        /* \"contracts/Test,sol.sol\":41823:41826  str */\n      dup5\n        /* \"contracts/Test,sol.sol\":41819:41830  sub(str, 1) */\n      sub\n        /* \"contracts/Test,sol.sol\":41812:41830  str := sub(str, 1) */\n      swap4\n      pop\n        /* \"contracts/Test,sol.sol\":41999:42001  10 */\n      0x0a\n        /* \"contracts/Test,sol.sol\":41993:41997  temp */\n      dup2\n        /* \"contracts/Test,sol.sol\":41989:42002  mod(temp, 10) */\n      mod\n        /* \"contracts/Test,sol.sol\":41985:41987  48 */\n      0x30\n        /* \"contracts/Test,sol.sol\":41981:42003  add(48, mod(temp, 10)) */\n      add\n        /* \"contracts/Test,sol.sol\":41976:41979  str */\n      dup5\n        /* \"contracts/Test,sol.sol\":41968:42004  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"contracts/Test,sol.sol\":42093:42095  10 */\n      0x0a\n        /* \"contracts/Test,sol.sol\":42087:42091  temp */\n      dup2\n        /* \"contracts/Test,sol.sol\":42083:42096  div(temp, 10) */\n      div\n        /* \"contracts/Test,sol.sol\":42075:42096  temp := div(temp, 10) */\n      swap1\n      pop\n        /* \"contracts/Test,sol.sol\":42160:42164  temp */\n      dup1\n        /* \"contracts/Test,sol.sol\":41762:42190  for { let temp := value } 1 {} {... */\n      tag_213\n        /* \"contracts/Test,sol.sol\":42150:42175  if iszero(temp) { break } */\n      jumpi\n        /* \"contracts/Test,sol.sol\":41762:42190  for { let temp := value } 1 {} {... */\n    tag_215:\n        /* \"contracts/Test,sol.sol\":41766:41787  { let temp := value } */\n      pop\n        /* \"contracts/Test,sol.sol\":42229:42232  str */\n      dup3\n        /* \"contracts/Test,sol.sol\":42224:42227  end */\n      dup2\n        /* \"contracts/Test,sol.sol\":42220:42233  sub(end, str) */\n      sub\n        /* \"contracts/Test,sol.sol\":42344:42348  0x20 */\n      0x20\n        /* \"contracts/Test,sol.sol\":42339:42342  str */\n      dup5\n        /* \"contracts/Test,sol.sol\":42335:42349  sub(str, 0x20) */\n      sub\n        /* \"contracts/Test,sol.sol\":42328:42349  str := sub(str, 0x20) */\n      swap4\n      pop\n        /* \"contracts/Test,sol.sol\":42409:42415  length */\n      dup1\n        /* \"contracts/Test,sol.sol\":42404:42407  str */\n      dup5\n        /* \"contracts/Test,sol.sol\":42397:42416  mstore(str, length) */\n      mstore\n        /* \"contracts/Test,sol.sol\":40793:42427  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Test,sol.sol\":40689:42434  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Test,sol.sol\":39492:39639  function _extraData(... */\n    tag_192:\n        /* \"contracts/Test,sol.sol\":39629:39635  uint24 */\n      0x00\n        /* \"contracts/Test,sol.sol\":39492:39639  function _extraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_218:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_219:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_220:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_221:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_222:\n        /* \"#utility.yul\":561:584   */\n      tag_264\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_221\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_265:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_223:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_267\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_222\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_22:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_270\n      tag_219\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":833:952   */\n    tag_269:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_271\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_223\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_224:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_225:\n        /* \"#utility.yul\":1268:1289   */\n      tag_274\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_224\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_25:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_276\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_225\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_226:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_227:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_228:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_280:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_280)\n    tag_282:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_229:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_230:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_285\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_226\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":2329:2400   */\n      tag_286\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_227\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_287\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_228\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2499:2528   */\n      tag_288\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_229\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_30:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_290\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_230\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_231:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_232:\n        /* \"#utility.yul\":3016:3040   */\n      tag_293\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_231\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_294\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_294:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_233:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_296\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_232\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_34:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_299\n      tag_219\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":3292:3411   */\n    tag_298:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_300\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_233\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_234:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_235:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_303\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_234\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_236:\n        /* \"#utility.yul\":3872:3896   */\n      tag_305\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_235\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_37:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_307\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_236\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_237:\n        /* \"#utility.yul\":4210:4234   */\n      tag_309\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_235\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_310:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_238:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_312\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_237\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_40:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_315\n      tag_219\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":4503:4622   */\n    tag_314:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_316\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_238\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_317\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_233\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5008   */\n    tag_239:\n        /* \"#utility.yul\":4977:5001   */\n      tag_319\n        /* \"#utility.yul\":4995:5000   */\n      dup2\n        /* \"#utility.yul\":4977:5001   */\n      tag_231\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":4972:4975   */\n      dup3\n        /* \"#utility.yul\":4965:5002   */\n      mstore\n        /* \"#utility.yul\":4890:5008   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5014:5236   */\n    tag_46:\n        /* \"#utility.yul\":5107:5111   */\n      0x00\n        /* \"#utility.yul\":5145:5147   */\n      0x20\n        /* \"#utility.yul\":5134:5143   */\n      dup3\n        /* \"#utility.yul\":5130:5148   */\n      add\n        /* \"#utility.yul\":5122:5148   */\n      swap1\n      pop\n        /* \"#utility.yul\":5158:5229   */\n      tag_321\n        /* \"#utility.yul\":5226:5227   */\n      0x00\n        /* \"#utility.yul\":5215:5224   */\n      dup4\n        /* \"#utility.yul\":5211:5228   */\n      add\n        /* \"#utility.yul\":5202:5208   */\n      dup5\n        /* \"#utility.yul\":5158:5229   */\n      tag_239\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":5014:5236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5242:5861   */\n    tag_49:\n        /* \"#utility.yul\":5319:5325   */\n      0x00\n        /* \"#utility.yul\":5327:5333   */\n      dup1\n        /* \"#utility.yul\":5335:5341   */\n      0x00\n        /* \"#utility.yul\":5384:5386   */\n      0x60\n        /* \"#utility.yul\":5372:5381   */\n      dup5\n        /* \"#utility.yul\":5363:5370   */\n      dup7\n        /* \"#utility.yul\":5359:5382   */\n      sub\n        /* \"#utility.yul\":5355:5387   */\n      slt\n        /* \"#utility.yul\":5352:5471   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":5390:5469   */\n      tag_324\n      tag_219\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5352:5471   */\n    tag_323:\n        /* \"#utility.yul\":5510:5511   */\n      0x00\n        /* \"#utility.yul\":5535:5588   */\n      tag_325\n        /* \"#utility.yul\":5580:5587   */\n      dup7\n        /* \"#utility.yul\":5571:5577   */\n      dup3\n        /* \"#utility.yul\":5560:5569   */\n      dup8\n        /* \"#utility.yul\":5556:5578   */\n      add\n        /* \"#utility.yul\":5535:5588   */\n      tag_238\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":5525:5588   */\n      swap4\n      pop\n        /* \"#utility.yul\":5481:5598   */\n      pop\n        /* \"#utility.yul\":5637:5639   */\n      0x20\n        /* \"#utility.yul\":5663:5716   */\n      tag_326\n        /* \"#utility.yul\":5708:5715   */\n      dup7\n        /* \"#utility.yul\":5699:5705   */\n      dup3\n        /* \"#utility.yul\":5688:5697   */\n      dup8\n        /* \"#utility.yul\":5684:5706   */\n      add\n        /* \"#utility.yul\":5663:5716   */\n      tag_238\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":5653:5716   */\n      swap3\n      pop\n        /* \"#utility.yul\":5608:5726   */\n      pop\n        /* \"#utility.yul\":5765:5767   */\n      0x40\n        /* \"#utility.yul\":5791:5844   */\n      tag_327\n        /* \"#utility.yul\":5836:5843   */\n      dup7\n        /* \"#utility.yul\":5827:5833   */\n      dup3\n        /* \"#utility.yul\":5816:5825   */\n      dup8\n        /* \"#utility.yul\":5812:5834   */\n      add\n        /* \"#utility.yul\":5791:5844   */\n      tag_233\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":5781:5844   */\n      swap2\n      pop\n        /* \"#utility.yul\":5736:5854   */\n      pop\n        /* \"#utility.yul\":5242:5861   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5867:6196   */\n    tag_62:\n        /* \"#utility.yul\":5926:5932   */\n      0x00\n        /* \"#utility.yul\":5975:5977   */\n      0x20\n        /* \"#utility.yul\":5963:5972   */\n      dup3\n        /* \"#utility.yul\":5954:5961   */\n      dup5\n        /* \"#utility.yul\":5950:5973   */\n      sub\n        /* \"#utility.yul\":5946:5978   */\n      slt\n        /* \"#utility.yul\":5943:6062   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":5981:6060   */\n      tag_330\n      tag_219\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":5943:6062   */\n    tag_329:\n        /* \"#utility.yul\":6101:6102   */\n      0x00\n        /* \"#utility.yul\":6126:6179   */\n      tag_331\n        /* \"#utility.yul\":6171:6178   */\n      dup5\n        /* \"#utility.yul\":6162:6168   */\n      dup3\n        /* \"#utility.yul\":6151:6160   */\n      dup6\n        /* \"#utility.yul\":6147:6169   */\n      add\n        /* \"#utility.yul\":6126:6179   */\n      tag_238\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":6116:6179   */\n      swap2\n      pop\n        /* \"#utility.yul\":6072:6189   */\n      pop\n        /* \"#utility.yul\":5867:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_240:\n        /* \"#utility.yul\":6272:6293   */\n      tag_333\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_224\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_334\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_334:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_241:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_336\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_240\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_72:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_339\n      tag_219\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":6553:6672   */\n    tag_338:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_340\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_238\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_341\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_241\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_242:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_243:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_244:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_245:\n        /* \"#utility.yul\":7452:7479   */\n      tag_346\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_229\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_348\n      tag_244\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":7525:7613   */\n    tag_347:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_246:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_350\n      tag_218\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_351\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_245\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_247:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_354\n      tag_244\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":7928:7984   */\n    tag_353:\n        /* \"#utility.yul\":8002:8031   */\n      tag_355\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_229\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_248:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_249:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_358\n        /* \"#utility.yul\":8374:8422   */\n      tag_359\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_247\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":8358:8423   */\n      tag_246\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_361\n      tag_243\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":8498:8610   */\n    tag_360:\n        /* \"#utility.yul\":8619:8673   */\n      tag_362\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_248\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_250:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_365\n      tag_242\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":8769:8891   */\n    tag_364:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_366\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_249\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_76:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_369\n      tag_219\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":9178:9298   */\n    tag_368:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_370\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_238\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_371\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_238\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_372\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_233\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_374\n      tag_220\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":9765:9882   */\n    tag_373:\n        /* \"#utility.yul\":9906:9968   */\n      tag_375\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_250\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10465   */\n    tag_86:\n        /* \"#utility.yul\":10059:10065   */\n      0x00\n        /* \"#utility.yul\":10067:10073   */\n      dup1\n        /* \"#utility.yul\":10116:10118   */\n      0x40\n        /* \"#utility.yul\":10104:10113   */\n      dup4\n        /* \"#utility.yul\":10095:10102   */\n      dup6\n        /* \"#utility.yul\":10091:10114   */\n      sub\n        /* \"#utility.yul\":10087:10119   */\n      slt\n        /* \"#utility.yul\":10084:10203   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":10122:10201   */\n      tag_378\n      tag_219\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":10084:10203   */\n    tag_377:\n        /* \"#utility.yul\":10242:10243   */\n      0x00\n        /* \"#utility.yul\":10267:10320   */\n      tag_379\n        /* \"#utility.yul\":10312:10319   */\n      dup6\n        /* \"#utility.yul\":10303:10309   */\n      dup3\n        /* \"#utility.yul\":10292:10301   */\n      dup7\n        /* \"#utility.yul\":10288:10310   */\n      add\n        /* \"#utility.yul\":10267:10320   */\n      tag_238\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":10257:10320   */\n      swap3\n      pop\n        /* \"#utility.yul\":10213:10330   */\n      pop\n        /* \"#utility.yul\":10369:10371   */\n      0x20\n        /* \"#utility.yul\":10395:10448   */\n      tag_380\n        /* \"#utility.yul\":10440:10447   */\n      dup6\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup7\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10395:10448   */\n      tag_238\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":10385:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10340:10458   */\n      pop\n        /* \"#utility.yul\":9991:10465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10651   */\n    tag_251:\n        /* \"#utility.yul\":10519:10596   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10597   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x22\n        /* \"#utility.yul\":10613:10614   */\n      0x04\n        /* \"#utility.yul\":10606:10621   */\n      mstore\n        /* \"#utility.yul\":10640:10644   */\n      0x24\n        /* \"#utility.yul\":10637:10638   */\n      0x00\n        /* \"#utility.yul\":10630:10645   */\n      revert\n        /* \"#utility.yul\":10657:10977   */\n    tag_94:\n        /* \"#utility.yul\":10701:10707   */\n      0x00\n        /* \"#utility.yul\":10738:10739   */\n      0x02\n        /* \"#utility.yul\":10732:10736   */\n      dup3\n        /* \"#utility.yul\":10728:10740   */\n      div\n        /* \"#utility.yul\":10718:10740   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10786   */\n      0x01\n        /* \"#utility.yul\":10779:10783   */\n      dup3\n        /* \"#utility.yul\":10775:10787   */\n      and\n        /* \"#utility.yul\":10806:10824   */\n      dup1\n        /* \"#utility.yul\":10796:10877   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":10862:10866   */\n      0x7f\n        /* \"#utility.yul\":10854:10860   */\n      dup3\n        /* \"#utility.yul\":10850:10867   */\n      and\n        /* \"#utility.yul\":10840:10867   */\n      swap2\n      pop\n        /* \"#utility.yul\":10796:10877   */\n    tag_383:\n        /* \"#utility.yul\":10924:10926   */\n      0x20\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10913:10927   */\n      lt\n        /* \"#utility.yul\":10893:10911   */\n      dup2\n        /* \"#utility.yul\":10890:10928   */\n      sub\n        /* \"#utility.yul\":10887:10971   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":10943:10961   */\n      tag_385\n      tag_251\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":10887:10971   */\n    tag_384:\n        /* \"#utility.yul\":10708:10977   */\n      pop\n        /* \"#utility.yul\":10657:10977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11131   */\n    tag_252:\n        /* \"#utility.yul\":11085:11096   */\n      0x00\n        /* \"#utility.yul\":11122:11125   */\n      dup2\n        /* \"#utility.yul\":11107:11125   */\n      swap1\n      pop\n        /* \"#utility.yul\":10983:11131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11137:11527   */\n    tag_253:\n        /* \"#utility.yul\":11243:11246   */\n      0x00\n        /* \"#utility.yul\":11271:11310   */\n      tag_388\n        /* \"#utility.yul\":11304:11309   */\n      dup3\n        /* \"#utility.yul\":11271:11310   */\n      tag_226\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":11326:11415   */\n      tag_389\n        /* \"#utility.yul\":11408:11414   */\n      dup2\n        /* \"#utility.yul\":11403:11406   */\n      dup6\n        /* \"#utility.yul\":11326:11415   */\n      tag_252\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":11319:11415   */\n      swap4\n      pop\n        /* \"#utility.yul\":11424:11489   */\n      tag_390\n        /* \"#utility.yul\":11482:11488   */\n      dup2\n        /* \"#utility.yul\":11477:11480   */\n      dup6\n        /* \"#utility.yul\":11470:11474   */\n      0x20\n        /* \"#utility.yul\":11463:11468   */\n      dup7\n        /* \"#utility.yul\":11459:11475   */\n      add\n        /* \"#utility.yul\":11424:11489   */\n      tag_228\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":11514:11520   */\n      dup1\n        /* \"#utility.yul\":11509:11512   */\n      dup5\n        /* \"#utility.yul\":11505:11521   */\n      add\n        /* \"#utility.yul\":11498:11521   */\n      swap2\n      pop\n        /* \"#utility.yul\":11247:11527   */\n      pop\n        /* \"#utility.yul\":11137:11527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11533:11968   */\n    tag_172:\n        /* \"#utility.yul\":11713:11716   */\n      0x00\n        /* \"#utility.yul\":11735:11830   */\n      tag_392\n        /* \"#utility.yul\":11826:11829   */\n      dup3\n        /* \"#utility.yul\":11817:11823   */\n      dup6\n        /* \"#utility.yul\":11735:11830   */\n      tag_253\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":11728:11830   */\n      swap2\n      pop\n        /* \"#utility.yul\":11847:11942   */\n      tag_393\n        /* \"#utility.yul\":11938:11941   */\n      dup3\n        /* \"#utility.yul\":11929:11935   */\n      dup5\n        /* \"#utility.yul\":11847:11942   */\n      tag_253\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":11840:11942   */\n      swap2\n      pop\n        /* \"#utility.yul\":11959:11962   */\n      dup2\n        /* \"#utility.yul\":11952:11962   */\n      swap1\n      pop\n        /* \"#utility.yul\":11533:11968   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11974:12072   */\n    tag_254:\n        /* \"#utility.yul\":12025:12031   */\n      0x00\n        /* \"#utility.yul\":12059:12064   */\n      dup2\n        /* \"#utility.yul\":12053:12065   */\n      mload\n        /* \"#utility.yul\":12043:12065   */\n      swap1\n      pop\n        /* \"#utility.yul\":11974:12072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12078:12246   */\n    tag_255:\n        /* \"#utility.yul\":12161:12172   */\n      0x00\n        /* \"#utility.yul\":12195:12201   */\n      dup3\n        /* \"#utility.yul\":12190:12193   */\n      dup3\n        /* \"#utility.yul\":12183:12202   */\n      mstore\n        /* \"#utility.yul\":12235:12239   */\n      0x20\n        /* \"#utility.yul\":12230:12233   */\n      dup3\n        /* \"#utility.yul\":12226:12240   */\n      add\n        /* \"#utility.yul\":12211:12240   */\n      swap1\n      pop\n        /* \"#utility.yul\":12078:12246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12252:12625   */\n    tag_256:\n        /* \"#utility.yul\":12338:12341   */\n      0x00\n        /* \"#utility.yul\":12366:12404   */\n      tag_397\n        /* \"#utility.yul\":12398:12403   */\n      dup3\n        /* \"#utility.yul\":12366:12404   */\n      tag_254\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":12420:12490   */\n      tag_398\n        /* \"#utility.yul\":12483:12489   */\n      dup2\n        /* \"#utility.yul\":12478:12481   */\n      dup6\n        /* \"#utility.yul\":12420:12490   */\n      tag_255\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":12413:12490   */\n      swap4\n      pop\n        /* \"#utility.yul\":12499:12564   */\n      tag_399\n        /* \"#utility.yul\":12557:12563   */\n      dup2\n        /* \"#utility.yul\":12552:12555   */\n      dup6\n        /* \"#utility.yul\":12545:12549   */\n      0x20\n        /* \"#utility.yul\":12538:12543   */\n      dup7\n        /* \"#utility.yul\":12534:12550   */\n      add\n        /* \"#utility.yul\":12499:12564   */\n      tag_228\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":12589:12618   */\n      tag_400\n        /* \"#utility.yul\":12611:12617   */\n      dup2\n        /* \"#utility.yul\":12589:12618   */\n      tag_229\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":12584:12587   */\n      dup5\n        /* \"#utility.yul\":12580:12619   */\n      add\n        /* \"#utility.yul\":12573:12619   */\n      swap2\n      pop\n        /* \"#utility.yul\":12342:12625   */\n      pop\n        /* \"#utility.yul\":12252:12625   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12631:13271   */\n    tag_198:\n        /* \"#utility.yul\":12826:12830   */\n      0x00\n        /* \"#utility.yul\":12864:12867   */\n      0x80\n        /* \"#utility.yul\":12853:12862   */\n      dup3\n        /* \"#utility.yul\":12849:12868   */\n      add\n        /* \"#utility.yul\":12841:12868   */\n      swap1\n      pop\n        /* \"#utility.yul\":12878:12949   */\n      tag_402\n        /* \"#utility.yul\":12946:12947   */\n      0x00\n        /* \"#utility.yul\":12935:12944   */\n      dup4\n        /* \"#utility.yul\":12931:12948   */\n      add\n        /* \"#utility.yul\":12922:12928   */\n      dup8\n        /* \"#utility.yul\":12878:12949   */\n      tag_236\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":12959:13031   */\n      tag_403\n        /* \"#utility.yul\":13027:13029   */\n      0x20\n        /* \"#utility.yul\":13016:13025   */\n      dup4\n        /* \"#utility.yul\":13012:13030   */\n      add\n        /* \"#utility.yul\":13003:13009   */\n      dup7\n        /* \"#utility.yul\":12959:13031   */\n      tag_236\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":13041:13113   */\n      tag_404\n        /* \"#utility.yul\":13109:13111   */\n      0x40\n        /* \"#utility.yul\":13098:13107   */\n      dup4\n        /* \"#utility.yul\":13094:13112   */\n      add\n        /* \"#utility.yul\":13085:13091   */\n      dup6\n        /* \"#utility.yul\":13041:13113   */\n      tag_239\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":13160:13169   */\n      dup2\n        /* \"#utility.yul\":13154:13158   */\n      dup2\n        /* \"#utility.yul\":13150:13170   */\n      sub\n        /* \"#utility.yul\":13145:13147   */\n      0x60\n        /* \"#utility.yul\":13134:13143   */\n      dup4\n        /* \"#utility.yul\":13130:13148   */\n      add\n        /* \"#utility.yul\":13123:13171   */\n      mstore\n        /* \"#utility.yul\":13188:13264   */\n      tag_405\n        /* \"#utility.yul\":13259:13263   */\n      dup2\n        /* \"#utility.yul\":13250:13256   */\n      dup5\n        /* \"#utility.yul\":13188:13264   */\n      tag_256\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":13180:13264   */\n      swap1\n      pop\n        /* \"#utility.yul\":12631:13271   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13277:13418   */\n    tag_257:\n        /* \"#utility.yul\":13333:13338   */\n      0x00\n        /* \"#utility.yul\":13364:13370   */\n      dup2\n        /* \"#utility.yul\":13358:13371   */\n      mload\n        /* \"#utility.yul\":13349:13371   */\n      swap1\n      pop\n        /* \"#utility.yul\":13380:13412   */\n      tag_407\n        /* \"#utility.yul\":13406:13411   */\n      dup2\n        /* \"#utility.yul\":13380:13412   */\n      tag_222\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":13277:13418   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13424:13773   */\n    tag_201:\n        /* \"#utility.yul\":13493:13499   */\n      0x00\n        /* \"#utility.yul\":13542:13544   */\n      0x20\n        /* \"#utility.yul\":13530:13539   */\n      dup3\n        /* \"#utility.yul\":13521:13528   */\n      dup5\n        /* \"#utility.yul\":13517:13540   */\n      sub\n        /* \"#utility.yul\":13513:13545   */\n      slt\n        /* \"#utility.yul\":13510:13629   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":13548:13627   */\n      tag_410\n      tag_219\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":13510:13629   */\n    tag_409:\n        /* \"#utility.yul\":13668:13669   */\n      0x00\n        /* \"#utility.yul\":13693:13756   */\n      tag_411\n        /* \"#utility.yul\":13748:13755   */\n      dup5\n        /* \"#utility.yul\":13739:13745   */\n      dup3\n        /* \"#utility.yul\":13728:13737   */\n      dup6\n        /* \"#utility.yul\":13724:13746   */\n      add\n        /* \"#utility.yul\":13693:13756   */\n      tag_257\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":13683:13756   */\n      swap2\n      pop\n        /* \"#utility.yul\":13639:13766   */\n      pop\n        /* \"#utility.yul\":13424:13773   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220250b9f6a55aac22329908ee2b4cb9e6e60c7102834a83ae6fd548593be11a50f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_343": {
									"entryPoint": null,
									"id": 343,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_352": {
									"entryPoint": 121,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 403,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1094,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 359,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 673,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 173,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 151,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 141,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 136,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 823,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 979,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1022,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:2"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:2"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:2",
														"type": ""
													}
												],
												"src": "580:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:2",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:2"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:2"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:2"
															},
															"nodeType": "YulIf",
															"src": "1030:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:2",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:2"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:2",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:2",
														"type": ""
													}
												],
												"src": "874:281:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:2"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:2"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:2"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:2",
														"type": ""
													}
												],
												"src": "1161:129:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:2"
															},
															"nodeType": "YulIf",
															"src": "1434:56:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:2"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:2"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:2",
														"type": ""
													}
												],
												"src": "1296:308:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:2",
																"statements": []
															},
															"src": "1701:113:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:2"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:2",
														"type": ""
													}
												],
												"src": "1610:246:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:2"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:2"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:2"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:2"
															},
															"nodeType": "YulIf",
															"src": "2117:112:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:2"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:2"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:2",
														"type": ""
													}
												],
												"src": "1862:434:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:2",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:2"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:2"
															},
															"nodeType": "YulIf",
															"src": "2399:122:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:2",
														"type": ""
													}
												],
												"src": "2316:355:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:2"
															},
															"nodeType": "YulIf",
															"src": "2801:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:2",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:2",
														"type": ""
													}
												],
												"src": "2677:853:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:2",
														"type": ""
													}
												],
												"src": "3536:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:2"
															},
															"nodeType": "YulIf",
															"src": "3966:81:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:2"
															},
															"nodeType": "YulIf",
															"src": "4057:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:2",
														"type": ""
													}
												],
												"src": "3827:320:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:2",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:2"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:2",
														"type": ""
													}
												],
												"src": "4153:141:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:2"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:2",
														"type": ""
													}
												],
												"src": "4300:93:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:2"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:2"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:2",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:2",
														"type": ""
													}
												],
												"src": "4399:107:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:2",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:2"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:2"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:2"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:2"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:2"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:2"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:2"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:2"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:2",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:2",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:2",
														"type": ""
													}
												],
												"src": "4512:393:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:2",
														"type": ""
													}
												],
												"src": "4911:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:2"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:2",
														"type": ""
													}
												],
												"src": "4994:60:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:2"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:2",
														"type": ""
													}
												],
												"src": "5060:142:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:2"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:2",
														"type": ""
													}
												],
												"src": "5208:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:2",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:2"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:2"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:2"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:2"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:2"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:2"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:2",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:2",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:2",
														"type": ""
													}
												],
												"src": "5289:269:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:2",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:2"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:2",
														"type": ""
													}
												],
												"src": "5564:73:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:2"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:2"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:2"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:2"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:2",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:2",
														"type": ""
													}
												],
												"src": "5643:189:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:2",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:2"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:2",
																"statements": []
															},
															"src": "5898:120:2"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:2",
														"type": ""
													}
												],
												"src": "5838:186:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:2"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:2"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:2"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:2"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:2",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:2",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:2"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:2"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:2"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:2"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:2"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:2"
															},
															"nodeType": "YulIf",
															"src": "6120:446:2"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:2",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:2",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:2",
														"type": ""
													}
												],
												"src": "6030:543:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:2"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:2"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:2",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:2",
														"type": ""
													}
												],
												"src": "6579:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:2",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:2"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:2"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:2"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:2"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:2"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:2"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:2",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:2",
														"type": ""
													}
												],
												"src": "6702:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:2"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:2"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:2",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:2"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:2"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:2",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:2",
														"type": ""
													}
												],
												"src": "6876:295:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:2",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:2"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:2"
															},
															"nodeType": "YulIf",
															"src": "7381:56:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:2"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:2"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:2"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:2"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:2"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:2"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:2",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:2"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:2",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:2"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:2",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:2"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:2"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:2"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:2"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:2",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:2"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:2"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:2"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:2"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:2"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:2"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:2"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:2"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:2"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:2",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:2"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:2"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:2"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:2"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:2"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:2",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:2",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:2"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:2"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:2",
																					"statements": []
																				},
																				"src": "7867:208:2"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:2",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:2",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:2"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:2"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:2"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:2"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:2",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:2"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:2"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:2"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:2",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:2"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:2"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:2"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:2"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:2"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:2"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:2"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:2"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:2"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:2"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:2",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:2"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:2",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:2"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:2",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:2",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:2",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:2",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:2",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:2"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:2"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:2"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:2"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:2"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:2"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:2"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:2"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:2"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:2"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:2",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:2"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:2"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:2",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:2",
														"type": ""
													}
												],
												"src": "7176:1395:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001ee338038062001ee3833981810160405281019062000037919062000211565b8160029081620000489190620004e1565b5080600390816200005a9190620004e1565b506200006b6200007960201b60201c565b6000819055505050620005c8565b600090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000e7826200009c565b810181811067ffffffffffffffff82111715620001095762000108620000ad565b5b80604052505050565b60006200011e6200007e565b90506200012c8282620000dc565b919050565b600067ffffffffffffffff8211156200014f576200014e620000ad565b5b6200015a826200009c565b9050602081019050919050565b60005b83811015620001875780820151818401526020810190506200016a565b60008484015250505050565b6000620001aa620001a48462000131565b62000112565b905082815260208101848484011115620001c957620001c862000097565b5b620001d684828562000167565b509392505050565b600082601f830112620001f657620001f562000092565b5b81516200020884826020860162000193565b91505092915050565b600080604083850312156200022b576200022a62000088565b5b600083015167ffffffffffffffff8111156200024c576200024b6200008d565b5b6200025a85828601620001de565b925050602083015167ffffffffffffffff8111156200027e576200027d6200008d565b5b6200028c85828601620001de565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002e957607f821691505b602082108103620002ff57620002fe620002a1565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003697fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200032a565b6200037586836200032a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003c2620003bc620003b6846200038d565b62000397565b6200038d565b9050919050565b6000819050919050565b620003de83620003a1565b620003f6620003ed82620003c9565b84845462000337565b825550505050565b600090565b6200040d620003fe565b6200041a818484620003d3565b505050565b5b8181101562000442576200043660008262000403565b60018101905062000420565b5050565b601f82111562000491576200045b8162000305565b62000466846200031a565b8101602085101562000476578190505b6200048e62000485856200031a565b8301826200041f565b50505b505050565b600082821c905092915050565b6000620004b66000198460080262000496565b1980831691505092915050565b6000620004d18383620004a3565b9150826002028217905092915050565b620004ec8262000296565b67ffffffffffffffff811115620005085762000507620000ad565b5b620005148254620002d0565b6200052182828562000446565b600060209050601f83116001811462000559576000841562000544578287015190505b620005508582620004c3565b865550620005c0565b601f198416620005698662000305565b60005b8281101562000593578489015182556001820191506020850194506020810190506200056c565b86831015620005b35784890151620005af601f891682620004a3565b8355505b6001600288020188555050505b505050505050565b61190b80620005d86000396000f3fe6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb465146102ab578063b88d4fde146102d4578063c87b56dd146102f0578063e985e9c51461032d576100dd565b80636352211e1461020657806370a082311461024357806395d89b4114610280576100dd565b8063095ea7b3116100bb578063095ea7b31461018757806318160ddd146101a357806323b872dd146101ce57806342842e0e146101ea576100dd565b806301ffc9a7146100e257806306fdde031461011f578063081812fc1461014a575b600080fd5b3480156100ee57600080fd5b50610109600480360381019061010491906111e4565b61036a565b604051610116919061122c565b60405180910390f35b34801561012b57600080fd5b506101346103fc565b60405161014191906112d7565b60405180910390f35b34801561015657600080fd5b50610171600480360381019061016c919061132f565b61048e565b60405161017e919061139d565b60405180910390f35b6101a1600480360381019061019c91906113e4565b61050d565b005b3480156101af57600080fd5b506101b8610651565b6040516101c59190611433565b60405180910390f35b6101e860048036038101906101e3919061144e565b610668565b005b61020460048036038101906101ff919061144e565b61098a565b005b34801561021257600080fd5b5061022d6004803603810190610228919061132f565b6109aa565b60405161023a919061139d565b60405180910390f35b34801561024f57600080fd5b5061026a600480360381019061026591906114a1565b6109bc565b6040516102779190611433565b60405180910390f35b34801561028c57600080fd5b50610295610a74565b6040516102a291906112d7565b60405180910390f35b3480156102b757600080fd5b506102d260048036038101906102cd91906114fa565b610b06565b005b6102ee60048036038101906102e9919061166f565b610c11565b005b3480156102fc57600080fd5b506103176004803603810190610312919061132f565b610c84565b60405161032491906112d7565b60405180910390f35b34801561033957600080fd5b50610354600480360381019061034f91906116f2565b610d22565b604051610361919061122c565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c557506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f55750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461040b90611761565b80601f016020809104026020016040519081016040528092919081815260200182805461043790611761565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b5050505050905090565b600061049982610db6565b6104cf576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610518826109aa565b90508073ffffffffffffffffffffffffffffffffffffffff16610539610e15565b73ffffffffffffffffffffffffffffffffffffffff161461059c5761056581610560610e15565b610d22565b61059b576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600061065b610e1d565b6001546000540303905090565b600061067382610e22565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106da576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806106e684610eee565b915091506106fc81876106f7610e15565b610f15565b610748576107118661070c610e15565b610d22565b610747576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036107ae576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107bb8686866001610f59565b80156107c657600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001019190508190555061089485610870888887610f5f565b7c020000000000000000000000000000000000000000000000000000000017610f87565b600460008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084160361091a5760006001850190506000600460008381526020019081526020016000205403610918576000548114610917578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46109828686866001610fb2565b505050505050565b6109a583838360405180602001604052806000815250610c11565b505050565b60006109b582610e22565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a23576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610a8390611761565b80601f0160208091040260200160405190810160405280929190818152602001828054610aaf90611761565b8015610afc5780601f10610ad157610100808354040283529160200191610afc565b820191906000526020600020905b815481529060010190602001808311610adf57829003601f168201915b5050505050905090565b8060076000610b13610e15565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610bc0610e15565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c05919061122c565b60405180910390a35050565b610c1c848484610668565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610c7e57610c4784848484610fb8565b610c7d576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610c8f82610db6565b610cc5576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610ccf611108565b90506000815103610cef5760405180602001604052806000815250610d1a565b80610cf98461111f565b604051602001610d0a9291906117ce565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610dc1610e1d565b11158015610dd0575060005482105b8015610e0e575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610e31610e1d565b11610eb757600054811015610eb65760006004600083815260200190815260200160002054905060007c0100000000000000000000000000000000000000000000000000000000821603610eb4575b60008103610eaa576004600083600190039350838152602001908152602001600020549050610e80565b8092505050610ee9565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8610f7686868461116f565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610fde610e15565b8786866040518563ffffffff1660e01b81526004016110009493929190611847565b6020604051808303816000875af192505050801561103c57506040513d601f19601f8201168201806040525081019061103991906118a8565b60015b6110b5573d806000811461106c576040519150601f19603f3d011682016040523d82523d6000602084013e611071565b606091505b5060008151036110ad576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b60011561115a57600184039350600a81066030018453600a8104905080611138575b50828103602084039350808452505050919050565b60009392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6111c18161118c565b81146111cc57600080fd5b50565b6000813590506111de816111b8565b92915050565b6000602082840312156111fa576111f9611182565b5b6000611208848285016111cf565b91505092915050565b60008115159050919050565b61122681611211565b82525050565b6000602082019050611241600083018461121d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611281578082015181840152602081019050611266565b60008484015250505050565b6000601f19601f8301169050919050565b60006112a982611247565b6112b38185611252565b93506112c3818560208601611263565b6112cc8161128d565b840191505092915050565b600060208201905081810360008301526112f1818461129e565b905092915050565b6000819050919050565b61130c816112f9565b811461131757600080fd5b50565b60008135905061132981611303565b92915050565b60006020828403121561134557611344611182565b5b60006113538482850161131a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113878261135c565b9050919050565b6113978161137c565b82525050565b60006020820190506113b2600083018461138e565b92915050565b6113c18161137c565b81146113cc57600080fd5b50565b6000813590506113de816113b8565b92915050565b600080604083850312156113fb576113fa611182565b5b6000611409858286016113cf565b925050602061141a8582860161131a565b9150509250929050565b61142d816112f9565b82525050565b60006020820190506114486000830184611424565b92915050565b60008060006060848603121561146757611466611182565b5b6000611475868287016113cf565b9350506020611486868287016113cf565b92505060406114978682870161131a565b9150509250925092565b6000602082840312156114b7576114b6611182565b5b60006114c5848285016113cf565b91505092915050565b6114d781611211565b81146114e257600080fd5b50565b6000813590506114f4816114ce565b92915050565b6000806040838503121561151157611510611182565b5b600061151f858286016113cf565b9250506020611530858286016114e5565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61157c8261128d565b810181811067ffffffffffffffff8211171561159b5761159a611544565b5b80604052505050565b60006115ae611178565b90506115ba8282611573565b919050565b600067ffffffffffffffff8211156115da576115d9611544565b5b6115e38261128d565b9050602081019050919050565b82818337600083830152505050565b600061161261160d846115bf565b6115a4565b90508281526020810184848401111561162e5761162d61153f565b5b6116398482856115f0565b509392505050565b600082601f8301126116565761165561153a565b5b81356116668482602086016115ff565b91505092915050565b6000806000806080858703121561168957611688611182565b5b6000611697878288016113cf565b94505060206116a8878288016113cf565b93505060406116b98782880161131a565b925050606085013567ffffffffffffffff8111156116da576116d9611187565b5b6116e687828801611641565b91505092959194509250565b6000806040838503121561170957611708611182565b5b6000611717858286016113cf565b9250506020611728858286016113cf565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061177957607f821691505b60208210810361178c5761178b611732565b5b50919050565b600081905092915050565b60006117a882611247565b6117b28185611792565b93506117c2818560208601611263565b80840191505092915050565b60006117da828561179d565b91506117e6828461179d565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611819826117f2565b61182381856117fd565b9350611833818560208601611263565b61183c8161128d565b840191505092915050565b600060808201905061185c600083018761138e565b611869602083018661138e565b6118766040830185611424565b8181036060830152611888818461180e565b905095945050505050565b6000815190506118a2816111b8565b92915050565b6000602082840312156118be576118bd611182565b5b60006118cc84828501611893565b9150509291505056fea2646970667358221220250b9f6a55aac22329908ee2b4cb9e6e60c7102834a83ae6fd548593be11a50f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1EE3 CODESIZE SUB DUP1 PUSH3 0x1EE3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x211 JUMP JUMPDEST DUP2 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4E1 JUMP JUMPDEST POP DUP1 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4E1 JUMP JUMPDEST POP PUSH3 0x6B PUSH3 0x79 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x5C8 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xE7 DUP3 PUSH3 0x9C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x109 JUMPI PUSH3 0x108 PUSH3 0xAD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x11E PUSH3 0x7E JUMP JUMPDEST SWAP1 POP PUSH3 0x12C DUP3 DUP3 PUSH3 0xDC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x14F JUMPI PUSH3 0x14E PUSH3 0xAD JUMP JUMPDEST JUMPDEST PUSH3 0x15A DUP3 PUSH3 0x9C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x187 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x16A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1AA PUSH3 0x1A4 DUP5 PUSH3 0x131 JUMP JUMPDEST PUSH3 0x112 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1C9 JUMPI PUSH3 0x1C8 PUSH3 0x97 JUMP JUMPDEST JUMPDEST PUSH3 0x1D6 DUP5 DUP3 DUP6 PUSH3 0x167 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1F6 JUMPI PUSH3 0x1F5 PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x208 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x193 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x22B JUMPI PUSH3 0x22A PUSH3 0x88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x24C JUMPI PUSH3 0x24B PUSH3 0x8D JUMP JUMPDEST JUMPDEST PUSH3 0x25A DUP6 DUP3 DUP7 ADD PUSH3 0x1DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x27E JUMPI PUSH3 0x27D PUSH3 0x8D JUMP JUMPDEST JUMPDEST PUSH3 0x28C DUP6 DUP3 DUP7 ADD PUSH3 0x1DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2E9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2FF JUMPI PUSH3 0x2FE PUSH3 0x2A1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x369 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x32A JUMP JUMPDEST PUSH3 0x375 DUP7 DUP4 PUSH3 0x32A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3C2 PUSH3 0x3BC PUSH3 0x3B6 DUP5 PUSH3 0x38D JUMP JUMPDEST PUSH3 0x397 JUMP JUMPDEST PUSH3 0x38D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3DE DUP4 PUSH3 0x3A1 JUMP JUMPDEST PUSH3 0x3F6 PUSH3 0x3ED DUP3 PUSH3 0x3C9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x337 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x40D PUSH3 0x3FE JUMP JUMPDEST PUSH3 0x41A DUP2 DUP5 DUP5 PUSH3 0x3D3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x442 JUMPI PUSH3 0x436 PUSH1 0x0 DUP3 PUSH3 0x403 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x420 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x491 JUMPI PUSH3 0x45B DUP2 PUSH3 0x305 JUMP JUMPDEST PUSH3 0x466 DUP5 PUSH3 0x31A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x476 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x48E PUSH3 0x485 DUP6 PUSH3 0x31A JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x41F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x496 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4D1 DUP4 DUP4 PUSH3 0x4A3 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4EC DUP3 PUSH3 0x296 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x508 JUMPI PUSH3 0x507 PUSH3 0xAD JUMP JUMPDEST JUMPDEST PUSH3 0x514 DUP3 SLOAD PUSH3 0x2D0 JUMP JUMPDEST PUSH3 0x521 DUP3 DUP3 DUP6 PUSH3 0x446 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x559 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x544 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x550 DUP6 DUP3 PUSH3 0x4C3 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5C0 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x569 DUP7 PUSH3 0x305 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x593 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x56C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5B3 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5AF PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4A3 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x190B DUP1 PUSH3 0x5D8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x32D JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x280 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1EA JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x122C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x50D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH2 0x98A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH2 0xB06 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x166F JUMP JUMPDEST PUSH2 0xC11 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH2 0xC84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x16F2 JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x122C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C5 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F5 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x40B SWAP1 PUSH2 0x1761 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x437 SWAP1 PUSH2 0x1761 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x484 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x459 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x484 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x467 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP3 PUSH2 0xDB6 JUMP JUMPDEST PUSH2 0x4CF JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x518 DUP3 PUSH2 0x9AA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x539 PUSH2 0xE15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x59C JUMPI PUSH2 0x565 DUP2 PUSH2 0x560 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65B PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x673 DUP3 PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6E6 DUP5 PUSH2 0xEEE JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x6FC DUP2 DUP8 PUSH2 0x6F7 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0xF15 JUMP JUMPDEST PUSH2 0x748 JUMPI PUSH2 0x711 DUP7 PUSH2 0x70C PUSH2 0xE15 JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST PUSH2 0x747 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7AE JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7BB DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xF59 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x894 DUP6 PUSH2 0x870 DUP9 DUP9 DUP8 PUSH2 0xF5F JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xF87 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SUB PUSH2 0x91A JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x918 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x917 JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x982 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xFB2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9A5 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC11 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B5 DUP3 PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xA83 SWAP1 PUSH2 0x1761 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAAF SWAP1 PUSH2 0x1761 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAFC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAD1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAFC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xADF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xB13 PUSH2 0xE15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBC0 PUSH2 0xE15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC05 SWAP2 SWAP1 PUSH2 0x122C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC1C DUP5 DUP5 DUP5 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xC7E JUMPI PUSH2 0xC47 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0xC7D JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC8F DUP3 PUSH2 0xDB6 JUMP JUMPDEST PUSH2 0xCC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCCF PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xCEF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD1A JUMP JUMPDEST DUP1 PUSH2 0xCF9 DUP5 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD0A SWAP3 SWAP2 SWAP1 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xDC1 PUSH2 0xE1D JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xDD0 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xE0E JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH2 0xE31 PUSH2 0xE1D JUMP JUMPDEST GT PUSH2 0xEB7 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xEB6 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB PUSH2 0xEB4 JUMPI JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0xEAA JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xE80 JUMP JUMPDEST DUP1 SWAP3 POP POP POP PUSH2 0xEE9 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xF76 DUP7 DUP7 DUP5 PUSH2 0x116F JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xFDE PUSH2 0xE15 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1000 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1847 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x103C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1039 SWAP2 SWAP1 PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10B5 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x106C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x10AD JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH1 0x0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x115A JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x1138 JUMPI JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C1 DUP2 PUSH2 0x118C JUMP JUMPDEST DUP2 EQ PUSH2 0x11CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11DE DUP2 PUSH2 0x11B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FA JUMPI PUSH2 0x11F9 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1208 DUP5 DUP3 DUP6 ADD PUSH2 0x11CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1226 DUP2 PUSH2 0x1211 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1241 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x121D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1281 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A9 DUP3 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0x12B3 DUP2 DUP6 PUSH2 0x1252 JUMP JUMPDEST SWAP4 POP PUSH2 0x12C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1263 JUMP JUMPDEST PUSH2 0x12CC DUP2 PUSH2 0x128D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12F1 DUP2 DUP5 PUSH2 0x129E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x130C DUP2 PUSH2 0x12F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1329 DUP2 PUSH2 0x1303 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1345 JUMPI PUSH2 0x1344 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1353 DUP5 DUP3 DUP6 ADD PUSH2 0x131A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1387 DUP3 PUSH2 0x135C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1397 DUP2 PUSH2 0x137C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x138E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13C1 DUP2 PUSH2 0x137C JUMP JUMPDEST DUP2 EQ PUSH2 0x13CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13DE DUP2 PUSH2 0x13B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13FB JUMPI PUSH2 0x13FA PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1409 DUP6 DUP3 DUP7 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x141A DUP6 DUP3 DUP7 ADD PUSH2 0x131A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x142D DUP2 PUSH2 0x12F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1448 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1424 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1467 JUMPI PUSH2 0x1466 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1475 DUP7 DUP3 DUP8 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1486 DUP7 DUP3 DUP8 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1497 DUP7 DUP3 DUP8 ADD PUSH2 0x131A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B7 JUMPI PUSH2 0x14B6 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14C5 DUP5 DUP3 DUP6 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14D7 DUP2 PUSH2 0x1211 JUMP JUMPDEST DUP2 EQ PUSH2 0x14E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F4 DUP2 PUSH2 0x14CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x151F DUP6 DUP3 DUP7 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1530 DUP6 DUP3 DUP7 ADD PUSH2 0x14E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x157C DUP3 PUSH2 0x128D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x159B JUMPI PUSH2 0x159A PUSH2 0x1544 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15AE PUSH2 0x1178 JUMP JUMPDEST SWAP1 POP PUSH2 0x15BA DUP3 DUP3 PUSH2 0x1573 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15DA JUMPI PUSH2 0x15D9 PUSH2 0x1544 JUMP JUMPDEST JUMPDEST PUSH2 0x15E3 DUP3 PUSH2 0x128D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1612 PUSH2 0x160D DUP5 PUSH2 0x15BF JUMP JUMPDEST PUSH2 0x15A4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x162E JUMPI PUSH2 0x162D PUSH2 0x153F JUMP JUMPDEST JUMPDEST PUSH2 0x1639 DUP5 DUP3 DUP6 PUSH2 0x15F0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1656 JUMPI PUSH2 0x1655 PUSH2 0x153A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1666 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1689 JUMPI PUSH2 0x1688 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1697 DUP8 DUP3 DUP9 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x16A8 DUP8 DUP3 DUP9 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x16B9 DUP8 DUP3 DUP9 ADD PUSH2 0x131A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16DA JUMPI PUSH2 0x16D9 PUSH2 0x1187 JUMP JUMPDEST JUMPDEST PUSH2 0x16E6 DUP8 DUP3 DUP9 ADD PUSH2 0x1641 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1709 JUMPI PUSH2 0x1708 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1717 DUP6 DUP3 DUP7 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1728 DUP6 DUP3 DUP7 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1779 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x178C JUMPI PUSH2 0x178B PUSH2 0x1732 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A8 DUP3 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0x17B2 DUP2 DUP6 PUSH2 0x1792 JUMP JUMPDEST SWAP4 POP PUSH2 0x17C2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1263 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DA DUP3 DUP6 PUSH2 0x179D JUMP JUMPDEST SWAP2 POP PUSH2 0x17E6 DUP3 DUP5 PUSH2 0x179D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1819 DUP3 PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x1823 DUP2 DUP6 PUSH2 0x17FD JUMP JUMPDEST SWAP4 POP PUSH2 0x1833 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1263 JUMP JUMPDEST PUSH2 0x183C DUP2 PUSH2 0x128D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x185C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x138E JUMP JUMPDEST PUSH2 0x1869 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x138E JUMP JUMPDEST PUSH2 0x1876 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1424 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1888 DUP2 DUP5 PUSH2 0x180E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x18A2 DUP2 PUSH2 0x11B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18BE JUMPI PUSH2 0x18BD PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18CC DUP5 DUP3 DUP6 ADD PUSH2 0x1893 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 SIGNEXTEND SWAP16 PUSH11 0x55AAC22329908EE2B4CB9E PUSH15 0x60C7102834A83AE6FD548593BE11A5 0xF PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "930:41507:1:-:0;;;5085:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5160:5;5152;:13;;;;;;:::i;:::-;;5186:7;5176;:17;;;;;;:::i;:::-;;5220:15;:13;;;:15;;:::i;:::-;5204:13;:31;;;;5085:158;;930:41507;;5579:92;5635:7;5579:92;:::o;7:75:2:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;930:41507:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1213": {
									"entryPoint": 4018,
									"id": 1213,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_610": {
									"entryPoint": 4360,
									"id": 610,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1200": {
									"entryPoint": 3929,
									"id": 1200,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1268": {
									"entryPoint": 4024,
									"id": 1268,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_952": {
									"entryPoint": 3510,
									"id": 952,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1774": {
									"entryPoint": 4463,
									"id": 1774,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_985": {
									"entryPoint": 3822,
									"id": 985,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_966": {
									"entryPoint": 3861,
									"id": 966,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_1817": {
									"entryPoint": 3605,
									"id": 1817,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_1807": {
									"entryPoint": 3935,
									"id": 1807,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_804": {
									"entryPoint": 3975,
									"id": 804,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_738": {
									"entryPoint": 3618,
									"id": 738,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_352": {
									"entryPoint": 3613,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_1827": {
									"entryPoint": 4383,
									"id": 1827,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_859": {
									"entryPoint": 1293,
									"id": 859,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_425": {
									"entryPoint": 2492,
									"id": 425,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_882": {
									"entryPoint": 1166,
									"id": 882,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_926": {
									"entryPoint": 3362,
									"id": 926,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_548": {
									"entryPoint": 1020,
									"id": 548,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_630": {
									"entryPoint": 2474,
									"id": 630,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1149": {
									"entryPoint": 2442,
									"id": 1149,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1187": {
									"entryPoint": 3089,
									"id": 1187,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_908": {
									"entryPoint": 2822,
									"id": 908,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_538": {
									"entryPoint": 874,
									"id": 538,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_558": {
									"entryPoint": 2676,
									"id": 558,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_601": {
									"entryPoint": 3204,
									"id": 601,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_377": {
									"entryPoint": 1617,
									"id": 377,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1130": {
									"entryPoint": 1640,
									"id": 1130,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5631,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 6291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6094,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6215,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5616,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4707,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5938,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5444,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5434,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5439,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4487,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4482,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13776:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:2",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:2",
														"type": ""
													}
												],
												"src": "334:149:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:2"
															},
															"nodeType": "YulIf",
															"src": "541:62:2"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:2",
														"type": ""
													}
												],
												"src": "489:120:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:2"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:2",
														"type": ""
													}
												],
												"src": "615:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:2"
															},
															"nodeType": "YulIf",
															"src": "833:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:2",
														"type": ""
													}
												],
												"src": "758:327:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:2",
														"type": ""
													}
												],
												"src": "1091:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:2",
														"type": ""
													}
												],
												"src": "1187:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:2",
														"type": ""
													}
												],
												"src": "1302:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:2",
														"type": ""
													}
												],
												"src": "1518:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:2",
														"type": ""
													}
												],
												"src": "1623:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:2",
																"statements": []
															},
															"src": "1889:113:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:2"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:2",
														"type": ""
													}
												],
												"src": "1798:246:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:2",
														"type": ""
													}
												],
												"src": "2050:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:2",
														"type": ""
													}
												],
												"src": "2158:377:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:2",
														"type": ""
													}
												],
												"src": "2541:313:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:2",
														"type": ""
													}
												],
												"src": "2860:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:2"
															},
															"nodeType": "YulIf",
															"src": "2996:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:2",
														"type": ""
													}
												],
												"src": "2943:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:2",
														"type": ""
													}
												],
												"src": "3071:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:2"
															},
															"nodeType": "YulIf",
															"src": "3292:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:2",
														"type": ""
													}
												],
												"src": "3216:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:2",
														"type": ""
													}
												],
												"src": "3551:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:2",
														"type": ""
													}
												],
												"src": "3683:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:2",
														"type": ""
													}
												],
												"src": "3785:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:2",
														"type": ""
													}
												],
												"src": "3909:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:2"
															},
															"nodeType": "YulIf",
															"src": "4190:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:2",
														"type": ""
													}
												],
												"src": "4137:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:2",
														"type": ""
													}
												],
												"src": "4265:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:2"
															},
															"nodeType": "YulIf",
															"src": "4503:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:2",
														"type": ""
													}
												],
												"src": "4410:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4955:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4972:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4995:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4977:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4977:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4965:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4943:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4950:3:2",
														"type": ""
													}
												],
												"src": "4890:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5112:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5122:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5134:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5145:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5130:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5122:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5202:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5215:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5226:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5211:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5158:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5158:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5084:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5096:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5107:4:2",
														"type": ""
													}
												],
												"src": "5014:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5342:519:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5388:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5390:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5390:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5390:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5363:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5372:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5359:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5359:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5384:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5355:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5355:32:2"
															},
															"nodeType": "YulIf",
															"src": "5352:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "5481:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5496:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5510:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5500:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5525:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5560:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5571:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5556:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5556:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5580:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5535:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5535:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5525:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5608:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5623:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5637:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5627:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5653:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5688:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5699:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5684:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5684:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5708:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5663:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5653:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5736:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5751:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5755:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5781:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5816:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5827:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5812:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5812:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5836:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5791:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5791:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5781:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5296:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5307:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5319:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5327:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5335:6:2",
														"type": ""
													}
												],
												"src": "5242:619:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5933:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5979:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5981:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5981:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5981:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5954:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5963:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5950:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5950:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5975:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:32:2"
															},
															"nodeType": "YulIf",
															"src": "5943:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "6072:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6087:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6101:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6091:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6116:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6151:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6162:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6147:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6147:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6171:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6126:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6126:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6116:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5903:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5914:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5926:6:2",
														"type": ""
													}
												],
												"src": "5867:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6242:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6296:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:40:2"
															},
															"nodeType": "YulIf",
															"src": "6252:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6235:5:2",
														"type": ""
													}
												],
												"src": "6202:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6373:84:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6383:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6351:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6359:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6367:5:2",
														"type": ""
													}
												],
												"src": "6324:133:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:388:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6589:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:32:2"
															},
															"nodeType": "YulIf",
															"src": "6553:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "6682:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6726:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6809:115:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6854:60:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6516:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6528:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6536:6:2",
														"type": ""
													}
												],
												"src": "6463:468:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:2"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:2"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7211:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7412:238:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:2",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:40:2"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7591:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:2"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:2"
															},
															"nodeType": "YulIf",
															"src": "7525:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:2",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:2"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7398:6:2",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7406:4:2",
														"type": ""
													}
												],
												"src": "7369:281:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:88:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:30:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:20:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:2"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:2"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:2"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7681:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7690:6:2",
														"type": ""
													}
												],
												"src": "7656:129:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:241:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7962:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:30:2"
															},
															"nodeType": "YulIf",
															"src": "7928:56:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7994:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:2"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:29:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8068:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:15:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:2"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7841:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7852:4:2",
														"type": ""
													}
												],
												"src": "7791:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8168:82:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:2"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:2"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:2"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8150:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8155:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8160:6:2",
														"type": ""
													}
												],
												"src": "8104:146:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:340:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8349:74:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:2"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:2"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:65:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:16:2"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8527:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:25:2"
															},
															"nodeType": "YulIf",
															"src": "8498:112:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:2"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:54:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:2"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8312:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8317:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8325:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8333:5:2",
														"type": ""
													}
												],
												"src": "8256:423:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:277:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8808:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:2",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:2"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:35:2"
															},
															"nodeType": "YulIf",
															"src": "8769:122:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:20:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8943:87:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:78:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8737:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8753:5:2",
														"type": ""
													}
												],
												"src": "8698:338:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:817:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9215:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:33:2"
															},
															"nodeType": "YulIf",
															"src": "9178:120:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "9308:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9352:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9435:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9480:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9563:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9608:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9691:287:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:2",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:2"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9799:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "9765:117:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9896:72:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:2"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9114:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9125:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9137:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9145:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9153:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9161:6:2",
														"type": ""
													}
												],
												"src": "9042:943:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10074:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10120:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10122:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10122:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10095:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10091:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10091:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10116:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10087:32:2"
															},
															"nodeType": "YulIf",
															"src": "10084:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "10213:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10228:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10242:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10232:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10257:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10292:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10303:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10288:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10312:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10267:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10267:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10257:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10340:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10355:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10359:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10385:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10395:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10395:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10385:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10036:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10047:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10059:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10067:6:2",
														"type": ""
													}
												],
												"src": "9991:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10499:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10519:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10509:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10509:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10613:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10616:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10606:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10606:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10606:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10637:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10640:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10630:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10630:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10471:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10708:269:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10718:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10732:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10738:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10728:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10728:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10749:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10779:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10785:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10775:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10753:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10826:51:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10840:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10854:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10862:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10850:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10850:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10806:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:26:2"
															},
															"nodeType": "YulIf",
															"src": "10796:81:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10929:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10943:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10943:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10943:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10893:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10916:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10924:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10913:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10913:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10890:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10890:38:2"
															},
															"nodeType": "YulIf",
															"src": "10887:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10692:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10701:6:2",
														"type": ""
													}
												],
												"src": "10657:320:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11097:34:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11107:18:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11122:3:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11107:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11069:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11074:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11085:11:2",
														"type": ""
													}
												],
												"src": "10983:148:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11247:280:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11257:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11304:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11271:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11271:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11261:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11319:96:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11403:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11408:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11326:76:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11326:89:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11319:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11463:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11470:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11459:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11459:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11477:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11482:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11424:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11424:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11424:65:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11498:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11509:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11514:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11505:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11505:16:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11498:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11228:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11235:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11243:3:2",
														"type": ""
													}
												],
												"src": "11137:390:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11717:251:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11728:102:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11817:6:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11826:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11735:81:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11735:95:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11728:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11840:102:2",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11929:6:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11938:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11847:81:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11847:95:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11840:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11952:10:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11959:3:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11952:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11688:3:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11694:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11702:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11713:3:2",
														"type": ""
													}
												],
												"src": "11533:435:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12032:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12043:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12059:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12053:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12053:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12043:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12015:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12025:6:2",
														"type": ""
													}
												],
												"src": "11974:98:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12173:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12190:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12195:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12183:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12183:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12183:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12211:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12230:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12235:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12226:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12226:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12211:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12145:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12150:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12161:11:2",
														"type": ""
													}
												],
												"src": "12078:168:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12342:283:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12352:52:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12398:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12366:31:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12366:38:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12356:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12413:77:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12478:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12483:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12420:57:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12420:70:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12413:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12538:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12545:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12534:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12534:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12552:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12557:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "12499:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12499:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12499:65:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12573:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12584:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12611:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12589:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12589:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12580:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12580:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12573:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12323:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12330:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12338:3:2",
														"type": ""
													}
												],
												"src": "12252:373:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12831:440:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12841:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12853:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12864:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12849:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12849:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12841:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12922:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12935:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12946:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12931:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12931:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12878:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12878:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12878:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13003:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13016:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13027:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13012:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13012:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12959:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12959:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12959:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13085:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13098:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13109:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13094:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13094:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13041:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13041:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13041:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13134:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13145:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13130:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13130:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13154:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13160:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13150:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13150:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13123:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13123:48:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13123:48:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13180:84:2",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13250:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13259:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13188:61:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13188:76:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13180:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12779:9:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12791:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12799:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12807:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12815:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12826:4:2",
														"type": ""
													}
												],
												"src": "12631:640:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13339:79:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13349:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13364:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13358:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13358:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13349:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13406:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "13380:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13380:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13380:32:2"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13317:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13325:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13333:5:2",
														"type": ""
													}
												],
												"src": "13277:141:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13500:273:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13546:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13548:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13548:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13548:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13521:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13530:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13517:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13517:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13542:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13513:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13513:32:2"
															},
															"nodeType": "YulIf",
															"src": "13510:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "13639:127:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13654:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13668:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13658:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13683:73:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13728:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13739:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13724:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13724:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13748:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13693:30:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13693:63:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13683:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13470:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13481:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13493:6:2",
														"type": ""
													}
												],
												"src": "13424:349:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb465146102ab578063b88d4fde146102d4578063c87b56dd146102f0578063e985e9c51461032d576100dd565b80636352211e1461020657806370a082311461024357806395d89b4114610280576100dd565b8063095ea7b3116100bb578063095ea7b31461018757806318160ddd146101a357806323b872dd146101ce57806342842e0e146101ea576100dd565b806301ffc9a7146100e257806306fdde031461011f578063081812fc1461014a575b600080fd5b3480156100ee57600080fd5b50610109600480360381019061010491906111e4565b61036a565b604051610116919061122c565b60405180910390f35b34801561012b57600080fd5b506101346103fc565b60405161014191906112d7565b60405180910390f35b34801561015657600080fd5b50610171600480360381019061016c919061132f565b61048e565b60405161017e919061139d565b60405180910390f35b6101a1600480360381019061019c91906113e4565b61050d565b005b3480156101af57600080fd5b506101b8610651565b6040516101c59190611433565b60405180910390f35b6101e860048036038101906101e3919061144e565b610668565b005b61020460048036038101906101ff919061144e565b61098a565b005b34801561021257600080fd5b5061022d6004803603810190610228919061132f565b6109aa565b60405161023a919061139d565b60405180910390f35b34801561024f57600080fd5b5061026a600480360381019061026591906114a1565b6109bc565b6040516102779190611433565b60405180910390f35b34801561028c57600080fd5b50610295610a74565b6040516102a291906112d7565b60405180910390f35b3480156102b757600080fd5b506102d260048036038101906102cd91906114fa565b610b06565b005b6102ee60048036038101906102e9919061166f565b610c11565b005b3480156102fc57600080fd5b506103176004803603810190610312919061132f565b610c84565b60405161032491906112d7565b60405180910390f35b34801561033957600080fd5b50610354600480360381019061034f91906116f2565b610d22565b604051610361919061122c565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c557506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f55750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461040b90611761565b80601f016020809104026020016040519081016040528092919081815260200182805461043790611761565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b5050505050905090565b600061049982610db6565b6104cf576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610518826109aa565b90508073ffffffffffffffffffffffffffffffffffffffff16610539610e15565b73ffffffffffffffffffffffffffffffffffffffff161461059c5761056581610560610e15565b610d22565b61059b576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600061065b610e1d565b6001546000540303905090565b600061067382610e22565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106da576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806106e684610eee565b915091506106fc81876106f7610e15565b610f15565b610748576107118661070c610e15565b610d22565b610747576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036107ae576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107bb8686866001610f59565b80156107c657600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001019190508190555061089485610870888887610f5f565b7c020000000000000000000000000000000000000000000000000000000017610f87565b600460008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084160361091a5760006001850190506000600460008381526020019081526020016000205403610918576000548114610917578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46109828686866001610fb2565b505050505050565b6109a583838360405180602001604052806000815250610c11565b505050565b60006109b582610e22565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a23576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610a8390611761565b80601f0160208091040260200160405190810160405280929190818152602001828054610aaf90611761565b8015610afc5780601f10610ad157610100808354040283529160200191610afc565b820191906000526020600020905b815481529060010190602001808311610adf57829003601f168201915b5050505050905090565b8060076000610b13610e15565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610bc0610e15565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c05919061122c565b60405180910390a35050565b610c1c848484610668565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610c7e57610c4784848484610fb8565b610c7d576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610c8f82610db6565b610cc5576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610ccf611108565b90506000815103610cef5760405180602001604052806000815250610d1a565b80610cf98461111f565b604051602001610d0a9291906117ce565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610dc1610e1d565b11158015610dd0575060005482105b8015610e0e575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610e31610e1d565b11610eb757600054811015610eb65760006004600083815260200190815260200160002054905060007c0100000000000000000000000000000000000000000000000000000000821603610eb4575b60008103610eaa576004600083600190039350838152602001908152602001600020549050610e80565b8092505050610ee9565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8610f7686868461116f565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610fde610e15565b8786866040518563ffffffff1660e01b81526004016110009493929190611847565b6020604051808303816000875af192505050801561103c57506040513d601f19601f8201168201806040525081019061103991906118a8565b60015b6110b5573d806000811461106c576040519150601f19603f3d011682016040523d82523d6000602084013e611071565b606091505b5060008151036110ad576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b60011561115a57600184039350600a81066030018453600a8104905080611138575b50828103602084039350808452505050919050565b60009392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6111c18161118c565b81146111cc57600080fd5b50565b6000813590506111de816111b8565b92915050565b6000602082840312156111fa576111f9611182565b5b6000611208848285016111cf565b91505092915050565b60008115159050919050565b61122681611211565b82525050565b6000602082019050611241600083018461121d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611281578082015181840152602081019050611266565b60008484015250505050565b6000601f19601f8301169050919050565b60006112a982611247565b6112b38185611252565b93506112c3818560208601611263565b6112cc8161128d565b840191505092915050565b600060208201905081810360008301526112f1818461129e565b905092915050565b6000819050919050565b61130c816112f9565b811461131757600080fd5b50565b60008135905061132981611303565b92915050565b60006020828403121561134557611344611182565b5b60006113538482850161131a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113878261135c565b9050919050565b6113978161137c565b82525050565b60006020820190506113b2600083018461138e565b92915050565b6113c18161137c565b81146113cc57600080fd5b50565b6000813590506113de816113b8565b92915050565b600080604083850312156113fb576113fa611182565b5b6000611409858286016113cf565b925050602061141a8582860161131a565b9150509250929050565b61142d816112f9565b82525050565b60006020820190506114486000830184611424565b92915050565b60008060006060848603121561146757611466611182565b5b6000611475868287016113cf565b9350506020611486868287016113cf565b92505060406114978682870161131a565b9150509250925092565b6000602082840312156114b7576114b6611182565b5b60006114c5848285016113cf565b91505092915050565b6114d781611211565b81146114e257600080fd5b50565b6000813590506114f4816114ce565b92915050565b6000806040838503121561151157611510611182565b5b600061151f858286016113cf565b9250506020611530858286016114e5565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61157c8261128d565b810181811067ffffffffffffffff8211171561159b5761159a611544565b5b80604052505050565b60006115ae611178565b90506115ba8282611573565b919050565b600067ffffffffffffffff8211156115da576115d9611544565b5b6115e38261128d565b9050602081019050919050565b82818337600083830152505050565b600061161261160d846115bf565b6115a4565b90508281526020810184848401111561162e5761162d61153f565b5b6116398482856115f0565b509392505050565b600082601f8301126116565761165561153a565b5b81356116668482602086016115ff565b91505092915050565b6000806000806080858703121561168957611688611182565b5b6000611697878288016113cf565b94505060206116a8878288016113cf565b93505060406116b98782880161131a565b925050606085013567ffffffffffffffff8111156116da576116d9611187565b5b6116e687828801611641565b91505092959194509250565b6000806040838503121561170957611708611182565b5b6000611717858286016113cf565b9250506020611728858286016113cf565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061177957607f821691505b60208210810361178c5761178b611732565b5b50919050565b600081905092915050565b60006117a882611247565b6117b28185611792565b93506117c2818560208601611263565b80840191505092915050565b60006117da828561179d565b91506117e6828461179d565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611819826117f2565b61182381856117fd565b9350611833818560208601611263565b61183c8161128d565b840191505092915050565b600060808201905061185c600083018761138e565b611869602083018661138e565b6118766040830185611424565b8181036060830152611888818461180e565b905095945050505050565b6000815190506118a2816111b8565b92915050565b6000602082840312156118be576118bd611182565b5b60006118cc84828501611893565b9150509291505056fea2646970667358221220250b9f6a55aac22329908ee2b4cb9e6e60c7102834a83ae6fd548593be11a50f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x32D JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x280 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1EA JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x122C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x50D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH2 0x98A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH2 0xB06 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x166F JUMP JUMPDEST PUSH2 0xC11 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH2 0xC84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x16F2 JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x122C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C5 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F5 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x40B SWAP1 PUSH2 0x1761 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x437 SWAP1 PUSH2 0x1761 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x484 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x459 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x484 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x467 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP3 PUSH2 0xDB6 JUMP JUMPDEST PUSH2 0x4CF JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x518 DUP3 PUSH2 0x9AA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x539 PUSH2 0xE15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x59C JUMPI PUSH2 0x565 DUP2 PUSH2 0x560 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65B PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x673 DUP3 PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6E6 DUP5 PUSH2 0xEEE JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x6FC DUP2 DUP8 PUSH2 0x6F7 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0xF15 JUMP JUMPDEST PUSH2 0x748 JUMPI PUSH2 0x711 DUP7 PUSH2 0x70C PUSH2 0xE15 JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST PUSH2 0x747 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7AE JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7BB DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xF59 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x894 DUP6 PUSH2 0x870 DUP9 DUP9 DUP8 PUSH2 0xF5F JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xF87 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SUB PUSH2 0x91A JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x918 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x917 JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x982 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xFB2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9A5 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC11 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B5 DUP3 PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xA83 SWAP1 PUSH2 0x1761 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAAF SWAP1 PUSH2 0x1761 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAFC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAD1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAFC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xADF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xB13 PUSH2 0xE15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBC0 PUSH2 0xE15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC05 SWAP2 SWAP1 PUSH2 0x122C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC1C DUP5 DUP5 DUP5 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xC7E JUMPI PUSH2 0xC47 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0xC7D JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC8F DUP3 PUSH2 0xDB6 JUMP JUMPDEST PUSH2 0xCC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCCF PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xCEF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD1A JUMP JUMPDEST DUP1 PUSH2 0xCF9 DUP5 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD0A SWAP3 SWAP2 SWAP1 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xDC1 PUSH2 0xE1D JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xDD0 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xE0E JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH2 0xE31 PUSH2 0xE1D JUMP JUMPDEST GT PUSH2 0xEB7 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xEB6 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB PUSH2 0xEB4 JUMPI JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0xEAA JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xE80 JUMP JUMPDEST DUP1 SWAP3 POP POP POP PUSH2 0xEE9 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xF76 DUP7 DUP7 DUP5 PUSH2 0x116F JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xFDE PUSH2 0xE15 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1000 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1847 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x103C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1039 SWAP2 SWAP1 PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10B5 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x106C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x10AD JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH1 0x0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x115A JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x1138 JUMPI JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C1 DUP2 PUSH2 0x118C JUMP JUMPDEST DUP2 EQ PUSH2 0x11CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11DE DUP2 PUSH2 0x11B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FA JUMPI PUSH2 0x11F9 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1208 DUP5 DUP3 DUP6 ADD PUSH2 0x11CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1226 DUP2 PUSH2 0x1211 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1241 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x121D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1281 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A9 DUP3 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0x12B3 DUP2 DUP6 PUSH2 0x1252 JUMP JUMPDEST SWAP4 POP PUSH2 0x12C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1263 JUMP JUMPDEST PUSH2 0x12CC DUP2 PUSH2 0x128D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12F1 DUP2 DUP5 PUSH2 0x129E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x130C DUP2 PUSH2 0x12F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1329 DUP2 PUSH2 0x1303 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1345 JUMPI PUSH2 0x1344 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1353 DUP5 DUP3 DUP6 ADD PUSH2 0x131A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1387 DUP3 PUSH2 0x135C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1397 DUP2 PUSH2 0x137C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x138E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13C1 DUP2 PUSH2 0x137C JUMP JUMPDEST DUP2 EQ PUSH2 0x13CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13DE DUP2 PUSH2 0x13B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13FB JUMPI PUSH2 0x13FA PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1409 DUP6 DUP3 DUP7 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x141A DUP6 DUP3 DUP7 ADD PUSH2 0x131A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x142D DUP2 PUSH2 0x12F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1448 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1424 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1467 JUMPI PUSH2 0x1466 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1475 DUP7 DUP3 DUP8 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1486 DUP7 DUP3 DUP8 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1497 DUP7 DUP3 DUP8 ADD PUSH2 0x131A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B7 JUMPI PUSH2 0x14B6 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14C5 DUP5 DUP3 DUP6 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14D7 DUP2 PUSH2 0x1211 JUMP JUMPDEST DUP2 EQ PUSH2 0x14E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F4 DUP2 PUSH2 0x14CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x151F DUP6 DUP3 DUP7 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1530 DUP6 DUP3 DUP7 ADD PUSH2 0x14E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x157C DUP3 PUSH2 0x128D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x159B JUMPI PUSH2 0x159A PUSH2 0x1544 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15AE PUSH2 0x1178 JUMP JUMPDEST SWAP1 POP PUSH2 0x15BA DUP3 DUP3 PUSH2 0x1573 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15DA JUMPI PUSH2 0x15D9 PUSH2 0x1544 JUMP JUMPDEST JUMPDEST PUSH2 0x15E3 DUP3 PUSH2 0x128D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1612 PUSH2 0x160D DUP5 PUSH2 0x15BF JUMP JUMPDEST PUSH2 0x15A4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x162E JUMPI PUSH2 0x162D PUSH2 0x153F JUMP JUMPDEST JUMPDEST PUSH2 0x1639 DUP5 DUP3 DUP6 PUSH2 0x15F0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1656 JUMPI PUSH2 0x1655 PUSH2 0x153A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1666 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1689 JUMPI PUSH2 0x1688 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1697 DUP8 DUP3 DUP9 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x16A8 DUP8 DUP3 DUP9 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x16B9 DUP8 DUP3 DUP9 ADD PUSH2 0x131A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16DA JUMPI PUSH2 0x16D9 PUSH2 0x1187 JUMP JUMPDEST JUMPDEST PUSH2 0x16E6 DUP8 DUP3 DUP9 ADD PUSH2 0x1641 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1709 JUMPI PUSH2 0x1708 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1717 DUP6 DUP3 DUP7 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1728 DUP6 DUP3 DUP7 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1779 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x178C JUMPI PUSH2 0x178B PUSH2 0x1732 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A8 DUP3 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0x17B2 DUP2 DUP6 PUSH2 0x1792 JUMP JUMPDEST SWAP4 POP PUSH2 0x17C2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1263 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DA DUP3 DUP6 PUSH2 0x179D JUMP JUMPDEST SWAP2 POP PUSH2 0x17E6 DUP3 DUP5 PUSH2 0x179D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1819 DUP3 PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x1823 DUP2 DUP6 PUSH2 0x17FD JUMP JUMPDEST SWAP4 POP PUSH2 0x1833 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1263 JUMP JUMPDEST PUSH2 0x183C DUP2 PUSH2 0x128D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x185C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x138E JUMP JUMPDEST PUSH2 0x1869 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x138E JUMP JUMPDEST PUSH2 0x1876 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1424 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1888 DUP2 DUP5 PUSH2 0x180E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x18A2 DUP2 PUSH2 0x11B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18BE JUMPI PUSH2 0x18BD PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18CC DUP5 DUP3 DUP6 ADD PUSH2 0x1893 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 SIGNEXTEND SWAP16 PUSH11 0x55AAC22329908EE2B4CB9E PUSH15 0x60C7102834A83AE6FD548593BE11A5 0xF PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "930:41507:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9410:639;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10312:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16803:218;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16236:408;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6063:323;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20442:2825;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23363:193;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11705:152;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7247:233;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10488:104;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17361:234;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24154:407;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10698:318;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17752:164;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9410:639;9495:4;9834:10;9819:25;;:11;:25;;;;:102;;;;9911:10;9896:25;;:11;:25;;;;9819:102;:179;;;;9988:10;9973:25;;:11;:25;;;;9819:179;9799:199;;9410:639;;;:::o;10312:100::-;10366:13;10399:5;10392:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10312:100;:::o;16803:218::-;16879:7;16904:16;16912:7;16904;:16::i;:::-;16899:64;;16929:34;;;;;;;;;;;;;;16899:64;16983:15;:24;16999:7;16983:24;;;;;;;;;;;:30;;;;;;;;;;;;16976:37;;16803:218;;;:::o;16236:408::-;16325:13;16341:16;16349:7;16341;:16::i;:::-;16325:32;;16397:5;16374:28;;:19;:17;:19::i;:::-;:28;;;16370:175;;16422:44;16439:5;16446:19;:17;:19::i;:::-;16422:16;:44::i;:::-;16417:128;;16494:35;;;;;;;;;;;;;;16417:128;16370:175;16590:2;16557:15;:24;16573:7;16557:24;;;;;;;;;;;:30;;;:35;;;;;;;;;;;;;;;;;;16628:7;16624:2;16608:28;;16617:5;16608:28;;;;;;;;;;;;16314:330;16236:408;;:::o;6063:323::-;6124:7;6352:15;:13;:15::i;:::-;6337:12;;6321:13;;:28;:46;6314:53;;6063:323;:::o;20442:2825::-;20584:27;20614;20633:7;20614:18;:27::i;:::-;20584:57;;20699:4;20658:45;;20674:19;20658:45;;;20654:86;;20712:28;;;;;;;;;;;;;;20654:86;20754:27;20783:23;20810:35;20837:7;20810:26;:35::i;:::-;20753:92;;;;20945:68;20970:15;20987:4;20993:19;:17;:19::i;:::-;20945:24;:68::i;:::-;20940:180;;21033:43;21050:4;21056:19;:17;:19::i;:::-;21033:16;:43::i;:::-;21028:92;;21085:35;;;;;;;;;;;;;;21028:92;20940:180;21151:1;21137:16;;:2;:16;;;21133:52;;21162:23;;;;;;;;;;;;;;21133:52;21198:43;21220:4;21226:2;21230:7;21239:1;21198:21;:43::i;:::-;21334:15;21331:160;;;21474:1;21453:19;21446:30;21331:160;21871:18;:24;21890:4;21871:24;;;;;;;;;;;;;;;;21869:26;;;;;;;;;;;;21940:18;:22;21959:2;21940:22;;;;;;;;;;;;;;;;21938:24;;;;;;;;;;;22262:146;22299:2;22348:45;22363:4;22369:2;22373:19;22348:14;:45::i;:::-;2462:8;22320:73;22262:18;:146::i;:::-;22233:17;:26;22251:7;22233:26;;;;;;;;;;;:175;;;;22579:1;2462:8;22528:19;:47;:52;22524:627;;22601:19;22633:1;22623:7;:11;22601:33;;22790:1;22756:17;:30;22774:11;22756:30;;;;;;;;;;;;:35;22752:384;;22894:13;;22879:11;:28;22875:242;;23074:19;23041:17;:30;23059:11;23041:30;;;;;;;;;;;:52;;;;22875:242;22752:384;22582:569;22524:627;23198:7;23194:2;23179:27;;23188:4;23179:27;;;;;;;;;;;;23217:42;23238:4;23244:2;23248:7;23257:1;23217:20;:42::i;:::-;20573:2694;;;20442:2825;;;:::o;23363:193::-;23509:39;23526:4;23532:2;23536:7;23509:39;;;;;;;;;;;;:16;:39::i;:::-;23363:193;;;:::o;11705:152::-;11777:7;11820:27;11839:7;11820:18;:27::i;:::-;11797:52;;11705:152;;;:::o;7247:233::-;7319:7;7360:1;7343:19;;:5;:19;;;7339:60;;7371:28;;;;;;;;;;;;;;7339:60;1406:13;7417:18;:25;7436:5;7417:25;;;;;;;;;;;;;;;;:55;7410:62;;7247:233;;;:::o;10488:104::-;10544:13;10577:7;10570:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10488:104;:::o;17361:234::-;17508:8;17456:18;:39;17475:19;:17;:19::i;:::-;17456:39;;;;;;;;;;;;;;;:49;17496:8;17456:49;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;17568:8;17532:55;;17547:19;:17;:19::i;:::-;17532:55;;;17578:8;17532:55;;;;;;:::i;:::-;;;;;;;;17361:234;;:::o;24154:407::-;24329:31;24342:4;24348:2;24352:7;24329:12;:31::i;:::-;24393:1;24375:2;:14;;;:19;24371:183;;24414:56;24445:4;24451:2;24455:7;24464:5;24414:30;:56::i;:::-;24409:145;;24498:40;;;;;;;;;;;;;;24409:145;24371:183;24154:407;;;;:::o;10698:318::-;10771:13;10802:16;10810:7;10802;:16::i;:::-;10797:59;;10827:29;;;;;;;;;;;;;;10797:59;10869:21;10893:10;:8;:10::i;:::-;10869:34;;10946:1;10927:7;10921:21;:26;:87;;;;;;;;;;;;;;;;;10974:7;10983:18;10993:7;10983:9;:18::i;:::-;10957:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10921:87;10914:94;;;10698:318;;;:::o;17752:164::-;17849:4;17873:18;:25;17892:5;17873:25;;;;;;;;;;;;;;;:35;17899:8;17873:35;;;;;;;;;;;;;;;;;;;;;;;;;17866:42;;17752:164;;;;:::o;18174:282::-;18239:4;18295:7;18276:15;:13;:15::i;:::-;:26;;:66;;;;;18329:13;;18319:7;:23;18276:66;:153;;;;;18428:1;2182:8;18380:17;:26;18398:7;18380:26;;;;;;;;;;;;:44;:49;18276:153;18256:173;;18174:282;;;:::o;40482:105::-;40542:7;40569:10;40562:17;;40482:105;:::o;5579:92::-;5635:7;5579:92;:::o;12860:1275::-;12927:7;12947:12;12962:7;12947:22;;13030:4;13011:15;:13;:15::i;:::-;:23;13007:1061;;13064:13;;13057:4;:20;13053:1015;;;13102:14;13119:17;:23;13137:4;13119:23;;;;;;;;;;;;13102:40;;13236:1;2182:8;13208:6;:24;:29;13204:845;;13873:113;13890:1;13880:6;:11;13873:113;;13933:17;:25;13951:6;;;;;;;13933:25;;;;;;;;;;;;13924:34;;13873:113;;;14019:6;14012:13;;;;;;13204:845;13079:989;13053:1015;13007:1061;14096:31;;;;;;;;;;;;;;12860:1275;;;;:::o;19337:485::-;19439:27;19468:23;19509:38;19550:15;:24;19566:7;19550:24;;;;;;;;;;;19509:65;;19727:18;19704:41;;19784:19;19778:26;19759:45;;19689:126;19337:485;;;:::o;18565:659::-;18714:11;18879:16;18872:5;18868:28;18859:37;;19039:16;19028:9;19024:32;19011:45;;19189:15;19178:9;19175:30;19167:5;19156:9;19153:20;19150:56;19140:66;;18565:659;;;;;:::o;25223:159::-;;;;;:::o;39791:311::-;39926:7;39946:16;2586:3;39972:19;:41;;39946:68;;2586:3;40040:31;40051:4;40057:2;40061:9;40040:10;:31::i;:::-;40032:40;;:62;;40025:69;;;39791:311;;;;;:::o;14683:450::-;14763:14;14931:16;14924:5;14920:28;14911:37;;15108:5;15094:11;15069:23;15065:41;15062:52;15055:5;15052:63;15042:73;;14683:450;;;;:::o;26047:158::-;;;;;:::o;26645:716::-;26808:4;26854:2;26829:45;;;26875:19;:17;:19::i;:::-;26896:4;26902:7;26911:5;26829:88;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;26825:529;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27129:1;27112:6;:13;:18;27108:235;;27158:40;;;;;;;;;;;;;;27108:235;27301:6;27295:13;27286:6;27282:2;27278:15;27271:38;26825:529;26998:54;;;26988:64;;;:6;:64;;;;26981:71;;;26645:716;;;;;;:::o;11268:94::-;11319:13;11345:9;;;;;;;;;;;;;;11268:94;:::o;40689:1745::-;40754:17;41188:4;41181;41175:11;41171:22;41280:1;41274:4;41267:15;41355:4;41352:1;41348:12;41341:19;;41437:1;41432:3;41425:14;41541:3;41780:5;41762:428;41788:1;41762:428;;;41828:1;41823:3;41819:11;41812:18;;41999:2;41993:4;41989:13;41985:2;41981:22;41976:3;41968:36;42093:2;42087:4;42083:13;42075:21;;42160:4;41762:428;42150:25;41762:428;41766:21;42229:3;42224;42220:13;42344:4;42339:3;42335:14;42328:21;;42409:6;42404:3;42397:19;40793:1634;;;40689:1745;;;:::o;39492:147::-;39629:6;39492:147;;;;;:::o;7:75:2:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:118::-;4977:24;4995:5;4977:24;:::i;:::-;4972:3;4965:37;4890:118;;:::o;5014:222::-;5107:4;5145:2;5134:9;5130:18;5122:26;;5158:71;5226:1;5215:9;5211:17;5202:6;5158:71;:::i;:::-;5014:222;;;;:::o;5242:619::-;5319:6;5327;5335;5384:2;5372:9;5363:7;5359:23;5355:32;5352:119;;;5390:79;;:::i;:::-;5352:119;5510:1;5535:53;5580:7;5571:6;5560:9;5556:22;5535:53;:::i;:::-;5525:63;;5481:117;5637:2;5663:53;5708:7;5699:6;5688:9;5684:22;5663:53;:::i;:::-;5653:63;;5608:118;5765:2;5791:53;5836:7;5827:6;5816:9;5812:22;5791:53;:::i;:::-;5781:63;;5736:118;5242:619;;;;;:::o;5867:329::-;5926:6;5975:2;5963:9;5954:7;5950:23;5946:32;5943:119;;;5981:79;;:::i;:::-;5943:119;6101:1;6126:53;6171:7;6162:6;6151:9;6147:22;6126:53;:::i;:::-;6116:63;;6072:117;5867:329;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:148::-;11085:11;11122:3;11107:18;;10983:148;;;;:::o;11137:390::-;11243:3;11271:39;11304:5;11271:39;:::i;:::-;11326:89;11408:6;11403:3;11326:89;:::i;:::-;11319:96;;11424:65;11482:6;11477:3;11470:4;11463:5;11459:16;11424:65;:::i;:::-;11514:6;11509:3;11505:16;11498:23;;11247:280;11137:390;;;;:::o;11533:435::-;11713:3;11735:95;11826:3;11817:6;11735:95;:::i;:::-;11728:102;;11847:95;11938:3;11929:6;11847:95;:::i;:::-;11840:102;;11959:3;11952:10;;11533:435;;;;;:::o;11974:98::-;12025:6;12059:5;12053:12;12043:22;;11974:98;;;:::o;12078:168::-;12161:11;12195:6;12190:3;12183:19;12235:4;12230:3;12226:14;12211:29;;12078:168;;;;:::o;12252:373::-;12338:3;12366:38;12398:5;12366:38;:::i;:::-;12420:70;12483:6;12478:3;12420:70;:::i;:::-;12413:77;;12499:65;12557:6;12552:3;12545:4;12538:5;12534:16;12499:65;:::i;:::-;12589:29;12611:6;12589:29;:::i;:::-;12584:3;12580:39;12573:46;;12342:283;12252:373;;;;:::o;12631:640::-;12826:4;12864:3;12853:9;12849:19;12841:27;;12878:71;12946:1;12935:9;12931:17;12922:6;12878:71;:::i;:::-;12959:72;13027:2;13016:9;13012:18;13003:6;12959:72;:::i;:::-;13041;13109:2;13098:9;13094:18;13085:6;13041:72;:::i;:::-;13160:9;13154:4;13150:20;13145:2;13134:9;13130:18;13123:48;13188:76;13259:4;13250:6;13188:76;:::i;:::-;13180:84;;12631:640;;;;;;;:::o;13277:141::-;13333:5;13364:6;13358:13;13349:22;;13380:32;13406:5;13380:32;:::i;:::-;13277:141;;;;:::o;13424:349::-;13493:6;13542:2;13530:9;13521:7;13517:23;13513:32;13510:119;;;13548:79;;:::i;:::-;13510:119;13668:1;13693:63;13748:7;13739:6;13728:9;13724:22;13693:63;:::i;:::-;13683:73;;13639:127;13424:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1282200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2927",
								"getApproved(uint256)": "7381",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "745",
								"symbol()": "infinite",
								"tokenURI(uint256)": "5534",
								"totalSupply()": "4621",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "17",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4416",
								"_extraData(address,address,uint24)": "24",
								"_getApprovedSlotAndAddress(uint256)": "2236",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isSenderApprovedOrOwner(address,address,address)": "78",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "22",
								"_nextExtraData(address,address,uint256)": "114",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "61",
								"_packedOwnershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "15",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 5085,
									"end": 5243,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5160,
									"end": 5165,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5152,
									"end": 5157,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 5152,
									"end": 5165,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5186,
									"end": 5193,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5176,
									"end": 5183,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 5176,
									"end": 5193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5220,
									"end": 5235,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 5220,
									"end": 5233,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 5220,
									"end": 5233,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5220,
									"end": 5233,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 5220,
									"end": 5235,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5220,
									"end": 5235,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 5220,
									"end": 5235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5220,
									"end": 5235,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 5220,
									"end": 5235,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5204,
									"end": 5217,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5204,
									"end": 5235,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5204,
									"end": 5235,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5204,
									"end": 5235,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5204,
									"end": 5235,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5579,
									"end": 5671,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 5579,
									"end": 5671,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5635,
									"end": 5642,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5579,
									"end": 5671,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5579,
									"end": 5671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "77"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 2,
									"value": "77"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "81"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "82"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 2,
									"value": "82"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 2,
									"value": "81"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "84"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 2,
									"value": "84"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "90"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 2,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 2,
									"value": "90"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "91"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "92"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 2,
									"value": "92"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 2,
									"value": "91"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "97"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 2,
									"value": "97"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "98"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 2,
									"value": "98"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "102"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "103"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "104"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 2,
									"value": "104"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 2,
									"value": "103"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 2,
									"value": "102"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "107"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 2,
									"value": "107"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "108"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "109"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 2,
									"value": "109"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 2,
									"value": "108"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "112"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 2,
									"value": "112"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "113"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 2,
									"value": "113"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 2,
									"value": "115"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "117"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "118"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 2,
									"value": "118"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "115"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 2,
									"value": "117"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "120"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "121"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 2,
									"value": "121"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "122"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 2,
									"value": "122"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "123"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 2,
									"value": "123"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "124"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "125"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 2,
									"value": "125"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 2,
									"value": "124"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 2,
									"value": "120"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "128"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 2,
									"value": "128"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "130"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 2,
									"value": "130"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "132"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 2,
									"value": "132"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "133"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "134"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 2,
									"value": "134"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 2,
									"value": "133"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "135"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 2,
									"value": "135"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "136"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 2,
									"value": "136"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "138"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "139"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 2,
									"value": "139"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "140"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 2,
									"value": "140"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "137"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 2,
									"value": "138"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "141"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 2,
									"value": "141"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 2,
									"value": "142"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "144"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "142"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 2,
									"value": "144"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "145"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "146"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 2,
									"value": "146"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 2,
									"value": "145"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 2,
									"value": "137"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220250b9f6a55aac22329908ee2b4cb9e6e60c7102834a83ae6fd548593be11a50f64736f6c63430008110033",
									".code": [
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "B88D4FDE"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "C87B56DD"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "E985E9C5"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "42842E0E"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "81812FC"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9410,
											"end": 10049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 9410,
											"end": 10049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 9410,
											"end": 10049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10312,
											"end": 10412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 10312,
											"end": 10412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 16803,
											"end": 17021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 16803,
											"end": 17021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 16803,
											"end": 17021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16236,
											"end": 16644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 16236,
											"end": 16644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6063,
											"end": 6386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 6063,
											"end": 6386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 20442,
											"end": 23267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 20442,
											"end": 23267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 23363,
											"end": 23556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 23363,
											"end": 23556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 11705,
											"end": 11857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 11705,
											"end": 11857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 11705,
											"end": 11857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 7247,
											"end": 7480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 7247,
											"end": 7480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 7247,
											"end": 7480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 10488,
											"end": 10592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 10488,
											"end": 10592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 17361,
											"end": 17595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 17361,
											"end": 17595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 24154,
											"end": 24561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 24154,
											"end": 24561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 10698,
											"end": 11016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 10698,
											"end": 11016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 10698,
											"end": 11016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 17752,
											"end": 17916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 17752,
											"end": 17916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 17752,
											"end": 17916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9495,
											"end": 9499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9834,
											"end": 9844,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 9819,
											"end": 9844,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9819,
											"end": 9844,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9844,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9819,
											"end": 9844,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9844,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 9819,
											"end": 9921,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9921,
											"name": "PUSH",
											"source": 1,
											"value": "80AC58CD"
										},
										{
											"begin": 9896,
											"end": 9921,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9896,
											"end": 9921,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9896,
											"end": 9907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9896,
											"end": 9921,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9896,
											"end": 9921,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9896,
											"end": 9921,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9896,
											"end": 9921,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9921,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 9819,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9998,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 9819,
											"end": 9998,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9988,
											"end": 9998,
											"name": "PUSH",
											"source": 1,
											"value": "5B5E139F"
										},
										{
											"begin": 9973,
											"end": 9998,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9973,
											"end": 9998,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9973,
											"end": 9984,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9973,
											"end": 9998,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9973,
											"end": 9998,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9973,
											"end": 9998,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9973,
											"end": 9998,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9998,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 9819,
											"end": 9998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9799,
											"end": 9998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9799,
											"end": 9998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 10049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10366,
											"end": 10379,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10399,
											"end": 10404,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10392,
											"end": 10404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10392,
											"end": 10404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16879,
											"end": 16886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16904,
											"end": 16920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 16912,
											"end": 16919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16904,
											"end": 16911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 16904,
											"end": 16920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16904,
											"end": 16920,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 16904,
											"end": 16920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16899,
											"end": 16963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 16899,
											"end": 16963,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "PUSH",
											"source": 1,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16899,
											"end": 16963,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 16899,
											"end": 16963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 16998,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16999,
											"end": 17006,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 17013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16983,
											"end": 17013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 17013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16983,
											"end": 17013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 17013,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 17013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 17013,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 16983,
											"end": 17013,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 17013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 17013,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 17013,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16983,
											"end": 17013,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16976,
											"end": 17013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16976,
											"end": 17013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 17021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16325,
											"end": 16338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16341,
											"end": 16357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 16349,
											"end": 16356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16341,
											"end": 16348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 16341,
											"end": 16357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16341,
											"end": 16357,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 16341,
											"end": 16357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16325,
											"end": 16357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16325,
											"end": 16357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16397,
											"end": 16402,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16374,
											"end": 16402,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16374,
											"end": 16402,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16374,
											"end": 16393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 16374,
											"end": 16391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 16374,
											"end": 16393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16374,
											"end": 16393,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 16374,
											"end": 16393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16374,
											"end": 16402,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16374,
											"end": 16402,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16374,
											"end": 16402,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 16370,
											"end": 16545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 16370,
											"end": 16545,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16422,
											"end": 16466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 16439,
											"end": 16444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16446,
											"end": 16465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 16446,
											"end": 16463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 16446,
											"end": 16465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16446,
											"end": 16465,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 16446,
											"end": 16465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16422,
											"end": 16438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 16422,
											"end": 16466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16422,
											"end": 16466,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 16422,
											"end": 16466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16417,
											"end": 16545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 16417,
											"end": 16545,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "PUSH",
											"source": 1,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16417,
											"end": 16545,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 16417,
											"end": 16545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16370,
											"end": 16545,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 16370,
											"end": 16545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16590,
											"end": 16592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16572,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16573,
											"end": 16580,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16587,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16557,
											"end": 16587,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16587,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16628,
											"end": 16635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16624,
											"end": 16626,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16617,
											"end": 16622,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 16314,
											"end": 16644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6124,
											"end": 6131,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6352,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6352,
											"end": 6367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6352,
											"end": 6367,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6352,
											"end": 6367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6349,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6337,
											"end": 6349,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6321,
											"end": 6334,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6349,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6367,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20584,
											"end": 20611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20614,
											"end": 20641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 20633,
											"end": 20640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20614,
											"end": 20632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 20614,
											"end": 20641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20614,
											"end": 20641,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 20614,
											"end": 20641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20584,
											"end": 20641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20584,
											"end": 20641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20699,
											"end": 20703,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20658,
											"end": 20703,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20658,
											"end": 20703,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20674,
											"end": 20693,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20658,
											"end": 20703,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20658,
											"end": 20703,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20658,
											"end": 20703,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 20654,
											"end": 20740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 20654,
											"end": 20740,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "PUSH",
											"source": 1,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20654,
											"end": 20740,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 20654,
											"end": 20740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20754,
											"end": 20781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20783,
											"end": 20806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20810,
											"end": 20845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 20837,
											"end": 20844,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20810,
											"end": 20836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 20810,
											"end": 20845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20810,
											"end": 20845,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 20810,
											"end": 20845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20753,
											"end": 20845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20753,
											"end": 20845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20753,
											"end": 20845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20753,
											"end": 20845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20945,
											"end": 21013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 20970,
											"end": 20985,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20987,
											"end": 20991,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 20993,
											"end": 21012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 20993,
											"end": 21010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 20993,
											"end": 21012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20993,
											"end": 21012,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 20993,
											"end": 21012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20945,
											"end": 20969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 20945,
											"end": 21013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20945,
											"end": 21013,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 20945,
											"end": 21013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 20940,
											"end": 21120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21033,
											"end": 21076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 21050,
											"end": 21054,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 21056,
											"end": 21075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 21056,
											"end": 21073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 21056,
											"end": 21075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21056,
											"end": 21075,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 21056,
											"end": 21075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21033,
											"end": 21049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 21033,
											"end": 21076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21033,
											"end": 21076,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 21033,
											"end": 21076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21028,
											"end": 21120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 21028,
											"end": 21120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "PUSH",
											"source": 1,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21028,
											"end": 21120,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 21028,
											"end": 21120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 21120,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 20940,
											"end": 21120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21151,
											"end": 21152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21137,
											"end": 21153,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21137,
											"end": 21153,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21137,
											"end": 21139,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 21137,
											"end": 21153,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21137,
											"end": 21153,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21137,
											"end": 21153,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21133,
											"end": 21185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 21133,
											"end": 21185,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "PUSH",
											"source": 1,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21133,
											"end": 21185,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 21133,
											"end": 21185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21198,
											"end": 21241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 21220,
											"end": 21224,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 21226,
											"end": 21228,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 21230,
											"end": 21237,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 21239,
											"end": 21240,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 21198,
											"end": 21219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 21198,
											"end": 21241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21198,
											"end": 21241,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 21198,
											"end": 21241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21334,
											"end": 21349,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21331,
											"end": 21491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21331,
											"end": 21491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 21331,
											"end": 21491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21474,
											"end": 21475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21453,
											"end": 21472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21446,
											"end": 21476,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 21331,
											"end": 21491,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 21331,
											"end": 21491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21871,
											"end": 21889,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21890,
											"end": 21894,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21940,
											"end": 21958,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21959,
											"end": 21961,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22262,
											"end": 22408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 22299,
											"end": 22301,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22348,
											"end": 22393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 22363,
											"end": 22367,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 22369,
											"end": 22371,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 22373,
											"end": 22392,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 22348,
											"end": 22362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 22348,
											"end": 22393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22348,
											"end": 22393,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 22348,
											"end": 22393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2470,
											"name": "PUSH",
											"source": 1,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22320,
											"end": 22393,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 22262,
											"end": 22280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 22262,
											"end": 22408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22262,
											"end": 22408,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 22262,
											"end": 22408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22233,
											"end": 22250,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22251,
											"end": 22258,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 22233,
											"end": 22408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22233,
											"end": 22408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22233,
											"end": 22408,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22233,
											"end": 22408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22579,
											"end": 22580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2462,
											"end": 2470,
											"name": "PUSH",
											"source": 1,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22528,
											"end": 22547,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22528,
											"end": 22575,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22528,
											"end": 22580,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22524,
											"end": 23151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 22524,
											"end": 23151,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22601,
											"end": 22620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22633,
											"end": 22634,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 22623,
											"end": 22630,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22623,
											"end": 22634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22601,
											"end": 22634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22601,
											"end": 22634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22790,
											"end": 22791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22756,
											"end": 22773,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22774,
											"end": 22785,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 22756,
											"end": 22791,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22752,
											"end": 23136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 22752,
											"end": 23136,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22894,
											"end": 22907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22894,
											"end": 22907,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 22879,
											"end": 22890,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22879,
											"end": 22907,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 22875,
											"end": 23117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 22875,
											"end": 23117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23074,
											"end": 23093,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23041,
											"end": 23058,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23059,
											"end": 23070,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23041,
											"end": 23093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23041,
											"end": 23093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23041,
											"end": 23093,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 23041,
											"end": 23093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22875,
											"end": 23117,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 22875,
											"end": 23117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22752,
											"end": 23136,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 22752,
											"end": 23136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22582,
											"end": 23151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22524,
											"end": 23151,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 22524,
											"end": 23151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23198,
											"end": 23205,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23194,
											"end": 23196,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23188,
											"end": 23192,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 23217,
											"end": 23259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 23238,
											"end": 23242,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 23244,
											"end": 23246,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 23248,
											"end": 23255,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 23257,
											"end": 23258,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 23217,
											"end": 23237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 23217,
											"end": 23259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23217,
											"end": 23259,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 23217,
											"end": 23259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20573,
											"end": 23267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20573,
											"end": 23267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20573,
											"end": 23267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 23267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 23526,
											"end": 23530,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23532,
											"end": 23534,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23536,
											"end": 23543,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23509,
											"end": 23525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 23509,
											"end": 23548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23363,
											"end": 23556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11777,
											"end": 11784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11820,
											"end": 11847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 11839,
											"end": 11846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11820,
											"end": 11838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 11820,
											"end": 11847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11820,
											"end": 11847,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 11820,
											"end": 11847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7319,
											"end": 7326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7360,
											"end": 7361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7343,
											"end": 7362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7343,
											"end": 7362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7343,
											"end": 7348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7343,
											"end": 7362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7343,
											"end": 7362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7343,
											"end": 7362,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7339,
											"end": 7399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7339,
											"end": 7399,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "PUSH",
											"source": 1,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7339,
											"end": 7399,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7339,
											"end": 7399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1406,
											"end": 1419,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7417,
											"end": 7435,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7436,
											"end": 7441,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7472,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7410,
											"end": 7472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7410,
											"end": 7472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10557,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10577,
											"end": 10584,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10570,
											"end": 10584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10570,
											"end": 10584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17508,
											"end": 17516,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17474,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17475,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 17475,
											"end": 17492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 17475,
											"end": 17494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17475,
											"end": 17494,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 17475,
											"end": 17494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17496,
											"end": 17504,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17568,
											"end": 17576,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17547,
											"end": 17566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 17547,
											"end": 17564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 17547,
											"end": 17566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17547,
											"end": 17566,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 17547,
											"end": 17566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 17578,
											"end": 17586,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 17532,
											"end": 17587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17361,
											"end": 17595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24329,
											"end": 24360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 24342,
											"end": 24346,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24348,
											"end": 24350,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24352,
											"end": 24359,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24329,
											"end": 24341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 24329,
											"end": 24360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24329,
											"end": 24360,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 24329,
											"end": 24360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24393,
											"end": 24394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24375,
											"end": 24377,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24375,
											"end": 24389,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24375,
											"end": 24389,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24375,
											"end": 24389,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 24375,
											"end": 24394,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 24371,
											"end": 24554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 24371,
											"end": 24554,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24414,
											"end": 24470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 24445,
											"end": 24449,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24451,
											"end": 24453,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24455,
											"end": 24462,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24464,
											"end": 24469,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24414,
											"end": 24444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 24414,
											"end": 24470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24414,
											"end": 24470,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 24414,
											"end": 24470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24409,
											"end": 24554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 24409,
											"end": 24554,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 24409,
											"end": 24554,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 24409,
											"end": 24554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24371,
											"end": 24554,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 24371,
											"end": 24554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24154,
											"end": 24561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10771,
											"end": 10784,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10802,
											"end": 10818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 10810,
											"end": 10817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10802,
											"end": 10809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10802,
											"end": 10818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10802,
											"end": 10818,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 10802,
											"end": 10818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 10797,
											"end": 10856,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "PUSH",
											"source": 1,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10856,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 10797,
											"end": 10856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10869,
											"end": 10890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10893,
											"end": 10903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 10893,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 10893,
											"end": 10903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10893,
											"end": 10903,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 10893,
											"end": 10903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10869,
											"end": 10903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10869,
											"end": 10903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10946,
											"end": 10947,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10927,
											"end": 10934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 10942,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 10947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10974,
											"end": 10981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 10993,
											"end": 11000,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 10992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 10983,
											"end": 11001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11001,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 10983,
											"end": 11001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 10957,
											"end": 11002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 11008,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 11008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 11008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 11016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17849,
											"end": 17853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17873,
											"end": 17891,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17892,
											"end": 17897,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17899,
											"end": 17907,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17866,
											"end": 17908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17866,
											"end": 17908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17752,
											"end": 17916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18174,
											"end": 18456,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 18174,
											"end": 18456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18239,
											"end": 18243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18295,
											"end": 18302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 18276,
											"end": 18289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 18276,
											"end": 18291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18291,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 18276,
											"end": 18291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18302,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18302,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18342,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18342,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 18276,
											"end": 18342,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18329,
											"end": 18342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18329,
											"end": 18342,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18319,
											"end": 18326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18319,
											"end": 18342,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18342,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 18276,
											"end": 18342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18429,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18429,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 18276,
											"end": 18429,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18428,
											"end": 18429,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2190,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18380,
											"end": 18397,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18398,
											"end": 18405,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18380,
											"end": 18424,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18380,
											"end": 18429,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18429,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 18276,
											"end": 18429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18256,
											"end": 18429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18256,
											"end": 18429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18174,
											"end": 18456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18174,
											"end": 18456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18174,
											"end": 18456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18174,
											"end": 18456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 40482,
											"end": 40587,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 40482,
											"end": 40587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40542,
											"end": 40549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 40569,
											"end": 40579,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 40562,
											"end": 40579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 40562,
											"end": 40579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 40482,
											"end": 40587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 40482,
											"end": 40587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5671,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5579,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5635,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5579,
											"end": 5671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12860,
											"end": 14135,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 12860,
											"end": 14135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12927,
											"end": 12934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12947,
											"end": 12959,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12962,
											"end": 12969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12947,
											"end": 12969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12947,
											"end": 12969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13030,
											"end": 13034,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13011,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 13011,
											"end": 13026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13011,
											"end": 13026,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 13011,
											"end": 13026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13011,
											"end": 13034,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13007,
											"end": 14068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 13007,
											"end": 14068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13064,
											"end": 13077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13064,
											"end": 13077,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13057,
											"end": 13061,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13057,
											"end": 13077,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13053,
											"end": 14068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13053,
											"end": 14068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 13053,
											"end": 14068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13102,
											"end": 13116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13119,
											"end": 13136,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13137,
											"end": 13141,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13102,
											"end": 13142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13102,
											"end": 13142,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13236,
											"end": 13237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2190,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13208,
											"end": 13214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13232,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13237,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13204,
											"end": 14049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 13204,
											"end": 14049,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13873,
											"end": 13986,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 13873,
											"end": 13986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13890,
											"end": 13891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13880,
											"end": 13886,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13880,
											"end": 13891,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13873,
											"end": 13986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 13873,
											"end": 13986,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13933,
											"end": 13950,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13951,
											"end": 13957,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13951,
											"end": 13957,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13951,
											"end": 13957,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13951,
											"end": 13957,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13951,
											"end": 13957,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13951,
											"end": 13957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13951,
											"end": 13957,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13924,
											"end": 13958,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13924,
											"end": 13958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13873,
											"end": 13986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 13873,
											"end": 13986,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13873,
											"end": 13986,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 13873,
											"end": 13986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14019,
											"end": 14025,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14012,
											"end": 14025,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14012,
											"end": 14025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14012,
											"end": 14025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14012,
											"end": 14025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14012,
											"end": 14025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 14012,
											"end": 14025,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13204,
											"end": 14049,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 13204,
											"end": 14049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13079,
											"end": 14068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13053,
											"end": 14068,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 13053,
											"end": 14068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13007,
											"end": 14068,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 13007,
											"end": 14068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "PUSH",
											"source": 1,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12860,
											"end": 14135,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 12860,
											"end": 14135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12860,
											"end": 14135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12860,
											"end": 14135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12860,
											"end": 14135,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12860,
											"end": 14135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19337,
											"end": 19822,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 19337,
											"end": 19822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19439,
											"end": 19466,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19468,
											"end": 19491,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19509,
											"end": 19547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19550,
											"end": 19565,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19566,
											"end": 19573,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 19509,
											"end": 19574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19509,
											"end": 19574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19727,
											"end": 19745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19704,
											"end": 19745,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19704,
											"end": 19745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19784,
											"end": 19803,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19778,
											"end": 19804,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19759,
											"end": 19804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19759,
											"end": 19804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19689,
											"end": 19815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19337,
											"end": 19822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19337,
											"end": 19822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19337,
											"end": 19822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19337,
											"end": 19822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18565,
											"end": 19224,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 18565,
											"end": 19224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18714,
											"end": 18725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18879,
											"end": 18895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18872,
											"end": 18877,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18868,
											"end": 18896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18859,
											"end": 18896,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18859,
											"end": 18896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19039,
											"end": 19055,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19028,
											"end": 19037,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19024,
											"end": 19056,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19011,
											"end": 19056,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19011,
											"end": 19056,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19189,
											"end": 19204,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19178,
											"end": 19187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19175,
											"end": 19205,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19167,
											"end": 19172,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19156,
											"end": 19165,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19153,
											"end": 19173,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19150,
											"end": 19206,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 19140,
											"end": 19206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19140,
											"end": 19206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18565,
											"end": 19224,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 18565,
											"end": 19224,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18565,
											"end": 19224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18565,
											"end": 19224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18565,
											"end": 19224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18565,
											"end": 19224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25223,
											"end": 25382,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 25223,
											"end": 25382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25223,
											"end": 25382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25223,
											"end": 25382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25223,
											"end": 25382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25223,
											"end": 25382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25223,
											"end": 25382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 39791,
											"end": 40102,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 39791,
											"end": 40102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 39926,
											"end": 39933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 39946,
											"end": 39962,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2589,
											"name": "PUSH",
											"source": 1,
											"value": "E8"
										},
										{
											"begin": 39972,
											"end": 39991,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 39972,
											"end": 40013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 39972,
											"end": 40013,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 39946,
											"end": 40014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 39946,
											"end": 40014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2589,
											"name": "PUSH",
											"source": 1,
											"value": "E8"
										},
										{
											"begin": 40040,
											"end": 40071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 40051,
											"end": 40055,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 40057,
											"end": 40059,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 40061,
											"end": 40070,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 40040,
											"end": 40050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 40040,
											"end": 40071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 40040,
											"end": 40071,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 40040,
											"end": 40071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40032,
											"end": 40072,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 40032,
											"end": 40072,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 40032,
											"end": 40094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 40032,
											"end": 40094,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 40025,
											"end": 40094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 40025,
											"end": 40094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 40025,
											"end": 40094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39791,
											"end": 40102,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 39791,
											"end": 40102,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 39791,
											"end": 40102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39791,
											"end": 40102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39791,
											"end": 40102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39791,
											"end": 40102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14683,
											"end": 15133,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 14683,
											"end": 15133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14763,
											"end": 14777,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14931,
											"end": 14947,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14924,
											"end": 14929,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14920,
											"end": 14948,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14911,
											"end": 14948,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14911,
											"end": 14948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15108,
											"end": 15113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15094,
											"end": 15105,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 15069,
											"end": 15092,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 15065,
											"end": 15106,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15062,
											"end": 15114,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15055,
											"end": 15060,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15052,
											"end": 15115,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15042,
											"end": 15115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15042,
											"end": 15115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14683,
											"end": 15133,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14683,
											"end": 15133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14683,
											"end": 15133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14683,
											"end": 15133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14683,
											"end": 15133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26047,
											"end": 26205,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 26047,
											"end": 26205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26047,
											"end": 26205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26047,
											"end": 26205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26047,
											"end": 26205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26047,
											"end": 26205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26047,
											"end": 26205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26808,
											"end": 26812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26854,
											"end": 26856,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26874,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26829,
											"end": 26874,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26874,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 26875,
											"end": 26894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 26875,
											"end": 26892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 26875,
											"end": 26894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26875,
											"end": 26894,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 26875,
											"end": 26894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26896,
											"end": 26900,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 26902,
											"end": 26909,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 26911,
											"end": 26916,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 26829,
											"end": 26917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 26829,
											"end": 26917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27129,
											"end": 27130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27112,
											"end": 27118,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27112,
											"end": 27125,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27112,
											"end": 27130,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27108,
											"end": 27343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 27108,
											"end": 27343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27108,
											"end": 27343,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 27108,
											"end": 27343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27301,
											"end": 27307,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27295,
											"end": 27308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27286,
											"end": 27292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27282,
											"end": 27284,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27278,
											"end": 27293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27271,
											"end": 27309,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26998,
											"end": 27052,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 26998,
											"end": 27052,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 26998,
											"end": 27052,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 26988,
											"end": 27052,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26988,
											"end": 27052,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 26988,
											"end": 27052,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26988,
											"end": 26994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26988,
											"end": 27052,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26988,
											"end": 27052,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 26988,
											"end": 27052,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26988,
											"end": 27052,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26981,
											"end": 27052,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26981,
											"end": 27052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26981,
											"end": 27052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26645,
											"end": 27361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11268,
											"end": 11362,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 11268,
											"end": 11362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11332,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11268,
											"end": 11362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11268,
											"end": 11362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 40689,
											"end": 42434,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 40689,
											"end": 42434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40754,
											"end": 40771,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 41188,
											"end": 41192,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 41181,
											"end": 41185,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 41175,
											"end": 41186,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 41171,
											"end": 41193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41280,
											"end": 41281,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 41274,
											"end": 41278,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 41267,
											"end": 41282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 41355,
											"end": 41359,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 41352,
											"end": 41353,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 41348,
											"end": 41360,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 41341,
											"end": 41360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 41341,
											"end": 41360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 41437,
											"end": 41438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 41432,
											"end": 41435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 41425,
											"end": 41439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 41541,
											"end": 41544,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 41780,
											"end": 41785,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 41762,
											"end": 42190,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 41762,
											"end": 42190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41788,
											"end": 41789,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 41762,
											"end": 42190,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 41762,
											"end": 42190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 41762,
											"end": 42190,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 41828,
											"end": 41829,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 41823,
											"end": 41826,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 41819,
											"end": 41830,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 41812,
											"end": 41830,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 41812,
											"end": 41830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 41999,
											"end": 42001,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 41993,
											"end": 41997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 41989,
											"end": 42002,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 41985,
											"end": 41987,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 41981,
											"end": 42003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41976,
											"end": 41979,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 41968,
											"end": 42004,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 42093,
											"end": 42095,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 42087,
											"end": 42091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 42083,
											"end": 42096,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 42075,
											"end": 42096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 42075,
											"end": 42096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 42160,
											"end": 42164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 41762,
											"end": 42190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 42150,
											"end": 42175,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 41762,
											"end": 42190,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 41762,
											"end": 42190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41766,
											"end": 41787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 42229,
											"end": 42232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 42224,
											"end": 42227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 42220,
											"end": 42233,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 42344,
											"end": 42348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 42339,
											"end": 42342,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 42335,
											"end": 42349,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 42328,
											"end": 42349,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 42328,
											"end": 42349,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 42409,
											"end": 42415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 42404,
											"end": 42407,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 42397,
											"end": 42416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 40793,
											"end": 42427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 40793,
											"end": 42427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 40793,
											"end": 42427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 40689,
											"end": 42434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 40689,
											"end": 42434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 40689,
											"end": 42434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 40689,
											"end": 42434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 39492,
											"end": 39639,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 39492,
											"end": 39639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 39629,
											"end": 39635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 39492,
											"end": 39639,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 39492,
											"end": 39639,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 39492,
											"end": 39639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39492,
											"end": 39639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39492,
											"end": 39639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39492,
											"end": 39639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 4995,
											"end": 5000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 4977,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4972,
											"end": 4975,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 5008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5147,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5134,
											"end": 5143,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5130,
											"end": 5148,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 5226,
											"end": 5227,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5228,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5202,
											"end": 5208,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 5158,
											"end": 5229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5319,
											"end": 5325,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5333,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5335,
											"end": 5341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5386,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5372,
											"end": 5381,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5363,
											"end": 5370,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5359,
											"end": 5382,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5355,
											"end": 5387,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 5390,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5510,
											"end": 5511,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 5580,
											"end": 5587,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5577,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5578,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 5535,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5481,
											"end": 5598,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5637,
											"end": 5639,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 5708,
											"end": 5715,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5699,
											"end": 5705,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5688,
											"end": 5697,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5684,
											"end": 5706,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 5663,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5608,
											"end": 5726,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 5836,
											"end": 5843,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5816,
											"end": 5825,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5812,
											"end": 5834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 5791,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5736,
											"end": 5854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5926,
											"end": 5932,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5977,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5972,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5954,
											"end": 5961,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5946,
											"end": 5978,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 5981,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 6171,
											"end": 6178,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6160,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6147,
											"end": 6169,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 6126,
											"end": 6179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6072,
											"end": 6189,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "375"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 2,
											"value": "375"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10116,
											"end": 10118,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10114,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10087,
											"end": 10119,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 10122,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "tag",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "tag",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 10267,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "tag",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10213,
											"end": 10330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 10395,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "tag",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10340,
											"end": 10458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9991,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10519,
											"end": 10596,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10597,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 10637,
											"end": 10638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10645,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10728,
											"end": 10740,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 10854,
											"end": 10860,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "tag",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10913,
											"end": 10927,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 10943,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "tag",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "tag",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10708,
											"end": 10977,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10657,
											"end": 10977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11085,
											"end": 11096,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11122,
											"end": 11125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10983,
											"end": 11131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 11304,
											"end": 11309,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 11271,
											"end": 11310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "tag",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 11408,
											"end": 11414,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11403,
											"end": 11406,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 11326,
											"end": 11415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "tag",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 11415,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 11415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 11482,
											"end": 11488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11477,
											"end": 11480,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11470,
											"end": 11474,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11463,
											"end": 11468,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11459,
											"end": 11475,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 11424,
											"end": 11489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "tag",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11514,
											"end": 11520,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11509,
											"end": 11512,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11505,
											"end": 11521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11498,
											"end": 11521,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11498,
											"end": 11521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11247,
											"end": 11527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11137,
											"end": 11527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 11826,
											"end": 11829,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11817,
											"end": 11823,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 11735,
											"end": 11830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "tag",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11728,
											"end": 11830,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11728,
											"end": 11830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 11938,
											"end": 11941,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11929,
											"end": 11935,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 11847,
											"end": 11942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "tag",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11840,
											"end": 11942,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11840,
											"end": 11942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11959,
											"end": 11962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11952,
											"end": 11962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11952,
											"end": 11962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12072,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 11974,
											"end": 12072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12025,
											"end": 12031,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12059,
											"end": 12064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12053,
											"end": 12065,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12043,
											"end": 12065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12043,
											"end": 12065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12072,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12072,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12161,
											"end": 12172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12195,
											"end": 12201,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12190,
											"end": 12193,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12183,
											"end": 12202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12239,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12230,
											"end": 12233,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12211,
											"end": 12240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12211,
											"end": 12240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12078,
											"end": 12246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12338,
											"end": 12341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12366,
											"end": 12404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 12398,
											"end": 12403,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12366,
											"end": 12404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 12366,
											"end": 12404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12366,
											"end": 12404,
											"name": "tag",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 12366,
											"end": 12404,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12420,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 12483,
											"end": 12489,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12478,
											"end": 12481,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12420,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 12420,
											"end": 12490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12420,
											"end": 12490,
											"name": "tag",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 12420,
											"end": 12490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12413,
											"end": 12490,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12413,
											"end": 12490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12499,
											"end": 12564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 12557,
											"end": 12563,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12552,
											"end": 12555,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12545,
											"end": 12549,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12538,
											"end": 12543,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12534,
											"end": 12550,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12499,
											"end": 12564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 12499,
											"end": 12564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12499,
											"end": 12564,
											"name": "tag",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 12499,
											"end": 12564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12589,
											"end": 12618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 12611,
											"end": 12617,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12589,
											"end": 12618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 12589,
											"end": 12618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12589,
											"end": 12618,
											"name": "tag",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 12589,
											"end": 12618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12584,
											"end": 12587,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12580,
											"end": 12619,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12619,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12619,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12342,
											"end": 12625,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12252,
											"end": 12625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12826,
											"end": 12830,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12864,
											"end": 12867,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 12853,
											"end": 12862,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12849,
											"end": 12868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12841,
											"end": 12868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12841,
											"end": 12868,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12878,
											"end": 12949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 12946,
											"end": 12947,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12935,
											"end": 12944,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12931,
											"end": 12948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12922,
											"end": 12928,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12878,
											"end": 12949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 12878,
											"end": 12949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12878,
											"end": 12949,
											"name": "tag",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 12878,
											"end": 12949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 13031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 13027,
											"end": 13029,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13016,
											"end": 13025,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13012,
											"end": 13030,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13003,
											"end": 13009,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 13031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 12959,
											"end": 13031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 13031,
											"name": "tag",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 12959,
											"end": 13031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13041,
											"end": 13113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 13109,
											"end": 13111,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13098,
											"end": 13107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13094,
											"end": 13112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13085,
											"end": 13091,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13041,
											"end": 13113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 13041,
											"end": 13113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13041,
											"end": 13113,
											"name": "tag",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 13041,
											"end": 13113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13160,
											"end": 13169,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13154,
											"end": 13158,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13150,
											"end": 13170,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13145,
											"end": 13147,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 13134,
											"end": 13143,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13123,
											"end": 13171,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13188,
											"end": 13264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 13259,
											"end": 13263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13250,
											"end": 13256,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13188,
											"end": 13264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 13188,
											"end": 13264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13188,
											"end": 13264,
											"name": "tag",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 13188,
											"end": 13264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13180,
											"end": 13264,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13180,
											"end": 13264,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12631,
											"end": 13271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13333,
											"end": 13338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13364,
											"end": 13370,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13358,
											"end": 13371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13349,
											"end": 13371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13349,
											"end": 13371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13380,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 13406,
											"end": 13411,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13380,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 13380,
											"end": 13412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13380,
											"end": 13412,
											"name": "tag",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 13380,
											"end": 13412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13277,
											"end": 13418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13493,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13542,
											"end": 13544,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13530,
											"end": 13539,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13521,
											"end": 13528,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13517,
											"end": 13540,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13513,
											"end": 13545,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 13510,
											"end": 13629,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13510,
											"end": 13629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "409"
										},
										{
											"begin": 13510,
											"end": 13629,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13548,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "410"
										},
										{
											"begin": 13548,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 13548,
											"end": 13627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13548,
											"end": 13627,
											"name": "tag",
											"source": 2,
											"value": "410"
										},
										{
											"begin": 13548,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13510,
											"end": 13629,
											"name": "tag",
											"source": 2,
											"value": "409"
										},
										{
											"begin": 13510,
											"end": 13629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13668,
											"end": 13669,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13693,
											"end": 13756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 13748,
											"end": 13755,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13739,
											"end": 13745,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13728,
											"end": 13737,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13724,
											"end": 13746,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13693,
											"end": 13756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 13693,
											"end": 13756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13693,
											"end": 13756,
											"name": "tag",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 13693,
											"end": 13756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13683,
											"end": 13756,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13683,
											"end": 13756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13639,
											"end": 13766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13424,
											"end": 13773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/IERC721A.sol",
								"contracts/Test,sol.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Test,sol.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC721A.sol\":{\"keccak256\":\"0x0cc0cb5618668629dac85790004802788f3d70ac70a915f40cd93eae2a3a8449\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbf8819d86a329142250ae75ce5eb4e55de52474a66dc83c19eea989fe0d5e7b\",\"dweb:/ipfs/Qme2a2B1owbqJUUtGBQ9sfriko5SAcxeTwqESp3xtxxAeM\"]},\"contracts/Test,sol.sol\":{\"keccak256\":\"0xb49b2cdc1997584a095fe56bfa9880e9880c3106e1303fd060087e148b41d537\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde5503d0a2bddea0bfa5f9e0beef2e2faf7b1374b552ce2391ede9bce45c078\",\"dweb:/ipfs/QmPWu8pgaFeK2Z5xsqZGTwZZB3csmthdRRd42NdTAc7dm3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 297,
								"contract": "contracts/Test,sol.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 299,
								"contract": "contracts/Test,sol.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 301,
								"contract": "contracts/Test,sol.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 303,
								"contract": "contracts/Test,sol.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 307,
								"contract": "contracts/Test,sol.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 311,
								"contract": "contracts/Test,sol.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 316,
								"contract": "contracts/Test,sol.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)229_storage)"
							},
							{
								"astId": 322,
								"contract": "contracts/Test,sol.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)229_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)229_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)229_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 228,
										"contract": "contracts/Test,sol.sol:ERC721A",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721 token receiver.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Test,sol.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC721A.sol\":{\"keccak256\":\"0x0cc0cb5618668629dac85790004802788f3d70ac70a915f40cd93eae2a3a8449\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbf8819d86a329142250ae75ce5eb4e55de52474a66dc83c19eea989fe0d5e7b\",\"dweb:/ipfs/Qme2a2B1owbqJUUtGBQ9sfriko5SAcxeTwqESp3xtxxAeM\"]},\"contracts/Test,sol.sol\":{\"keccak256\":\"0xb49b2cdc1997584a095fe56bfa9880e9880c3106e1303fd060087e148b41d537\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde5503d0a2bddea0bfa5f9e0beef2e2faf7b1374b552ce2391ede9bce45c078\",\"dweb:/ipfs/QmPWu8pgaFeK2Z5xsqZGTwZZB3csmthdRRd42NdTAc7dm3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/IERC721A.sol": {
				"ast": {
					"absolutePath": "contracts/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							205
						]
					},
					"id": 206,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "115:39:0",
								"text": " @dev Interface of ERC721A."
							},
							"fullyImplemented": false,
							"id": 205,
							"linearizedBaseContracts": [
								205
							],
							"name": "IERC721A",
							"nameLocation": "166:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "182:78:0",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 5,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "272:33:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "305:2:0"
									},
									"src": "266:42:0"
								},
								{
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "316:46:0",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 8,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "374:32:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "406:2:0"
									},
									"src": "368:41:0"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "417:67:0",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 11,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "496:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "522:2:0"
									},
									"src": "490:35:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "533:53:0",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 14,
									"name": "MintToZeroAddress",
									"nameLocation": "598:17:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:2:0"
									},
									"src": "592:26:0"
								},
								{
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "626:74:0",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 17,
									"name": "MintZeroQuantity",
									"nameLocation": "712:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "728:2:0"
									},
									"src": "706:25:0"
								},
								{
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "739:46:0",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 20,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "797:29:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "826:2:0"
									},
									"src": "791:38:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "837:78:0",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 23,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "927:33:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "960:2:0"
									},
									"src": "921:42:0"
								},
								{
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "971:55:0",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 26,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "1038:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1064:2:0"
									},
									"src": "1032:35:0"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "1075:119:0",
										"text": " Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 29,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1206:38:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1244:2:0"
									},
									"src": "1200:47:0"
								},
								{
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "1255:57:0",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 32,
									"name": "TransferToZeroAddress",
									"nameLocation": "1324:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1345:2:0"
									},
									"src": "1318:30:0"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1356:46:0",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 35,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1414:27:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1441:2:0"
									},
									"src": "1408:36:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1452:81:0",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"errorSelector": "3db1f9af",
									"id": 38,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1545:31:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1576:2:0"
									},
									"src": "1539:40:0"
								},
								{
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "1587:85:0",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"errorSelector": "00d58153",
									"id": 41,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1684:35:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1719:2:0"
									},
									"src": "1678:44:0"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 50,
									"members": [
										{
											"constant": false,
											"id": 43,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1994:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 50,
											"src": "1986:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 42,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1986:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 45,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2101:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 50,
											"src": "2094:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 44,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2094:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 47,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2178:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 50,
											"src": "2173:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 46,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2173:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 49,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2291:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 50,
											"src": "2284:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 48,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2284:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1922:14:0",
									"nodeType": "StructDefinition",
									"scope": 205,
									"src": "1915:393:0",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "2505:196:0",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 56,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2716:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "2753:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2752:9:0"
									},
									"scope": 205,
									"src": "2707:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "2955:348:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3318:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3343:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "3336:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 58,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3336:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3335:20:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "3379:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3379:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3378:6:0"
									},
									"scope": 205,
									"src": "3309:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "3578:90:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 73,
									"name": "Transfer",
									"nameLocation": "3680:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3705:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "3689:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3727:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "3711:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3747:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "3731:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3688:67:0"
									},
									"src": "3674:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "3764:96:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 82,
									"name": "Approval",
									"nameLocation": "3872:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3897:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3881:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3920:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3904:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3946:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3930:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3880:74:0"
									},
									"src": "3866:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "3963:127:0",
										"text": " @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 91,
									"name": "ApprovalForAll",
									"nameLocation": "4102:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4133:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "4117:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4117:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4156:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "4140:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4140:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4171:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "4166:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 88,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4166:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4116:64:0"
									},
									"src": "4096:85:0"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "4189:76:0",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4280:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4298:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "4290:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:15:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4336:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "4328:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4327:17:0"
									},
									"scope": 205,
									"src": "4271:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "4353:137:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "4505:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4521:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4513:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4512:17:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4561:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4553:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4553:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4552:15:0"
									},
									"scope": 205,
									"src": "4496:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "4576:727:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5318:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5353:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "5345:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5376:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "5368:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5368:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5397:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "5389:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5430:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "5415:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 115,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5415:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5334:107:0"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5458:0:0"
									},
									"scope": 205,
									"src": "5309:150:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "5467:82:0",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5564:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5599:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "5591:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5591:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5622:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "5614:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5643:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "5635:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5580:77:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5674:0:0"
									},
									"scope": 205,
									"src": "5555:120:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "5683:527:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6225:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6256:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "6248:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6248:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6279:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "6271:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6271:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6300:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "6292:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6237:77:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6331:0:0"
									},
									"scope": 205,
									"src": "6216:116:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "6340:472:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6827:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6843:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "6835:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6835:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6855:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "6847:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6834:29:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6880:0:0"
									},
									"scope": 205,
									"src": "6818:63:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "6889:326:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "7230:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7256:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "7248:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7248:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7271:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "7266:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7247:34:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7290:0:0"
									},
									"scope": 205,
									"src": "7221:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "7299:145:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7459:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7479:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "7471:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7470:17:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7519:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "7511:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7510:18:0"
									},
									"scope": 205,
									"src": "7450:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "7537:143:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7695:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7720:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "7712:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7735:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "7727:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7711:33:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "7768:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7768:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7767:6:0"
									},
									"scope": 205,
									"src": "7686:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "7971:60:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "8046:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8050:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "8076:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8076:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8075:15:0"
									},
									"scope": 205,
									"src": "8037:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "8099:62:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "8176:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8182:2:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "8208:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 182,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8208:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8207:15:0"
									},
									"scope": 205,
									"src": "8167:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "8231:92:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "8338:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8355:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "8347:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8347:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8346:17:0"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "8387:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 190,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8387:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8386:15:0"
									},
									"scope": 205,
									"src": "8329:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "8595:273:0",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."
									},
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 204,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8880:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8916:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "8900:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8937:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "8929:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8964:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "8948:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8986:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "8970:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8899:90:0"
									},
									"src": "8874:116:0"
								}
							],
							"scope": 206,
							"src": "156:8837:0",
							"usedErrors": [
								5,
								8,
								11,
								14,
								17,
								20,
								23,
								26,
								29,
								32,
								35,
								38,
								41
							]
						}
					],
					"src": "88:8905:0"
				},
				"id": 0
			},
			"contracts/Test,sol.sol": {
				"ast": {
					"absolutePath": "contracts/Test,sol.sol",
					"exportedSymbols": {
						"ERC721A": [
							1828
						],
						"ERC721A__IERC721Receiver": [
							223
						],
						"IERC721A": [
							205
						]
					},
					"id": 1829,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 207,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:1"
						},
						{
							"absolutePath": "contracts/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 208,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1829,
							"sourceUnit": 206,
							"src": "115:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721A__IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 209,
								"nodeType": "StructuredDocumentation",
								"src": "143:53:1",
								"text": " @dev Interface of ERC721 token receiver."
							},
							"fullyImplemented": false,
							"id": 223,
							"linearizedBaseContracts": [
								223
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "208:24:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "249:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "284:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "276:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "311:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "303:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "367:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "352:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "352:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "265:113:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "397:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 219,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "397:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "396:8:1"
									},
									"scope": 223,
									"src": "240:165:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1829,
							"src": "198:210:1",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 225,
										"name": "IERC721A",
										"nameLocations": [
											"950:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 205,
										"src": "950:8:1"
									},
									"id": 226,
									"nodeType": "InheritanceSpecifier",
									"src": "950:8:1"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 224,
								"nodeType": "StructuredDocumentation",
								"src": "412:516:1",
								"text": " @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 1828,
							"linearizedBaseContracts": [
								1828,
								205
							],
							"name": "ERC721A",
							"nameLocation": "939:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC721A.TokenApprovalRef",
									"id": 229,
									"members": [
										{
											"constant": false,
											"id": 228,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1095:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 229,
											"src": "1087:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 227,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1087:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "1059:16:1",
									"nodeType": "StructDefinition",
									"scope": 1828,
									"src": "1052:56:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 237,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "1376:27:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "1351:68:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 230,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1351:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 236,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1407:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 232,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1412:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "1407:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 234,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1406:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 235,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1418:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1406:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 240,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_MINTED",
									"nameLocation": "1520:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "1495:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 238,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1495:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 239,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1544:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_BURNED",
									"nameLocation": "1647:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "1622:52:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1622:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1671:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_BITPOS_AUX",
									"nameLocation": "1766:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "1741:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1741:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1780:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 254,
									"mutability": "constant",
									"name": "_BITMASK_AUX_COMPLEMENT",
									"nameLocation": "1899:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "1874:65:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1874:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 253,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1926:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1931:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "1926:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 251,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1925:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 252,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1938:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1925:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 257,
									"mutability": "constant",
									"name": "_BITPOS_START_TIMESTAMP",
									"nameLocation": "2039:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "2014:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 255,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2014:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 256,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2065:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 262,
									"mutability": "constant",
									"name": "_BITMASK_BURNED",
									"nameLocation": "2164:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "2139:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 258,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2139:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 261,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 259,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2182:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 260,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2187:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "2182:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 265,
									"mutability": "constant",
									"name": "_BITPOS_NEXT_INITIALIZED",
									"nameLocation": "2299:24:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "2274:55:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 263,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2274:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 264,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2326:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 270,
									"mutability": "constant",
									"name": "_BITMASK_NEXT_INITIALIZED",
									"nameLocation": "2434:25:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "2409:61:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 266,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2409:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 269,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 267,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2462:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 268,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2467:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "2462:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 273,
									"mutability": "constant",
									"name": "_BITPOS_EXTRA_DATA",
									"nameLocation": "2565:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "2540:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 271,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2540:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 272,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2586:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 281,
									"mutability": "constant",
									"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "2710:30:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "2685:72:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 274,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2685:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 280,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2744:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2749:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "2744:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 278,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2743:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 279,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2756:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2743:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 289,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS",
									"nameLocation": "2845:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "2820:58:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 282,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2820:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 288,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2865:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2870:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2865:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 286,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2864:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 287,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2877:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2864:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 292,
									"mutability": "constant",
									"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "3192:32:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "3167:64:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 290,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3167:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 291,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3227:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 295,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "3382:25:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "3357:128:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 293,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3357:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 294,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3419:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 297,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "3735:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "3719:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 296,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3719:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 299,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "3810:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "3794:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 298,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3794:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 301,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "3865:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "3850:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 300,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3850:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 303,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "3915:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "3900:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 302,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3900:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "4354:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "4318:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyType": {
											"id": 304,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4326:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4318:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4337:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 311,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "4622:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "4586:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 310,
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4594:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4586:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 309,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4605:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 316,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "4745:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "4700:60:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$229_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
									},
									"typeName": {
										"id": 315,
										"keyType": {
											"id": 312,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4708:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4700:36:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$229_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
										},
										"valueType": {
											"id": 314,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 313,
												"name": "TokenApprovalRef",
												"nameLocations": [
													"4719:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 229,
												"src": "4719:16:1"
											},
											"referencedDeclaration": 229,
											"src": "4719:16:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$229_storage_ptr",
												"typeString": "struct ERC721A.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 322,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "4871:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "4818:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 321,
										"keyType": {
											"id": 317,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4826:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4818:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 320,
											"keyType": {
												"id": 318,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4845:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4837:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 319,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4856:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "5141:102:1",
										"statements": [
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 329,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "5152:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 330,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "5160:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5152:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "5152:13:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 333,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "5176:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 334,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "5186:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5176:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "5176:17:1"
											},
											{
												"expression": {
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 337,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "5204:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 338,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "5220:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5220:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5204:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "5204:31:1"
											}
										]
									},
									"id": 343,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "5111:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "5097:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5097:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "5132:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "5118:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 325,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5118:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5096:44:1"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5141:0:1"
									},
									"scope": 1828,
									"src": "5085:158:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "5644:27:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5662:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 348,
												"id": 350,
												"nodeType": "Return",
												"src": "5655:8:1"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "5445:128:1",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "5588:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5601:2:1"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "5635:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5635:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5634:9:1"
									},
									"scope": 1828,
									"src": "5579:92:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "5814:39:1",
										"statements": [
											{
												"expression": {
													"id": 358,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 297,
													"src": "5832:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 357,
												"id": 359,
												"nodeType": "Return",
												"src": "5825:20:1"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "5679:65:1",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "5759:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:2:1"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5805:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5804:9:1"
									},
									"scope": 1828,
									"src": "5750:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										56
									],
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "6133:253:1",
										"statements": [
											{
												"id": 375,
												"nodeType": "UncheckedBlock",
												"src": "6289:90:1",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 368,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 297,
																	"src": "6321:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 369,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "6337:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 371,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "6352:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6352:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6321:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 367,
														"id": 374,
														"nodeType": "Return",
														"src": "6314:53:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "5861:196:1",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "6072:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 364,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6106:8:1"
									},
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:2:1"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "6124:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6124:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6123:9:1"
									},
									"scope": 1828,
									"src": "6063:323:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "6548:232:1",
										"statements": [
											{
												"id": 388,
												"nodeType": "UncheckedBlock",
												"src": "6698:75:1",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 383,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "6730:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 384,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "6746:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6746:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6730:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 382,
														"id": 387,
														"nodeType": "Return",
														"src": "6723:38:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "6394:84:1",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "6493:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6505:2:1"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "6539:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6539:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6538:9:1"
									},
									"scope": 1828,
									"src": "6484:296:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "6926:38:1",
										"statements": [
											{
												"expression": {
													"id": 396,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 299,
													"src": "6944:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 395,
												"id": 397,
												"nodeType": "Return",
												"src": "6937:19:1"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "6788:68:1",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "6871:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6883:2:1"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "6917:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6917:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6916:9:1"
									},
									"scope": 1828,
									"src": "6862:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "7328:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 408,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "7343:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7360:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7352:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 409,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7352:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7352:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7343:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 417,
												"nodeType": "IfStatement",
												"src": "7339:60:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 414,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "7371:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7371:28:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 416,
													"nodeType": "RevertStatement",
													"src": "7364:35:1"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 418,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "7417:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 420,
														"indexExpression": {
															"id": 419,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "7436:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7417:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 421,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "7445:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7417:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 407,
												"id": 423,
												"nodeType": "Return",
												"src": "7410:62:1"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "7165:76:1",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7256:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 404,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7301:8:1"
									},
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7274:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "7266:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7266:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7265:15:1"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "7319:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7319:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7318:9:1"
									},
									"scope": 1828,
									"src": "7247:233:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "7632:108:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 433,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 311,
																		"src": "7651:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 435,
																	"indexExpression": {
																		"id": 434,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "7670:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7651:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 436,
																	"name": "_BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "7680:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7651:50:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 438,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7650:52:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 439,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "7705:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7650:82:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 432,
												"id": 441,
												"nodeType": "Return",
												"src": "7643:89:1"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "7488:68:1",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "7571:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7593:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "7585:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7584:15:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "7623:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7623:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7622:9:1"
									},
									"scope": 1828,
									"src": "7562:178:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "7908:108:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 451,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 311,
																		"src": "7927:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 453,
																	"indexExpression": {
																		"id": 452,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "7946:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7927:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 454,
																	"name": "_BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 243,
																	"src": "7956:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7927:50:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 456,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7926:52:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 457,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "7981:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7926:82:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 450,
												"id": 459,
												"nodeType": "Return",
												"src": "7919:89:1"
											}
										]
									},
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "7748:84:1",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "7847:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7869:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "7861:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7860:15:1"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "7899:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7898:9:1"
									},
									"scope": 1828,
									"src": "7838:178:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "8197:74:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 471,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "8222:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 473,
																"indexExpression": {
																	"id": 472,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "8241:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8222:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 474,
																"name": "_BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "8251:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8222:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8215:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 469,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "8215:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8215:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 468,
												"id": 477,
												"nodeType": "Return",
												"src": "8208:55:1"
											}
										]
									},
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "8024:104:1",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "8143:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8159:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "8151:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8151:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8150:15:1"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "8189:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 466,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8189:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8188:8:1"
									},
									"scope": 1828,
									"src": "8134:137:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "8520:343:1",
										"statements": [
											{
												"assignments": [
													488
												],
												"declarations": [
													{
														"constant": false,
														"id": 488,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "8539:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 515,
														"src": "8531:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 487,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8531:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"baseExpression": {
														"id": 489,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "8548:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 491,
													"indexExpression": {
														"id": 490,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "8567:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8548:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8531:42:1"
											},
											{
												"assignments": [
													494
												],
												"declarations": [
													{
														"constant": false,
														"id": 494,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "8592:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 515,
														"src": "8584:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 493,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8584:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 495,
												"nodeType": "VariableDeclarationStatement",
												"src": "8584:17:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8686:42:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8701:16:1",
															"value": {
																"name": "aux",
																"nodeType": "YulIdentifier",
																"src": "8714:3:1"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nodeType": "YulIdentifier",
																	"src": "8701:9:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 484,
														"isOffset": false,
														"isSlot": false,
														"src": "8714:3:1",
														"valueSize": 1
													},
													{
														"declaration": 494,
														"isOffset": false,
														"isSlot": false,
														"src": "8701:9:1",
														"valueSize": 1
													}
												],
												"id": 496,
												"nodeType": "InlineAssembly",
												"src": "8677:51:1"
											},
											{
												"expression": {
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 497,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "8738:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 498,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 488,
																		"src": "8748:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 499,
																		"name": "_BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "8757:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8748:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 501,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8747:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 502,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 494,
																		"src": "8785:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 503,
																		"name": "_BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 246,
																		"src": "8798:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8785:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 505,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8784:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8747:63:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8738:72:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "8738:72:1"
											},
											{
												"expression": {
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 509,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "8821:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 511,
														"indexExpression": {
															"id": 510,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "8840:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8821:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 512,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "8849:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8821:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "8821:34:1"
											}
										]
									},
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "8279:174:1",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "8468:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8484:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "8476:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8476:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "8498:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "8491:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 483,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8491:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8475:27:1"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8520:0:1"
									},
									"scope": 1828,
									"src": "8459:404:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "9501:548:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 525,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "9819:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "9819:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 528,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "9896:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "9896:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "9819:102:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 532,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "9973:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9988:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "9973:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9819:179:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 524,
												"id": 536,
												"nodeType": "Return",
												"src": "9799:199:1"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "9056:348:1",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "9419:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 521,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9477:8:1"
									},
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "9444:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "9437:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 518,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "9437:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9436:20:1"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "9495:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 522,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9495:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9494:6:1"
									},
									"scope": 1828,
									"src": "9410:639:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										179
									],
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "10381:31:1",
										"statements": [
											{
												"expression": {
													"id": 545,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 301,
													"src": "10399:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 544,
												"id": 546,
												"nodeType": "Return",
												"src": "10392:12:1"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "10246:60:1",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "10321:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 541,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10348:8:1"
									},
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10325:2:1"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "10366:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 542,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10366:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10365:15:1"
									},
									"scope": 1828,
									"src": "10312:100:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										185
									],
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "10559:33:1",
										"statements": [
											{
												"expression": {
													"id": 555,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 303,
													"src": "10577:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 554,
												"id": 556,
												"nodeType": "Return",
												"src": "10570:14:1"
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "10420:62:1",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "10497:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 551,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10526:8:1"
									},
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10503:2:1"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "10544:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10544:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10543:15:1"
									},
									"scope": 1828,
									"src": "10488:104:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										193
									],
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "10786:230:1",
										"statements": [
											{
												"condition": {
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10801:17:1",
													"subExpression": {
														"arguments": [
															{
																"id": 568,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "10810:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 567,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "10802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10802:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 574,
												"nodeType": "IfStatement",
												"src": "10797:59:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 571,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "10827:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10827:29:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 573,
													"nodeType": "RevertStatement",
													"src": "10820:36:1"
												}
											},
											{
												"assignments": [
													576
												],
												"declarations": [
													{
														"constant": false,
														"id": 576,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "10883:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 600,
														"src": "10869:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 575,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "10869:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 579,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 577,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "10893:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10893:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10869:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "10927:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10921:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 580,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "10921:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10921:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10936:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "10921:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10946:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10921:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11006:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10921:87:1",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 591,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "10974:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 593,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 561,
																				"src": "10993:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 592,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1827,
																			"src": "10983:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10983:18:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 589,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "10957:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "10961:12:1",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "10957:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10957:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10950:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 587,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "10950:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10950:53:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 566,
												"id": 599,
												"nodeType": "Return",
												"src": "10914:94:1"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "10600:92:1",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "10707:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 563,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10753:8:1"
									},
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10724:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "10716:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10716:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10715:17:1"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "10771:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 564,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10771:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10770:15:1"
									},
									"scope": 1828,
									"src": "10698:318:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "11334:28:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11352:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 606,
												"id": 608,
												"nodeType": "Return",
												"src": "11345:9:1"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "11024:238:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "11277:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11285:2:1"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "11319:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 604,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11319:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11318:15:1"
									},
									"scope": 1828,
									"src": "11268:94:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										107
									],
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "11786:71:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 624,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 613,
																			"src": "11839:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 623,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "11820:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11820:27:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11812:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 621,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11812:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11812:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11804:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 619,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11804:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11804:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 618,
												"id": 628,
												"nodeType": "Return",
												"src": "11797:52:1"
											}
										]
									},
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "11562:137:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "11714:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 615,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11759:8:1"
									},
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11730:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "11722:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11722:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11721:17:1"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "11777:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11777:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11776:9:1"
									},
									"scope": 1828,
									"src": "11705:152:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "12139:73:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 641,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "12195:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 640,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "12176:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12176:27:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 639,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "12157:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$50_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12157:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 638,
												"id": 644,
												"nodeType": "Return",
												"src": "12150:54:1"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "11865:175:1",
										"text": " @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."
									},
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "12055:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12076:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "12068:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12068:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12067:17:1"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "12116:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 636,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 635,
														"name": "TokenOwnership",
														"nameLocations": [
															"12116:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 50,
														"src": "12116:14:1"
													},
													"referencedDeclaration": 50,
													"src": "12116:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$50_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12115:23:1"
									},
									"scope": 1828,
									"src": "12046:166:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "12399:70:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 656,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "12436:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 658,
															"indexExpression": {
																"id": 657,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 649,
																"src": "12454:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12436:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 655,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "12417:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$50_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12417:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 654,
												"id": 660,
												"nodeType": "Return",
												"src": "12410:51:1"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "12220:82:1",
										"text": " @dev Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "12317:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12338:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "12330:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12330:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12329:15:1"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "12376:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 652,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 651,
														"name": "TokenOwnership",
														"nameLocations": [
															"12376:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 50,
														"src": "12376:14:1"
													},
													"referencedDeclaration": 50,
													"src": "12376:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$50_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12375:23:1"
									},
									"scope": 1828,
									"src": "12308:161:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "12646:132:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 668,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "12661:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 670,
														"indexExpression": {
															"id": 669,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "12679:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12661:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 671,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12689:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12661:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 682,
												"nodeType": "IfStatement",
												"src": "12657:114:1",
												"trueBody": {
													"id": 681,
													"nodeType": "Block",
													"src": "12692:79:1",
													"statements": [
														{
															"expression": {
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 673,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 307,
																		"src": "12707:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 675,
																	"indexExpression": {
																		"id": 674,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "12725:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12707:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 677,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "12753:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 676,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "12734:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12734:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12707:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 680,
															"nodeType": "ExpressionStatement",
															"src": "12707:52:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "12477:99:1",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "12591:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12622:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "12614:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12614:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12613:15:1"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12646:0:1"
									},
									"scope": 1828,
									"src": "12582:196:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "12936:1199:1",
										"statements": [
											{
												"assignments": [
													693
												],
												"declarations": [
													{
														"constant": false,
														"id": 693,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "12955:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 737,
														"src": "12947:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 692,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12947:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"initialValue": {
													"id": 694,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 687,
													"src": "12962:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12947:22:1"
											},
											{
												"id": 733,
												"nodeType": "UncheckedBlock",
												"src": "12982:1097:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 696,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "13011:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13011:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 698,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "13030:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13011:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 732,
														"nodeType": "IfStatement",
														"src": "13007:1061:1",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 700,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "13057:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 701,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 297,
																	"src": "13064:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13057:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 731,
															"nodeType": "IfStatement",
															"src": "13053:1015:1",
															"trueBody": {
																"id": 730,
																"nodeType": "Block",
																"src": "13079:989:1",
																"statements": [
																	{
																		"assignments": [
																			704
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 704,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "13110:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 730,
																				"src": "13102:14:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 703,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13102:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 708,
																		"initialValue": {
																			"baseExpression": {
																				"id": 705,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "13119:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 707,
																			"indexExpression": {
																				"id": 706,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 693,
																				"src": "13137:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13119:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13102:40:1"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 709,
																					"name": "packed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 704,
																					"src": "13208:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"id": 710,
																					"name": "_BITMASK_BURNED",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 262,
																					"src": "13217:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13208:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 712,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13236:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "13208:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 729,
																		"nodeType": "IfStatement",
																		"src": "13204:845:1",
																		"trueBody": {
																			"id": 728,
																			"nodeType": "Block",
																			"src": "13239:810:1",
																			"statements": [
																				{
																					"body": {
																						"id": 724,
																						"nodeType": "Block",
																						"src": "13893:93:1",
																						"statements": [
																							{
																								"expression": {
																									"id": 722,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 717,
																										"name": "packed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 704,
																										"src": "13924:6:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 718,
																											"name": "_packedOwnerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 307,
																											"src": "13933:17:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																												"typeString": "mapping(uint256 => uint256)"
																											}
																										},
																										"id": 721,
																										"indexExpression": {
																											"id": 720,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "UnaryOperation",
																											"operator": "--",
																											"prefix": true,
																											"src": "13951:6:1",
																											"subExpression": {
																												"id": 719,
																												"name": "curr",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 693,
																												"src": "13953:4:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "13933:25:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "13924:34:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 723,
																								"nodeType": "ExpressionStatement",
																								"src": "13924:34:1"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 716,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 714,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 704,
																							"src": "13880:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 715,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13890:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "13880:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 725,
																					"nodeType": "WhileStatement",
																					"src": "13873:113:1"
																				},
																				{
																					"expression": {
																						"id": 726,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 704,
																						"src": "14019:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 691,
																					"id": 727,
																					"nodeType": "Return",
																					"src": "14012:13:1"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 734,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "14096:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14096:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 736,
												"nodeType": "RevertStatement",
												"src": "14089:38:1"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "12786:68:1",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "12869:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12896:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "12888:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12887:17:1"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "12927:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12927:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12926:9:1"
									},
									"scope": 1828,
									"src": "12860:1275:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "14333:267:1",
										"statements": [
											{
												"expression": {
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 747,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "14344:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 749,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14354:4:1",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 43,
														"src": "14344:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 754,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 741,
																		"src": "14377:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14369:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 752,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "14369:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14369:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14361:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 750,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14361:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14361:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14344:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "14344:41:1"
											},
											{
												"expression": {
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 759,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "14396:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 761,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14406:14:1",
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 45,
														"src": "14396:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 764,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "14430:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 765,
																	"name": "_BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "14440:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14430:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14423:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 762,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "14423:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14423:41:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "14396:68:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "14396:68:1"
											},
											{
												"expression": {
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 770,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "14475:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14485:6:1",
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 47,
														"src": "14475:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 773,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "14494:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 774,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "14503:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14494:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14522:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14494:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14475:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "14475:48:1"
											},
											{
												"expression": {
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 780,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "14534:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14544:9:1",
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 49,
														"src": "14534:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 785,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "14563:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 786,
																	"name": "_BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "14573:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14563:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14556:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 783,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "14556:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14556:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "14534:58:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "14534:58:1"
											}
										]
									},
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "14143:85:1",
										"text": " @dev Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "14243:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "14270:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "14262:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14262:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14261:16:1"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "14322:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "14300:31:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 744,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 743,
														"name": "TokenOwnership",
														"nameLocations": [
															"14300:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 50,
														"src": "14300:14:1"
													},
													"referencedDeclaration": 50,
													"src": "14300:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$50_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14299:33:1"
									},
									"scope": 1828,
									"src": "14234:366:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "14779:354:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "14799:327:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14911:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "14924:5:1"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "14931:16:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14920:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14920:28:1"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "14911:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15042:73:1",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "15055:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_BITPOS_START_TIMESTAMP",
																						"nodeType": "YulIdentifier",
																						"src": "15069:23:1"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nodeType": "YulIdentifier",
																							"src": "15094:9:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15094:11:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "15065:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15065:41:1"
																			},
																			{
																				"name": "flags",
																				"nodeType": "YulIdentifier",
																				"src": "15108:5:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "15062:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15062:52:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15052:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15052:63:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15042:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 289,
														"isOffset": false,
														"isSlot": false,
														"src": "14931:16:1",
														"valueSize": 1
													},
													{
														"declaration": 257,
														"isOffset": false,
														"isSlot": false,
														"src": "15069:23:1",
														"valueSize": 1
													},
													{
														"declaration": 797,
														"isOffset": false,
														"isSlot": false,
														"src": "15108:5:1",
														"valueSize": 1
													},
													{
														"declaration": 795,
														"isOffset": false,
														"isSlot": false,
														"src": "14911:5:1",
														"valueSize": 1
													},
													{
														"declaration": 795,
														"isOffset": false,
														"isSlot": false,
														"src": "14924:5:1",
														"valueSize": 1
													},
													{
														"declaration": 795,
														"isOffset": false,
														"isSlot": false,
														"src": "15055:5:1",
														"valueSize": 1
													},
													{
														"declaration": 800,
														"isOffset": false,
														"isSlot": false,
														"src": "15042:6:1",
														"valueSize": 1
													}
												],
												"id": 802,
												"nodeType": "InlineAssembly",
												"src": "14790:336:1"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "14608:69:1",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "14692:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14719:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "14711:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "14734:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "14726:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14726:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14710:30:1"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14771:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "14763:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14763:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14762:16:1"
									},
									"scope": 1828,
									"src": "14683:450:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "15321:238:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "15407:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15485:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "_BITPOS_NEXT_INITIALIZED",
																		"nodeType": "YulIdentifier",
																		"src": "15499:24:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nodeType": "YulIdentifier",
																				"src": "15528:8:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15538:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15525:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15525:15:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "15495:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15495:46:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15485:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 265,
														"isOffset": false,
														"isSlot": false,
														"src": "15499:24:1",
														"valueSize": 1
													},
													{
														"declaration": 807,
														"isOffset": false,
														"isSlot": false,
														"src": "15528:8:1",
														"valueSize": 1
													},
													{
														"declaration": 810,
														"isOffset": false,
														"isSlot": false,
														"src": "15485:6:1",
														"valueSize": 1
													}
												],
												"id": 812,
												"nodeType": "InlineAssembly",
												"src": "15398:154:1"
											}
										]
									},
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "15141:88:1",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "15244:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15273:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "15265:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15264:18:1"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "15313:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "15305:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15305:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15304:16:1"
									},
									"scope": 1828,
									"src": "15235:324:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										147
									],
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "16314:330:1",
										"statements": [
											{
												"assignments": [
													824
												],
												"declarations": [
													{
														"constant": false,
														"id": 824,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16333:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 858,
														"src": "16325:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 823,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16325:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 828,
												"initialValue": {
													"arguments": [
														{
															"id": 826,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "16349:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 825,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "16341:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16341:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16325:32:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 829,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "16374:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16374:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 831,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "16397:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16374:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 844,
												"nodeType": "IfStatement",
												"src": "16370:175:1",
												"trueBody": {
													"condition": {
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "16421:45:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 834,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 824,
																	"src": "16439:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 835,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1817,
																		"src": "16446:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16446:19:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 833,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "16422:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16422:44:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 843,
													"nodeType": "IfStatement",
													"src": "16417:128:1",
													"trueBody": {
														"id": 842,
														"nodeType": "Block",
														"src": "16468:77:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 839,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "16494:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16494:35:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 841,
																"nodeType": "RevertStatement",
																"src": "16487:42:1"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 845,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "16557:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$229_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
																}
															},
															"id": 847,
															"indexExpression": {
																"id": 846,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "16573:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16557:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$229_storage",
																"typeString": "struct ERC721A.TokenApprovalRef storage ref"
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16582:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 228,
														"src": "16557:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 849,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "16590:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16557:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "16557:35:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 853,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "16617:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 854,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "16624:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "16628:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 852,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "16608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16608:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "EmitStatement",
												"src": "16603:33:1"
											}
										]
									},
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "15758:472:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "16245:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 821,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16305:8:1"
									},
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16261:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "16253:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16253:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16273:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "16265:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16252:29:1"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16314:0:1"
									},
									"scope": 1828,
									"src": "16236:408:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										163
									],
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "16888:133:1",
										"statements": [
											{
												"condition": {
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16903:17:1",
													"subExpression": {
														"arguments": [
															{
																"id": 869,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 862,
																"src": "16912:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 868,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "16904:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16904:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 875,
												"nodeType": "IfStatement",
												"src": "16899:64:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 872,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "16929:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16929:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 874,
													"nodeType": "RevertStatement",
													"src": "16922:41:1"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 876,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "16983:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$229_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
															}
														},
														"id": 878,
														"indexExpression": {
															"id": 877,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "16999:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16983:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$229_storage",
															"typeString": "struct ERC721A.TokenApprovalRef storage ref"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "17008:5:1",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 228,
													"src": "16983:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 867,
												"id": 880,
												"nodeType": "Return",
												"src": "16976:37:1"
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "16652:145:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "16812:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 864,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16861:8:1"
									},
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16832:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "16824:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16823:17:1"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "16879:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16879:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16878:9:1"
									},
									"scope": 1828,
									"src": "16803:218:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										155
									],
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "17445:150:1",
										"statements": [
											{
												"expression": {
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 891,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "17456:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 895,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 892,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1817,
																	"src": "17475:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17475:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17456:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 896,
														"indexExpression": {
															"id": 894,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "17496:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17456:49:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 897,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "17508:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17456:60:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "17456:60:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 901,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1817,
																"src": "17547:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17547:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "17568:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 904,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "17578:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 900,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "17532:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17532:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "EmitStatement",
												"src": "17527:60:1"
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "17029:326:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "17370:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 889,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17436:8:1"
									},
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17396:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "17388:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17388:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "17411:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "17406:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 886,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17406:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17387:33:1"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17445:0:1"
									},
									"scope": 1828,
									"src": "17361:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										173
									],
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "17855:61:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 919,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "17873:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 921,
														"indexExpression": {
															"id": 920,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "17892:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17873:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 923,
													"indexExpression": {
														"id": 922,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "17899:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17873:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 918,
												"id": 924,
												"nodeType": "Return",
												"src": "17866:42:1"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "17603:143:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "17761:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 915,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17831:8:1"
									},
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17786:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "17778:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17778:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17801:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "17793:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17793:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17777:33:1"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "17849:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 916,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17849:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17848:6:1"
									},
									"scope": 1828,
									"src": "17752:164:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "18245:211:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 934,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "18276:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18276:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 936,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 929,
																"src": "18295:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18276:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 938,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 929,
																"src": "18319:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 939,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "18329:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18319:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "18276:66:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 942,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "18380:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 944,
																"indexExpression": {
																	"id": 943,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 929,
																	"src": "18398:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18380:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 945,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "18409:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18380:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18428:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "18380:49:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18276:153:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 933,
												"id": 950,
												"nodeType": "Return",
												"src": "18256:173:1"
											}
										]
									},
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "17924:244:1",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."
									},
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "18183:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18199:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "18191:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18191:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18190:17:1"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "18239:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 931,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18239:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18238:6:1"
									},
									"scope": 1828,
									"src": "18174:282:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "18727:497:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "18747:470:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18859:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "18872:5:1"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "18879:16:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18868:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18868:28:1"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "18859:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19011:45:1",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nodeType": "YulIdentifier",
																		"src": "19028:9:1"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "19039:16:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19024:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19024:32:1"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nodeType": "YulIdentifier",
																	"src": "19011:9:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19140:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "19156:9:1"
																			},
																			{
																				"name": "owner",
																				"nodeType": "YulIdentifier",
																				"src": "19167:5:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19153:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19153:20:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "19178:9:1"
																			},
																			{
																				"name": "approvedAddress",
																				"nodeType": "YulIdentifier",
																				"src": "19189:15:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19175:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19175:30:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "19150:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19150:56:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "19140:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 289,
														"isOffset": false,
														"isSlot": false,
														"src": "18879:16:1",
														"valueSize": 1
													},
													{
														"declaration": 289,
														"isOffset": false,
														"isSlot": false,
														"src": "19039:16:1",
														"valueSize": 1
													},
													{
														"declaration": 955,
														"isOffset": false,
														"isSlot": false,
														"src": "19189:15:1",
														"valueSize": 1
													},
													{
														"declaration": 959,
														"isOffset": false,
														"isSlot": false,
														"src": "19011:9:1",
														"valueSize": 1
													},
													{
														"declaration": 959,
														"isOffset": false,
														"isSlot": false,
														"src": "19028:9:1",
														"valueSize": 1
													},
													{
														"declaration": 959,
														"isOffset": false,
														"isSlot": false,
														"src": "19156:9:1",
														"valueSize": 1
													},
													{
														"declaration": 959,
														"isOffset": false,
														"isSlot": false,
														"src": "19178:9:1",
														"valueSize": 1
													},
													{
														"declaration": 957,
														"isOffset": false,
														"isSlot": false,
														"src": "18859:5:1",
														"valueSize": 1
													},
													{
														"declaration": 957,
														"isOffset": false,
														"isSlot": false,
														"src": "18872:5:1",
														"valueSize": 1
													},
													{
														"declaration": 957,
														"isOffset": false,
														"isSlot": false,
														"src": "19167:5:1",
														"valueSize": 1
													},
													{
														"declaration": 962,
														"isOffset": false,
														"isSlot": false,
														"src": "19140:6:1",
														"valueSize": 1
													}
												],
												"id": 964,
												"nodeType": "InlineAssembly",
												"src": "18738:479:1"
											}
										]
									},
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "18464:95:1",
										"text": " @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."
									},
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSenderApprovedOrOwner",
									"nameLocation": "18574:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "18617:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "18609:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18609:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "18643:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18643:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "18675:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "18667:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18598:93:1"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "18719:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "18714:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 961,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18714:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18713:13:1"
									},
									"scope": 1828,
									"src": "18565:659:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "19498:324:1",
										"statements": [
											{
												"assignments": [
													978
												],
												"declarations": [
													{
														"constant": false,
														"id": 978,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "19534:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 984,
														"src": "19509:38:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$229_storage_ptr",
															"typeString": "struct ERC721A.TokenApprovalRef"
														},
														"typeName": {
															"id": 977,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 976,
																"name": "TokenApprovalRef",
																"nameLocations": [
																	"19509:16:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 229,
																"src": "19509:16:1"
															},
															"referencedDeclaration": 229,
															"src": "19509:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$229_storage_ptr",
																"typeString": "struct ERC721A.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 982,
												"initialValue": {
													"baseExpression": {
														"id": 979,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "19550:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$229_storage_$",
															"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
														}
													},
													"id": 981,
													"indexExpression": {
														"id": 980,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "19566:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19550:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$229_storage",
														"typeString": "struct ERC721A.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19509:65:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "19689:126:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19704:41:1",
															"value": {
																"name": "tokenApproval.slot",
																"nodeType": "YulIdentifier",
																"src": "19727:18:1"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nodeType": "YulIdentifier",
																	"src": "19704:19:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19759:45:1",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nodeType": "YulIdentifier",
																		"src": "19784:19:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "19778:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19778:26:1"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nodeType": "YulIdentifier",
																	"src": "19759:15:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 974,
														"isOffset": false,
														"isSlot": false,
														"src": "19759:15:1",
														"valueSize": 1
													},
													{
														"declaration": 972,
														"isOffset": false,
														"isSlot": false,
														"src": "19704:19:1",
														"valueSize": 1
													},
													{
														"declaration": 972,
														"isOffset": false,
														"isSlot": false,
														"src": "19784:19:1",
														"valueSize": 1
													},
													{
														"declaration": 978,
														"isOffset": false,
														"isSlot": true,
														"src": "19727:18:1",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 983,
												"nodeType": "InlineAssembly",
												"src": "19680:135:1"
											}
										]
									},
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "19232:99:1",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedSlotAndAddress",
									"nameLocation": "19346:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19381:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "19373:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19372:17:1"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "19447:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "19439:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19439:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "19476:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "19468:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19468:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19438:54:1"
									},
									"scope": 1828,
									"src": "19337:485:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										139
									],
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "20573:2694:1",
										"statements": [
											{
												"assignments": [
													997
												],
												"declarations": [
													{
														"constant": false,
														"id": 997,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "20592:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1129,
														"src": "20584:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 996,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20584:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1001,
												"initialValue": {
													"arguments": [
														{
															"id": 999,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "20633:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 998,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "20614:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20614:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20584:57:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1006,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "20674:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20666:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1004,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "20666:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20666:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20658:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1002,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20658:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20658:37:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1009,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "20699:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20658:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1014,
												"nodeType": "IfStatement",
												"src": "20654:86:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1011,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "20712:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20712:28:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1013,
													"nodeType": "RevertStatement",
													"src": "20705:35:1"
												}
											},
											{
												"assignments": [
													1016,
													1018
												],
												"declarations": [
													{
														"constant": false,
														"id": 1016,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "20762:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1129,
														"src": "20754:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1015,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20754:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1018,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "20791:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 1129,
														"src": "20783:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1017,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20783:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1022,
												"initialValue": {
													"arguments": [
														{
															"id": 1020,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "20837:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1019,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "20810:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20810:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20753:92:1"
											},
											{
												"condition": {
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "20944:69:1",
													"subExpression": {
														"arguments": [
															{
																"id": 1024,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "20970:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1025,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "20987:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1026,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1817,
																	"src": "20993:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20993:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1023,
															"name": "_isSenderApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "20945:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20945:68:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1040,
												"nodeType": "IfStatement",
												"src": "20940:180:1",
												"trueBody": {
													"condition": {
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "21032:44:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 1031,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "21050:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1032,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1817,
																		"src": "21056:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21056:19:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1030,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "21033:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21033:43:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1039,
													"nodeType": "IfStatement",
													"src": "21028:92:1",
													"trueBody": {
														"errorCall": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1036,
																"name": "TransferCallerNotOwnerNorApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "21085:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21085:35:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1038,
														"nodeType": "RevertStatement",
														"src": "21078:42:1"
													}
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1041,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "21137:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21151:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21143:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1042,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21143:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21143:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21137:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1050,
												"nodeType": "IfStatement",
												"src": "21133:52:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1047,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "21162:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21162:23:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1049,
													"nodeType": "RevertStatement",
													"src": "21155:30:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1052,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "21220:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1053,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "21226:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1054,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "21230:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21239:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1051,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "21198:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21198:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "21198:43:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "21316:186:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21350:141:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "21453:19:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21474:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "21446:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21446:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21446:30:1"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "21334:15:1"
															},
															"nodeType": "YulIf",
															"src": "21331:160:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1018,
														"isOffset": false,
														"isSlot": false,
														"src": "21334:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1016,
														"isOffset": false,
														"isSlot": false,
														"src": "21453:19:1",
														"valueSize": 1
													}
												],
												"id": 1058,
												"nodeType": "InlineAssembly",
												"src": "21307:195:1"
											},
											{
												"id": 1115,
												"nodeType": "UncheckedBlock",
												"src": "21774:1388:1",
												"statements": [
													{
														"expression": {
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "21869:26:1",
															"subExpression": {
																"baseExpression": {
																	"id": 1059,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "21871:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1061,
																"indexExpression": {
																	"id": 1060,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "21890:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21871:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1063,
														"nodeType": "ExpressionStatement",
														"src": "21869:26:1"
													},
													{
														"expression": {
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "21938:24:1",
															"subExpression": {
																"baseExpression": {
																	"id": 1064,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "21940:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1066,
																"indexExpression": {
																	"id": 1065,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 990,
																	"src": "21959:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21940:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1068,
														"nodeType": "ExpressionStatement",
														"src": "21938:24:1"
													},
													{
														"expression": {
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1069,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "22233:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1071,
																"indexExpression": {
																	"id": 1070,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "22251:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "22233:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1073,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 990,
																		"src": "22299:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1074,
																			"name": "_BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 270,
																			"src": "22320:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1076,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "22363:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1077,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 990,
																					"src": "22369:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1078,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 997,
																					"src": "22373:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1075,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1807,
																				"src": "22348:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22348:45:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22320:73:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1072,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "22262:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22262:146:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22233:175:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1083,
														"nodeType": "ExpressionStatement",
														"src": "22233:175:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1084,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "22528:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1085,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "22550:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22528:47:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22579:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22528:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1114,
														"nodeType": "IfStatement",
														"src": "22524:627:1",
														"trueBody": {
															"id": 1113,
															"nodeType": "Block",
															"src": "22582:569:1",
															"statements": [
																{
																	"assignments": [
																		1090
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1090,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "22609:11:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1113,
																			"src": "22601:19:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1089,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "22601:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1094,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1091,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 992,
																			"src": "22623:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22633:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22623:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "22601:33:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1095,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "22756:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1097,
																			"indexExpression": {
																				"id": 1096,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1090,
																				"src": "22774:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22756:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22790:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "22756:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1112,
																	"nodeType": "IfStatement",
																	"src": "22752:384:1",
																	"trueBody": {
																		"id": 1111,
																		"nodeType": "Block",
																		"src": "22793:343:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1102,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1100,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1090,
																						"src": "22879:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1101,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 297,
																						"src": "22894:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22879:28:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1110,
																				"nodeType": "IfStatement",
																				"src": "22875:242:1",
																				"trueBody": {
																					"id": 1109,
																					"nodeType": "Block",
																					"src": "22909:208:1",
																					"statements": [
																						{
																							"expression": {
																								"id": 1107,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1103,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 307,
																										"src": "23041:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1105,
																									"indexExpression": {
																										"id": 1104,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1090,
																										"src": "23059:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "23041:30:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1106,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 997,
																									"src": "23074:19:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "23041:52:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1108,
																							"nodeType": "ExpressionStatement",
																							"src": "23041:52:1"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1117,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "23188:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1118,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "23194:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1119,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "23198:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1116,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "23179:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23179:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "EmitStatement",
												"src": "23174:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1123,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "23238:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "23244:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "23248:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23257:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1122,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "23217:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23217:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "23217:42:1"
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "20021:415:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "20451:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 994,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20564:8:1"
									},
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20482:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "20474:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20474:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20505:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "20497:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20497:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20526:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "20518:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20518:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20463:77:1"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20573:0:1"
									},
									"scope": 1828,
									"src": "20442:2825:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										129
									],
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "23498:58:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1142,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "23526:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1143,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "23532:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1144,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "23536:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23545:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1141,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1149,
															1187
														],
														"referencedDeclaration": 1187,
														"src": "23509:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23509:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "23509:39:1"
											}
										]
									},
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "23275:82:1",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "23372:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1139,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23489:8:1"
									},
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23407:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "23399:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23399:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23430:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "23422:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23422:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23451:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "23443:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23443:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23388:77:1"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23498:0:1"
									},
									"scope": 1828,
									"src": "23363:193:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										119
									],
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "24318:243:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1163,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "24342:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1164,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "24348:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1165,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "24352:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1162,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "24329:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24329:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "24329:31:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1168,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "24375:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "24378:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "24375:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24383:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "24375:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24393:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24375:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1185,
												"nodeType": "IfStatement",
												"src": "24371:183:1",
												"trueBody": {
													"condition": {
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "24413:57:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 1174,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1152,
																	"src": "24445:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1175,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "24451:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1176,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "24455:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1177,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "24464:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1173,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1268,
																"src": "24414:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24414:56:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1184,
													"nodeType": "IfStatement",
													"src": "24409:145:1",
													"trueBody": {
														"id": 1183,
														"nodeType": "Block",
														"src": "24472:82:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1180,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "24498:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24498:40:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1182,
																"nodeType": "RevertStatement",
																"src": "24491:47:1"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "23564:584:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "24163:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1160,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24309:8:1"
									},
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24198:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "24190:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24190:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24221:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "24213:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24213:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24242:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "24234:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "24273:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "24260:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24260:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24179:106:1"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24318:0:1"
									},
									"scope": 1828,
									"src": "24154:407:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "25380:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "24569:648:1",
										"text": " @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "25232:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25272:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "25264:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25264:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25295:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "25287:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25287:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "25316:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "25308:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "25347:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "25339:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25339:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25253:109:1"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25380:0:1"
									},
									"scope": 1828,
									"src": "25223:159:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1212,
										"nodeType": "Block",
										"src": "26203:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "25390:651:1",
										"text": " @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "26056:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26095:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "26087:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26087:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26118:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "26110:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "26139:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "26131:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26131:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "26170:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "26162:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26162:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26076:109:1"
									},
									"returnParameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26203:0:1"
									},
									"scope": 1828,
									"src": "26047:158:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "26814:547:1",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1248,
															"nodeType": "Block",
															"src": "26966:98:1",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1240,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1238,
																			"src": "26988:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1242,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1218,
																							"src": "27023:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1241,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 223,
																						"src": "26998:24:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$223_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1243,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "26998:28:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$223",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1244,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "27027:16:1",
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 222,
																				"src": "26998:45:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1245,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "27044:8:1",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "26998:54:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "26988:64:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1226,
																	"id": 1247,
																	"nodeType": "Return",
																	"src": "26981:71:1"
																}
															]
														},
														"errorName": "",
														"id": 1249,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1239,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1238,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "26948:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1249,
																	"src": "26941:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1237,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "26941:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "26926:39:1"
														},
														"src": "26918:146:1"
													},
													{
														"block": {
															"id": 1264,
															"nodeType": "Block",
															"src": "27093:261:1",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1253,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1251,
																				"src": "27112:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "27119:6:1",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "27112:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27129:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "27112:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 1262,
																		"nodeType": "Block",
																		"src": "27220:123:1",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "27248:80:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "27282:2:1",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "27286:6:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "27278:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "27278:15:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "27301:6:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "27295:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "27295:13:1"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "27271:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "27271:38:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "27271:38:1"
																						}
																					]
																				},
																				"evmVersion": "london",
																				"externalReferences": [
																					{
																						"declaration": 1251,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "27286:6:1",
																						"valueSize": 1
																					},
																					{
																						"declaration": 1251,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "27301:6:1",
																						"valueSize": 1
																					}
																				],
																				"id": 1261,
																				"nodeType": "InlineAssembly",
																				"src": "27239:89:1"
																			}
																		]
																	},
																	"id": 1263,
																	"nodeType": "IfStatement",
																	"src": "27108:235:1",
																	"trueBody": {
																		"id": 1260,
																		"nodeType": "Block",
																		"src": "27132:82:1",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1257,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 29,
																						"src": "27158:38:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 1258,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27158:40:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1259,
																				"nodeType": "RevertStatement",
																				"src": "27151:47:1"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 1265,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1252,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1251,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "27085:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1265,
																	"src": "27072:19:1",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1250,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "27072:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "27071:21:1"
														},
														"src": "27065:289:1"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1231,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1817,
																"src": "26875:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26875:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1233,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "26896:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1234,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "26902:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1235,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "26911:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1228,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "26854:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1227,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "26829:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$223_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26829:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$223",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26858:16:1",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 222,
														"src": "26829:45:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26829:88:1",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1266,
												"nodeType": "TryStatement",
												"src": "26825:529:1"
											}
										]
									},
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "26213:426:1",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."
									},
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "26654:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26703:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "26695:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26695:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26726:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "26718:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26718:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "26739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26739:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "26778:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "26765:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1221,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26765:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26684:106:1"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "26808:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26808:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26807:6:1"
									},
									"scope": 1828,
									"src": "26645:716:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "27885:2904:1",
										"statements": [
											{
												"assignments": [
													1277
												],
												"declarations": [
													{
														"constant": false,
														"id": 1277,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "27904:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 1363,
														"src": "27896:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1276,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27896:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1279,
												"initialValue": {
													"id": 1278,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 297,
													"src": "27919:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27896:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1280,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "27947:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27959:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27947:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1286,
												"nodeType": "IfStatement",
												"src": "27943:44:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1283,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "27969:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27969:18:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1285,
													"nodeType": "RevertStatement",
													"src": "27962:25:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28030:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28022:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1288,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28022:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28022:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1292,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "28034:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1293,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "28038:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1294,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "28052:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1287,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "28000:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28000:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1296,
												"nodeType": "ExpressionStatement",
												"src": "28000:61:1"
											},
											{
												"id": 1352,
												"nodeType": "UncheckedBlock",
												"src": "28249:2462:1",
												"statements": [
													{
														"expression": {
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1297,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "28475:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1299,
																"indexExpression": {
																	"id": 1298,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "28494:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "28475:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1300,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1273,
																	"src": "28501:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1303,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1301,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "28514:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1302,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 240,
																							"src": "28519:21:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "28514:26:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1304,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "28513:28:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1305,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "28513:32:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1307,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "28512:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28501:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28475:71:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1310,
														"nodeType": "ExpressionStatement",
														"src": "28475:71:1"
													},
													{
														"expression": {
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1311,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "28789:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1313,
																"indexExpression": {
																	"id": 1312,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "28807:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "28789:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1315,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1271,
																		"src": "28860:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1317,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1273,
																					"src": "28902:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1316,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 814,
																				"src": "28881:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28881:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1322,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "28937:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1321,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "28929:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1320,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "28929:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1323,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "28929:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1324,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1271,
																					"src": "28941:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1325,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28945:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1319,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1807,
																				"src": "28914:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28914:33:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "28881:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1314,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "28823:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28823:139:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28789:173:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1330,
														"nodeType": "ExpressionStatement",
														"src": "28789:173:1"
													},
													{
														"assignments": [
															1332
														],
														"declarations": [
															{
																"constant": false,
																"id": 1332,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "28987:8:1",
																"nodeType": "VariableDeclaration",
																"scope": 1352,
																"src": "28979:16:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1331,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28979:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1333,
														"nodeType": "VariableDeclarationStatement",
														"src": "28979:16:1"
													},
													{
														"assignments": [
															1335
														],
														"declarations": [
															{
																"constant": false,
																"id": 1335,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "29018:3:1",
																"nodeType": "VariableDeclaration",
																"scope": 1352,
																"src": "29010:11:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1334,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29010:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1339,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1336,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1277,
																"src": "29024:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1337,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "29039:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29024:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29010:37:1"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "29423:1181:1",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "29540:37:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "to",
																				"nodeType": "YulIdentifier",
																				"src": "29556:2:1"
																			},
																			{
																				"name": "_BITMASK_ADDRESS",
																				"nodeType": "YulIdentifier",
																				"src": "29560:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "29552:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29552:25:1"
																	},
																	"variableNames": [
																		{
																			"name": "toMasked",
																			"nodeType": "YulIdentifier",
																			"src": "29540:8:1"
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29669:1:1",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29730:1:1",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "_TRANSFER_EVENT_SIGNATURE",
																				"nodeType": "YulIdentifier",
																				"src": "29789:25:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29851:1:1",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "toMasked",
																				"nodeType": "YulIdentifier",
																				"src": "29892:8:1"
																			},
																			{
																				"name": "startTokenId",
																				"nodeType": "YulIdentifier",
																				"src": "29932:12:1"
																			}
																		],
																		"functionName": {
																			"name": "log4",
																			"nodeType": "YulIdentifier",
																			"src": "29642:4:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29642:335:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "29642:335:1"
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "30419:170:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30516:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30519:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_TRANSFER_EVENT_SIGNATURE",
																							"nodeType": "YulIdentifier",
																							"src": "30522:25:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30549:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "toMasked",
																							"nodeType": "YulIdentifier",
																							"src": "30552:8:1"
																						},
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "30562:7:1"
																						}
																					],
																					"functionName": {
																						"name": "log4",
																						"nodeType": "YulIdentifier",
																						"src": "30511:4:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30511:59:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "30511:59:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulIdentifier",
																						"src": "30335:7:1"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "30344:3:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "30332:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30332:16:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "30325:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30325:24:1"
																	},
																	"nodeType": "YulForLoop",
																	"post": {
																		"nodeType": "YulBlock",
																		"src": "30350:68:1",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "30373:26:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "30388:7:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30397:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "30384:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30384:15:1"
																				},
																				"variableNames": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulIdentifier",
																						"src": "30373:7:1"
																					}
																				]
																			}
																		]
																	},
																	"pre": {
																		"nodeType": "YulBlock",
																		"src": "30247:77:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "30270:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "startTokenId",
																							"nodeType": "YulIdentifier",
																							"src": "30289:12:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30303:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "30285:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30285:20:1"
																				},
																				"variables": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulTypedName",
																						"src": "30274:7:1",
																						"type": ""
																					}
																				]
																			}
																		]
																	},
																	"src": "30243:346:1"
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 289,
																"isOffset": false,
																"isSlot": false,
																"src": "29560:16:1",
																"valueSize": 1
															},
															{
																"declaration": 295,
																"isOffset": false,
																"isSlot": false,
																"src": "29789:25:1",
																"valueSize": 1
															},
															{
																"declaration": 295,
																"isOffset": false,
																"isSlot": false,
																"src": "30522:25:1",
																"valueSize": 1
															},
															{
																"declaration": 1335,
																"isOffset": false,
																"isSlot": false,
																"src": "30344:3:1",
																"valueSize": 1
															},
															{
																"declaration": 1277,
																"isOffset": false,
																"isSlot": false,
																"src": "29932:12:1",
																"valueSize": 1
															},
															{
																"declaration": 1277,
																"isOffset": false,
																"isSlot": false,
																"src": "30289:12:1",
																"valueSize": 1
															},
															{
																"declaration": 1271,
																"isOffset": false,
																"isSlot": false,
																"src": "29556:2:1",
																"valueSize": 1
															},
															{
																"declaration": 1332,
																"isOffset": false,
																"isSlot": false,
																"src": "29540:8:1",
																"valueSize": 1
															},
															{
																"declaration": 1332,
																"isOffset": false,
																"isSlot": false,
																"src": "29892:8:1",
																"valueSize": 1
															},
															{
																"declaration": 1332,
																"isOffset": false,
																"isSlot": false,
																"src": "30552:8:1",
																"valueSize": 1
															}
														],
														"id": 1340,
														"nodeType": "InlineAssembly",
														"src": "29414:1190:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1341,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "30622:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30634:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30622:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1347,
														"nodeType": "IfStatement",
														"src": "30618:45:1",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1344,
																	"name": "MintToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "30644:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30644:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1346,
															"nodeType": "RevertStatement",
															"src": "30637:26:1"
														}
													},
													{
														"expression": {
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1348,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "30680:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1349,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "30696:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30680:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1351,
														"nodeType": "ExpressionStatement",
														"src": "30680:19:1"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30750:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30742:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1354,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30742:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30742:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1358,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "30754:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1359,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "30758:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1360,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "30772:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1353,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "30721:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30721:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1362,
												"nodeType": "ExpressionStatement",
												"src": "30721:60:1"
											}
										]
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "27558:259:1",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "27832:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27846:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "27838:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27838:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "27858:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "27850:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27850:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27837:30:1"
									},
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27885:0:1"
									},
									"scope": 1828,
									"src": "27823:2966:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1475,
										"nodeType": "Block",
										"src": "31721:1406:1",
										"statements": [
											{
												"assignments": [
													1373
												],
												"declarations": [
													{
														"constant": false,
														"id": 1373,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "31740:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 1475,
														"src": "31732:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1372,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31732:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1375,
												"initialValue": {
													"id": 1374,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 297,
													"src": "31755:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31732:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1376,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "31783:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31797:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31789:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1377,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "31789:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31789:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31783:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1385,
												"nodeType": "IfStatement",
												"src": "31779:48:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1382,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "31808:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31808:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1384,
													"nodeType": "RevertStatement",
													"src": "31801:26:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1386,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "31842:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31854:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31842:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1392,
												"nodeType": "IfStatement",
												"src": "31838:44:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1389,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "31864:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31864:18:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1391,
													"nodeType": "RevertStatement",
													"src": "31857:25:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1393,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "31897:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1394,
														"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "31908:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31897:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1399,
												"nodeType": "IfStatement",
												"src": "31893:89:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1396,
															"name": "MintERC2309QuantityExceedsLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "31949:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31949:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1398,
													"nodeType": "RevertStatement",
													"src": "31942:40:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32025:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32017:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1401,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32017:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32017:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1405,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "32029:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1406,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "32033:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1407,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "32047:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1400,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "31995:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31995:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "31995:61:1"
											},
											{
												"id": 1464,
												"nodeType": "UncheckedBlock",
												"src": "32168:881:1",
												"statements": [
													{
														"expression": {
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1410,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "32394:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1412,
																"indexExpression": {
																	"id": 1411,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "32413:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "32394:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1413,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1369,
																	"src": "32420:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1416,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1414,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "32433:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1415,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 240,
																							"src": "32438:21:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "32433:26:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1417,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "32432:28:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "32463:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "32432:32:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "32431:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32420:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32394:71:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1423,
														"nodeType": "ExpressionStatement",
														"src": "32394:71:1"
													},
													{
														"expression": {
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1424,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "32708:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1426,
																"indexExpression": {
																	"id": 1425,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "32726:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "32708:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1428,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1367,
																		"src": "32779:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1430,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1369,
																					"src": "32821:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1429,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 814,
																				"src": "32800:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32800:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1435,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "32856:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1434,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "32848:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1433,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "32848:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1436,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "32848:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1437,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1367,
																					"src": "32860:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1438,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "32864:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1432,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1807,
																				"src": "32833:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32833:33:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32800:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1427,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "32742:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32742:139:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32708:173:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1443,
														"nodeType": "ExpressionStatement",
														"src": "32708:173:1"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1445,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "32923:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1446,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1373,
																			"src": "32937:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1447,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1369,
																			"src": "32952:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32937:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32963:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "32937:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32974:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "32966:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1451,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "32966:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32966:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1455,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "32978:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1444,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "32903:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32903:78:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1457,
														"nodeType": "EmitStatement",
														"src": "32898:83:1"
													},
													{
														"expression": {
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1458,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "32998:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1459,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "33014:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1460,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1369,
																	"src": "33029:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33014:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32998:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1463,
														"nodeType": "ExpressionStatement",
														"src": "32998:39:1"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33088:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33080:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33080:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33080:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1470,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "33092:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1471,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "33096:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1472,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "33110:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1465,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "33059:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33059:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1474,
												"nodeType": "ExpressionStatement",
												"src": "33059:60:1"
											}
										]
									},
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "30797:849:1",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "31661:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31682:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "31674:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31674:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "31694:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "31686:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31686:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31673:30:1"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31721:0:1"
									},
									"scope": 1828,
									"src": "31652:1475:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "33661:569:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1487,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "33678:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1488,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "33682:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1486,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "33672:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33672:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1490,
												"nodeType": "ExpressionStatement",
												"src": "33672:19:1"
											},
											{
												"id": 1536,
												"nodeType": "UncheckedBlock",
												"src": "33704:519:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1491,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1479,
																		"src": "33733:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "33736:4:1",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "33733:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "33741:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "33733:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33751:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33733:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1535,
														"nodeType": "IfStatement",
														"src": "33729:483:1",
														"trueBody": {
															"id": 1534,
															"nodeType": "Block",
															"src": "33754:458:1",
															"statements": [
																{
																	"assignments": [
																		1497
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1497,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "33781:3:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1534,
																			"src": "33773:11:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1496,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "33773:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1499,
																	"initialValue": {
																		"id": 1498,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 297,
																		"src": "33787:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "33773:27:1"
																},
																{
																	"assignments": [
																		1501
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1501,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "33827:5:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1534,
																			"src": "33819:13:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1500,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "33819:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1505,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1502,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1497,
																			"src": "33835:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1503,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1481,
																			"src": "33841:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33835:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "33819:30:1"
																},
																{
																	"body": {
																		"id": 1522,
																		"nodeType": "Block",
																		"src": "33871:209:1",
																		"statements": [
																			{
																				"condition": {
																					"id": 1516,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "33898:63:1",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1509,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "33938:1:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1508,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "33930:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1507,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "33930:7:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1510,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33930:10:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1511,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1479,
																								"src": "33942:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1513,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "33946:7:1",
																								"subExpression": {
																									"id": 1512,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1501,
																									"src": "33946:5:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1514,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1483,
																								"src": "33955:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1506,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1268,
																							"src": "33899:30:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1515,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "33899:62:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1521,
																				"nodeType": "IfStatement",
																				"src": "33894:167:1",
																				"trueBody": {
																					"id": 1520,
																					"nodeType": "Block",
																					"src": "33963:98:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 1517,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 29,
																									"src": "33997:38:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 1518,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33997:40:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1519,
																							"nodeType": "RevertStatement",
																							"src": "33990:47:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1523,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1501,
																			"src": "34088:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1524,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1497,
																			"src": "34096:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "34088:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1526,
																	"nodeType": "DoWhileStatement",
																	"src": "33868:233:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1527,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 297,
																			"src": "34166:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1528,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1497,
																			"src": "34183:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "34166:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1533,
																	"nodeType": "IfStatement",
																	"src": "34162:34:1",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1530,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "34188:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34188:8:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1532,
																		"nodeType": "ExpressionStatement",
																		"src": "34188:8:1"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1477,
										"nodeType": "StructuredDocumentation",
										"src": "33135:400:1",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 1538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "33550:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33578:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "33570:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "33599:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "33591:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "33631:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "33618:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1482,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "33618:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33559:84:1"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33661:0:1"
									},
									"scope": 1828,
									"src": "33541:689:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1552,
										"nodeType": "Block",
										"src": "34380:46:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1547,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "34401:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1548,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1543,
															"src": "34405:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34415:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1546,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1553
														],
														"referencedDeclaration": 1538,
														"src": "34391:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34391:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1551,
												"nodeType": "ExpressionStatement",
												"src": "34391:27:1"
											}
										]
									},
									"documentation": {
										"id": 1539,
										"nodeType": "StructuredDocumentation",
										"src": "34238:70:1",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "34323:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "34333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "34353:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "34345:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34332:30:1"
									},
									"returnParameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34380:0:1"
									},
									"scope": 1828,
									"src": "34314:112:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1564,
										"nodeType": "Block",
										"src": "34742:40:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1560,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "34759:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34768:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1559,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1565,
															1717
														],
														"referencedDeclaration": 1717,
														"src": "34753:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34753:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1563,
												"nodeType": "ExpressionStatement",
												"src": "34753:21:1"
											}
										]
									},
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "34623:64:1",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 1565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "34702:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34716:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "34708:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34707:17:1"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34742:0:1"
									},
									"scope": 1828,
									"src": "34693:89:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "35080:3012:1",
										"statements": [
											{
												"assignments": [
													1574
												],
												"declarations": [
													{
														"constant": false,
														"id": 1574,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "35099:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1716,
														"src": "35091:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1573,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35091:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1578,
												"initialValue": {
													"arguments": [
														{
															"id": 1576,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "35140:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1575,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "35121:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35121:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35091:57:1"
											},
											{
												"assignments": [
													1580
												],
												"declarations": [
													{
														"constant": false,
														"id": 1580,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "35169:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 1716,
														"src": "35161:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1579,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35161:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1588,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1585,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "35192:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35184:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1583,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "35184:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35184:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "35176:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1581,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35176:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35176:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35161:52:1"
											},
											{
												"assignments": [
													1590,
													1592
												],
												"declarations": [
													{
														"constant": false,
														"id": 1590,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "35235:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1716,
														"src": "35227:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1589,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35227:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1592,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "35264:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 1716,
														"src": "35256:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1591,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35256:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1596,
												"initialValue": {
													"arguments": [
														{
															"id": 1594,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "35310:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1593,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "35283:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35283:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35226:92:1"
											},
											{
												"condition": {
													"id": 1597,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1570,
													"src": "35335:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1617,
												"nodeType": "IfStatement",
												"src": "35331:316:1",
												"trueBody": {
													"id": 1616,
													"nodeType": "Block",
													"src": "35350:297:1",
													"statements": [
														{
															"condition": {
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "35455:69:1",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1599,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1592,
																			"src": "35481:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1600,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1580,
																			"src": "35498:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1601,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1817,
																				"src": "35504:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35504:19:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1598,
																		"name": "_isSenderApprovedOrOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "35456:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35456:68:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1615,
															"nodeType": "IfStatement",
															"src": "35451:184:1",
															"trueBody": {
																"condition": {
																	"id": 1610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "35547:44:1",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1606,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1580,
																				"src": "35565:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1607,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1817,
																					"src": "35571:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1608,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "35571:19:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1605,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 926,
																			"src": "35548:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35548:43:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1614,
																"nodeType": "IfStatement",
																"src": "35543:92:1",
																"trueBody": {
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1611,
																			"name": "TransferCallerNotOwnerNorApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 23,
																			"src": "35600:33:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35600:35:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1613,
																	"nodeType": "RevertStatement",
																	"src": "35593:42:1"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1619,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "35681:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35695:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35687:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1620,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "35687:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35687:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1624,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "35699:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35708:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1618,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "35659:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35659:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1627,
												"nodeType": "ExpressionStatement",
												"src": "35659:51:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "35785:186:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "35819:141:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "35922:19:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35943:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "35915:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "35915:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "35915:30:1"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "35803:15:1"
															},
															"nodeType": "YulIf",
															"src": "35800:160:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1592,
														"isOffset": false,
														"isSlot": false,
														"src": "35803:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1590,
														"isOffset": false,
														"isSlot": false,
														"src": "35922:19:1",
														"valueSize": 1
													}
												],
												"id": 1628,
												"nodeType": "InlineAssembly",
												"src": "35776:195:1"
											},
											{
												"id": 1692,
												"nodeType": "UncheckedBlock",
												"src": "36243:1576:1",
												"statements": [
													{
														"expression": {
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1629,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "36562:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1631,
																"indexExpression": {
																	"id": 1630,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "36581:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "36562:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1632,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "36591:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1633,
																				"name": "_BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 243,
																				"src": "36596:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "36591:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1635,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "36590:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36621:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "36590:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "36562:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1639,
														"nodeType": "ExpressionStatement",
														"src": "36562:60:1"
													},
													{
														"expression": {
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1640,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "36860:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1642,
																"indexExpression": {
																	"id": 1641,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1568,
																	"src": "36878:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "36860:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1644,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1580,
																		"src": "36926:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1647,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1645,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 262,
																						"src": "36950:15:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 1646,
																						"name": "_BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 270,
																						"src": "36968:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "36950:43:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1648,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "36949:45:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1650,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1580,
																					"src": "37012:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1653,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "37026:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1652,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "37018:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1651,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "37018:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1654,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "37018:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1655,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1574,
																					"src": "37030:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1649,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1807,
																				"src": "36997:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36997:53:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "36949:101:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1643,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "36889:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36889:176:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "36860:205:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1660,
														"nodeType": "ExpressionStatement",
														"src": "36860:205:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1661,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "37185:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1662,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "37207:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "37185:47:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37236:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "37185:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1691,
														"nodeType": "IfStatement",
														"src": "37181:627:1",
														"trueBody": {
															"id": 1690,
															"nodeType": "Block",
															"src": "37239:569:1",
															"statements": [
																{
																	"assignments": [
																		1667
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1667,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "37266:11:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1690,
																			"src": "37258:19:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1666,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "37258:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1671,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1668,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1568,
																			"src": "37280:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37290:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "37280:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "37258:33:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1672,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "37413:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1674,
																			"indexExpression": {
																				"id": 1673,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1667,
																				"src": "37431:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "37413:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37447:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "37413:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1689,
																	"nodeType": "IfStatement",
																	"src": "37409:384:1",
																	"trueBody": {
																		"id": 1688,
																		"nodeType": "Block",
																		"src": "37450:343:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1679,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1677,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1667,
																						"src": "37536:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1678,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 297,
																						"src": "37551:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "37536:28:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1687,
																				"nodeType": "IfStatement",
																				"src": "37532:242:1",
																				"trueBody": {
																					"id": 1686,
																					"nodeType": "Block",
																					"src": "37566:208:1",
																					"statements": [
																						{
																							"expression": {
																								"id": 1684,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1680,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 307,
																										"src": "37698:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1682,
																									"indexExpression": {
																										"id": 1681,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1667,
																										"src": "37716:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "37698:30:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1683,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1574,
																									"src": "37731:19:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "37698:52:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1685,
																							"nodeType": "ExpressionStatement",
																							"src": "37698:52:1"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1694,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "37845:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37859:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37851:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1695,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37851:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37851:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1699,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "37863:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1693,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "37836:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37836:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1701,
												"nodeType": "EmitStatement",
												"src": "37831:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1703,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "37903:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37917:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37909:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1704,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37909:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37909:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1708,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "37921:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37930:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1702,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "37882:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37882:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1711,
												"nodeType": "ExpressionStatement",
												"src": "37882:50:1"
											},
											{
												"id": 1715,
												"nodeType": "UncheckedBlock",
												"src": "38034:51:1",
												"statements": [
													{
														"expression": {
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "38059:14:1",
															"subExpression": {
																"id": 1712,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "38059:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1714,
														"nodeType": "ExpressionStatement",
														"src": "38059:14:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "34790:215:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "35020:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35034:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "35026:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35026:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "35048:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "35043:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35043:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35025:37:1"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35080:0:1"
									},
									"scope": 1828,
									"src": "35011:3081:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "38459:457:1",
										"statements": [
											{
												"assignments": [
													1726
												],
												"declarations": [
													{
														"constant": false,
														"id": 1726,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "38478:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1760,
														"src": "38470:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1725,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38470:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1730,
												"initialValue": {
													"baseExpression": {
														"id": 1727,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "38487:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1729,
													"indexExpression": {
														"id": 1728,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "38505:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "38487:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38470:41:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1731,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "38526:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1732,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38536:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "38526:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1737,
												"nodeType": "IfStatement",
												"src": "38522:61:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1734,
															"name": "OwnershipNotInitializedForExtraData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "38546:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38546:37:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1736,
													"nodeType": "RevertStatement",
													"src": "38539:44:1"
												}
											},
											{
												"assignments": [
													1739
												],
												"declarations": [
													{
														"constant": false,
														"id": 1739,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "38602:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 1760,
														"src": "38594:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1738,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38594:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1740,
												"nodeType": "VariableDeclarationStatement",
												"src": "38594:23:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "38708:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "38723:28:1",
															"value": {
																"name": "extraData",
																"nodeType": "YulIdentifier",
																"src": "38742:9:1"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nodeType": "YulIdentifier",
																	"src": "38723:15:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1722,
														"isOffset": false,
														"isSlot": false,
														"src": "38742:9:1",
														"valueSize": 1
													},
													{
														"declaration": 1739,
														"isOffset": false,
														"isSlot": false,
														"src": "38723:15:1",
														"valueSize": 1
													}
												],
												"id": 1741,
												"nodeType": "InlineAssembly",
												"src": "38699:63:1"
											},
											{
												"expression": {
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1742,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "38772:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1743,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1726,
																		"src": "38782:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 1744,
																		"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "38791:30:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "38782:39:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1746,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "38781:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1747,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1739,
																		"src": "38826:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 1748,
																		"name": "_BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "38845:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "38826:37:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1750,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "38825:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "38781:83:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38772:92:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1753,
												"nodeType": "ExpressionStatement",
												"src": "38772:92:1"
											},
											{
												"expression": {
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1754,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "38875:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1756,
														"indexExpression": {
															"id": 1755,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "38893:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "38875:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1757,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "38902:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38875:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1759,
												"nodeType": "ExpressionStatement",
												"src": "38875:33:1"
											}
										]
									},
									"documentation": {
										"id": 1718,
										"nodeType": "StructuredDocumentation",
										"src": "38292:86:1",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "38393:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "38417:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "38409:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38409:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "38431:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "38424:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1721,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "38424:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38408:33:1"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38459:0:1"
									},
									"scope": 1828,
									"src": "38384:532:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1773,
										"nodeType": "Block",
										"src": "39637:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "38924:562:1",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "39501:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39530:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "39522:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39522:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39553:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "39545:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39545:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "39573:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "39566:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1767,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "39566:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39511:86:1"
									},
									"returnParameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "39629:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1770,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "39629:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39628:8:1"
									},
									"scope": 1828,
									"src": "39492:147:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1806,
										"nodeType": "Block",
										"src": "39935:167:1",
										"statements": [
											{
												"assignments": [
													1787
												],
												"declarations": [
													{
														"constant": false,
														"id": 1787,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "39953:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 1806,
														"src": "39946:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 1786,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "39946:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1794,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1790,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1781,
																"src": "39972:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 1791,
																"name": "_BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "39995:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39972:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "39965:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 1788,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "39965:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39965:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39946:68:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1798,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1777,
																		"src": "40051:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1799,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "40057:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1800,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1787,
																		"src": "40061:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 1797,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1774,
																	"src": "40040:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40040:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "40032:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1795,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "40032:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40032:40:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1803,
														"name": "_BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "40076:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40032:62:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1785,
												"id": 1805,
												"nodeType": "Return",
												"src": "40025:69:1"
											}
										]
									},
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "39647:138:1",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 1807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "39800:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39833:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "39825:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39825:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39856:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "39848:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39848:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "39877:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "39869:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39869:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39814:89:1"
									},
									"returnParameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "39926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39925:9:1"
									},
									"scope": 1828,
									"src": "39791:311:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1816,
										"nodeType": "Block",
										"src": "40551:36:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1813,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "40569:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "40573:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "40569:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1812,
												"id": 1815,
												"nodeType": "Return",
												"src": "40562:17:1"
											}
										]
									},
									"documentation": {
										"id": 1808,
										"nodeType": "StructuredDocumentation",
										"src": "40299:177:1",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 1817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "40491:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40508:2:1"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "40542:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40542:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40541:9:1"
									},
									"scope": 1828,
									"src": "40482:105:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1826,
										"nodeType": "Block",
										"src": "40773:1661:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "40793:1634:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "41162:31:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "41181:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "41175:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "41175:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41188:4:1",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "41171:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "41171:22:1"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "41166:1:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41274:4:1",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "41280:1:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "41267:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "41267:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41267:15:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "41341:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "41352:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41355:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "41348:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "41348:12:1"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "41341:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "41432:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41437:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "41425:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "41425:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41425:14:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "41530:14:1",
															"value": {
																"name": "str",
																"nodeType": "YulIdentifier",
																"src": "41541:3:1"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "41534:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "41793:397:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "41812:18:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "41823:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "41828:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "41819:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41819:11:1"
																		},
																		"variableNames": [
																			{
																				"name": "str",
																				"nodeType": "YulIdentifier",
																				"src": "41812:3:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "41976:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "41985:2:1",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "41993:4:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "41999:2:1",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "41989:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "41989:13:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "41981:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "41981:22:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "41968:7:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41968:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "41968:36:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "42075:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "42087:4:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "42093:2:1",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "42083:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42083:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "42075:4:1"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "42166:9:1",
																			"statements": [
																				{
																					"nodeType": "YulBreak",
																					"src": "42168:5:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "42160:4:1"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "42153:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42153:12:1"
																		},
																		"nodeType": "YulIf",
																		"src": "42150:25:1"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "41788:1:1",
																"type": "",
																"value": "1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "41790:2:1",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "41766:21:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "41768:17:1",
																		"value": {
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "41780:5:1"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nodeType": "YulTypedName",
																				"src": "41772:4:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "41762:428:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "42206:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "42224:3:1"
																	},
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "42229:3:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "42220:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "42220:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "42210:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "42328:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "42339:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "42344:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "42335:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "42335:14:1"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "42328:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "42404:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "42409:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "42397:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "42397:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "42397:19:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1823,
														"isOffset": false,
														"isSlot": false,
														"src": "41341:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1823,
														"isOffset": false,
														"isSlot": false,
														"src": "41432:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1823,
														"isOffset": false,
														"isSlot": false,
														"src": "41541:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1823,
														"isOffset": false,
														"isSlot": false,
														"src": "41812:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1823,
														"isOffset": false,
														"isSlot": false,
														"src": "41823:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1823,
														"isOffset": false,
														"isSlot": false,
														"src": "41976:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1823,
														"isOffset": false,
														"isSlot": false,
														"src": "42229:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1823,
														"isOffset": false,
														"isSlot": false,
														"src": "42328:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1823,
														"isOffset": false,
														"isSlot": false,
														"src": "42339:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1823,
														"isOffset": false,
														"isSlot": false,
														"src": "42404:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1820,
														"isOffset": false,
														"isSlot": false,
														"src": "41780:5:1",
														"valueSize": 1
													}
												],
												"id": 1825,
												"nodeType": "InlineAssembly",
												"src": "40784:1643:1"
											}
										]
									},
									"documentation": {
										"id": 1818,
										"nodeType": "StructuredDocumentation",
										"src": "40595:88:1",
										"text": " @dev Converts a uint256 to its ASCII string decimal representation."
									},
									"id": 1827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "40698:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "40716:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "40708:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40707:15:1"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "40768:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "40754:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1822,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40754:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40753:19:1"
									},
									"scope": 1828,
									"src": "40689:1745:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1829,
							"src": "930:41507:1",
							"usedErrors": [
								5,
								8,
								11,
								14,
								17,
								20,
								23,
								26,
								29,
								32,
								35,
								38,
								41
							]
						}
					],
					"src": "88:42349:1"
				},
				"id": 1
			}
		}
	}
}