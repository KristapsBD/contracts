{
	"id": "13299832dedd38fe0ea58d273d030f37",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\r\nimport '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';\r\nimport '@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol';\r\nimport '@openzeppelin/contracts/utils/Address.sol';\r\nimport '@openzeppelin/contracts/utils/Context.sol';\r\nimport '@openzeppelin/contracts/utils/Strings.sol';\r\nimport '@openzeppelin/contracts/utils/introspection/ERC165.sol';\r\n\r\n/**\r\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\r\n * the Metadata extension. Built to optimize for lower gas during batch mints.\r\n *\r\n * Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..).\r\n *\r\n * Does not support burning tokens to address(0).\r\n *\r\n * Assumes that an owner cannot have more than the 2**128 - 1 (max value of uint128) of supply\r\n */\r\ncontract ERC721A is Context, ERC165, IERC721, IERC721Metadata {\r\n    using Address for address;\r\n    using Strings for uint256;\r\n\r\n    struct TokenOwnership {\r\n        address addr;\r\n        uint64 startTimestamp;\r\n    }\r\n\r\n    struct AddressData {\r\n        uint128 balance;\r\n        uint128 numberMinted;\r\n    }\r\n\r\n    uint256 internal currentIndex;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    // Mapping from token ID to ownership details\r\n    // An empty struct value does not necessarily mean the token is unowned. See ownershipOf implementation for details.\r\n    mapping(uint256 => TokenOwnership) internal _ownerships;\r\n\r\n    // Mapping owner address to address data\r\n    mapping(address => AddressData) private _addressData;\r\n\r\n    // Mapping from token ID to approved address\r\n    mapping(uint256 => address) private _tokenApprovals;\r\n\r\n    // Mapping from owner to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return currentIndex;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n        interfaceId == type(IERC721).interfaceId ||\r\n        interfaceId == type(IERC721Metadata).interfaceId ||\r\n        super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner) public view override returns (uint256) {\r\n        require(owner != address(0), 'ERC721A: balance query for the zero address');\r\n        return uint256(_addressData[owner].balance);\r\n    }\r\n\r\n    function _numberMinted(address owner) internal view returns (uint256) {\r\n        require(owner != address(0), 'ERC721A: number minted query for the zero address');\r\n        return uint256(_addressData[owner].numberMinted);\r\n    }\r\n\r\n    /**\r\n     * Gas spent here starts off proportional to the maximum mint batch size.\r\n     * It gradually moves to O(1) as tokens get transferred around in the collection over time.\r\n     */\r\n    function ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {\r\n        require(_exists(tokenId), 'ERC721A: owner query for nonexistent token');\r\n\r\n    unchecked {\r\n        for (uint256 curr = tokenId; curr >= 0; curr--) {\r\n            TokenOwnership memory ownership = _ownerships[curr];\r\n            if (ownership.addr != address(0)) {\r\n                return ownership;\r\n            }\r\n        }\r\n    }\r\n\r\n        revert('ERC721A: unable to determine the owner of token');\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view override returns (address) {\r\n        return ownershipOf(tokenId).addr;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        require(_exists(tokenId), 'ERC721Metadata: URI query for nonexistent token');\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '';\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, can be overriden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) public override {\r\n        address owner = ERC721A.ownerOf(tokenId);\r\n        require(to != owner, 'ERC721A: approval to current owner');\r\n\r\n        require(\r\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\r\n            'ERC721A: approve caller is not owner nor approved for all'\r\n        );\r\n\r\n        _approve(to, tokenId, owner);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(uint256 tokenId) public view override returns (address) {\r\n        require(_exists(tokenId), 'ERC721A: approved query for nonexistent token');\r\n\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public override {\r\n        require(operator != _msgSender(), 'ERC721A: approve to caller');\r\n\r\n        _operatorApprovals[_msgSender()][operator] = approved;\r\n        emit ApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public override {\r\n        _transfer(from, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public override {\r\n        safeTransferFrom(from, to, tokenId, '');\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) public override {\r\n        _transfer(from, to, tokenId);\r\n        require(\r\n            _checkOnERC721Received(from, to, tokenId, _data),\r\n            'ERC721A: transfer to non ERC721Receiver implementer'\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `tokenId` exists.\r\n     *\r\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\r\n     *\r\n     * Tokens start existing when they are minted (`_mint`),\r\n     */\r\n    function _exists(uint256 tokenId) internal view returns (bool) {\r\n        return tokenId < currentIndex;\r\n    }\r\n\r\n    function _safeMint(address to, uint256 quantity) internal {\r\n        _safeMint(to, quantity, '');\r\n    }\r\n\r\n    /**\r\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(\r\n        address to,\r\n        uint256 quantity,\r\n        bytes memory _data\r\n    ) internal {\r\n        _mint(to, quantity, _data, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _mint(\r\n        address to,\r\n        uint256 quantity,\r\n        bytes memory _data,\r\n        bool safe\r\n    ) internal {\r\n        uint256 startTokenId = currentIndex;\r\n        require(to != address(0), 'ERC721A: mint to the zero address');\r\n        require(quantity != 0, 'ERC721A: quantity must be greater than 0');\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are incredibly unrealistic.\r\n        // balance or numberMinted overflow if current value of either + quantity > 3.4e38 (2**128) - 1\r\n        // updatedIndex overflows if currentIndex + quantity > 1.56e77 (2**256) - 1\r\n    unchecked {\r\n        _addressData[to].balance += uint128(quantity);\r\n        _addressData[to].numberMinted += uint128(quantity);\r\n\r\n        _ownerships[startTokenId].addr = to;\r\n        _ownerships[startTokenId].startTimestamp = uint64(block.timestamp);\r\n\r\n        uint256 updatedIndex = startTokenId;\r\n\r\n        for (uint256 i; i < quantity; i++) {\r\n            emit Transfer(address(0), to, updatedIndex);\r\n            if (safe) {\r\n                require(\r\n                    _checkOnERC721Received(address(0), to, updatedIndex, _data),\r\n                    'ERC721A: transfer to non ERC721Receiver implementer'\r\n                );\r\n            }\r\n\r\n            updatedIndex++;\r\n        }\r\n\r\n        currentIndex = updatedIndex;\r\n    }\r\n\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) private {\r\n        TokenOwnership memory prevOwnership = ownershipOf(tokenId);\r\n\r\n        bool isApprovedOrOwner = (_msgSender() == prevOwnership.addr ||\r\n        getApproved(tokenId) == _msgSender() ||\r\n        isApprovedForAll(prevOwnership.addr, _msgSender()));\r\n\r\n        require(isApprovedOrOwner, 'ERC721A: transfer caller is not owner nor approved');\r\n\r\n        require(prevOwnership.addr == from, 'ERC721A: transfer from incorrect owner');\r\n        require(to != address(0), 'ERC721A: transfer to the zero address');\r\n\r\n        _beforeTokenTransfers(from, to, tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner\r\n        _approve(address(0), tokenId, prevOwnership.addr);\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\r\n    unchecked {\r\n        _addressData[from].balance -= 1;\r\n        _addressData[to].balance += 1;\r\n\r\n        _ownerships[tokenId].addr = to;\r\n        _ownerships[tokenId].startTimestamp = uint64(block.timestamp);\r\n\r\n        // If the ownership slot of tokenId+1 is not explicitly set, that means the transfer initiator owns it.\r\n        // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\r\n        uint256 nextTokenId = tokenId + 1;\r\n        if (_ownerships[nextTokenId].addr == address(0)) {\r\n            if (_exists(nextTokenId)) {\r\n                _ownerships[nextTokenId].addr = prevOwnership.addr;\r\n                _ownerships[nextTokenId].startTimestamp = prevOwnership.startTimestamp;\r\n            }\r\n        }\r\n    }\r\n\r\n        emit Transfer(from, to, tokenId);\r\n        _afterTokenTransfers(from, to, tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * Emits a {Approval} event.\r\n     */\r\n    function _approve(\r\n        address to,\r\n        uint256 tokenId,\r\n        address owner\r\n    ) private {\r\n        _tokenApprovals[tokenId] = to;\r\n        emit Approval(owner, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\r\n     * The call is not executed if the target address is not a contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param _data bytes optional data to send along with the call\r\n     * @return bool whether the call correctly returned the expected magic value\r\n     */\r\n    function _checkOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) private returns (bool) {\r\n        if (to.isContract()) {\r\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\r\n                return retval == IERC721Receiver(to).onERC721Received.selector;\r\n            } catch (bytes memory reason) {\r\n                if (reason.length == 0) {\r\n                    revert('ERC721A: transfer to non ERC721Receiver implementer');\r\n                } else {\r\n                    assembly {\r\n                        revert(add(32, reason), mload(reason))\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\r\n     *\r\n     * startTokenId - the first token id to be transferred\r\n     * quantity - the amount to be transferred\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     */\r\n    function _beforeTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\r\n     * minting.\r\n     *\r\n     * startTokenId - the first token id to be transferred\r\n     * quantity - the amount to be transferred\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _afterTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n}"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xB4 PC 0x28 0xC2 PC SELFDESTRUCT 0xD 0xE3 0xC4 PUSH21 0xA9E78BF6BCE8432946ABA56FB38804B64E37FF1E6F PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:8111:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xB4 PC 0x28 0xC2 PC SELFDESTRUCT 0xD 0xE3 0xC4 PUSH21 0xA9E78BF6BCE8432946ABA56FB38804B64E37FF1E6F PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:8111:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bffded732aebf91122fca0fd45fc9f602ec710ed32beef917ebc45ecbc29a65c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bffded732aebf91122fca0fd45fc9f602ec710ed32beef917ebc45ecbc29a65c64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF REVERT 0xED PUSH20 0x2AEBF91122FCA0FD45FC9F602EC710ED32BEEF91 PUSH31 0xBC45ECBC29A65C64736F6C6343000811003300000000000000000000000000 ",
							"sourceMap": "161:2235:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bffded732aebf91122fca0fd45fc9f602ec710ed32beef917ebc45ecbc29a65c64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF REVERT 0xED PUSH20 0x2AEBF91122FCA0FD45FC9F602EC710ED32BEEF91 PUSH31 0xBC45ECBC29A65C64736F6C6343000811003300000000000000000000000000 ",
							"sourceMap": "161:2235:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bffded732aebf91122fca0fd45fc9f602ec710ed32beef917ebc45ecbc29a65c64736f6c63430008110033",
									".code": [
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..). Does not support burning tokens to address(0). Assumes that an owner cannot have more than the 2**128 - 1 (max value of uint128) of supply",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC721A.sol\":961:15158  contract ERC721A is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC721A.sol\":2002:2118  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ERC721A.sol\":2077:2082  name_ */\n  dup2\n    /* \"contracts/ERC721A.sol\":2069:2074  _name */\n  0x01\n    /* \"contracts/ERC721A.sol\":2069:2082  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/ERC721A.sol\":2103:2110  symbol_ */\n  dup1\n    /* \"contracts/ERC721A.sol\":2093:2100  _symbol */\n  0x02\n    /* \"contracts/ERC721A.sol\":2093:2110  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/ERC721A.sol\":2002:2118  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/ERC721A.sol\":961:15158  contract ERC721A is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_51\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_53\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1030:1118   */\ntag_52:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_55\n  tag_10\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_59\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1434:1490   */\ntag_58:\n    /* \"#utility.yul\":1508:1537   */\n  tag_60\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_20:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_62:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_21:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_66\n    /* \"#utility.yul\":1992:2041   */\n  tag_67\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_19\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1976:2042   */\n  tag_18\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_69\n  tag_14\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2117:2229   */\ntag_68:\n    /* \"#utility.yul\":2238:2290   */\n  tag_70\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_20\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_22:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_73\n  tag_13\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2399:2521   */\ntag_72:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_74\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_21\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_77\n  tag_11\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2801:2920   */\ntag_76:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_79\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2996:3113   */\ntag_78:\n    /* \"#utility.yul\":3137:3211   */\n  tag_80\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_82\n  tag_12\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3298:3415   */\ntag_81:\n    /* \"#utility.yul\":3439:3513   */\n  tag_83\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_22\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_23:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_24:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_25:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_87:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_89\n  tag_24\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4057:4141   */\ntag_88:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_26:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_27:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_28:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_29:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_94\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_28\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4772:4811   */\n  tag_95\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_28\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_30:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_31:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_32:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_99\n    /* \"#utility.yul\":5161:5195   */\n  tag_100\n    /* \"#utility.yul\":5170:5194   */\n  tag_101\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_30\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5161:5195   */\n  tag_31\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5143:5196   */\n  tag_30\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_33:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_34:\n    /* \"#utility.yul\":5399:5438   */\n  tag_104\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_32\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5460:5551   */\n  tag_105\n    /* \"#utility.yul\":5509:5550   */\n  tag_106\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_33\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_29\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_35:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_36:\n    /* \"#utility.yul\":5720:5752   */\n  tag_109\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5761:5826   */\n  tag_110\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_34\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_37:\n    /* \"#utility.yul\":5898:6018   */\ntag_112:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_115\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_36\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_38:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_118\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_26\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6249:6278   */\n  tag_119\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_27\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_120:\n    /* \"#utility.yul\":6476:6556   */\n  tag_121\n    /* \"#utility.yul\":6532:6554   */\n  tag_122\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_27\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_37\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_117:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_39:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_40:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_125\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_39\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_41:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_127\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_40\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_7:\n    /* \"#utility.yul\":7293:7330   */\n  tag_129\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_23\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_131\n  tag_16\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7381:7437   */\ntag_130:\n    /* \"#utility.yul\":7461:7499   */\n  tag_132\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_25\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7546:7613   */\n  tag_133\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_38\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_136:\n    /* \"#utility.yul\":8487:8554   */\n  tag_137\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_41\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_134)\n    /* \"#utility.yul\":7708:8326   */\ntag_135:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_138\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_26\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_139:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_143\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_40\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_142:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_134:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ERC721A.sol\":961:15158  contract ERC721A is Context, ERC165, IERC721, IERC721Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC721A.sol\":961:15158  contract ERC721A is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC721A.sol\":2289:2582  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":4064:4164  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":5626:5840  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_5:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":5147:5560  function approve(address to, uint256 tokenId) public override {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/ERC721A.sol\":2126:2217  function totalSupply() public view returns (uint256) {... */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":6502:6664  function transferFrom(... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/ERC721A.sol\":6735:6912  function safeTransferFrom(... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/ERC721A.sol\":3873:3997  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_10:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":2646:2867  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_11:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":4233:4337  function symbol() public view virtual override returns (string memory) {... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":5912:6200  function setApprovalForAll(address operator, bool approved) public override {... */\n    tag_13:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/ERC721A.sol\":6983:7338  function safeTransferFrom(... */\n    tag_14:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \"contracts/ERC721A.sol\":4408:4743  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":6271:6435  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":2289:2582  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_23:\n        /* \"contracts/ERC721A.sol\":2391:2395  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":2439:2464  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC721A.sol\":2424:2464  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC721A.sol\":2424:2435  interfaceId */\n      dup3\n        /* \"contracts/ERC721A.sol\":2424:2464  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":2424:2525  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_81\n      jumpi\n      pop\n        /* \"contracts/ERC721A.sol\":2492:2525  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC721A.sol\":2477:2525  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC721A.sol\":2477:2488  interfaceId */\n      dup3\n        /* \"contracts/ERC721A.sol\":2477:2525  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":2424:2525  interfaceId == type(IERC721).interfaceId ||... */\n    tag_81:\n        /* \"contracts/ERC721A.sol\":2424:2574  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_82\n      jumpi\n      pop\n        /* \"contracts/ERC721A.sol\":2538:2574  super.supportsInterface(interfaceId) */\n      tag_83\n        /* \"contracts/ERC721A.sol\":2562:2573  interfaceId */\n      dup3\n        /* \"contracts/ERC721A.sol\":2538:2561  super.supportsInterface */\n      tag_84\n        /* \"contracts/ERC721A.sol\":2538:2574  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_83:\n        /* \"contracts/ERC721A.sol\":2424:2574  interfaceId == type(IERC721).interfaceId ||... */\n    tag_82:\n        /* \"contracts/ERC721A.sol\":2408:2574  return... */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":2289:2582  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":4064:4164  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"contracts/ERC721A.sol\":4118:4131  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":4151:4156  _name */\n      0x01\n        /* \"contracts/ERC721A.sol\":4144:4156  return _name */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_87\n      jump\t// in\n    tag_88:\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":4064:4164  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":5626:5840  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_33:\n        /* \"contracts/ERC721A.sol\":5694:5701  address */\n      0x00\n        /* \"contracts/ERC721A.sol\":5722:5738  _exists(tokenId) */\n      tag_93\n        /* \"contracts/ERC721A.sol\":5730:5737  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":5722:5729  _exists */\n      tag_94\n        /* \"contracts/ERC721A.sol\":5722:5738  _exists(tokenId) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/ERC721A.sol\":5714:5788  require(_exists(tokenId), 'ERC721A: approved query for nonexistent token') */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"contracts/ERC721A.sol\":5808:5823  _tokenApprovals */\n      0x05\n        /* \"contracts/ERC721A.sol\":5808:5832  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/ERC721A.sol\":5824:5831  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":5808:5832  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":5801:5832  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":5626:5840  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":5147:5560  function approve(address to, uint256 tokenId) public override {... */\n    tag_39:\n        /* \"contracts/ERC721A.sol\":5220:5233  address owner */\n      0x00\n        /* \"contracts/ERC721A.sol\":5236:5260  ERC721A.ownerOf(tokenId) */\n      tag_99\n        /* \"contracts/ERC721A.sol\":5252:5259  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":5236:5251  ERC721A.ownerOf */\n      tag_53\n        /* \"contracts/ERC721A.sol\":5236:5260  ERC721A.ownerOf(tokenId) */\n      jump\t// in\n    tag_99:\n        /* \"contracts/ERC721A.sol\":5220:5260  address owner = ERC721A.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":5285:5290  owner */\n      dup1\n        /* \"contracts/ERC721A.sol\":5279:5290  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":5279:5281  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":5279:5290  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC721A.sol\":5271:5329  require(to != owner, 'ERC721A: approval to current owner') */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"contracts/ERC721A.sol\":5380:5385  owner */\n      dup1\n        /* \"contracts/ERC721A.sol\":5364:5385  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":5364:5376  _msgSender() */\n      tag_103\n        /* \"contracts/ERC721A.sol\":5364:5374  _msgSender */\n      tag_104\n        /* \"contracts/ERC721A.sol\":5364:5376  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"contracts/ERC721A.sol\":5364:5385  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":5364:5426  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      dup1\n      tag_105\n      jumpi\n      pop\n        /* \"contracts/ERC721A.sol\":5389:5426  isApprovedForAll(owner, _msgSender()) */\n      tag_106\n        /* \"contracts/ERC721A.sol\":5406:5411  owner */\n      dup2\n        /* \"contracts/ERC721A.sol\":5413:5425  _msgSender() */\n      tag_107\n        /* \"contracts/ERC721A.sol\":5413:5423  _msgSender */\n      tag_104\n        /* \"contracts/ERC721A.sol\":5413:5425  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"contracts/ERC721A.sol\":5389:5405  isApprovedForAll */\n      tag_78\n        /* \"contracts/ERC721A.sol\":5389:5426  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/ERC721A.sol\":5364:5426  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n    tag_105:\n        /* \"contracts/ERC721A.sol\":5342:5511  require(... */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/ERC721A.sol\":5524:5552  _approve(to, tokenId, owner) */\n      tag_111\n        /* \"contracts/ERC721A.sol\":5533:5535  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":5537:5544  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":5546:5551  owner */\n      dup4\n        /* \"contracts/ERC721A.sol\":5524:5532  _approve */\n      tag_112\n        /* \"contracts/ERC721A.sol\":5524:5552  _approve(to, tokenId, owner) */\n      jump\t// in\n    tag_111:\n        /* \"contracts/ERC721A.sol\":5209:5560  {... */\n      pop\n        /* \"contracts/ERC721A.sol\":5147:5560  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":2126:2217  function totalSupply() public view returns (uint256) {... */\n    tag_41:\n        /* \"contracts/ERC721A.sol\":2170:2177  uint256 */\n      0x00\n        /* \"contracts/ERC721A.sol\":2197:2209  currentIndex */\n      dup1\n      sload\n        /* \"contracts/ERC721A.sol\":2190:2209  return currentIndex */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":2126:2217  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":6502:6664  function transferFrom(... */\n    tag_47:\n        /* \"contracts/ERC721A.sol\":6628:6656  _transfer(from, to, tokenId) */\n      tag_115\n        /* \"contracts/ERC721A.sol\":6638:6642  from */\n      dup4\n        /* \"contracts/ERC721A.sol\":6644:6646  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":6648:6655  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":6628:6637  _transfer */\n      tag_116\n        /* \"contracts/ERC721A.sol\":6628:6656  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_115:\n        /* \"contracts/ERC721A.sol\":6502:6664  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":6735:6912  function safeTransferFrom(... */\n    tag_50:\n        /* \"contracts/ERC721A.sol\":6865:6904  safeTransferFrom(from, to, tokenId, '') */\n      tag_118\n        /* \"contracts/ERC721A.sol\":6882:6886  from */\n      dup4\n        /* \"contracts/ERC721A.sol\":6888:6890  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":6892:6899  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":6865:6904  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC721A.sol\":6865:6881  safeTransferFrom */\n      tag_70\n        /* \"contracts/ERC721A.sol\":6865:6904  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_118:\n        /* \"contracts/ERC721A.sol\":6735:6912  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":3873:3997  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_53:\n        /* \"contracts/ERC721A.sol\":3937:3944  address */\n      0x00\n        /* \"contracts/ERC721A.sol\":3964:3984  ownershipOf(tokenId) */\n      tag_120\n        /* \"contracts/ERC721A.sol\":3976:3983  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":3964:3975  ownershipOf */\n      tag_121\n        /* \"contracts/ERC721A.sol\":3964:3984  ownershipOf(tokenId) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/ERC721A.sol\":3964:3989  ownershipOf(tokenId).addr */\n      0x00\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":3957:3989  return ownershipOf(tokenId).addr */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":3873:3997  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":2646:2867  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_58:\n        /* \"contracts/ERC721A.sol\":2710:2717  uint256 */\n      0x00\n        /* \"contracts/ERC721A.sol\":2755:2756  0 */\n      dup1\n        /* \"contracts/ERC721A.sol\":2738:2757  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":2738:2743  owner */\n      dup3\n        /* \"contracts/ERC721A.sol\":2738:2757  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC721A.sol\":2730:2805  require(owner != address(0), 'ERC721A: balance query for the zero address') */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"contracts/ERC721A.sol\":2831:2843  _addressData */\n      0x04\n        /* \"contracts/ERC721A.sol\":2831:2850  _addressData[owner] */\n      0x00\n        /* \"contracts/ERC721A.sol\":2844:2849  owner */\n      dup4\n        /* \"contracts/ERC721A.sol\":2831:2850  _addressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721A.sol\":2831:2858  _addressData[owner].balance */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":2823:2859  uint256(_addressData[owner].balance) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":2816:2859  return uint256(_addressData[owner].balance) */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":2646:2867  function balanceOf(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":4233:4337  function symbol() public view virtual override returns (string memory) {... */\n    tag_61:\n        /* \"contracts/ERC721A.sol\":4289:4302  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":4322:4329  _symbol */\n      0x02\n        /* \"contracts/ERC721A.sol\":4315:4329  return _symbol */\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_87\n      jump\t// in\n    tag_127:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_87\n      jump\t// in\n    tag_128:\n      dup1\n      iszero\n      tag_129\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_130\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_129)\n    tag_130:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_131:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_131\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":4233:4337  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":5912:6200  function setApprovalForAll(address operator, bool approved) public override {... */\n    tag_66:\n        /* \"contracts/ERC721A.sol\":6019:6031  _msgSender() */\n      tag_133\n        /* \"contracts/ERC721A.sol\":6019:6029  _msgSender */\n      tag_104\n        /* \"contracts/ERC721A.sol\":6019:6031  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"contracts/ERC721A.sol\":6007:6031  operator != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":6007:6015  operator */\n      dup3\n        /* \"contracts/ERC721A.sol\":6007:6031  operator != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC721A.sol\":5999:6062  require(operator != _msgSender(), 'ERC721A: approve to caller') */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"contracts/ERC721A.sol\":6120:6128  approved */\n      dup1\n        /* \"contracts/ERC721A.sol\":6075:6093  _operatorApprovals */\n      0x06\n        /* \"contracts/ERC721A.sol\":6075:6107  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \"contracts/ERC721A.sol\":6094:6106  _msgSender() */\n      tag_137\n        /* \"contracts/ERC721A.sol\":6094:6104  _msgSender */\n      tag_104\n        /* \"contracts/ERC721A.sol\":6094:6106  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"contracts/ERC721A.sol\":6075:6107  _operatorApprovals[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721A.sol\":6075:6117  _operatorApprovals[_msgSender()][operator] */\n      0x00\n        /* \"contracts/ERC721A.sol\":6108:6116  operator */\n      dup5\n        /* \"contracts/ERC721A.sol\":6075:6117  _operatorApprovals[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC721A.sol\":6075:6128  _operatorApprovals[_msgSender()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC721A.sol\":6173:6181  operator */\n      dup2\n        /* \"contracts/ERC721A.sol\":6144:6192  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":6159:6171  _msgSender() */\n      tag_138\n        /* \"contracts/ERC721A.sol\":6159:6169  _msgSender */\n      tag_104\n        /* \"contracts/ERC721A.sol\":6159:6171  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"contracts/ERC721A.sol\":6144:6192  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/ERC721A.sol\":6183:6191  approved */\n      dup4\n        /* \"contracts/ERC721A.sol\":6144:6192  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC721A.sol\":5912:6200  function setApprovalForAll(address operator, bool approved) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":6983:7338  function safeTransferFrom(... */\n    tag_70:\n        /* \"contracts/ERC721A.sol\":7142:7170  _transfer(from, to, tokenId) */\n      tag_141\n        /* \"contracts/ERC721A.sol\":7152:7156  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":7158:7160  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":7162:7169  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":7142:7151  _transfer */\n      tag_116\n        /* \"contracts/ERC721A.sol\":7142:7170  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/ERC721A.sol\":7203:7251  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_142\n        /* \"contracts/ERC721A.sol\":7226:7230  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":7232:7234  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":7236:7243  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":7245:7250  _data */\n      dup5\n        /* \"contracts/ERC721A.sol\":7203:7225  _checkOnERC721Received */\n      tag_143\n        /* \"contracts/ERC721A.sol\":7203:7251  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/ERC721A.sol\":7181:7330  require(... */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"contracts/ERC721A.sol\":6983:7338  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":4408:4743  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_73:\n        /* \"contracts/ERC721A.sol\":4481:4494  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":4515:4531  _exists(tokenId) */\n      tag_148\n        /* \"contracts/ERC721A.sol\":4523:4530  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":4515:4522  _exists */\n      tag_94\n        /* \"contracts/ERC721A.sol\":4515:4531  _exists(tokenId) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/ERC721A.sol\":4507:4583  require(_exists(tokenId), 'ERC721Metadata: URI query for nonexistent token') */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/ERC721A.sol\":4596:4617  string memory baseURI */\n      0x00\n        /* \"contracts/ERC721A.sol\":4620:4630  _baseURI() */\n      tag_152\n        /* \"contracts/ERC721A.sol\":4620:4628  _baseURI */\n      tag_153\n        /* \"contracts/ERC721A.sol\":4620:4630  _baseURI() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/ERC721A.sol\":4596:4630  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":4673:4674  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":4654:4661  baseURI */\n      dup2\n        /* \"contracts/ERC721A.sol\":4648:4669  bytes(baseURI).length */\n      mload\n        /* \"contracts/ERC721A.sol\":4648:4674  bytes(baseURI).length != 0 */\n      sub\n        /* \"contracts/ERC721A.sol\":4648:4735  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n      tag_154\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_155)\n    tag_154:\n        /* \"contracts/ERC721A.sol\":4701:4708  baseURI */\n      dup1\n        /* \"contracts/ERC721A.sol\":4710:4728  tokenId.toString() */\n      tag_156\n        /* \"contracts/ERC721A.sol\":4710:4717  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":4710:4726  tokenId.toString */\n      tag_157\n        /* \"contracts/ERC721A.sol\":4710:4728  tokenId.toString() */\n      jump\t// in\n    tag_156:\n        /* \"contracts/ERC721A.sol\":4684:4729  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_158\n      swap3\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ERC721A.sol\":4648:4735  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n    tag_155:\n        /* \"contracts/ERC721A.sol\":4641:4735  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":4408:4743  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":6271:6435  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_78:\n        /* \"contracts/ERC721A.sol\":6368:6372  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":6392:6410  _operatorApprovals */\n      0x06\n        /* \"contracts/ERC721A.sol\":6392:6417  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/ERC721A.sol\":6411:6416  owner */\n      dup5\n        /* \"contracts/ERC721A.sol\":6392:6417  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721A.sol\":6392:6427  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/ERC721A.sol\":6418:6426  operator */\n      dup4\n        /* \"contracts/ERC721A.sol\":6392:6427  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC721A.sol\":6385:6427  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":6271:6435  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":7593:7704  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_94:\n        /* \"contracts/ERC721A.sol\":7650:7654  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":7684:7696  currentIndex */\n      dup1\n      sload\n        /* \"contracts/ERC721A.sol\":7674:7681  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":7674:7696  tokenId < currentIndex */\n      lt\n        /* \"contracts/ERC721A.sol\":7667:7696  return tokenId < currentIndex */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":7593:7704  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":12373:12569  function _approve(... */\n    tag_112:\n        /* \"contracts/ERC721A.sol\":12515:12517  to */\n      dup3\n        /* \"contracts/ERC721A.sol\":12488:12503  _tokenApprovals */\n      0x05\n        /* \"contracts/ERC721A.sol\":12488:12512  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/ERC721A.sol\":12504:12511  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":12488:12512  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC721A.sol\":12488:12517  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC721A.sol\":12553:12560  tokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":12549:12551  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":12533:12561  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":12542:12547  owner */\n      dup3\n        /* \"contracts/ERC721A.sol\":12533:12561  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC721A.sol\":12373:12569  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":10321:12255  function _transfer(... */\n    tag_116:\n        /* \"contracts/ERC721A.sol\":10436:10471  TokenOwnership memory prevOwnership */\n      0x00\n        /* \"contracts/ERC721A.sol\":10474:10494  ownershipOf(tokenId) */\n      tag_166\n        /* \"contracts/ERC721A.sol\":10486:10493  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":10474:10485  ownershipOf */\n      tag_121\n        /* \"contracts/ERC721A.sol\":10474:10494  ownershipOf(tokenId) */\n      jump\t// in\n    tag_166:\n        /* \"contracts/ERC721A.sol\":10436:10494  TokenOwnership memory prevOwnership = ownershipOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":10507:10529  bool isApprovedOrOwner */\n      0x00\n        /* \"contracts/ERC721A.sol\":10549:10562  prevOwnership */\n      dup2\n        /* \"contracts/ERC721A.sol\":10549:10567  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":10533:10567  _msgSender() == prevOwnership.addr */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":10533:10545  _msgSender() */\n      tag_167\n        /* \"contracts/ERC721A.sol\":10533:10543  _msgSender */\n      tag_104\n        /* \"contracts/ERC721A.sol\":10533:10545  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"contracts/ERC721A.sol\":10533:10567  _msgSender() == prevOwnership.addr */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":10533:10616  _msgSender() == prevOwnership.addr ||... */\n      dup1\n      tag_168\n      jumpi\n      pop\n        /* \"contracts/ERC721A.sol\":10604:10616  _msgSender() */\n      tag_169\n        /* \"contracts/ERC721A.sol\":10604:10614  _msgSender */\n      tag_104\n        /* \"contracts/ERC721A.sol\":10604:10616  _msgSender() */\n      jump\t// in\n    tag_169:\n        /* \"contracts/ERC721A.sol\":10580:10616  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":10580:10600  getApproved(tokenId) */\n      tag_170\n        /* \"contracts/ERC721A.sol\":10592:10599  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":10580:10591  getApproved */\n      tag_33\n        /* \"contracts/ERC721A.sol\":10580:10600  getApproved(tokenId) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/ERC721A.sol\":10580:10616  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":10533:10616  _msgSender() == prevOwnership.addr ||... */\n    tag_168:\n        /* \"contracts/ERC721A.sol\":10533:10679  _msgSender() == prevOwnership.addr ||... */\n      dup1\n      tag_171\n      jumpi\n      pop\n        /* \"contracts/ERC721A.sol\":10629:10679  isApprovedForAll(prevOwnership.addr, _msgSender()) */\n      tag_172\n        /* \"contracts/ERC721A.sol\":10646:10659  prevOwnership */\n      dup3\n        /* \"contracts/ERC721A.sol\":10646:10664  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":10666:10678  _msgSender() */\n      tag_173\n        /* \"contracts/ERC721A.sol\":10666:10676  _msgSender */\n      tag_104\n        /* \"contracts/ERC721A.sol\":10666:10678  _msgSender() */\n      jump\t// in\n    tag_173:\n        /* \"contracts/ERC721A.sol\":10629:10645  isApprovedForAll */\n      tag_78\n        /* \"contracts/ERC721A.sol\":10629:10679  isApprovedForAll(prevOwnership.addr, _msgSender()) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/ERC721A.sol\":10533:10679  _msgSender() == prevOwnership.addr ||... */\n    tag_171:\n        /* \"contracts/ERC721A.sol\":10507:10680  bool isApprovedOrOwner = (_msgSender() == prevOwnership.addr ||... */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":10701:10718  isApprovedOrOwner */\n      dup1\n        /* \"contracts/ERC721A.sol\":10693:10773  require(isApprovedOrOwner, 'ERC721A: transfer caller is not owner nor approved') */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/ERC721A.sol\":10816:10820  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":10794:10820  prevOwnership.addr == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":10794:10807  prevOwnership */\n      dup3\n        /* \"contracts/ERC721A.sol\":10794:10812  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":10794:10820  prevOwnership.addr == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":10786:10863  require(prevOwnership.addr == from, 'ERC721A: transfer from incorrect owner') */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/ERC721A.sol\":10896:10897  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":10882:10898  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":10882:10884  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":10882:10898  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC721A.sol\":10874:10940  require(to != address(0), 'ERC721A: transfer to the zero address') */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"contracts/ERC721A.sol\":10953:10996  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_183\n        /* \"contracts/ERC721A.sol\":10975:10979  from */\n      dup6\n        /* \"contracts/ERC721A.sol\":10981:10983  to */\n      dup6\n        /* \"contracts/ERC721A.sol\":10985:10992  tokenId */\n      dup6\n        /* \"contracts/ERC721A.sol\":10994:10995  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":10953:10974  _beforeTokenTransfers */\n      tag_184\n        /* \"contracts/ERC721A.sol\":10953:10996  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/ERC721A.sol\":11061:11110  _approve(address(0), tokenId, prevOwnership.addr) */\n      tag_185\n        /* \"contracts/ERC721A.sol\":11078:11079  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":11082:11089  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":11091:11104  prevOwnership */\n      dup5\n        /* \"contracts/ERC721A.sol\":11091:11109  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":11061:11069  _approve */\n      tag_112\n        /* \"contracts/ERC721A.sol\":11061:11110  _approve(address(0), tokenId, prevOwnership.addr) */\n      jump\t// in\n    tag_185:\n        /* \"contracts/ERC721A.sol\":11428:11429  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":11398:11410  _addressData */\n      0x04\n        /* \"contracts/ERC721A.sol\":11398:11416  _addressData[from] */\n      0x00\n        /* \"contracts/ERC721A.sol\":11411:11415  from */\n      dup8\n        /* \"contracts/ERC721A.sol\":11398:11416  _addressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721A.sol\":11398:11424  _addressData[from].balance */\n      0x00\n      add\n      0x00\n        /* \"contracts/ERC721A.sol\":11398:11429  _addressData[from].balance -= 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      sub\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC721A.sol\":11468:11469  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":11440:11452  _addressData */\n      0x04\n        /* \"contracts/ERC721A.sol\":11440:11456  _addressData[to] */\n      0x00\n        /* \"contracts/ERC721A.sol\":11453:11455  to */\n      dup7\n        /* \"contracts/ERC721A.sol\":11440:11456  _addressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721A.sol\":11440:11464  _addressData[to].balance */\n      0x00\n      add\n      0x00\n        /* \"contracts/ERC721A.sol\":11440:11469  _addressData[to].balance += 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      add\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC721A.sol\":11510:11512  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":11482:11493  _ownerships */\n      0x03\n        /* \"contracts/ERC721A.sol\":11482:11502  _ownerships[tokenId] */\n      0x00\n        /* \"contracts/ERC721A.sol\":11494:11501  tokenId */\n      dup6\n        /* \"contracts/ERC721A.sol\":11482:11502  _ownerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721A.sol\":11482:11507  _ownerships[tokenId].addr */\n      0x00\n      add\n      0x00\n        /* \"contracts/ERC721A.sol\":11482:11512  _ownerships[tokenId].addr = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC721A.sol\":11568:11583  block.timestamp */\n      timestamp\n        /* \"contracts/ERC721A.sol\":11523:11534  _ownerships */\n      0x03\n        /* \"contracts/ERC721A.sol\":11523:11543  _ownerships[tokenId] */\n      0x00\n        /* \"contracts/ERC721A.sol\":11535:11542  tokenId */\n      dup6\n        /* \"contracts/ERC721A.sol\":11523:11543  _ownerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721A.sol\":11523:11558  _ownerships[tokenId].startTimestamp */\n      0x00\n      add\n      0x14\n        /* \"contracts/ERC721A.sol\":11523:11584  _ownerships[tokenId].startTimestamp = uint64(block.timestamp) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC721A.sol\":11824:11843  uint256 nextTokenId */\n      0x00\n        /* \"contracts/ERC721A.sol\":11856:11857  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":11846:11853  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":11846:11857  tokenId + 1 */\n      add\n        /* \"contracts/ERC721A.sol\":11824:11857  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":11913:11914  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":11872:11915  _ownerships[nextTokenId].addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":11872:11883  _ownerships */\n      0x03\n        /* \"contracts/ERC721A.sol\":11872:11896  _ownerships[nextTokenId] */\n      0x00\n        /* \"contracts/ERC721A.sol\":11884:11895  nextTokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":11872:11896  _ownerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721A.sol\":11872:11901  _ownerships[nextTokenId].addr */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":11872:11915  _ownerships[nextTokenId].addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC721A.sol\":11868:12143  if (_ownerships[nextTokenId].addr == address(0)) {... */\n      tag_186\n      jumpi\n        /* \"contracts/ERC721A.sol\":11936:11956  _exists(nextTokenId) */\n      tag_187\n        /* \"contracts/ERC721A.sol\":11944:11955  nextTokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":11936:11943  _exists */\n      tag_94\n        /* \"contracts/ERC721A.sol\":11936:11956  _exists(nextTokenId) */\n      jump\t// in\n    tag_187:\n        /* \"contracts/ERC721A.sol\":11932:12132  if (_exists(nextTokenId)) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"contracts/ERC721A.sol\":12009:12022  prevOwnership */\n      dup3\n        /* \"contracts/ERC721A.sol\":12009:12027  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":11977:11988  _ownerships */\n      0x03\n        /* \"contracts/ERC721A.sol\":11977:12001  _ownerships[nextTokenId] */\n      0x00\n        /* \"contracts/ERC721A.sol\":11989:12000  nextTokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":11977:12001  _ownerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721A.sol\":11977:12006  _ownerships[nextTokenId].addr */\n      0x00\n      add\n      0x00\n        /* \"contracts/ERC721A.sol\":11977:12027  _ownerships[nextTokenId].addr = prevOwnership.addr */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC721A.sol\":12088:12101  prevOwnership */\n      dup3\n        /* \"contracts/ERC721A.sol\":12088:12116  prevOwnership.startTimestamp */\n      0x20\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":12046:12057  _ownerships */\n      0x03\n        /* \"contracts/ERC721A.sol\":12046:12070  _ownerships[nextTokenId] */\n      0x00\n        /* \"contracts/ERC721A.sol\":12058:12069  nextTokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":12046:12070  _ownerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721A.sol\":12046:12085  _ownerships[nextTokenId].startTimestamp */\n      0x00\n      add\n      0x14\n        /* \"contracts/ERC721A.sol\":12046:12116  _ownerships[nextTokenId].startTimestamp = prevOwnership.startTimestamp */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC721A.sol\":11932:12132  if (_exists(nextTokenId)) {... */\n    tag_188:\n        /* \"contracts/ERC721A.sol\":11868:12143  if (_ownerships[nextTokenId].addr == address(0)) {... */\n    tag_186:\n        /* \"contracts/ERC721A.sol\":11377:12150  unchecked {... */\n      pop\n        /* \"contracts/ERC721A.sol\":12186:12193  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":12182:12184  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":12167:12194  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":12176:12180  from */\n      dup7\n        /* \"contracts/ERC721A.sol\":12167:12194  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC721A.sol\":12205:12247  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_189\n        /* \"contracts/ERC721A.sol\":12226:12230  from */\n      dup6\n        /* \"contracts/ERC721A.sol\":12232:12234  to */\n      dup6\n        /* \"contracts/ERC721A.sol\":12236:12243  tokenId */\n      dup6\n        /* \"contracts/ERC721A.sol\":12245:12246  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":12205:12225  _afterTokenTransfers */\n      tag_190\n        /* \"contracts/ERC721A.sol\":12205:12247  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_189:\n        /* \"contracts/ERC721A.sol\":10425:12255  {... */\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":10321:12255  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":3306:3811  function ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_121:\n        /* \"contracts/ERC721A.sol\":3367:3388  TokenOwnership memory */\n      tag_191\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"contracts/ERC721A.sol\":3409:3425  _exists(tokenId) */\n      tag_194\n        /* \"contracts/ERC721A.sol\":3417:3424  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":3409:3416  _exists */\n      tag_94\n        /* \"contracts/ERC721A.sol\":3409:3425  _exists(tokenId) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/ERC721A.sol\":3401:3472  require(_exists(tokenId), 'ERC721A: owner query for nonexistent token') */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"contracts/ERC721A.sol\":3507:3519  uint256 curr */\n      0x00\n        /* \"contracts/ERC721A.sol\":3522:3529  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":3507:3529  uint256 curr = tokenId */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":3502:3727  for (uint256 curr = tokenId; curr >= 0; curr--) {... */\n    tag_198:\n        /* \"contracts/ERC721A.sol\":3539:3540  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":3531:3535  curr */\n      dup2\n        /* \"contracts/ERC721A.sol\":3531:3540  curr >= 0 */\n      lt\n        /* \"contracts/ERC721A.sol\":3502:3727  for (uint256 curr = tokenId; curr >= 0; curr--) {... */\n      tag_199\n      jumpi\n        /* \"contracts/ERC721A.sol\":3565:3596  TokenOwnership memory ownership */\n      0x00\n        /* \"contracts/ERC721A.sol\":3599:3610  _ownerships */\n      0x03\n        /* \"contracts/ERC721A.sol\":3599:3616  _ownerships[curr] */\n      0x00\n        /* \"contracts/ERC721A.sol\":3611:3615  curr */\n      dup4\n        /* \"contracts/ERC721A.sol\":3599:3616  _ownerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721A.sol\":3565:3616  TokenOwnership memory ownership = _ownerships[curr] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":3661:3662  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":3635:3663  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":3635:3644  ownership */\n      dup2\n        /* \"contracts/ERC721A.sol\":3635:3649  ownership.addr */\n      0x00\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":3635:3663  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":3631:3716  if (ownership.addr != address(0)) {... */\n      tag_201\n      jumpi\n        /* \"contracts/ERC721A.sol\":3691:3700  ownership */\n      dup1\n        /* \"contracts/ERC721A.sol\":3684:3700  return ownership */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_193)\n        /* \"contracts/ERC721A.sol\":3631:3716  if (ownership.addr != address(0)) {... */\n    tag_201:\n        /* \"contracts/ERC721A.sol\":3550:3727  {... */\n      pop\n        /* \"contracts/ERC721A.sol\":3542:3548  curr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":3502:3727  for (uint256 curr = tokenId; curr >= 0; curr--) {... */\n      jump(tag_198)\n    tag_199:\n      pop\n        /* \"contracts/ERC721A.sol\":3746:3803  revert('ERC721A: unable to determine the owner of token') */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":3306:3811  function ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_193:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":13134:13938  function _checkOnERC721Received(... */\n    tag_143:\n        /* \"contracts/ERC721A.sol\":13289:13293  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":13310:13325  to.isContract() */\n      tag_205\n        /* \"contracts/ERC721A.sol\":13310:13312  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":13310:13323  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_206\n        /* \"contracts/ERC721A.sol\":13310:13325  to.isContract() */\n      jump\t// in\n    tag_205:\n        /* \"contracts/ERC721A.sol\":13306:13931  if (to.isContract()) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"contracts/ERC721A.sol\":13362:13364  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":13346:13382  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"contracts/ERC721A.sol\":13383:13395  _msgSender() */\n      tag_208\n        /* \"contracts/ERC721A.sol\":13383:13393  _msgSender */\n      tag_104\n        /* \"contracts/ERC721A.sol\":13383:13395  _msgSender() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/ERC721A.sol\":13397:13401  from */\n      dup8\n        /* \"contracts/ERC721A.sol\":13403:13410  tokenId */\n      dup7\n        /* \"contracts/ERC721A.sol\":13412:13417  _data */\n      dup7\n        /* \"contracts/ERC721A.sol\":13346:13418  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_211\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_212\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      0x01\n    tag_211:\n        /* \"contracts/ERC721A.sol\":13342:13876  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_214\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_219\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_218)\n    tag_219:\n      0x60\n      swap2\n      pop\n    tag_218:\n      pop\n        /* \"contracts/ERC721A.sol\":13609:13610  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":13592:13598  reason */\n      dup2\n        /* \"contracts/ERC721A.sol\":13592:13605  reason.length */\n      mload\n        /* \"contracts/ERC721A.sol\":13592:13610  reason.length == 0 */\n      sub\n        /* \"contracts/ERC721A.sol\":13588:13861  if (reason.length == 0) {... */\n      tag_220\n      jumpi\n        /* \"contracts/ERC721A.sol\":13635:13696  revert('ERC721A: transfer to non ERC721Receiver implementer') */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_146\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":13588:13861  if (reason.length == 0) {... */\n    tag_220:\n        /* \"contracts/ERC721A.sol\":13811:13817  reason */\n      dup1\n        /* \"contracts/ERC721A.sol\":13805:13818  mload(reason) */\n      mload\n        /* \"contracts/ERC721A.sol\":13796:13802  reason */\n      dup2\n        /* \"contracts/ERC721A.sol\":13792:13794  32 */\n      0x20\n        /* \"contracts/ERC721A.sol\":13788:13803  add(32, reason) */\n      add\n        /* \"contracts/ERC721A.sol\":13781:13819  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/ERC721A.sol\":13342:13876  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_214:\n        /* \"contracts/ERC721A.sol\":13479:13524  IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/ERC721A.sol\":13469:13524  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC721A.sol\":13469:13475  retval */\n      dup2\n        /* \"contracts/ERC721A.sol\":13469:13524  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":13462:13524  return retval == IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n      jump(tag_204)\n        /* \"contracts/ERC721A.sol\":13306:13931  if (to.isContract()) {... */\n    tag_207:\n        /* \"contracts/ERC721A.sol\":13915:13919  true */\n      0x01\n        /* \"contracts/ERC721A.sol\":13908:13919  return true */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":13134:13938  function _checkOnERC721Received(... */\n    tag_204:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":4991:5085  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_153:\n        /* \"contracts/ERC721A.sol\":5042:5055  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":5068:5077  return '' */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":4991:5085  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":392:1095  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":448:461  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":674:675  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":665:670  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":665:675  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":661:712  if (value == 0) {... */\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":691:701  return \"0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_226)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":661:712  if (value == 0) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":721:733  uint256 temp */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":736:741  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":721:741  uint256 temp = value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":751:765  uint256 digits */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":790:791  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":782:786  temp */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":782:791  temp != 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":807:815  digits++ */\n      dup1\n      dup1\n      tag_230\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":837:839  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":829:839  temp /= 10 */\n      dup3\n      tag_232\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n      jump(tag_228)\n    tag_229:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":859:878  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":891:897  digits */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":881:898  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_234\n      jumpi\n      tag_235\n      tag_236\n      jump\t// in\n    tag_235:\n    tag_234:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_237\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_237:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":859:898  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":924:925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":915:920  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":915:925  value != 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":951:952  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":941:952  digits -= 1 */\n      dup3\n      tag_240\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1019  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1014  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1019  value % 10 */\n      tag_242\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":996:998  48 */\n      0x30\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":996:1020  48 + uint256(value % 10) */\n      tag_244\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":983:1022  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:972  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":973:979  digits */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:980  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_246\n      jumpi\n      tag_247\n      tag_248\n      jump\t// in\n    tag_247:\n    tag_246:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:1022  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1045:1047  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1036:1047  value /= 10 */\n      dup6\n      tag_249\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_249:\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n      jump(tag_238)\n    tag_239:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1081:1087  buffer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1067:1088  return string(buffer) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":392:1095  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_226:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":14426:14585  function _beforeTokenTransfers(... */\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":14997:15155  function _afterTokenTransfers(... */\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_192:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_253:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_254:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_255:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_256:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_257:\n        /* \"#utility.yul\":561:584   */\n      tag_324\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_256\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_325:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_258:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_327\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_257\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_22:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_330\n      tag_254\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":833:952   */\n    tag_329:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_331\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_258\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_259:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_260:\n        /* \"#utility.yul\":1268:1289   */\n      tag_334\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_259\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_25:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_336\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_260\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_261:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_262:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_263:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_340:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_340)\n    tag_342:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_264:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_265:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_345\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_261\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":2329:2400   */\n      tag_346\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_262\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_347\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_263\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2499:2528   */\n      tag_348\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_264\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_29:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_350\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_265\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_266:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_267:\n        /* \"#utility.yul\":3016:3040   */\n      tag_353\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_266\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_354\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_354:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_268:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_356\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_267\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_32:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_359\n      tag_254\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":3292:3411   */\n    tag_358:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_360\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_268\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_269:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_270:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_363\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_269\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_271:\n        /* \"#utility.yul\":3872:3896   */\n      tag_365\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_270\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_35:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_367\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_271\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_272:\n        /* \"#utility.yul\":4210:4234   */\n      tag_369\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_270\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_370:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_273:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_372\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_272\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_38:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_375\n      tag_254\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4503:4622   */\n    tag_374:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_376\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_273\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_377\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_268\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5008   */\n    tag_274:\n        /* \"#utility.yul\":4977:5001   */\n      tag_379\n        /* \"#utility.yul\":4995:5000   */\n      dup2\n        /* \"#utility.yul\":4977:5001   */\n      tag_266\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":4972:4975   */\n      dup3\n        /* \"#utility.yul\":4965:5002   */\n      mstore\n        /* \"#utility.yul\":4890:5008   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5014:5236   */\n    tag_43:\n        /* \"#utility.yul\":5107:5111   */\n      0x00\n        /* \"#utility.yul\":5145:5147   */\n      0x20\n        /* \"#utility.yul\":5134:5143   */\n      dup3\n        /* \"#utility.yul\":5130:5148   */\n      add\n        /* \"#utility.yul\":5122:5148   */\n      swap1\n      pop\n        /* \"#utility.yul\":5158:5229   */\n      tag_381\n        /* \"#utility.yul\":5226:5227   */\n      0x00\n        /* \"#utility.yul\":5215:5224   */\n      dup4\n        /* \"#utility.yul\":5211:5228   */\n      add\n        /* \"#utility.yul\":5202:5208   */\n      dup5\n        /* \"#utility.yul\":5158:5229   */\n      tag_274\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":5014:5236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5242:5861   */\n    tag_46:\n        /* \"#utility.yul\":5319:5325   */\n      0x00\n        /* \"#utility.yul\":5327:5333   */\n      dup1\n        /* \"#utility.yul\":5335:5341   */\n      0x00\n        /* \"#utility.yul\":5384:5386   */\n      0x60\n        /* \"#utility.yul\":5372:5381   */\n      dup5\n        /* \"#utility.yul\":5363:5370   */\n      dup7\n        /* \"#utility.yul\":5359:5382   */\n      sub\n        /* \"#utility.yul\":5355:5387   */\n      slt\n        /* \"#utility.yul\":5352:5471   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":5390:5469   */\n      tag_384\n      tag_254\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":5352:5471   */\n    tag_383:\n        /* \"#utility.yul\":5510:5511   */\n      0x00\n        /* \"#utility.yul\":5535:5588   */\n      tag_385\n        /* \"#utility.yul\":5580:5587   */\n      dup7\n        /* \"#utility.yul\":5571:5577   */\n      dup3\n        /* \"#utility.yul\":5560:5569   */\n      dup8\n        /* \"#utility.yul\":5556:5578   */\n      add\n        /* \"#utility.yul\":5535:5588   */\n      tag_273\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":5525:5588   */\n      swap4\n      pop\n        /* \"#utility.yul\":5481:5598   */\n      pop\n        /* \"#utility.yul\":5637:5639   */\n      0x20\n        /* \"#utility.yul\":5663:5716   */\n      tag_386\n        /* \"#utility.yul\":5708:5715   */\n      dup7\n        /* \"#utility.yul\":5699:5705   */\n      dup3\n        /* \"#utility.yul\":5688:5697   */\n      dup8\n        /* \"#utility.yul\":5684:5706   */\n      add\n        /* \"#utility.yul\":5663:5716   */\n      tag_273\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":5653:5716   */\n      swap3\n      pop\n        /* \"#utility.yul\":5608:5726   */\n      pop\n        /* \"#utility.yul\":5765:5767   */\n      0x40\n        /* \"#utility.yul\":5791:5844   */\n      tag_387\n        /* \"#utility.yul\":5836:5843   */\n      dup7\n        /* \"#utility.yul\":5827:5833   */\n      dup3\n        /* \"#utility.yul\":5816:5825   */\n      dup8\n        /* \"#utility.yul\":5812:5834   */\n      add\n        /* \"#utility.yul\":5791:5844   */\n      tag_268\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5781:5844   */\n      swap2\n      pop\n        /* \"#utility.yul\":5736:5854   */\n      pop\n        /* \"#utility.yul\":5242:5861   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5867:6196   */\n    tag_57:\n        /* \"#utility.yul\":5926:5932   */\n      0x00\n        /* \"#utility.yul\":5975:5977   */\n      0x20\n        /* \"#utility.yul\":5963:5972   */\n      dup3\n        /* \"#utility.yul\":5954:5961   */\n      dup5\n        /* \"#utility.yul\":5950:5973   */\n      sub\n        /* \"#utility.yul\":5946:5978   */\n      slt\n        /* \"#utility.yul\":5943:6062   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":5981:6060   */\n      tag_390\n      tag_254\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":5943:6062   */\n    tag_389:\n        /* \"#utility.yul\":6101:6102   */\n      0x00\n        /* \"#utility.yul\":6126:6179   */\n      tag_391\n        /* \"#utility.yul\":6171:6178   */\n      dup5\n        /* \"#utility.yul\":6162:6168   */\n      dup3\n        /* \"#utility.yul\":6151:6160   */\n      dup6\n        /* \"#utility.yul\":6147:6169   */\n      add\n        /* \"#utility.yul\":6126:6179   */\n      tag_273\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":6116:6179   */\n      swap2\n      pop\n        /* \"#utility.yul\":6072:6189   */\n      pop\n        /* \"#utility.yul\":5867:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_275:\n        /* \"#utility.yul\":6272:6293   */\n      tag_393\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_259\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_394\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_394:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_276:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_396\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_275\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_65:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_399\n      tag_254\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":6553:6672   */\n    tag_398:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_400\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_273\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_401\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_276\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_277:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_278:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_236:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_279:\n        /* \"#utility.yul\":7452:7479   */\n      tag_406\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_264\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_408\n      tag_236\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":7525:7613   */\n    tag_407:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_280:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_410\n      tag_253\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_411\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_279\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_281:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_414\n      tag_236\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":7928:7984   */\n    tag_413:\n        /* \"#utility.yul\":8002:8031   */\n      tag_415\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_264\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_282:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_283:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_418\n        /* \"#utility.yul\":8374:8422   */\n      tag_419\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_281\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":8358:8423   */\n      tag_280\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_421\n      tag_278\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8498:8610   */\n    tag_420:\n        /* \"#utility.yul\":8619:8673   */\n      tag_422\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_282\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_284:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_425\n      tag_277\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":8769:8891   */\n    tag_424:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_426\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_283\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_69:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_429\n      tag_254\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":9178:9298   */\n    tag_428:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_430\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_273\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_431\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_273\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_432\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_268\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_434\n      tag_255\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":9765:9882   */\n    tag_433:\n        /* \"#utility.yul\":9906:9968   */\n      tag_435\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_284\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10465   */\n    tag_77:\n        /* \"#utility.yul\":10059:10065   */\n      0x00\n        /* \"#utility.yul\":10067:10073   */\n      dup1\n        /* \"#utility.yul\":10116:10118   */\n      0x40\n        /* \"#utility.yul\":10104:10113   */\n      dup4\n        /* \"#utility.yul\":10095:10102   */\n      dup6\n        /* \"#utility.yul\":10091:10114   */\n      sub\n        /* \"#utility.yul\":10087:10119   */\n      slt\n        /* \"#utility.yul\":10084:10203   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":10122:10201   */\n      tag_438\n      tag_254\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":10084:10203   */\n    tag_437:\n        /* \"#utility.yul\":10242:10243   */\n      0x00\n        /* \"#utility.yul\":10267:10320   */\n      tag_439\n        /* \"#utility.yul\":10312:10319   */\n      dup6\n        /* \"#utility.yul\":10303:10309   */\n      dup3\n        /* \"#utility.yul\":10292:10301   */\n      dup7\n        /* \"#utility.yul\":10288:10310   */\n      add\n        /* \"#utility.yul\":10267:10320   */\n      tag_273\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":10257:10320   */\n      swap3\n      pop\n        /* \"#utility.yul\":10213:10330   */\n      pop\n        /* \"#utility.yul\":10369:10371   */\n      0x20\n        /* \"#utility.yul\":10395:10448   */\n      tag_440\n        /* \"#utility.yul\":10440:10447   */\n      dup6\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup7\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10395:10448   */\n      tag_273\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":10385:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10340:10458   */\n      pop\n        /* \"#utility.yul\":9991:10465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10651   */\n    tag_285:\n        /* \"#utility.yul\":10519:10596   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10597   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x22\n        /* \"#utility.yul\":10613:10614   */\n      0x04\n        /* \"#utility.yul\":10606:10621   */\n      mstore\n        /* \"#utility.yul\":10640:10644   */\n      0x24\n        /* \"#utility.yul\":10637:10638   */\n      0x00\n        /* \"#utility.yul\":10630:10645   */\n      revert\n        /* \"#utility.yul\":10657:10977   */\n    tag_87:\n        /* \"#utility.yul\":10701:10707   */\n      0x00\n        /* \"#utility.yul\":10738:10739   */\n      0x02\n        /* \"#utility.yul\":10732:10736   */\n      dup3\n        /* \"#utility.yul\":10728:10740   */\n      div\n        /* \"#utility.yul\":10718:10740   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10786   */\n      0x01\n        /* \"#utility.yul\":10779:10783   */\n      dup3\n        /* \"#utility.yul\":10775:10787   */\n      and\n        /* \"#utility.yul\":10806:10824   */\n      dup1\n        /* \"#utility.yul\":10796:10877   */\n      tag_443\n      jumpi\n        /* \"#utility.yul\":10862:10866   */\n      0x7f\n        /* \"#utility.yul\":10854:10860   */\n      dup3\n        /* \"#utility.yul\":10850:10867   */\n      and\n        /* \"#utility.yul\":10840:10867   */\n      swap2\n      pop\n        /* \"#utility.yul\":10796:10877   */\n    tag_443:\n        /* \"#utility.yul\":10924:10926   */\n      0x20\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10913:10927   */\n      lt\n        /* \"#utility.yul\":10893:10911   */\n      dup2\n        /* \"#utility.yul\":10890:10928   */\n      sub\n        /* \"#utility.yul\":10887:10971   */\n      tag_444\n      jumpi\n        /* \"#utility.yul\":10943:10961   */\n      tag_445\n      tag_285\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":10887:10971   */\n    tag_444:\n        /* \"#utility.yul\":10708:10977   */\n      pop\n        /* \"#utility.yul\":10657:10977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11215   */\n    tag_286:\n        /* \"#utility.yul\":11123:11157   */\n      0x455243373231413a20617070726f76656420717565727920666f72206e6f6e65\n        /* \"#utility.yul\":11119:11120   */\n      0x00\n        /* \"#utility.yul\":11111:11117   */\n      dup3\n        /* \"#utility.yul\":11107:11121   */\n      add\n        /* \"#utility.yul\":11100:11158   */\n      mstore\n        /* \"#utility.yul\":11192:11207   */\n      0x78697374656e7420746f6b656e00000000000000000000000000000000000000\n        /* \"#utility.yul\":11187:11189   */\n      0x20\n        /* \"#utility.yul\":11179:11185   */\n      dup3\n        /* \"#utility.yul\":11175:11190   */\n      add\n        /* \"#utility.yul\":11168:11208   */\n      mstore\n        /* \"#utility.yul\":10983:11215   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11221:11587   */\n    tag_287:\n        /* \"#utility.yul\":11363:11366   */\n      0x00\n        /* \"#utility.yul\":11384:11451   */\n      tag_448\n        /* \"#utility.yul\":11448:11450   */\n      0x2d\n        /* \"#utility.yul\":11443:11446   */\n      dup4\n        /* \"#utility.yul\":11384:11451   */\n      tag_262\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":11377:11451   */\n      swap2\n      pop\n        /* \"#utility.yul\":11460:11553   */\n      tag_449\n        /* \"#utility.yul\":11549:11552   */\n      dup3\n        /* \"#utility.yul\":11460:11553   */\n      tag_286\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":11578:11580   */\n      0x40\n        /* \"#utility.yul\":11573:11576   */\n      dup3\n        /* \"#utility.yul\":11569:11581   */\n      add\n        /* \"#utility.yul\":11562:11581   */\n      swap1\n      pop\n        /* \"#utility.yul\":11221:11587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11593:12012   */\n    tag_97:\n        /* \"#utility.yul\":11759:11763   */\n      0x00\n        /* \"#utility.yul\":11797:11799   */\n      0x20\n        /* \"#utility.yul\":11786:11795   */\n      dup3\n        /* \"#utility.yul\":11782:11800   */\n      add\n        /* \"#utility.yul\":11774:11800   */\n      swap1\n      pop\n        /* \"#utility.yul\":11846:11855   */\n      dup2\n        /* \"#utility.yul\":11840:11844   */\n      dup2\n        /* \"#utility.yul\":11836:11856   */\n      sub\n        /* \"#utility.yul\":11832:11833   */\n      0x00\n        /* \"#utility.yul\":11821:11830   */\n      dup4\n        /* \"#utility.yul\":11817:11834   */\n      add\n        /* \"#utility.yul\":11810:11857   */\n      mstore\n        /* \"#utility.yul\":11874:12005   */\n      tag_451\n        /* \"#utility.yul\":12000:12004   */\n      dup2\n        /* \"#utility.yul\":11874:12005   */\n      tag_287\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":11866:12005   */\n      swap1\n      pop\n        /* \"#utility.yul\":11593:12012   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12018:12239   */\n    tag_288:\n        /* \"#utility.yul\":12158:12192   */\n      0x455243373231413a20617070726f76616c20746f2063757272656e74206f776e\n        /* \"#utility.yul\":12154:12155   */\n      0x00\n        /* \"#utility.yul\":12146:12152   */\n      dup3\n        /* \"#utility.yul\":12142:12156   */\n      add\n        /* \"#utility.yul\":12135:12193   */\n      mstore\n        /* \"#utility.yul\":12227:12231   */\n      0x6572000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12222:12224   */\n      0x20\n        /* \"#utility.yul\":12214:12220   */\n      dup3\n        /* \"#utility.yul\":12210:12225   */\n      add\n        /* \"#utility.yul\":12203:12232   */\n      mstore\n        /* \"#utility.yul\":12018:12239   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12245:12611   */\n    tag_289:\n        /* \"#utility.yul\":12387:12390   */\n      0x00\n        /* \"#utility.yul\":12408:12475   */\n      tag_454\n        /* \"#utility.yul\":12472:12474   */\n      0x22\n        /* \"#utility.yul\":12467:12470   */\n      dup4\n        /* \"#utility.yul\":12408:12475   */\n      tag_262\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":12401:12475   */\n      swap2\n      pop\n        /* \"#utility.yul\":12484:12577   */\n      tag_455\n        /* \"#utility.yul\":12573:12576   */\n      dup3\n        /* \"#utility.yul\":12484:12577   */\n      tag_288\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":12602:12604   */\n      0x40\n        /* \"#utility.yul\":12597:12600   */\n      dup3\n        /* \"#utility.yul\":12593:12605   */\n      add\n        /* \"#utility.yul\":12586:12605   */\n      swap1\n      pop\n        /* \"#utility.yul\":12245:12611   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12617:13036   */\n    tag_102:\n        /* \"#utility.yul\":12783:12787   */\n      0x00\n        /* \"#utility.yul\":12821:12823   */\n      0x20\n        /* \"#utility.yul\":12810:12819   */\n      dup3\n        /* \"#utility.yul\":12806:12824   */\n      add\n        /* \"#utility.yul\":12798:12824   */\n      swap1\n      pop\n        /* \"#utility.yul\":12870:12879   */\n      dup2\n        /* \"#utility.yul\":12864:12868   */\n      dup2\n        /* \"#utility.yul\":12860:12880   */\n      sub\n        /* \"#utility.yul\":12856:12857   */\n      0x00\n        /* \"#utility.yul\":12845:12854   */\n      dup4\n        /* \"#utility.yul\":12841:12858   */\n      add\n        /* \"#utility.yul\":12834:12881   */\n      mstore\n        /* \"#utility.yul\":12898:13029   */\n      tag_457\n        /* \"#utility.yul\":13024:13028   */\n      dup2\n        /* \"#utility.yul\":12898:13029   */\n      tag_289\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":12890:13029   */\n      swap1\n      pop\n        /* \"#utility.yul\":12617:13036   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13042:13286   */\n    tag_290:\n        /* \"#utility.yul\":13182:13216   */\n      0x455243373231413a20617070726f76652063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":13178:13179   */\n      0x00\n        /* \"#utility.yul\":13170:13176   */\n      dup3\n        /* \"#utility.yul\":13166:13180   */\n      add\n        /* \"#utility.yul\":13159:13217   */\n      mstore\n        /* \"#utility.yul\":13251:13278   */\n      0x776e6572206e6f7220617070726f76656420666f7220616c6c00000000000000\n        /* \"#utility.yul\":13246:13248   */\n      0x20\n        /* \"#utility.yul\":13238:13244   */\n      dup3\n        /* \"#utility.yul\":13234:13249   */\n      add\n        /* \"#utility.yul\":13227:13279   */\n      mstore\n        /* \"#utility.yul\":13042:13286   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13292:13658   */\n    tag_291:\n        /* \"#utility.yul\":13434:13437   */\n      0x00\n        /* \"#utility.yul\":13455:13522   */\n      tag_460\n        /* \"#utility.yul\":13519:13521   */\n      0x39\n        /* \"#utility.yul\":13514:13517   */\n      dup4\n        /* \"#utility.yul\":13455:13522   */\n      tag_262\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":13448:13522   */\n      swap2\n      pop\n        /* \"#utility.yul\":13531:13624   */\n      tag_461\n        /* \"#utility.yul\":13620:13623   */\n      dup3\n        /* \"#utility.yul\":13531:13624   */\n      tag_290\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":13649:13651   */\n      0x40\n        /* \"#utility.yul\":13644:13647   */\n      dup3\n        /* \"#utility.yul\":13640:13652   */\n      add\n        /* \"#utility.yul\":13633:13652   */\n      swap1\n      pop\n        /* \"#utility.yul\":13292:13658   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13664:14083   */\n    tag_110:\n        /* \"#utility.yul\":13830:13834   */\n      0x00\n        /* \"#utility.yul\":13868:13870   */\n      0x20\n        /* \"#utility.yul\":13857:13866   */\n      dup3\n        /* \"#utility.yul\":13853:13871   */\n      add\n        /* \"#utility.yul\":13845:13871   */\n      swap1\n      pop\n        /* \"#utility.yul\":13917:13926   */\n      dup2\n        /* \"#utility.yul\":13911:13915   */\n      dup2\n        /* \"#utility.yul\":13907:13927   */\n      sub\n        /* \"#utility.yul\":13903:13904   */\n      0x00\n        /* \"#utility.yul\":13892:13901   */\n      dup4\n        /* \"#utility.yul\":13888:13905   */\n      add\n        /* \"#utility.yul\":13881:13928   */\n      mstore\n        /* \"#utility.yul\":13945:14076   */\n      tag_463\n        /* \"#utility.yul\":14071:14075   */\n      dup2\n        /* \"#utility.yul\":13945:14076   */\n      tag_291\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":13937:14076   */\n      swap1\n      pop\n        /* \"#utility.yul\":13664:14083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14089:14319   */\n    tag_292:\n        /* \"#utility.yul\":14229:14263   */\n      0x455243373231413a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":14225:14226   */\n      0x00\n        /* \"#utility.yul\":14217:14223   */\n      dup3\n        /* \"#utility.yul\":14213:14227   */\n      add\n        /* \"#utility.yul\":14206:14264   */\n      mstore\n        /* \"#utility.yul\":14298:14311   */\n      0x65726f2061646472657373000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14293:14295   */\n      0x20\n        /* \"#utility.yul\":14285:14291   */\n      dup3\n        /* \"#utility.yul\":14281:14296   */\n      add\n        /* \"#utility.yul\":14274:14312   */\n      mstore\n        /* \"#utility.yul\":14089:14319   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14325:14691   */\n    tag_293:\n        /* \"#utility.yul\":14467:14470   */\n      0x00\n        /* \"#utility.yul\":14488:14555   */\n      tag_466\n        /* \"#utility.yul\":14552:14554   */\n      0x2b\n        /* \"#utility.yul\":14547:14550   */\n      dup4\n        /* \"#utility.yul\":14488:14555   */\n      tag_262\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":14481:14555   */\n      swap2\n      pop\n        /* \"#utility.yul\":14564:14657   */\n      tag_467\n        /* \"#utility.yul\":14653:14656   */\n      dup3\n        /* \"#utility.yul\":14564:14657   */\n      tag_292\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":14682:14684   */\n      0x40\n        /* \"#utility.yul\":14677:14680   */\n      dup3\n        /* \"#utility.yul\":14673:14685   */\n      add\n        /* \"#utility.yul\":14666:14685   */\n      swap1\n      pop\n        /* \"#utility.yul\":14325:14691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14697:15116   */\n    tag_125:\n        /* \"#utility.yul\":14863:14867   */\n      0x00\n        /* \"#utility.yul\":14901:14903   */\n      0x20\n        /* \"#utility.yul\":14890:14899   */\n      dup3\n        /* \"#utility.yul\":14886:14904   */\n      add\n        /* \"#utility.yul\":14878:14904   */\n      swap1\n      pop\n        /* \"#utility.yul\":14950:14959   */\n      dup2\n        /* \"#utility.yul\":14944:14948   */\n      dup2\n        /* \"#utility.yul\":14940:14960   */\n      sub\n        /* \"#utility.yul\":14936:14937   */\n      0x00\n        /* \"#utility.yul\":14925:14934   */\n      dup4\n        /* \"#utility.yul\":14921:14938   */\n      add\n        /* \"#utility.yul\":14914:14961   */\n      mstore\n        /* \"#utility.yul\":14978:15109   */\n      tag_469\n        /* \"#utility.yul\":15104:15108   */\n      dup2\n        /* \"#utility.yul\":14978:15109   */\n      tag_293\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":14970:15109   */\n      swap1\n      pop\n        /* \"#utility.yul\":14697:15116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15122:15298   */\n    tag_294:\n        /* \"#utility.yul\":15262:15290   */\n      0x455243373231413a20617070726f766520746f2063616c6c6572000000000000\n        /* \"#utility.yul\":15258:15259   */\n      0x00\n        /* \"#utility.yul\":15250:15256   */\n      dup3\n        /* \"#utility.yul\":15246:15260   */\n      add\n        /* \"#utility.yul\":15239:15291   */\n      mstore\n        /* \"#utility.yul\":15122:15298   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15304:15670   */\n    tag_295:\n        /* \"#utility.yul\":15446:15449   */\n      0x00\n        /* \"#utility.yul\":15467:15534   */\n      tag_472\n        /* \"#utility.yul\":15531:15533   */\n      0x1a\n        /* \"#utility.yul\":15526:15529   */\n      dup4\n        /* \"#utility.yul\":15467:15534   */\n      tag_262\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":15460:15534   */\n      swap2\n      pop\n        /* \"#utility.yul\":15543:15636   */\n      tag_473\n        /* \"#utility.yul\":15632:15635   */\n      dup3\n        /* \"#utility.yul\":15543:15636   */\n      tag_294\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":15661:15663   */\n      0x20\n        /* \"#utility.yul\":15656:15659   */\n      dup3\n        /* \"#utility.yul\":15652:15664   */\n      add\n        /* \"#utility.yul\":15645:15664   */\n      swap1\n      pop\n        /* \"#utility.yul\":15304:15670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15676:16095   */\n    tag_136:\n        /* \"#utility.yul\":15842:15846   */\n      0x00\n        /* \"#utility.yul\":15880:15882   */\n      0x20\n        /* \"#utility.yul\":15869:15878   */\n      dup3\n        /* \"#utility.yul\":15865:15883   */\n      add\n        /* \"#utility.yul\":15857:15883   */\n      swap1\n      pop\n        /* \"#utility.yul\":15929:15938   */\n      dup2\n        /* \"#utility.yul\":15923:15927   */\n      dup2\n        /* \"#utility.yul\":15919:15939   */\n      sub\n        /* \"#utility.yul\":15915:15916   */\n      0x00\n        /* \"#utility.yul\":15904:15913   */\n      dup4\n        /* \"#utility.yul\":15900:15917   */\n      add\n        /* \"#utility.yul\":15893:15940   */\n      mstore\n        /* \"#utility.yul\":15957:16088   */\n      tag_475\n        /* \"#utility.yul\":16083:16087   */\n      dup2\n        /* \"#utility.yul\":15957:16088   */\n      tag_295\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":15949:16088   */\n      swap1\n      pop\n        /* \"#utility.yul\":15676:16095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16101:16339   */\n    tag_296:\n        /* \"#utility.yul\":16241:16275   */\n      0x455243373231413a207472616e7366657220746f206e6f6e2045524337323152\n        /* \"#utility.yul\":16237:16238   */\n      0x00\n        /* \"#utility.yul\":16229:16235   */\n      dup3\n        /* \"#utility.yul\":16225:16239   */\n      add\n        /* \"#utility.yul\":16218:16276   */\n      mstore\n        /* \"#utility.yul\":16310:16331   */\n      0x6563656976657220696d706c656d656e74657200000000000000000000000000\n        /* \"#utility.yul\":16305:16307   */\n      0x20\n        /* \"#utility.yul\":16297:16303   */\n      dup3\n        /* \"#utility.yul\":16293:16308   */\n      add\n        /* \"#utility.yul\":16286:16332   */\n      mstore\n        /* \"#utility.yul\":16101:16339   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16345:16711   */\n    tag_297:\n        /* \"#utility.yul\":16487:16490   */\n      0x00\n        /* \"#utility.yul\":16508:16575   */\n      tag_478\n        /* \"#utility.yul\":16572:16574   */\n      0x33\n        /* \"#utility.yul\":16567:16570   */\n      dup4\n        /* \"#utility.yul\":16508:16575   */\n      tag_262\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":16501:16575   */\n      swap2\n      pop\n        /* \"#utility.yul\":16584:16677   */\n      tag_479\n        /* \"#utility.yul\":16673:16676   */\n      dup3\n        /* \"#utility.yul\":16584:16677   */\n      tag_296\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":16702:16704   */\n      0x40\n        /* \"#utility.yul\":16697:16700   */\n      dup3\n        /* \"#utility.yul\":16693:16705   */\n      add\n        /* \"#utility.yul\":16686:16705   */\n      swap1\n      pop\n        /* \"#utility.yul\":16345:16711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16717:17136   */\n    tag_146:\n        /* \"#utility.yul\":16883:16887   */\n      0x00\n        /* \"#utility.yul\":16921:16923   */\n      0x20\n        /* \"#utility.yul\":16910:16919   */\n      dup3\n        /* \"#utility.yul\":16906:16924   */\n      add\n        /* \"#utility.yul\":16898:16924   */\n      swap1\n      pop\n        /* \"#utility.yul\":16970:16979   */\n      dup2\n        /* \"#utility.yul\":16964:16968   */\n      dup2\n        /* \"#utility.yul\":16960:16980   */\n      sub\n        /* \"#utility.yul\":16956:16957   */\n      0x00\n        /* \"#utility.yul\":16945:16954   */\n      dup4\n        /* \"#utility.yul\":16941:16958   */\n      add\n        /* \"#utility.yul\":16934:16981   */\n      mstore\n        /* \"#utility.yul\":16998:17129   */\n      tag_481\n        /* \"#utility.yul\":17124:17128   */\n      dup2\n        /* \"#utility.yul\":16998:17129   */\n      tag_297\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":16990:17129   */\n      swap1\n      pop\n        /* \"#utility.yul\":16717:17136   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17142:17376   */\n    tag_298:\n        /* \"#utility.yul\":17282:17316   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":17278:17279   */\n      0x00\n        /* \"#utility.yul\":17270:17276   */\n      dup3\n        /* \"#utility.yul\":17266:17280   */\n      add\n        /* \"#utility.yul\":17259:17317   */\n      mstore\n        /* \"#utility.yul\":17351:17368   */\n      0x6e6578697374656e7420746f6b656e0000000000000000000000000000000000\n        /* \"#utility.yul\":17346:17348   */\n      0x20\n        /* \"#utility.yul\":17338:17344   */\n      dup3\n        /* \"#utility.yul\":17334:17349   */\n      add\n        /* \"#utility.yul\":17327:17369   */\n      mstore\n        /* \"#utility.yul\":17142:17376   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17382:17748   */\n    tag_299:\n        /* \"#utility.yul\":17524:17527   */\n      0x00\n        /* \"#utility.yul\":17545:17612   */\n      tag_484\n        /* \"#utility.yul\":17609:17611   */\n      0x2f\n        /* \"#utility.yul\":17604:17607   */\n      dup4\n        /* \"#utility.yul\":17545:17612   */\n      tag_262\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":17538:17612   */\n      swap2\n      pop\n        /* \"#utility.yul\":17621:17714   */\n      tag_485\n        /* \"#utility.yul\":17710:17713   */\n      dup3\n        /* \"#utility.yul\":17621:17714   */\n      tag_298\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":17739:17741   */\n      0x40\n        /* \"#utility.yul\":17734:17737   */\n      dup3\n        /* \"#utility.yul\":17730:17742   */\n      add\n        /* \"#utility.yul\":17723:17742   */\n      swap1\n      pop\n        /* \"#utility.yul\":17382:17748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17754:18173   */\n    tag_151:\n        /* \"#utility.yul\":17920:17924   */\n      0x00\n        /* \"#utility.yul\":17958:17960   */\n      0x20\n        /* \"#utility.yul\":17947:17956   */\n      dup3\n        /* \"#utility.yul\":17943:17961   */\n      add\n        /* \"#utility.yul\":17935:17961   */\n      swap1\n      pop\n        /* \"#utility.yul\":18007:18016   */\n      dup2\n        /* \"#utility.yul\":18001:18005   */\n      dup2\n        /* \"#utility.yul\":17997:18017   */\n      sub\n        /* \"#utility.yul\":17993:17994   */\n      0x00\n        /* \"#utility.yul\":17982:17991   */\n      dup4\n        /* \"#utility.yul\":17978:17995   */\n      add\n        /* \"#utility.yul\":17971:18018   */\n      mstore\n        /* \"#utility.yul\":18035:18166   */\n      tag_487\n        /* \"#utility.yul\":18161:18165   */\n      dup2\n        /* \"#utility.yul\":18035:18166   */\n      tag_299\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":18027:18166   */\n      swap1\n      pop\n        /* \"#utility.yul\":17754:18173   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18179:18327   */\n    tag_300:\n        /* \"#utility.yul\":18281:18292   */\n      0x00\n        /* \"#utility.yul\":18318:18321   */\n      dup2\n        /* \"#utility.yul\":18303:18321   */\n      swap1\n      pop\n        /* \"#utility.yul\":18179:18327   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18333:18723   */\n    tag_301:\n        /* \"#utility.yul\":18439:18442   */\n      0x00\n        /* \"#utility.yul\":18467:18506   */\n      tag_490\n        /* \"#utility.yul\":18500:18505   */\n      dup3\n        /* \"#utility.yul\":18467:18506   */\n      tag_261\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":18522:18611   */\n      tag_491\n        /* \"#utility.yul\":18604:18610   */\n      dup2\n        /* \"#utility.yul\":18599:18602   */\n      dup6\n        /* \"#utility.yul\":18522:18611   */\n      tag_300\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":18515:18611   */\n      swap4\n      pop\n        /* \"#utility.yul\":18620:18685   */\n      tag_492\n        /* \"#utility.yul\":18678:18684   */\n      dup2\n        /* \"#utility.yul\":18673:18676   */\n      dup6\n        /* \"#utility.yul\":18666:18670   */\n      0x20\n        /* \"#utility.yul\":18659:18664   */\n      dup7\n        /* \"#utility.yul\":18655:18671   */\n      add\n        /* \"#utility.yul\":18620:18685   */\n      tag_263\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":18710:18716   */\n      dup1\n        /* \"#utility.yul\":18705:18708   */\n      dup5\n        /* \"#utility.yul\":18701:18717   */\n      add\n        /* \"#utility.yul\":18694:18717   */\n      swap2\n      pop\n        /* \"#utility.yul\":18443:18723   */\n      pop\n        /* \"#utility.yul\":18333:18723   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18729:19164   */\n    tag_159:\n        /* \"#utility.yul\":18909:18912   */\n      0x00\n        /* \"#utility.yul\":18931:19026   */\n      tag_494\n        /* \"#utility.yul\":19022:19025   */\n      dup3\n        /* \"#utility.yul\":19013:19019   */\n      dup6\n        /* \"#utility.yul\":18931:19026   */\n      tag_301\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":18924:19026   */\n      swap2\n      pop\n        /* \"#utility.yul\":19043:19138   */\n      tag_495\n        /* \"#utility.yul\":19134:19137   */\n      dup3\n        /* \"#utility.yul\":19125:19131   */\n      dup5\n        /* \"#utility.yul\":19043:19138   */\n      tag_301\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":19036:19138   */\n      swap2\n      pop\n        /* \"#utility.yul\":19155:19158   */\n      dup2\n        /* \"#utility.yul\":19148:19158   */\n      swap1\n      pop\n        /* \"#utility.yul\":18729:19164   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19170:19407   */\n    tag_302:\n        /* \"#utility.yul\":19310:19344   */\n      0x455243373231413a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":19306:19307   */\n      0x00\n        /* \"#utility.yul\":19298:19304   */\n      dup3\n        /* \"#utility.yul\":19294:19308   */\n      add\n        /* \"#utility.yul\":19287:19345   */\n      mstore\n        /* \"#utility.yul\":19379:19399   */\n      0x6f776e6572206e6f7220617070726f7665640000000000000000000000000000\n        /* \"#utility.yul\":19374:19376   */\n      0x20\n        /* \"#utility.yul\":19366:19372   */\n      dup3\n        /* \"#utility.yul\":19362:19377   */\n      add\n        /* \"#utility.yul\":19355:19400   */\n      mstore\n        /* \"#utility.yul\":19170:19407   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19413:19779   */\n    tag_303:\n        /* \"#utility.yul\":19555:19558   */\n      0x00\n        /* \"#utility.yul\":19576:19643   */\n      tag_498\n        /* \"#utility.yul\":19640:19642   */\n      0x32\n        /* \"#utility.yul\":19635:19638   */\n      dup4\n        /* \"#utility.yul\":19576:19643   */\n      tag_262\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":19569:19643   */\n      swap2\n      pop\n        /* \"#utility.yul\":19652:19745   */\n      tag_499\n        /* \"#utility.yul\":19741:19744   */\n      dup3\n        /* \"#utility.yul\":19652:19745   */\n      tag_302\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":19770:19772   */\n      0x40\n        /* \"#utility.yul\":19765:19768   */\n      dup3\n        /* \"#utility.yul\":19761:19773   */\n      add\n        /* \"#utility.yul\":19754:19773   */\n      swap1\n      pop\n        /* \"#utility.yul\":19413:19779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19785:20204   */\n    tag_176:\n        /* \"#utility.yul\":19951:19955   */\n      0x00\n        /* \"#utility.yul\":19989:19991   */\n      0x20\n        /* \"#utility.yul\":19978:19987   */\n      dup3\n        /* \"#utility.yul\":19974:19992   */\n      add\n        /* \"#utility.yul\":19966:19992   */\n      swap1\n      pop\n        /* \"#utility.yul\":20038:20047   */\n      dup2\n        /* \"#utility.yul\":20032:20036   */\n      dup2\n        /* \"#utility.yul\":20028:20048   */\n      sub\n        /* \"#utility.yul\":20024:20025   */\n      0x00\n        /* \"#utility.yul\":20013:20022   */\n      dup4\n        /* \"#utility.yul\":20009:20026   */\n      add\n        /* \"#utility.yul\":20002:20049   */\n      mstore\n        /* \"#utility.yul\":20066:20197   */\n      tag_501\n        /* \"#utility.yul\":20192:20196   */\n      dup2\n        /* \"#utility.yul\":20066:20197   */\n      tag_303\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":20058:20197   */\n      swap1\n      pop\n        /* \"#utility.yul\":19785:20204   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20210:20435   */\n    tag_304:\n        /* \"#utility.yul\":20350:20384   */\n      0x455243373231413a207472616e736665722066726f6d20696e636f7272656374\n        /* \"#utility.yul\":20346:20347   */\n      0x00\n        /* \"#utility.yul\":20338:20344   */\n      dup3\n        /* \"#utility.yul\":20334:20348   */\n      add\n        /* \"#utility.yul\":20327:20385   */\n      mstore\n        /* \"#utility.yul\":20419:20427   */\n      0x206f776e65720000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20414:20416   */\n      0x20\n        /* \"#utility.yul\":20406:20412   */\n      dup3\n        /* \"#utility.yul\":20402:20417   */\n      add\n        /* \"#utility.yul\":20395:20428   */\n      mstore\n        /* \"#utility.yul\":20210:20435   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20441:20807   */\n    tag_305:\n        /* \"#utility.yul\":20583:20586   */\n      0x00\n        /* \"#utility.yul\":20604:20671   */\n      tag_504\n        /* \"#utility.yul\":20668:20670   */\n      0x26\n        /* \"#utility.yul\":20663:20666   */\n      dup4\n        /* \"#utility.yul\":20604:20671   */\n      tag_262\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":20597:20671   */\n      swap2\n      pop\n        /* \"#utility.yul\":20680:20773   */\n      tag_505\n        /* \"#utility.yul\":20769:20772   */\n      dup3\n        /* \"#utility.yul\":20680:20773   */\n      tag_304\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":20798:20800   */\n      0x40\n        /* \"#utility.yul\":20793:20796   */\n      dup3\n        /* \"#utility.yul\":20789:20801   */\n      add\n        /* \"#utility.yul\":20782:20801   */\n      swap1\n      pop\n        /* \"#utility.yul\":20441:20807   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20813:21232   */\n    tag_179:\n        /* \"#utility.yul\":20979:20983   */\n      0x00\n        /* \"#utility.yul\":21017:21019   */\n      0x20\n        /* \"#utility.yul\":21006:21015   */\n      dup3\n        /* \"#utility.yul\":21002:21020   */\n      add\n        /* \"#utility.yul\":20994:21020   */\n      swap1\n      pop\n        /* \"#utility.yul\":21066:21075   */\n      dup2\n        /* \"#utility.yul\":21060:21064   */\n      dup2\n        /* \"#utility.yul\":21056:21076   */\n      sub\n        /* \"#utility.yul\":21052:21053   */\n      0x00\n        /* \"#utility.yul\":21041:21050   */\n      dup4\n        /* \"#utility.yul\":21037:21054   */\n      add\n        /* \"#utility.yul\":21030:21077   */\n      mstore\n        /* \"#utility.yul\":21094:21225   */\n      tag_507\n        /* \"#utility.yul\":21220:21224   */\n      dup2\n        /* \"#utility.yul\":21094:21225   */\n      tag_305\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":21086:21225   */\n      swap1\n      pop\n        /* \"#utility.yul\":20813:21232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21238:21462   */\n    tag_306:\n        /* \"#utility.yul\":21378:21412   */\n      0x455243373231413a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":21374:21375   */\n      0x00\n        /* \"#utility.yul\":21366:21372   */\n      dup3\n        /* \"#utility.yul\":21362:21376   */\n      add\n        /* \"#utility.yul\":21355:21413   */\n      mstore\n        /* \"#utility.yul\":21447:21454   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21442:21444   */\n      0x20\n        /* \"#utility.yul\":21434:21440   */\n      dup3\n        /* \"#utility.yul\":21430:21445   */\n      add\n        /* \"#utility.yul\":21423:21455   */\n      mstore\n        /* \"#utility.yul\":21238:21462   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21468:21834   */\n    tag_307:\n        /* \"#utility.yul\":21610:21613   */\n      0x00\n        /* \"#utility.yul\":21631:21698   */\n      tag_510\n        /* \"#utility.yul\":21695:21697   */\n      0x25\n        /* \"#utility.yul\":21690:21693   */\n      dup4\n        /* \"#utility.yul\":21631:21698   */\n      tag_262\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":21624:21698   */\n      swap2\n      pop\n        /* \"#utility.yul\":21707:21800   */\n      tag_511\n        /* \"#utility.yul\":21796:21799   */\n      dup3\n        /* \"#utility.yul\":21707:21800   */\n      tag_306\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":21825:21827   */\n      0x40\n        /* \"#utility.yul\":21820:21823   */\n      dup3\n        /* \"#utility.yul\":21816:21828   */\n      add\n        /* \"#utility.yul\":21809:21828   */\n      swap1\n      pop\n        /* \"#utility.yul\":21468:21834   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21840:22259   */\n    tag_182:\n        /* \"#utility.yul\":22006:22010   */\n      0x00\n        /* \"#utility.yul\":22044:22046   */\n      0x20\n        /* \"#utility.yul\":22033:22042   */\n      dup3\n        /* \"#utility.yul\":22029:22047   */\n      add\n        /* \"#utility.yul\":22021:22047   */\n      swap1\n      pop\n        /* \"#utility.yul\":22093:22102   */\n      dup2\n        /* \"#utility.yul\":22087:22091   */\n      dup2\n        /* \"#utility.yul\":22083:22103   */\n      sub\n        /* \"#utility.yul\":22079:22080   */\n      0x00\n        /* \"#utility.yul\":22068:22077   */\n      dup4\n        /* \"#utility.yul\":22064:22081   */\n      add\n        /* \"#utility.yul\":22057:22104   */\n      mstore\n        /* \"#utility.yul\":22121:22252   */\n      tag_513\n        /* \"#utility.yul\":22247:22251   */\n      dup2\n        /* \"#utility.yul\":22121:22252   */\n      tag_307\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":22113:22252   */\n      swap1\n      pop\n        /* \"#utility.yul\":21840:22259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22265:22494   */\n    tag_308:\n        /* \"#utility.yul\":22405:22439   */\n      0x455243373231413a206f776e657220717565727920666f72206e6f6e65786973\n        /* \"#utility.yul\":22401:22402   */\n      0x00\n        /* \"#utility.yul\":22393:22399   */\n      dup3\n        /* \"#utility.yul\":22389:22403   */\n      add\n        /* \"#utility.yul\":22382:22440   */\n      mstore\n        /* \"#utility.yul\":22474:22486   */\n      0x74656e7420746f6b656e00000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22469:22471   */\n      0x20\n        /* \"#utility.yul\":22461:22467   */\n      dup3\n        /* \"#utility.yul\":22457:22472   */\n      add\n        /* \"#utility.yul\":22450:22487   */\n      mstore\n        /* \"#utility.yul\":22265:22494   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22500:22866   */\n    tag_309:\n        /* \"#utility.yul\":22642:22645   */\n      0x00\n        /* \"#utility.yul\":22663:22730   */\n      tag_516\n        /* \"#utility.yul\":22727:22729   */\n      0x2a\n        /* \"#utility.yul\":22722:22725   */\n      dup4\n        /* \"#utility.yul\":22663:22730   */\n      tag_262\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":22656:22730   */\n      swap2\n      pop\n        /* \"#utility.yul\":22739:22832   */\n      tag_517\n        /* \"#utility.yul\":22828:22831   */\n      dup3\n        /* \"#utility.yul\":22739:22832   */\n      tag_308\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":22857:22859   */\n      0x40\n        /* \"#utility.yul\":22852:22855   */\n      dup3\n        /* \"#utility.yul\":22848:22860   */\n      add\n        /* \"#utility.yul\":22841:22860   */\n      swap1\n      pop\n        /* \"#utility.yul\":22500:22866   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22872:23291   */\n    tag_197:\n        /* \"#utility.yul\":23038:23042   */\n      0x00\n        /* \"#utility.yul\":23076:23078   */\n      0x20\n        /* \"#utility.yul\":23065:23074   */\n      dup3\n        /* \"#utility.yul\":23061:23079   */\n      add\n        /* \"#utility.yul\":23053:23079   */\n      swap1\n      pop\n        /* \"#utility.yul\":23125:23134   */\n      dup2\n        /* \"#utility.yul\":23119:23123   */\n      dup2\n        /* \"#utility.yul\":23115:23135   */\n      sub\n        /* \"#utility.yul\":23111:23112   */\n      0x00\n        /* \"#utility.yul\":23100:23109   */\n      dup4\n        /* \"#utility.yul\":23096:23113   */\n      add\n        /* \"#utility.yul\":23089:23136   */\n      mstore\n        /* \"#utility.yul\":23153:23284   */\n      tag_519\n        /* \"#utility.yul\":23279:23283   */\n      dup2\n        /* \"#utility.yul\":23153:23284   */\n      tag_309\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":23145:23284   */\n      swap1\n      pop\n        /* \"#utility.yul\":22872:23291   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23297:23531   */\n    tag_310:\n        /* \"#utility.yul\":23437:23471   */\n      0x455243373231413a20756e61626c6520746f2064657465726d696e6520746865\n        /* \"#utility.yul\":23433:23434   */\n      0x00\n        /* \"#utility.yul\":23425:23431   */\n      dup3\n        /* \"#utility.yul\":23421:23435   */\n      add\n        /* \"#utility.yul\":23414:23472   */\n      mstore\n        /* \"#utility.yul\":23506:23523   */\n      0x206f776e6572206f6620746f6b656e0000000000000000000000000000000000\n        /* \"#utility.yul\":23501:23503   */\n      0x20\n        /* \"#utility.yul\":23493:23499   */\n      dup3\n        /* \"#utility.yul\":23489:23504   */\n      add\n        /* \"#utility.yul\":23482:23524   */\n      mstore\n        /* \"#utility.yul\":23297:23531   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23537:23903   */\n    tag_311:\n        /* \"#utility.yul\":23679:23682   */\n      0x00\n        /* \"#utility.yul\":23700:23767   */\n      tag_522\n        /* \"#utility.yul\":23764:23766   */\n      0x2f\n        /* \"#utility.yul\":23759:23762   */\n      dup4\n        /* \"#utility.yul\":23700:23767   */\n      tag_262\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":23693:23767   */\n      swap2\n      pop\n        /* \"#utility.yul\":23776:23869   */\n      tag_523\n        /* \"#utility.yul\":23865:23868   */\n      dup3\n        /* \"#utility.yul\":23776:23869   */\n      tag_310\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":23894:23896   */\n      0x40\n        /* \"#utility.yul\":23889:23892   */\n      dup3\n        /* \"#utility.yul\":23885:23897   */\n      add\n        /* \"#utility.yul\":23878:23897   */\n      swap1\n      pop\n        /* \"#utility.yul\":23537:23903   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23909:24328   */\n    tag_203:\n        /* \"#utility.yul\":24075:24079   */\n      0x00\n        /* \"#utility.yul\":24113:24115   */\n      0x20\n        /* \"#utility.yul\":24102:24111   */\n      dup3\n        /* \"#utility.yul\":24098:24116   */\n      add\n        /* \"#utility.yul\":24090:24116   */\n      swap1\n      pop\n        /* \"#utility.yul\":24162:24171   */\n      dup2\n        /* \"#utility.yul\":24156:24160   */\n      dup2\n        /* \"#utility.yul\":24152:24172   */\n      sub\n        /* \"#utility.yul\":24148:24149   */\n      0x00\n        /* \"#utility.yul\":24137:24146   */\n      dup4\n        /* \"#utility.yul\":24133:24150   */\n      add\n        /* \"#utility.yul\":24126:24173   */\n      mstore\n        /* \"#utility.yul\":24190:24321   */\n      tag_525\n        /* \"#utility.yul\":24316:24320   */\n      dup2\n        /* \"#utility.yul\":24190:24321   */\n      tag_311\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":24182:24321   */\n      swap1\n      pop\n        /* \"#utility.yul\":23909:24328   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24334:24432   */\n    tag_312:\n        /* \"#utility.yul\":24385:24391   */\n      0x00\n        /* \"#utility.yul\":24419:24424   */\n      dup2\n        /* \"#utility.yul\":24413:24425   */\n      mload\n        /* \"#utility.yul\":24403:24425   */\n      swap1\n      pop\n        /* \"#utility.yul\":24334:24432   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24438:24606   */\n    tag_313:\n        /* \"#utility.yul\":24521:24532   */\n      0x00\n        /* \"#utility.yul\":24555:24561   */\n      dup3\n        /* \"#utility.yul\":24550:24553   */\n      dup3\n        /* \"#utility.yul\":24543:24562   */\n      mstore\n        /* \"#utility.yul\":24595:24599   */\n      0x20\n        /* \"#utility.yul\":24590:24593   */\n      dup3\n        /* \"#utility.yul\":24586:24600   */\n      add\n        /* \"#utility.yul\":24571:24600   */\n      swap1\n      pop\n        /* \"#utility.yul\":24438:24606   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24612:24985   */\n    tag_314:\n        /* \"#utility.yul\":24698:24701   */\n      0x00\n        /* \"#utility.yul\":24726:24764   */\n      tag_529\n        /* \"#utility.yul\":24758:24763   */\n      dup3\n        /* \"#utility.yul\":24726:24764   */\n      tag_312\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":24780:24850   */\n      tag_530\n        /* \"#utility.yul\":24843:24849   */\n      dup2\n        /* \"#utility.yul\":24838:24841   */\n      dup6\n        /* \"#utility.yul\":24780:24850   */\n      tag_313\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":24773:24850   */\n      swap4\n      pop\n        /* \"#utility.yul\":24859:24924   */\n      tag_531\n        /* \"#utility.yul\":24917:24923   */\n      dup2\n        /* \"#utility.yul\":24912:24915   */\n      dup6\n        /* \"#utility.yul\":24905:24909   */\n      0x20\n        /* \"#utility.yul\":24898:24903   */\n      dup7\n        /* \"#utility.yul\":24894:24910   */\n      add\n        /* \"#utility.yul\":24859:24924   */\n      tag_263\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":24949:24978   */\n      tag_532\n        /* \"#utility.yul\":24971:24977   */\n      dup2\n        /* \"#utility.yul\":24949:24978   */\n      tag_264\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":24944:24947   */\n      dup5\n        /* \"#utility.yul\":24940:24979   */\n      add\n        /* \"#utility.yul\":24933:24979   */\n      swap2\n      pop\n        /* \"#utility.yul\":24702:24985   */\n      pop\n        /* \"#utility.yul\":24612:24985   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24991:25631   */\n    tag_210:\n        /* \"#utility.yul\":25186:25190   */\n      0x00\n        /* \"#utility.yul\":25224:25227   */\n      0x80\n        /* \"#utility.yul\":25213:25222   */\n      dup3\n        /* \"#utility.yul\":25209:25228   */\n      add\n        /* \"#utility.yul\":25201:25228   */\n      swap1\n      pop\n        /* \"#utility.yul\":25238:25309   */\n      tag_534\n        /* \"#utility.yul\":25306:25307   */\n      0x00\n        /* \"#utility.yul\":25295:25304   */\n      dup4\n        /* \"#utility.yul\":25291:25308   */\n      add\n        /* \"#utility.yul\":25282:25288   */\n      dup8\n        /* \"#utility.yul\":25238:25309   */\n      tag_271\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":25319:25391   */\n      tag_535\n        /* \"#utility.yul\":25387:25389   */\n      0x20\n        /* \"#utility.yul\":25376:25385   */\n      dup4\n        /* \"#utility.yul\":25372:25390   */\n      add\n        /* \"#utility.yul\":25363:25369   */\n      dup7\n        /* \"#utility.yul\":25319:25391   */\n      tag_271\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":25401:25473   */\n      tag_536\n        /* \"#utility.yul\":25469:25471   */\n      0x40\n        /* \"#utility.yul\":25458:25467   */\n      dup4\n        /* \"#utility.yul\":25454:25472   */\n      add\n        /* \"#utility.yul\":25445:25451   */\n      dup6\n        /* \"#utility.yul\":25401:25473   */\n      tag_274\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":25520:25529   */\n      dup2\n        /* \"#utility.yul\":25514:25518   */\n      dup2\n        /* \"#utility.yul\":25510:25530   */\n      sub\n        /* \"#utility.yul\":25505:25507   */\n      0x60\n        /* \"#utility.yul\":25494:25503   */\n      dup4\n        /* \"#utility.yul\":25490:25508   */\n      add\n        /* \"#utility.yul\":25483:25531   */\n      mstore\n        /* \"#utility.yul\":25548:25624   */\n      tag_537\n        /* \"#utility.yul\":25619:25623   */\n      dup2\n        /* \"#utility.yul\":25610:25616   */\n      dup5\n        /* \"#utility.yul\":25548:25624   */\n      tag_314\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":25540:25624   */\n      swap1\n      pop\n        /* \"#utility.yul\":24991:25631   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25637:25778   */\n    tag_315:\n        /* \"#utility.yul\":25693:25698   */\n      0x00\n        /* \"#utility.yul\":25724:25730   */\n      dup2\n        /* \"#utility.yul\":25718:25731   */\n      mload\n        /* \"#utility.yul\":25709:25731   */\n      swap1\n      pop\n        /* \"#utility.yul\":25740:25772   */\n      tag_539\n        /* \"#utility.yul\":25766:25771   */\n      dup2\n        /* \"#utility.yul\":25740:25772   */\n      tag_257\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":25637:25778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25784:26133   */\n    tag_213:\n        /* \"#utility.yul\":25853:25859   */\n      0x00\n        /* \"#utility.yul\":25902:25904   */\n      0x20\n        /* \"#utility.yul\":25890:25899   */\n      dup3\n        /* \"#utility.yul\":25881:25888   */\n      dup5\n        /* \"#utility.yul\":25877:25900   */\n      sub\n        /* \"#utility.yul\":25873:25905   */\n      slt\n        /* \"#utility.yul\":25870:25989   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":25908:25987   */\n      tag_542\n      tag_254\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":25870:25989   */\n    tag_541:\n        /* \"#utility.yul\":26028:26029   */\n      0x00\n        /* \"#utility.yul\":26053:26116   */\n      tag_543\n        /* \"#utility.yul\":26108:26115   */\n      dup5\n        /* \"#utility.yul\":26099:26105   */\n      dup3\n        /* \"#utility.yul\":26088:26097   */\n      dup6\n        /* \"#utility.yul\":26084:26106   */\n      add\n        /* \"#utility.yul\":26053:26116   */\n      tag_315\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":26043:26116   */\n      swap2\n      pop\n        /* \"#utility.yul\":25999:26126   */\n      pop\n        /* \"#utility.yul\":25784:26133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26139:26319   */\n    tag_316:\n        /* \"#utility.yul\":26187:26264   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26184:26185   */\n      0x00\n        /* \"#utility.yul\":26177:26265   */\n      mstore\n        /* \"#utility.yul\":26284:26288   */\n      0x11\n        /* \"#utility.yul\":26281:26282   */\n      0x04\n        /* \"#utility.yul\":26274:26289   */\n      mstore\n        /* \"#utility.yul\":26308:26312   */\n      0x24\n        /* \"#utility.yul\":26305:26306   */\n      0x00\n        /* \"#utility.yul\":26298:26313   */\n      revert\n        /* \"#utility.yul\":26325:26558   */\n    tag_231:\n        /* \"#utility.yul\":26364:26367   */\n      0x00\n        /* \"#utility.yul\":26387:26411   */\n      tag_546\n        /* \"#utility.yul\":26405:26410   */\n      dup3\n        /* \"#utility.yul\":26387:26411   */\n      tag_266\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":26378:26411   */\n      swap2\n      pop\n        /* \"#utility.yul\":26433:26499   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":26426:26431   */\n      dup3\n        /* \"#utility.yul\":26423:26500   */\n      sub\n        /* \"#utility.yul\":26420:26523   */\n      tag_547\n      jumpi\n        /* \"#utility.yul\":26503:26521   */\n      tag_548\n      tag_316\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":26420:26523   */\n    tag_547:\n        /* \"#utility.yul\":26550:26551   */\n      0x01\n        /* \"#utility.yul\":26543:26548   */\n      dup3\n        /* \"#utility.yul\":26539:26552   */\n      add\n        /* \"#utility.yul\":26532:26552   */\n      swap1\n      pop\n        /* \"#utility.yul\":26325:26558   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26564:26744   */\n    tag_317:\n        /* \"#utility.yul\":26612:26689   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26609:26610   */\n      0x00\n        /* \"#utility.yul\":26602:26690   */\n      mstore\n        /* \"#utility.yul\":26709:26713   */\n      0x12\n        /* \"#utility.yul\":26706:26707   */\n      0x04\n        /* \"#utility.yul\":26699:26714   */\n      mstore\n        /* \"#utility.yul\":26733:26737   */\n      0x24\n        /* \"#utility.yul\":26730:26731   */\n      0x00\n        /* \"#utility.yul\":26723:26738   */\n      revert\n        /* \"#utility.yul\":26750:26935   */\n    tag_233:\n        /* \"#utility.yul\":26790:26791   */\n      0x00\n        /* \"#utility.yul\":26807:26827   */\n      tag_551\n        /* \"#utility.yul\":26825:26826   */\n      dup3\n        /* \"#utility.yul\":26807:26827   */\n      tag_266\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":26802:26827   */\n      swap2\n      pop\n        /* \"#utility.yul\":26841:26861   */\n      tag_552\n        /* \"#utility.yul\":26859:26860   */\n      dup4\n        /* \"#utility.yul\":26841:26861   */\n      tag_266\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":26836:26861   */\n      swap3\n      pop\n        /* \"#utility.yul\":26880:26881   */\n      dup3\n        /* \"#utility.yul\":26870:26905   */\n      tag_553\n      jumpi\n        /* \"#utility.yul\":26885:26903   */\n      tag_554\n      tag_317\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":26870:26905   */\n    tag_553:\n        /* \"#utility.yul\":26927:26928   */\n      dup3\n        /* \"#utility.yul\":26924:26925   */\n      dup3\n        /* \"#utility.yul\":26920:26929   */\n      div\n        /* \"#utility.yul\":26915:26929   */\n      swap1\n      pop\n        /* \"#utility.yul\":26750:26935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26941:27135   */\n    tag_241:\n        /* \"#utility.yul\":26981:26985   */\n      0x00\n        /* \"#utility.yul\":27001:27021   */\n      tag_556\n        /* \"#utility.yul\":27019:27020   */\n      dup3\n        /* \"#utility.yul\":27001:27021   */\n      tag_266\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":26996:27021   */\n      swap2\n      pop\n        /* \"#utility.yul\":27035:27055   */\n      tag_557\n        /* \"#utility.yul\":27053:27054   */\n      dup4\n        /* \"#utility.yul\":27035:27055   */\n      tag_266\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":27030:27055   */\n      swap3\n      pop\n        /* \"#utility.yul\":27079:27080   */\n      dup3\n        /* \"#utility.yul\":27076:27077   */\n      dup3\n        /* \"#utility.yul\":27072:27081   */\n      sub\n        /* \"#utility.yul\":27064:27081   */\n      swap1\n      pop\n        /* \"#utility.yul\":27103:27104   */\n      dup2\n        /* \"#utility.yul\":27097:27101   */\n      dup2\n        /* \"#utility.yul\":27094:27105   */\n      gt\n        /* \"#utility.yul\":27091:27128   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":27108:27126   */\n      tag_559\n      tag_316\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":27091:27128   */\n    tag_558:\n        /* \"#utility.yul\":26941:27135   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27141:27317   */\n    tag_243:\n        /* \"#utility.yul\":27173:27174   */\n      0x00\n        /* \"#utility.yul\":27190:27210   */\n      tag_561\n        /* \"#utility.yul\":27208:27209   */\n      dup3\n        /* \"#utility.yul\":27190:27210   */\n      tag_266\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":27185:27210   */\n      swap2\n      pop\n        /* \"#utility.yul\":27224:27244   */\n      tag_562\n        /* \"#utility.yul\":27242:27243   */\n      dup4\n        /* \"#utility.yul\":27224:27244   */\n      tag_266\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":27219:27244   */\n      swap3\n      pop\n        /* \"#utility.yul\":27263:27264   */\n      dup3\n        /* \"#utility.yul\":27253:27288   */\n      tag_563\n      jumpi\n        /* \"#utility.yul\":27268:27286   */\n      tag_564\n      tag_317\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":27253:27288   */\n    tag_563:\n        /* \"#utility.yul\":27309:27310   */\n      dup3\n        /* \"#utility.yul\":27306:27307   */\n      dup3\n        /* \"#utility.yul\":27302:27311   */\n      mod\n        /* \"#utility.yul\":27297:27311   */\n      swap1\n      pop\n        /* \"#utility.yul\":27141:27317   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27323:27514   */\n    tag_245:\n        /* \"#utility.yul\":27363:27366   */\n      0x00\n        /* \"#utility.yul\":27382:27402   */\n      tag_566\n        /* \"#utility.yul\":27400:27401   */\n      dup3\n        /* \"#utility.yul\":27382:27402   */\n      tag_266\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":27377:27402   */\n      swap2\n      pop\n        /* \"#utility.yul\":27416:27436   */\n      tag_567\n        /* \"#utility.yul\":27434:27435   */\n      dup4\n        /* \"#utility.yul\":27416:27436   */\n      tag_266\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":27411:27436   */\n      swap3\n      pop\n        /* \"#utility.yul\":27459:27460   */\n      dup3\n        /* \"#utility.yul\":27456:27457   */\n      dup3\n        /* \"#utility.yul\":27452:27461   */\n      add\n        /* \"#utility.yul\":27445:27461   */\n      swap1\n      pop\n        /* \"#utility.yul\":27480:27483   */\n      dup1\n        /* \"#utility.yul\":27477:27478   */\n      dup3\n        /* \"#utility.yul\":27474:27484   */\n      gt\n        /* \"#utility.yul\":27471:27507   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":27487:27505   */\n      tag_569\n      tag_316\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":27471:27507   */\n    tag_568:\n        /* \"#utility.yul\":27323:27514   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27520:27700   */\n    tag_248:\n        /* \"#utility.yul\":27568:27645   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27565:27566   */\n      0x00\n        /* \"#utility.yul\":27558:27646   */\n      mstore\n        /* \"#utility.yul\":27665:27669   */\n      0x32\n        /* \"#utility.yul\":27662:27663   */\n      0x04\n        /* \"#utility.yul\":27655:27670   */\n      mstore\n        /* \"#utility.yul\":27689:27693   */\n      0x24\n        /* \"#utility.yul\":27686:27687   */\n      0x00\n        /* \"#utility.yul\":27679:27694   */\n      revert\n\n    auxdata: 0xa264697066735822122000f35ab7f4f20793a2e6b49b05b2cc4c07f93e4f8c7714b28b151b55d573768764736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_815": {
									"entryPoint": null,
									"id": 815,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 332,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:9",
														"type": ""
													}
												],
												"src": "580:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:9"
															},
															"nodeType": "YulIf",
															"src": "1030:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:9",
														"type": ""
													}
												],
												"src": "874:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:9",
														"type": ""
													}
												],
												"src": "1161:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:9"
															},
															"nodeType": "YulIf",
															"src": "1434:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:9",
														"type": ""
													}
												],
												"src": "1296:308:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:9",
																"statements": []
															},
															"src": "1701:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:9",
														"type": ""
													}
												],
												"src": "1610:246:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:9"
															},
															"nodeType": "YulIf",
															"src": "2117:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:9",
														"type": ""
													}
												],
												"src": "1862:434:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:9"
															},
															"nodeType": "YulIf",
															"src": "2399:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:9",
														"type": ""
													}
												],
												"src": "2316:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:9"
															},
															"nodeType": "YulIf",
															"src": "2801:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:9",
														"type": ""
													}
												],
												"src": "2677:853:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:9",
														"type": ""
													}
												],
												"src": "3536:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:9"
															},
															"nodeType": "YulIf",
															"src": "3966:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:9"
															},
															"nodeType": "YulIf",
															"src": "4057:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:9",
														"type": ""
													}
												],
												"src": "3827:320:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:9",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:9",
														"type": ""
													}
												],
												"src": "4153:141:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:9",
														"type": ""
													}
												],
												"src": "4300:93:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:9"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:9",
														"type": ""
													}
												],
												"src": "4399:107:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:9"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:9",
														"type": ""
													}
												],
												"src": "4512:393:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:9",
														"type": ""
													}
												],
												"src": "4911:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:9",
														"type": ""
													}
												],
												"src": "4994:60:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:9",
														"type": ""
													}
												],
												"src": "5060:142:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:9",
														"type": ""
													}
												],
												"src": "5208:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:9",
														"type": ""
													}
												],
												"src": "5289:269:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:9",
														"type": ""
													}
												],
												"src": "5564:73:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:9",
														"type": ""
													}
												],
												"src": "5643:189:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:9",
																"statements": []
															},
															"src": "5898:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:9",
														"type": ""
													}
												],
												"src": "5838:186:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:9",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:9"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:9"
															},
															"nodeType": "YulIf",
															"src": "6120:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:9",
														"type": ""
													}
												],
												"src": "6030:543:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:9"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:9",
														"type": ""
													}
												],
												"src": "6579:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:9"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:9",
														"type": ""
													}
												],
												"src": "6702:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:9"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:9",
														"type": ""
													}
												],
												"src": "6876:295:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:9"
															},
															"nodeType": "YulIf",
															"src": "7381:56:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:9"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:9"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:9"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:9"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:9",
																					"statements": []
																				},
																				"src": "7867:208:9"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:9",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:9"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:9"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:9"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:9"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:9"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:9"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:9"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:9",
														"type": ""
													}
												],
												"src": "7176:1395:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2BF7 CODESIZE SUB DUP1 PUSH3 0x2BF7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x263A DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C5 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x23F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x170A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x17B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x18C2 JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH2 0x606 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x192C JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x192C JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x17B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x19D8 JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0x94F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x17B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1BD0 JUMP JUMPDEST PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x170A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C0 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3D0 JUMPI POP PUSH2 0x3CF DUP3 PUSH2 0xAE6 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x3E6 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x412 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x434 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x442 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x474 DUP3 PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x4B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AA SWAP1 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F9 DUP3 PUSH2 0x63F JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x560 SWAP1 PUSH2 0x1D74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x588 PUSH2 0xB5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5B7 JUMPI POP PUSH2 0x5B6 DUP2 PUSH2 0x5B1 PUSH2 0xB5D JUMP JUMPDEST PUSH2 0xA52 JUMP JUMPDEST JUMPDEST PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5ED SWAP1 PUSH2 0x1E06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x601 DUP4 DUP4 DUP4 PUSH2 0xB65 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x61A DUP4 DUP4 DUP4 PUSH2 0xC17 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x63A DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x94F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x64A DUP3 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BC SWAP1 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x74C SWAP1 PUSH2 0x1C3F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x778 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x79A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7C5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7A8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7D7 PUSH2 0xB5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83B SWAP1 PUSH2 0x1F04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x851 PUSH2 0xB5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FE PUSH2 0xB5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x943 SWAP2 SWAP1 PUSH2 0x170A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x95A DUP5 DUP5 DUP5 PUSH2 0xC17 JUMP JUMPDEST PUSH2 0x966 DUP5 DUP5 DUP5 DUP5 PUSH2 0x12EF JUMP JUMPDEST PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99C SWAP1 PUSH2 0x1F96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9B6 DUP3 PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x9F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EC SWAP1 PUSH2 0x2028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9FF PUSH2 0x1476 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA4A JUMP JUMPDEST DUP1 PUSH2 0xA29 DUP5 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA3A SWAP3 SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC22 DUP3 PUSH2 0x1155 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC49 PUSH2 0xB5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xCA5 JUMPI POP PUSH2 0xC6E PUSH2 0xB5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC8D DUP5 PUSH2 0x469 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xCC1 JUMPI POP PUSH2 0xCC0 DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0xCBB PUSH2 0xB5D JUMP JUMPDEST PUSH2 0xA52 JUMP JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0xD03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFA SWAP1 PUSH2 0x211A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6C SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDDB SWAP1 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDF1 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0xE01 PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP5 ADD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E5 JUMPI PUSH2 0x1044 DUP2 PUSH2 0xB50 JUMP JUMPDEST ISZERO PUSH2 0x10E4 JUMPI DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x114E DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x15F3 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x115D PUSH2 0x161C JUMP JUMPDEST PUSH2 0x1166 DUP3 PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x11A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119C SWAP1 PUSH2 0x22D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 LT PUSH2 0x12AE JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x129F JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x12EA JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH2 0x11AB JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E1 SWAP1 PUSH2 0x2362 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1310 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15F9 JUMP JUMPDEST ISZERO PUSH2 0x1469 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1339 PUSH2 0xB5D JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1397 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1394 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1419 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13C7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1411 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1408 SWAP1 PUSH2 0x1F96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x146E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x14D4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1506 JUMPI DUP1 DUP1 PUSH2 0x14EF SWAP1 PUSH2 0x2494 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x14FF SWAP2 SWAP1 PUSH2 0x250B JUMP JUMPDEST SWAP2 POP PUSH2 0x14DC JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1522 JUMPI PUSH2 0x1521 PUSH2 0x1A22 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1554 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x15E1 JUMPI PUSH1 0x1 DUP3 PUSH2 0x156D SWAP2 SWAP1 PUSH2 0x253C JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x157C SWAP2 SWAP1 PUSH2 0x2570 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x1588 SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x159E JUMPI PUSH2 0x159D PUSH2 0x25D5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x15DA SWAP2 SWAP1 PUSH2 0x250B JUMP JUMPDEST SWAP5 POP PUSH2 0x1558 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x169F DUP2 PUSH2 0x166A JUMP JUMPDEST DUP2 EQ PUSH2 0x16AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16BC DUP2 PUSH2 0x1696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D8 JUMPI PUSH2 0x16D7 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16E6 DUP5 DUP3 DUP6 ADD PUSH2 0x16AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1704 DUP2 PUSH2 0x16EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x171F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x175F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1787 DUP3 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x1791 DUP2 DUP6 PUSH2 0x1730 JUMP JUMPDEST SWAP4 POP PUSH2 0x17A1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1741 JUMP JUMPDEST PUSH2 0x17AA DUP2 PUSH2 0x176B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17CF DUP2 DUP5 PUSH2 0x177C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17EA DUP2 PUSH2 0x17D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x17F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1807 DUP2 PUSH2 0x17E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1823 JUMPI PUSH2 0x1822 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1831 DUP5 DUP3 DUP6 ADD PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1865 DUP3 PUSH2 0x183A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1875 DUP2 PUSH2 0x185A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1890 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x186C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x189F DUP2 PUSH2 0x185A JUMP JUMPDEST DUP2 EQ PUSH2 0x18AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18BC DUP2 PUSH2 0x1896 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18D9 JUMPI PUSH2 0x18D8 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18E7 DUP6 DUP3 DUP7 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18F8 DUP6 DUP3 DUP7 ADD PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x190B DUP2 PUSH2 0x17D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1926 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1902 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1945 JUMPI PUSH2 0x1944 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1953 DUP7 DUP3 DUP8 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1964 DUP7 DUP3 DUP8 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1975 DUP7 DUP3 DUP8 ADD PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1995 JUMPI PUSH2 0x1994 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A3 DUP5 DUP3 DUP6 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19B5 DUP2 PUSH2 0x16EF JUMP JUMPDEST DUP2 EQ PUSH2 0x19C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19D2 DUP2 PUSH2 0x19AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19EF JUMPI PUSH2 0x19EE PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19FD DUP6 DUP3 DUP7 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A0E DUP6 DUP3 DUP7 ADD PUSH2 0x19C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1A5A DUP3 PUSH2 0x176B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1A79 JUMPI PUSH2 0x1A78 PUSH2 0x1A22 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8C PUSH2 0x1656 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A98 DUP3 DUP3 PUSH2 0x1A51 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AB8 JUMPI PUSH2 0x1AB7 PUSH2 0x1A22 JUMP JUMPDEST JUMPDEST PUSH2 0x1AC1 DUP3 PUSH2 0x176B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF0 PUSH2 0x1AEB DUP5 PUSH2 0x1A9D JUMP JUMPDEST PUSH2 0x1A82 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B0C JUMPI PUSH2 0x1B0B PUSH2 0x1A1D JUMP JUMPDEST JUMPDEST PUSH2 0x1B17 DUP5 DUP3 DUP6 PUSH2 0x1ACE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B34 JUMPI PUSH2 0x1B33 PUSH2 0x1A18 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B44 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1ADD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B67 JUMPI PUSH2 0x1B66 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B75 DUP8 DUP3 DUP9 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1B86 DUP8 DUP3 DUP9 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1B97 DUP8 DUP3 DUP9 ADD PUSH2 0x17F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BB8 JUMPI PUSH2 0x1BB7 PUSH2 0x1665 JUMP JUMPDEST JUMPDEST PUSH2 0x1BC4 DUP8 DUP3 DUP9 ADD PUSH2 0x1B1F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BE7 JUMPI PUSH2 0x1BE6 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BF5 DUP6 DUP3 DUP7 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C06 DUP6 DUP3 DUP7 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C57 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C6A JUMPI PUSH2 0x1C69 PUSH2 0x1C10 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F76656420717565727920666F72206E6F6E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x78697374656E7420746F6B656E00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CCC PUSH1 0x2D DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD7 DUP3 PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CFB DUP2 PUSH2 0x1CBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F76616C20746F2063757272656E74206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5E PUSH1 0x22 DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D69 DUP3 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D8D DUP2 PUSH2 0x1D51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F76652063616C6C6572206973206E6F74206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F76656420666F7220616C6C00000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF0 PUSH1 0x39 DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFB DUP3 PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E1F DUP2 PUSH2 0x1DE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E82 PUSH1 0x2B DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E8D DUP3 PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EB1 DUP2 PUSH2 0x1E75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F766520746F2063616C6C6572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EEE PUSH1 0x1A DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF9 DUP3 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F1D DUP2 PUSH2 0x1EE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E7366657220746F206E6F6E2045524337323152 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6563656976657220696D706C656D656E74657200000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F80 PUSH1 0x33 DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F8B DUP3 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FAF DUP2 PUSH2 0x1F73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2012 PUSH1 0x2F DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x201D DUP3 PUSH2 0x1FB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2041 DUP2 PUSH2 0x2005 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205E DUP3 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x2068 DUP2 DUP6 PUSH2 0x2048 JUMP JUMPDEST SWAP4 POP PUSH2 0x2078 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1741 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2090 DUP3 DUP6 PUSH2 0x2053 JUMP JUMPDEST SWAP2 POP PUSH2 0x209C DUP3 DUP5 PUSH2 0x2053 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2104 PUSH1 0x32 DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x210F DUP3 PUSH2 0x20A8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2133 DUP2 PUSH2 0x20F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E736665722066726F6D20696E636F7272656374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206F776E65720000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2196 PUSH1 0x26 DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x21A1 DUP3 PUSH2 0x213A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21C5 DUP2 PUSH2 0x2189 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2228 PUSH1 0x25 DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x2233 DUP3 PUSH2 0x21CC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2257 DUP2 PUSH2 0x221B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A206F776E657220717565727920666F72206E6F6E65786973 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74656E7420746F6B656E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BA PUSH1 0x2A DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x22C5 DUP3 PUSH2 0x225E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22E9 DUP2 PUSH2 0x22AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20756E61626C6520746F2064657465726D696E6520746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206F776E6572206F6620746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x234C PUSH1 0x2F DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x2357 DUP3 PUSH2 0x22F0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x237B DUP2 PUSH2 0x233F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A9 DUP3 PUSH2 0x2382 JUMP JUMPDEST PUSH2 0x23B3 DUP2 DUP6 PUSH2 0x238D JUMP JUMPDEST SWAP4 POP PUSH2 0x23C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1741 JUMP JUMPDEST PUSH2 0x23CC DUP2 PUSH2 0x176B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x23EC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x23F9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x2406 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1902 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2418 DUP2 DUP5 PUSH2 0x239E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2432 DUP2 PUSH2 0x1696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x244E JUMPI PUSH2 0x244D PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x245C DUP5 DUP3 DUP6 ADD PUSH2 0x2423 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x249F DUP3 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x24D1 JUMPI PUSH2 0x24D0 PUSH2 0x2465 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2516 DUP3 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2521 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2531 JUMPI PUSH2 0x2530 PUSH2 0x24DC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2547 DUP3 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2552 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x256A JUMPI PUSH2 0x2569 PUSH2 0x2465 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x257B DUP3 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2586 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2596 JUMPI PUSH2 0x2595 PUSH2 0x24DC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25AC DUP3 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x25B7 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x25CF JUMPI PUSH2 0x25CE PUSH2 0x2465 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP RETURN GAS 0xB7 DELEGATECALL CALLCODE SMOD SWAP4 LOG2 0xE6 0xB4 SWAP12 SDIV 0xB2 0xCC 0x4C SMOD 0xF9 RETURNDATACOPY 0x4F DUP13 PUSH24 0x14B28B151B55D573768764736F6C63430008110033000000 ",
							"sourceMap": "961:14197:8:-:0;;;2002:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2077:5;2069;:13;;;;;;:::i;:::-;;2103:7;2093;:17;;;;;;:::i;:::-;;2002:116;;961:14197;;7:75:9;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;961:14197:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1693": {
									"entryPoint": 5619,
									"id": 1693,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_1603": {
									"entryPoint": 2917,
									"id": 1603,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_1046": {
									"entryPoint": 5238,
									"id": 1046,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1680": {
									"entryPoint": 5613,
									"id": 1680,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1667": {
									"entryPoint": 4847,
									"id": 1667,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1243": {
									"entryPoint": 2896,
									"id": 1243,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_467": {
									"entryPoint": 2909,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_1580": {
									"entryPoint": 3095,
									"id": 1580,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_1090": {
									"entryPoint": 1262,
									"id": 1090,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_882": {
									"entryPoint": 1621,
									"id": 882,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1111": {
									"entryPoint": 1129,
									"id": 1111,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1163": {
									"entryPoint": 2642,
									"id": 1163,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_178": {
									"entryPoint": 5625,
									"id": 178,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_985": {
									"entryPoint": 983,
									"id": 985,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_975": {
									"entryPoint": 1599,
									"id": 975,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ownershipOf_960": {
									"entryPoint": 4437,
									"id": 960,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1200": {
									"entryPoint": 1567,
									"id": 1200,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1230": {
									"entryPoint": 2383,
									"id": 1230,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1145": {
									"entryPoint": 1999,
									"id": 1145,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_726": {
									"entryPoint": 2790,
									"id": 726,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_854": {
									"entryPoint": 757,
									"id": 854,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_995": {
									"entryPoint": 1853,
									"id": 995,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_565": {
									"entryPoint": 5261,
									"id": 565,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1037": {
									"entryPoint": 2475,
									"id": 1037,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_823": {
									"entryPoint": 1542,
									"id": 823,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1181": {
									"entryPoint": 1551,
									"id": 1181,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6877,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8324,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9175,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5718,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6862,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5953,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 9364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 9584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9317,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9436,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7184,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9685,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6690,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6680,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6685,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5733,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5728,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79": {
									"entryPoint": 8798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b": {
									"entryPoint": 8652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c": {
									"entryPoint": 7572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e": {
									"entryPoint": 7718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8": {
									"entryPoint": 8506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb": {
									"entryPoint": 8118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57": {
									"entryPoint": 7864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c": {
									"entryPoint": 8360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a": {
									"entryPoint": 7426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed": {
									"entryPoint": 7972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040": {
									"entryPoint": 8944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94": {
									"entryPoint": 7280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:27703:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:9",
														"type": ""
													}
												],
												"src": "334:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:9"
															},
															"nodeType": "YulIf",
															"src": "541:62:9"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:9",
														"type": ""
													}
												],
												"src": "489:120:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:9",
														"type": ""
													}
												],
												"src": "615:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:9"
															},
															"nodeType": "YulIf",
															"src": "833:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:9",
														"type": ""
													}
												],
												"src": "758:327:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:9",
														"type": ""
													}
												],
												"src": "1091:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:9",
														"type": ""
													}
												],
												"src": "1187:109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:9",
														"type": ""
													}
												],
												"src": "1302:210:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:9",
														"type": ""
													}
												],
												"src": "1518:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:9",
														"type": ""
													}
												],
												"src": "1623:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:9",
																"statements": []
															},
															"src": "1889:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:9",
														"type": ""
													}
												],
												"src": "1798:246:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:9",
														"type": ""
													}
												],
												"src": "2050:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:9",
														"type": ""
													}
												],
												"src": "2158:377:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:9",
														"type": ""
													}
												],
												"src": "2541:313:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:9",
														"type": ""
													}
												],
												"src": "2860:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:9"
															},
															"nodeType": "YulIf",
															"src": "2996:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:9",
														"type": ""
													}
												],
												"src": "2943:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:9",
														"type": ""
													}
												],
												"src": "3071:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:9"
															},
															"nodeType": "YulIf",
															"src": "3292:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:9",
														"type": ""
													}
												],
												"src": "3216:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:9",
														"type": ""
													}
												],
												"src": "3551:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:9",
														"type": ""
													}
												],
												"src": "3683:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:9",
														"type": ""
													}
												],
												"src": "3785:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:9",
														"type": ""
													}
												],
												"src": "3909:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:9"
															},
															"nodeType": "YulIf",
															"src": "4190:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:9",
														"type": ""
													}
												],
												"src": "4137:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:9",
														"type": ""
													}
												],
												"src": "4265:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:9"
															},
															"nodeType": "YulIf",
															"src": "4503:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:9",
														"type": ""
													}
												],
												"src": "4410:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4955:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4972:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4995:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4977:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4977:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4965:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4943:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4950:3:9",
														"type": ""
													}
												],
												"src": "4890:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5112:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5122:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5134:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5145:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5130:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5122:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5202:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5215:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5226:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5211:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5158:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5158:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5084:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5096:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5107:4:9",
														"type": ""
													}
												],
												"src": "5014:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5342:519:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5388:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5390:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5390:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5390:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5363:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5372:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5359:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5359:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5384:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5355:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5355:32:9"
															},
															"nodeType": "YulIf",
															"src": "5352:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "5481:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5496:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5510:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5500:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5525:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5560:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5571:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5556:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5556:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5580:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5535:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5535:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5525:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5608:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5623:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5637:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5627:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5653:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5688:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5699:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5684:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5684:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5708:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5663:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5653:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5736:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5751:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5755:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5781:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5816:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5827:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5812:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5812:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5836:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5791:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5791:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5781:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5296:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5307:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5319:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5327:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5335:6:9",
														"type": ""
													}
												],
												"src": "5242:619:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5933:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5979:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5981:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5981:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5981:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5954:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5963:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5950:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5950:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5975:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:32:9"
															},
															"nodeType": "YulIf",
															"src": "5943:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "6072:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6087:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6101:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6091:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6116:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6151:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6162:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6147:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6147:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6171:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6126:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6126:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6116:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5903:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5914:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5926:6:9",
														"type": ""
													}
												],
												"src": "5867:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6242:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6296:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:40:9"
															},
															"nodeType": "YulIf",
															"src": "6252:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6235:5:9",
														"type": ""
													}
												],
												"src": "6202:116:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6373:84:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6383:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6351:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6359:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6367:5:9",
														"type": ""
													}
												],
												"src": "6324:133:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:388:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6589:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:32:9"
															},
															"nodeType": "YulIf",
															"src": "6553:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "6682:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6726:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6809:115:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6854:60:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6516:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6528:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6536:6:9",
														"type": ""
													}
												],
												"src": "6463:468:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7211:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7412:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7591:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:9"
															},
															"nodeType": "YulIf",
															"src": "7525:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7398:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7406:4:9",
														"type": ""
													}
												],
												"src": "7369:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7681:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7690:6:9",
														"type": ""
													}
												],
												"src": "7656:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7962:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:30:9"
															},
															"nodeType": "YulIf",
															"src": "7928:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7994:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8068:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7841:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7852:4:9",
														"type": ""
													}
												],
												"src": "7791:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8168:82:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:9"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8150:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8155:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8160:6:9",
														"type": ""
													}
												],
												"src": "8104:146:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:340:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8349:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:65:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8527:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:25:9"
															},
															"nodeType": "YulIf",
															"src": "8498:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:54:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8312:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8317:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8325:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8333:5:9",
														"type": ""
													}
												],
												"src": "8256:423:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:277:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8808:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:35:9"
															},
															"nodeType": "YulIf",
															"src": "8769:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8943:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:78:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8737:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8745:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8753:5:9",
														"type": ""
													}
												],
												"src": "8698:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:817:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9215:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:33:9"
															},
															"nodeType": "YulIf",
															"src": "9178:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "9308:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9352:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9435:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9480:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9563:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9608:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9691:287:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9799:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "9765:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9896:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9114:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9125:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9137:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9145:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9153:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9161:6:9",
														"type": ""
													}
												],
												"src": "9042:943:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10074:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10120:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10122:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10122:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10095:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10091:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10091:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10116:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10087:32:9"
															},
															"nodeType": "YulIf",
															"src": "10084:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "10213:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10228:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10242:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10232:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10257:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10292:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10303:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10288:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10312:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10267:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10267:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10257:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10340:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10355:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10359:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10385:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10395:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10395:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10385:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10036:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10047:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10059:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10067:6:9",
														"type": ""
													}
												],
												"src": "9991:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10499:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10519:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10509:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10509:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10613:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10616:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10606:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10606:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10606:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10637:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10640:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10630:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10630:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10471:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10708:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10718:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10732:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10738:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10728:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10728:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10749:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10779:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10785:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10775:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10753:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10826:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10840:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10854:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10862:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10850:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10850:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10806:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:26:9"
															},
															"nodeType": "YulIf",
															"src": "10796:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10929:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10943:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10943:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10943:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10893:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10916:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10924:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10913:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10913:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10890:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10890:38:9"
															},
															"nodeType": "YulIf",
															"src": "10887:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10692:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10701:6:9",
														"type": ""
													}
												],
												"src": "10657:320:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11089:126:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11111:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11119:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11107:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11107:14:9"
																	},
																	{
																		"hexValue": "455243373231413a20617070726f76656420717565727920666f72206e6f6e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11123:34:9",
																		"type": "",
																		"value": "ERC721A: approved query for none"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11100:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11100:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11100:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11179:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11187:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11175:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11175:15:9"
																	},
																	{
																		"hexValue": "78697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11192:15:9",
																		"type": "",
																		"value": "xistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11168:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11168:40:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11168:40:9"
														}
													]
												},
												"name": "store_literal_in_memory_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11081:6:9",
														"type": ""
													}
												],
												"src": "10983:232:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11367:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11377:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11443:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11448:2:9",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11384:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11384:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11377:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11549:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
																	"nodeType": "YulIdentifier",
																	"src": "11460:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11460:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11460:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11562:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11573:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11578:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11569:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11569:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11562:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11355:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11363:3:9",
														"type": ""
													}
												],
												"src": "11221:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11764:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11774:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11786:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11797:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11782:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11782:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11774:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11821:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11832:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11817:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11817:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11840:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11846:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11836:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11836:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11810:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11810:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11810:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11866:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12000:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11874:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11874:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11866:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11744:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11759:4:9",
														"type": ""
													}
												],
												"src": "11593:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12124:115:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12146:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12154:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12142:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12142:14:9"
																	},
																	{
																		"hexValue": "455243373231413a20617070726f76616c20746f2063757272656e74206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12158:34:9",
																		"type": "",
																		"value": "ERC721A: approval to current own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12135:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12135:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12135:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12214:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12222:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12210:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12210:15:9"
																	},
																	{
																		"hexValue": "6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12227:4:9",
																		"type": "",
																		"value": "er"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12203:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12203:29:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12203:29:9"
														}
													]
												},
												"name": "store_literal_in_memory_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12116:6:9",
														"type": ""
													}
												],
												"src": "12018:221:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12391:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12401:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12467:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12472:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12408:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12408:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12401:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12573:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
																	"nodeType": "YulIdentifier",
																	"src": "12484:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12484:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12484:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12586:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12597:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12602:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12593:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12593:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12586:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12379:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12387:3:9",
														"type": ""
													}
												],
												"src": "12245:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12788:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12798:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12810:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12821:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12806:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12806:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12798:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12845:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12856:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12841:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12841:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12864:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12870:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12860:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12860:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12834:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12834:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12834:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12890:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13024:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12898:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12898:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12890:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12768:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12783:4:9",
														"type": ""
													}
												],
												"src": "12617:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13148:138:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13170:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13178:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13166:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13166:14:9"
																	},
																	{
																		"hexValue": "455243373231413a20617070726f76652063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13182:34:9",
																		"type": "",
																		"value": "ERC721A: approve caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13159:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13159:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13159:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13238:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13246:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13234:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13234:15:9"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13251:27:9",
																		"type": "",
																		"value": "wner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13227:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13227:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13227:52:9"
														}
													]
												},
												"name": "store_literal_in_memory_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13140:6:9",
														"type": ""
													}
												],
												"src": "13042:244:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13438:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13448:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13514:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13519:2:9",
																		"type": "",
																		"value": "57"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13455:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13455:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13448:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13620:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
																	"nodeType": "YulIdentifier",
																	"src": "13531:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13531:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13531:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13633:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13644:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13649:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13640:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13640:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13633:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13426:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13434:3:9",
														"type": ""
													}
												],
												"src": "13292:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13835:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13845:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13857:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13868:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13853:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13853:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13845:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13892:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13903:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13888:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13888:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13911:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13917:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13907:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13907:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13881:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13881:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13881:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13937:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14071:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13945:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13945:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13937:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13815:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13830:4:9",
														"type": ""
													}
												],
												"src": "13664:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14195:124:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14217:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14225:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14213:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14213:14:9"
																	},
																	{
																		"hexValue": "455243373231413a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14229:34:9",
																		"type": "",
																		"value": "ERC721A: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14206:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14206:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14206:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14285:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14293:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14281:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14281:15:9"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14298:13:9",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14274:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14274:38:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14274:38:9"
														}
													]
												},
												"name": "store_literal_in_memory_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14187:6:9",
														"type": ""
													}
												],
												"src": "14089:230:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14471:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14481:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14547:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14552:2:9",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14488:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14488:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14481:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14653:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
																	"nodeType": "YulIdentifier",
																	"src": "14564:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14564:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14564:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14666:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14677:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14682:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14673:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14673:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14666:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14459:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14467:3:9",
														"type": ""
													}
												],
												"src": "14325:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14868:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14878:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14890:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14901:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14886:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14886:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14878:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14925:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14936:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14921:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14921:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14944:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14950:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14940:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14940:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14914:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14914:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14914:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14970:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15104:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14978:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14978:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14970:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14848:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14863:4:9",
														"type": ""
													}
												],
												"src": "14697:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15228:70:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15250:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15258:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15246:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15246:14:9"
																	},
																	{
																		"hexValue": "455243373231413a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15262:28:9",
																		"type": "",
																		"value": "ERC721A: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15239:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15239:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15239:52:9"
														}
													]
												},
												"name": "store_literal_in_memory_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15220:6:9",
														"type": ""
													}
												],
												"src": "15122:176:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15450:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15460:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15526:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15531:2:9",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15467:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15467:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15460:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15632:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
																	"nodeType": "YulIdentifier",
																	"src": "15543:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15543:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15543:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15645:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15656:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15661:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15652:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15652:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15645:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15438:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15446:3:9",
														"type": ""
													}
												],
												"src": "15304:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15847:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15857:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15869:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15880:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15865:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15865:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15857:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15904:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15915:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15900:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15900:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15923:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15929:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15919:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15919:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15893:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15893:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15893:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15949:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16083:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15957:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15957:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15949:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15827:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15842:4:9",
														"type": ""
													}
												],
												"src": "15676:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16207:132:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16229:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16237:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16225:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16225:14:9"
																	},
																	{
																		"hexValue": "455243373231413a207472616e7366657220746f206e6f6e2045524337323152",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16241:34:9",
																		"type": "",
																		"value": "ERC721A: transfer to non ERC721R"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16218:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16218:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16218:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16297:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16305:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16293:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16293:15:9"
																	},
																	{
																		"hexValue": "6563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16310:21:9",
																		"type": "",
																		"value": "eceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16286:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16286:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16286:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16199:6:9",
														"type": ""
													}
												],
												"src": "16101:238:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16491:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16501:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16567:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16572:2:9",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16508:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16508:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16501:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16673:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																	"nodeType": "YulIdentifier",
																	"src": "16584:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16584:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16584:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16686:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16697:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16702:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16693:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16693:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16686:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16479:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16487:3:9",
														"type": ""
													}
												],
												"src": "16345:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16888:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16898:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16910:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16921:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16906:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16906:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16898:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16945:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16956:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16941:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16941:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16964:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16970:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16960:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16960:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16934:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16934:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16934:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16990:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17124:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16998:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16998:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16990:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16868:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16883:4:9",
														"type": ""
													}
												],
												"src": "16717:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17248:128:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17270:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17278:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17266:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17266:14:9"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17282:34:9",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17259:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17259:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17259:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17338:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17346:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17334:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17334:15:9"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17351:17:9",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17327:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17327:42:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17327:42:9"
														}
													]
												},
												"name": "store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17240:6:9",
														"type": ""
													}
												],
												"src": "17142:234:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17528:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17538:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17604:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17609:2:9",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17545:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17545:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17538:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17710:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																	"nodeType": "YulIdentifier",
																	"src": "17621:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17621:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17621:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17723:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17734:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17739:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17730:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17730:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17723:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17516:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17524:3:9",
														"type": ""
													}
												],
												"src": "17382:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17925:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17935:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17947:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17958:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17943:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17943:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17935:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17982:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17993:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17978:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17978:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18001:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18007:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17997:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17997:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17971:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17971:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17971:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18027:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18161:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18035:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18035:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18027:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17905:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17920:4:9",
														"type": ""
													}
												],
												"src": "17754:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18293:34:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18303:18:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "18318:3:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18303:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18265:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18270:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18281:11:9",
														"type": ""
													}
												],
												"src": "18179:148:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18443:280:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18453:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18500:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "18467:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18467:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "18457:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18515:96:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18599:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18604:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18522:76:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18522:89:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18515:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18659:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18666:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18655:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18655:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18673:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18678:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "18620:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18620:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18620:65:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18694:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18705:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18710:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18701:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18701:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18694:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18424:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18431:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18439:3:9",
														"type": ""
													}
												],
												"src": "18333:390:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18913:251:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18924:102:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19013:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19022:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18931:81:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18931:95:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18924:3:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19036:102:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19125:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19134:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19043:81:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19043:95:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19036:3:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19148:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "19155:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19148:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18884:3:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18890:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18898:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18909:3:9",
														"type": ""
													}
												],
												"src": "18729:435:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19276:131:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19298:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19306:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19294:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19294:14:9"
																	},
																	{
																		"hexValue": "455243373231413a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19310:34:9",
																		"type": "",
																		"value": "ERC721A: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19287:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19287:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19287:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19366:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19374:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19362:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19362:15:9"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19379:20:9",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19355:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19355:45:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19355:45:9"
														}
													]
												},
												"name": "store_literal_in_memory_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19268:6:9",
														"type": ""
													}
												],
												"src": "19170:237:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19559:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19569:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19635:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19640:2:9",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19576:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19576:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19569:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19741:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
																	"nodeType": "YulIdentifier",
																	"src": "19652:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19652:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19652:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19754:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19765:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19770:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19761:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19761:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19754:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19547:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19555:3:9",
														"type": ""
													}
												],
												"src": "19413:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19956:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19966:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19978:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19989:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19974:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19974:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19966:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20013:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20024:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20009:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20009:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20032:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20038:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20028:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20028:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20002:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20002:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20002:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20058:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20192:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20066:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20066:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20058:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19936:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19951:4:9",
														"type": ""
													}
												],
												"src": "19785:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20316:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20338:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20346:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20334:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20334:14:9"
																	},
																	{
																		"hexValue": "455243373231413a207472616e736665722066726f6d20696e636f7272656374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20350:34:9",
																		"type": "",
																		"value": "ERC721A: transfer from incorrect"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20327:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20327:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20327:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20406:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20414:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20402:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20402:15:9"
																	},
																	{
																		"hexValue": "206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20419:8:9",
																		"type": "",
																		"value": " owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20395:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20395:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20395:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20308:6:9",
														"type": ""
													}
												],
												"src": "20210:225:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20587:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20597:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20663:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20668:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20604:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20604:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20597:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20769:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
																	"nodeType": "YulIdentifier",
																	"src": "20680:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20680:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20680:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20782:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20793:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20798:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20789:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20789:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20782:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20575:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20583:3:9",
														"type": ""
													}
												],
												"src": "20441:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20984:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20994:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21006:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21017:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21002:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21002:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20994:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21041:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21052:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21037:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21037:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21060:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21066:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21056:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21056:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21030:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21030:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21030:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21086:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21220:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21094:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21094:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21086:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20964:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20979:4:9",
														"type": ""
													}
												],
												"src": "20813:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21344:118:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21366:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21374:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21362:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21362:14:9"
																	},
																	{
																		"hexValue": "455243373231413a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21378:34:9",
																		"type": "",
																		"value": "ERC721A: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21355:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21355:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21355:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21434:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21442:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21430:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21430:15:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21447:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21423:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21423:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21423:32:9"
														}
													]
												},
												"name": "store_literal_in_memory_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21336:6:9",
														"type": ""
													}
												],
												"src": "21238:224:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21614:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21624:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21690:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21695:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21631:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21631:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21624:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21796:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
																	"nodeType": "YulIdentifier",
																	"src": "21707:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21707:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21707:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21809:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21820:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21825:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21816:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21816:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21809:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21602:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21610:3:9",
														"type": ""
													}
												],
												"src": "21468:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22011:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22021:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22033:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22044:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22029:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22029:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22021:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22068:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22079:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22064:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22064:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22087:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22093:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22083:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22083:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22057:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22057:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22057:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22113:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22247:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22121:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22121:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22113:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21991:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22006:4:9",
														"type": ""
													}
												],
												"src": "21840:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22371:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22393:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22401:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22389:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22389:14:9"
																	},
																	{
																		"hexValue": "455243373231413a206f776e657220717565727920666f72206e6f6e65786973",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22405:34:9",
																		"type": "",
																		"value": "ERC721A: owner query for nonexis"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22382:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22382:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22382:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22461:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22469:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22457:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22457:15:9"
																	},
																	{
																		"hexValue": "74656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22474:12:9",
																		"type": "",
																		"value": "tent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22450:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22450:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22450:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22363:6:9",
														"type": ""
													}
												],
												"src": "22265:229:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22646:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22656:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22722:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22727:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22663:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22663:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22656:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22828:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
																	"nodeType": "YulIdentifier",
																	"src": "22739:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22739:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22739:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22841:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22852:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22857:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22848:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22848:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22841:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22634:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22642:3:9",
														"type": ""
													}
												],
												"src": "22500:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23043:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23053:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23065:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23076:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23061:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23061:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23053:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23100:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23111:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23096:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23096:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23119:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23125:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23115:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23115:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23089:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23089:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23089:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23145:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23279:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23153:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23153:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23145:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23023:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23038:4:9",
														"type": ""
													}
												],
												"src": "22872:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23403:128:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23425:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23433:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23421:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23421:14:9"
																	},
																	{
																		"hexValue": "455243373231413a20756e61626c6520746f2064657465726d696e6520746865",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23437:34:9",
																		"type": "",
																		"value": "ERC721A: unable to determine the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23414:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23414:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23414:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23493:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23501:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23489:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23489:15:9"
																	},
																	{
																		"hexValue": "206f776e6572206f6620746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23506:17:9",
																		"type": "",
																		"value": " owner of token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23482:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23482:42:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23482:42:9"
														}
													]
												},
												"name": "store_literal_in_memory_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23395:6:9",
														"type": ""
													}
												],
												"src": "23297:234:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23683:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23693:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23759:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23764:2:9",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23700:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23700:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23693:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23865:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
																	"nodeType": "YulIdentifier",
																	"src": "23776:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23776:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23776:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23878:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23889:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23894:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23885:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23885:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23878:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23671:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23679:3:9",
														"type": ""
													}
												],
												"src": "23537:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24080:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24090:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24102:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24113:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24098:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24098:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24090:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24137:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24148:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24133:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24133:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24156:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24162:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24152:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24152:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24126:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24126:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24126:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24182:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24316:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24190:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24190:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24182:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24060:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24075:4:9",
														"type": ""
													}
												],
												"src": "23909:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24392:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24403:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24419:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24413:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24413:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24403:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24375:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24385:6:9",
														"type": ""
													}
												],
												"src": "24334:98:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24533:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24550:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24555:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24543:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24543:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24543:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24571:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24590:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24595:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24586:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24586:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24571:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24505:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24510:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24521:11:9",
														"type": ""
													}
												],
												"src": "24438:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24702:283:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24712:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24758:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "24726:31:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24726:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "24716:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24773:77:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24838:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24843:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24780:57:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24780:70:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24773:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24898:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24905:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24894:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24894:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24912:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24917:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "24859:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24859:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24859:65:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24933:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24944:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "24971:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "24949:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24949:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24940:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24940:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24933:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24683:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24690:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24698:3:9",
														"type": ""
													}
												],
												"src": "24612:373:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25191:440:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25201:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25213:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25224:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25209:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25209:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25201:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25282:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25295:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25306:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25291:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25291:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25238:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25238:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25238:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25363:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25376:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25387:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25372:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25372:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25319:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25319:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25319:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "25445:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25458:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25469:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25454:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25454:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25401:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25401:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25401:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25494:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25505:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25490:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25490:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25514:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25520:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25510:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25510:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25483:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25483:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25483:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25540:84:9",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "25610:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25619:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25548:61:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25548:76:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25540:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25139:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "25151:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "25159:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25167:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25175:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25186:4:9",
														"type": ""
													}
												],
												"src": "24991:640:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25699:79:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25709:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "25724:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "25718:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25718:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "25709:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25766:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "25740:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25740:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25740:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "25677:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25685:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25693:5:9",
														"type": ""
													}
												],
												"src": "25637:141:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25860:273:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25906:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "25908:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25908:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25908:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "25881:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25890:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25877:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25877:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25902:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "25873:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25873:32:9"
															},
															"nodeType": "YulIf",
															"src": "25870:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "25999:127:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "26014:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26028:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "26018:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "26043:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "26088:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "26099:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "26084:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26084:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "26108:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "26053:30:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26053:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "26043:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25830:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "25841:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25853:6:9",
														"type": ""
													}
												],
												"src": "25784:349:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26167:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26184:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26187:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26177:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26177:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26177:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26281:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26284:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26274:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26274:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26274:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26305:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26308:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "26298:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26298:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26298:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "26139:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26368:190:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26378:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26405:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26387:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26387:24:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "26378:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26501:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "26503:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26503:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26503:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26426:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26433:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "26423:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26423:77:9"
															},
															"nodeType": "YulIf",
															"src": "26420:103:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26532:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26543:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26550:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26539:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26539:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "26532:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26354:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "26364:3:9",
														"type": ""
													}
												],
												"src": "26325:233:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26592:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26609:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26612:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26602:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26602:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26602:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26706:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26709:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26699:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26699:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26699:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26730:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26733:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "26723:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26723:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26723:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "26564:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26792:143:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26802:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26825:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26807:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26807:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "26802:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26836:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26859:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26841:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26841:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "26836:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26883:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "26885:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26885:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26885:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26880:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "26873:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26873:9:9"
															},
															"nodeType": "YulIf",
															"src": "26870:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26915:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26924:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26927:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "26920:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26920:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "26915:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "26781:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "26784:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "26790:1:9",
														"type": ""
													}
												],
												"src": "26750:185:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26986:149:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26996:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27019:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "27001:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27001:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "26996:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27030:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27053:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "27035:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27035:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "27030:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27064:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27076:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27079:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "27072:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27072:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "27064:4:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27106:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "27108:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27108:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27108:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "27097:4:9"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27103:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "27094:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27094:11:9"
															},
															"nodeType": "YulIf",
															"src": "27091:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "26972:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "26975:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "26981:4:9",
														"type": ""
													}
												],
												"src": "26941:194:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27175:142:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27185:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27208:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "27190:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27190:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "27185:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27219:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27242:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "27224:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27224:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "27219:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27266:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "27268:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27268:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27268:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27263:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "27256:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27256:9:9"
															},
															"nodeType": "YulIf",
															"src": "27253:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27297:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27306:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27309:1:9"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "27302:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27302:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "27297:1:9"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "27164:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "27167:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "27173:1:9",
														"type": ""
													}
												],
												"src": "27141:176:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27367:147:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27377:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27400:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "27382:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27382:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "27377:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27411:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27434:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "27416:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27416:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "27411:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27445:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27456:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27459:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27452:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27452:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "27445:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27485:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "27487:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27487:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27487:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27477:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "27480:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "27474:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27474:10:9"
															},
															"nodeType": "YulIf",
															"src": "27471:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "27354:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "27357:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "27363:3:9",
														"type": ""
													}
												],
												"src": "27323:191:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27548:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27565:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27568:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27558:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27558:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27558:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27662:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27665:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27655:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27655:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27655:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27686:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27689:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "27679:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27679:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27679:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "27520:180:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: approved query for none\")\n\n        mstore(add(memPtr, 32), \"xistent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: approval to current own\")\n\n        mstore(add(memPtr, 32), \"er\")\n\n    }\n\n    function abi_encode_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: approve caller is not o\")\n\n        mstore(add(memPtr, 32), \"wner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 57)\n        store_literal_in_memory_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: balance query for the z\")\n\n        mstore(add(memPtr, 32), \"ero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: transfer to non ERC721R\")\n\n        mstore(add(memPtr, 32), \"eceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Metadata: URI query for no\")\n\n        mstore(add(memPtr, 32), \"nexistent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: transfer caller is not \")\n\n        mstore(add(memPtr, 32), \"owner nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: transfer from incorrect\")\n\n        mstore(add(memPtr, 32), \" owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: owner query for nonexis\")\n\n        mstore(add(memPtr, 32), \"tent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: unable to determine the\")\n\n        mstore(add(memPtr, 32), \" owner of token\")\n\n    }\n\n    function abi_encode_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025d578063b88d4fde14610279578063c87b56dd14610295578063e985e9c5146102c5576100ea565b80636352211e146101df57806370a082311461020f57806395d89b411461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806318160ddd1461018957806323b872dd146101a757806342842e0e146101c3576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b610109600480360381019061010491906116c2565b6102f5565b604051610116919061170a565b60405180910390f35b6101276103d7565b60405161013491906117b5565b60405180910390f35b6101576004803603810190610152919061180d565b610469565b604051610164919061187b565b60405180910390f35b610187600480360381019061018291906118c2565b6104ee565b005b610191610606565b60405161019e9190611911565b60405180910390f35b6101c160048036038101906101bc919061192c565b61060f565b005b6101dd60048036038101906101d8919061192c565b61061f565b005b6101f960048036038101906101f4919061180d565b61063f565b604051610206919061187b565b60405180910390f35b6102296004803603810190610224919061197f565b610655565b6040516102369190611911565b60405180910390f35b61024761073d565b60405161025491906117b5565b60405180910390f35b610277600480360381019061027291906119d8565b6107cf565b005b610293600480360381019061028e9190611b4d565b61094f565b005b6102af60048036038101906102aa919061180d565b6109ab565b6040516102bc91906117b5565b60405180910390f35b6102df60048036038101906102da9190611bd0565b610a52565b6040516102ec919061170a565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c057507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103d057506103cf82610ae6565b5b9050919050565b6060600180546103e690611c3f565b80601f016020809104026020016040519081016040528092919081815260200182805461041290611c3f565b801561045f5780601f106104345761010080835404028352916020019161045f565b820191906000526020600020905b81548152906001019060200180831161044257829003601f168201915b5050505050905090565b600061047482610b50565b6104b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104aa90611ce2565b60405180910390fd5b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104f98261063f565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056090611d74565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610588610b5d565b73ffffffffffffffffffffffffffffffffffffffff1614806105b757506105b6816105b1610b5d565b610a52565b5b6105f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ed90611e06565b60405180910390fd5b610601838383610b65565b505050565b60008054905090565b61061a838383610c17565b505050565b61063a8383836040518060200160405280600081525061094f565b505050565b600061064a82611155565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bc90611e98565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169050919050565b60606002805461074c90611c3f565b80601f016020809104026020016040519081016040528092919081815260200182805461077890611c3f565b80156107c55780601f1061079a576101008083540402835291602001916107c5565b820191906000526020600020905b8154815290600101906020018083116107a857829003601f168201915b5050505050905090565b6107d7610b5d565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610844576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083b90611f04565b60405180910390fd5b8060066000610851610b5d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166108fe610b5d565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610943919061170a565b60405180910390a35050565b61095a848484610c17565b610966848484846112ef565b6109a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099c90611f96565b60405180910390fd5b50505050565b60606109b682610b50565b6109f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ec90612028565b60405180910390fd5b60006109ff611476565b90506000815103610a1f5760405180602001604052806000815250610a4a565b80610a298461148d565b604051602001610a3a929190612084565b6040516020818303038152906040525b915050919050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000805482109050919050565b600033905090565b826005600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610c2282611155565b90506000816000015173ffffffffffffffffffffffffffffffffffffffff16610c49610b5d565b73ffffffffffffffffffffffffffffffffffffffff161480610ca55750610c6e610b5d565b73ffffffffffffffffffffffffffffffffffffffff16610c8d84610469565b73ffffffffffffffffffffffffffffffffffffffff16145b80610cc15750610cc08260000151610cbb610b5d565b610a52565b5b905080610d03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfa9061211a565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff1614610d75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6c906121ac565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610de4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddb9061223e565b60405180910390fd5b610df185858560016115ed565b610e016000848460000151610b65565b6001600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff160392506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506001600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff160192506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550836003600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426003600085815260200190815260200160002060000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600184019050600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036110e55761104481610b50565b156110e45782600001516003600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082602001516003600083815260200190815260200160002060000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5b50828473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461114e85858560016115f3565b5050505050565b61115d61161c565b61116682610b50565b6111a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119c906122d0565b60405180910390fd5b60008290505b600081106112ae576000600360008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461129f5780925050506112ea565b508080600190039150506111ab565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e190612362565b60405180910390fd5b919050565b60006113108473ffffffffffffffffffffffffffffffffffffffff166115f9565b15611469578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611339610b5d565b8786866040518563ffffffff1660e01b815260040161135b94939291906123d7565b6020604051808303816000875af192505050801561139757506040513d601f19601f820116820180604052508101906113949190612438565b60015b611419573d80600081146113c7576040519150601f19603f3d011682016040523d82523d6000602084013e6113cc565b606091505b506000815103611411576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140890611f96565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061146e565b600190505b949350505050565b606060405180602001604052806000815250905090565b6060600082036114d4576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506115e8565b600082905060005b600082146115065780806114ef90612494565b915050600a826114ff919061250b565b91506114dc565b60008167ffffffffffffffff81111561152257611521611a22565b5b6040519080825280601f01601f1916602001820160405280156115545781602001600182028036833780820191505090505b5090505b600085146115e15760018261156d919061253c565b9150600a8561157c9190612570565b603061158891906125a1565b60f81b81838151811061159e5761159d6125d5565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856115da919061250b565b9450611558565b8093505050505b919050565b50505050565b50505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61169f8161166a565b81146116aa57600080fd5b50565b6000813590506116bc81611696565b92915050565b6000602082840312156116d8576116d7611660565b5b60006116e6848285016116ad565b91505092915050565b60008115159050919050565b611704816116ef565b82525050565b600060208201905061171f60008301846116fb565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561175f578082015181840152602081019050611744565b60008484015250505050565b6000601f19601f8301169050919050565b600061178782611725565b6117918185611730565b93506117a1818560208601611741565b6117aa8161176b565b840191505092915050565b600060208201905081810360008301526117cf818461177c565b905092915050565b6000819050919050565b6117ea816117d7565b81146117f557600080fd5b50565b600081359050611807816117e1565b92915050565b60006020828403121561182357611822611660565b5b6000611831848285016117f8565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118658261183a565b9050919050565b6118758161185a565b82525050565b6000602082019050611890600083018461186c565b92915050565b61189f8161185a565b81146118aa57600080fd5b50565b6000813590506118bc81611896565b92915050565b600080604083850312156118d9576118d8611660565b5b60006118e7858286016118ad565b92505060206118f8858286016117f8565b9150509250929050565b61190b816117d7565b82525050565b60006020820190506119266000830184611902565b92915050565b60008060006060848603121561194557611944611660565b5b6000611953868287016118ad565b9350506020611964868287016118ad565b9250506040611975868287016117f8565b9150509250925092565b60006020828403121561199557611994611660565b5b60006119a3848285016118ad565b91505092915050565b6119b5816116ef565b81146119c057600080fd5b50565b6000813590506119d2816119ac565b92915050565b600080604083850312156119ef576119ee611660565b5b60006119fd858286016118ad565b9250506020611a0e858286016119c3565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611a5a8261176b565b810181811067ffffffffffffffff82111715611a7957611a78611a22565b5b80604052505050565b6000611a8c611656565b9050611a988282611a51565b919050565b600067ffffffffffffffff821115611ab857611ab7611a22565b5b611ac18261176b565b9050602081019050919050565b82818337600083830152505050565b6000611af0611aeb84611a9d565b611a82565b905082815260208101848484011115611b0c57611b0b611a1d565b5b611b17848285611ace565b509392505050565b600082601f830112611b3457611b33611a18565b5b8135611b44848260208601611add565b91505092915050565b60008060008060808587031215611b6757611b66611660565b5b6000611b75878288016118ad565b9450506020611b86878288016118ad565b9350506040611b97878288016117f8565b925050606085013567ffffffffffffffff811115611bb857611bb7611665565b5b611bc487828801611b1f565b91505092959194509250565b60008060408385031215611be757611be6611660565b5b6000611bf5858286016118ad565b9250506020611c06858286016118ad565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c5757607f821691505b602082108103611c6a57611c69611c10565b5b50919050565b7f455243373231413a20617070726f76656420717565727920666f72206e6f6e6560008201527f78697374656e7420746f6b656e00000000000000000000000000000000000000602082015250565b6000611ccc602d83611730565b9150611cd782611c70565b604082019050919050565b60006020820190508181036000830152611cfb81611cbf565b9050919050565b7f455243373231413a20617070726f76616c20746f2063757272656e74206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b6000611d5e602283611730565b9150611d6982611d02565b604082019050919050565b60006020820190508181036000830152611d8d81611d51565b9050919050565b7f455243373231413a20617070726f76652063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f76656420666f7220616c6c00000000000000602082015250565b6000611df0603983611730565b9150611dfb82611d94565b604082019050919050565b60006020820190508181036000830152611e1f81611de3565b9050919050565b7f455243373231413a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b6000611e82602b83611730565b9150611e8d82611e26565b604082019050919050565b60006020820190508181036000830152611eb181611e75565b9050919050565b7f455243373231413a20617070726f766520746f2063616c6c6572000000000000600082015250565b6000611eee601a83611730565b9150611ef982611eb8565b602082019050919050565b60006020820190508181036000830152611f1d81611ee1565b9050919050565b7f455243373231413a207472616e7366657220746f206e6f6e204552433732315260008201527f6563656976657220696d706c656d656e74657200000000000000000000000000602082015250565b6000611f80603383611730565b9150611f8b82611f24565b604082019050919050565b60006020820190508181036000830152611faf81611f73565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b6000612012602f83611730565b915061201d82611fb6565b604082019050919050565b6000602082019050818103600083015261204181612005565b9050919050565b600081905092915050565b600061205e82611725565b6120688185612048565b9350612078818560208601611741565b80840191505092915050565b60006120908285612053565b915061209c8284612053565b91508190509392505050565b7f455243373231413a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b6000612104603283611730565b915061210f826120a8565b604082019050919050565b60006020820190508181036000830152612133816120f7565b9050919050565b7f455243373231413a207472616e736665722066726f6d20696e636f727265637460008201527f206f776e65720000000000000000000000000000000000000000000000000000602082015250565b6000612196602683611730565b91506121a18261213a565b604082019050919050565b600060208201905081810360008301526121c581612189565b9050919050565b7f455243373231413a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000612228602583611730565b9150612233826121cc565b604082019050919050565b600060208201905081810360008301526122578161221b565b9050919050565b7f455243373231413a206f776e657220717565727920666f72206e6f6e6578697360008201527f74656e7420746f6b656e00000000000000000000000000000000000000000000602082015250565b60006122ba602a83611730565b91506122c58261225e565b604082019050919050565b600060208201905081810360008301526122e9816122ad565b9050919050565b7f455243373231413a20756e61626c6520746f2064657465726d696e652074686560008201527f206f776e6572206f6620746f6b656e0000000000000000000000000000000000602082015250565b600061234c602f83611730565b9150612357826122f0565b604082019050919050565b6000602082019050818103600083015261237b8161233f565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006123a982612382565b6123b3818561238d565b93506123c3818560208601611741565b6123cc8161176b565b840191505092915050565b60006080820190506123ec600083018761186c565b6123f9602083018661186c565b6124066040830185611902565b8181036060830152612418818461239e565b905095945050505050565b60008151905061243281611696565b92915050565b60006020828403121561244e5761244d611660565b5b600061245c84828501612423565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061249f826117d7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036124d1576124d0612465565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612516826117d7565b9150612521836117d7565b925082612531576125306124dc565b5b828204905092915050565b6000612547826117d7565b9150612552836117d7565b925082820390508181111561256a57612569612465565b5b92915050565b600061257b826117d7565b9150612586836117d7565b925082612596576125956124dc565b5b828206905092915050565b60006125ac826117d7565b91506125b7836117d7565b92508282019050808211156125cf576125ce612465565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122000f35ab7f4f20793a2e6b49b05b2cc4c07f93e4f8c7714b28b151b55d573768764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C5 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x23F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x170A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x17B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x18C2 JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH2 0x606 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x192C JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x192C JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x17B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x19D8 JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0x94F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x17B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1BD0 JUMP JUMPDEST PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x170A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C0 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3D0 JUMPI POP PUSH2 0x3CF DUP3 PUSH2 0xAE6 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x3E6 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x412 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x434 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x442 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x474 DUP3 PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x4B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AA SWAP1 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F9 DUP3 PUSH2 0x63F JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x560 SWAP1 PUSH2 0x1D74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x588 PUSH2 0xB5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5B7 JUMPI POP PUSH2 0x5B6 DUP2 PUSH2 0x5B1 PUSH2 0xB5D JUMP JUMPDEST PUSH2 0xA52 JUMP JUMPDEST JUMPDEST PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5ED SWAP1 PUSH2 0x1E06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x601 DUP4 DUP4 DUP4 PUSH2 0xB65 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x61A DUP4 DUP4 DUP4 PUSH2 0xC17 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x63A DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x94F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x64A DUP3 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BC SWAP1 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x74C SWAP1 PUSH2 0x1C3F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x778 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x79A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7C5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7A8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7D7 PUSH2 0xB5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83B SWAP1 PUSH2 0x1F04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x851 PUSH2 0xB5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FE PUSH2 0xB5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x943 SWAP2 SWAP1 PUSH2 0x170A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x95A DUP5 DUP5 DUP5 PUSH2 0xC17 JUMP JUMPDEST PUSH2 0x966 DUP5 DUP5 DUP5 DUP5 PUSH2 0x12EF JUMP JUMPDEST PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99C SWAP1 PUSH2 0x1F96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9B6 DUP3 PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x9F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EC SWAP1 PUSH2 0x2028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9FF PUSH2 0x1476 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA4A JUMP JUMPDEST DUP1 PUSH2 0xA29 DUP5 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA3A SWAP3 SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC22 DUP3 PUSH2 0x1155 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC49 PUSH2 0xB5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xCA5 JUMPI POP PUSH2 0xC6E PUSH2 0xB5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC8D DUP5 PUSH2 0x469 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xCC1 JUMPI POP PUSH2 0xCC0 DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0xCBB PUSH2 0xB5D JUMP JUMPDEST PUSH2 0xA52 JUMP JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0xD03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFA SWAP1 PUSH2 0x211A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6C SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDDB SWAP1 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDF1 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0xE01 PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP5 ADD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E5 JUMPI PUSH2 0x1044 DUP2 PUSH2 0xB50 JUMP JUMPDEST ISZERO PUSH2 0x10E4 JUMPI DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x114E DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x15F3 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x115D PUSH2 0x161C JUMP JUMPDEST PUSH2 0x1166 DUP3 PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x11A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119C SWAP1 PUSH2 0x22D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 LT PUSH2 0x12AE JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x129F JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x12EA JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH2 0x11AB JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E1 SWAP1 PUSH2 0x2362 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1310 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15F9 JUMP JUMPDEST ISZERO PUSH2 0x1469 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1339 PUSH2 0xB5D JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1397 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1394 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1419 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13C7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1411 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1408 SWAP1 PUSH2 0x1F96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x146E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x14D4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1506 JUMPI DUP1 DUP1 PUSH2 0x14EF SWAP1 PUSH2 0x2494 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x14FF SWAP2 SWAP1 PUSH2 0x250B JUMP JUMPDEST SWAP2 POP PUSH2 0x14DC JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1522 JUMPI PUSH2 0x1521 PUSH2 0x1A22 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1554 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x15E1 JUMPI PUSH1 0x1 DUP3 PUSH2 0x156D SWAP2 SWAP1 PUSH2 0x253C JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x157C SWAP2 SWAP1 PUSH2 0x2570 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x1588 SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x159E JUMPI PUSH2 0x159D PUSH2 0x25D5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x15DA SWAP2 SWAP1 PUSH2 0x250B JUMP JUMPDEST SWAP5 POP PUSH2 0x1558 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x169F DUP2 PUSH2 0x166A JUMP JUMPDEST DUP2 EQ PUSH2 0x16AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16BC DUP2 PUSH2 0x1696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D8 JUMPI PUSH2 0x16D7 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16E6 DUP5 DUP3 DUP6 ADD PUSH2 0x16AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1704 DUP2 PUSH2 0x16EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x171F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x175F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1787 DUP3 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x1791 DUP2 DUP6 PUSH2 0x1730 JUMP JUMPDEST SWAP4 POP PUSH2 0x17A1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1741 JUMP JUMPDEST PUSH2 0x17AA DUP2 PUSH2 0x176B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17CF DUP2 DUP5 PUSH2 0x177C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17EA DUP2 PUSH2 0x17D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x17F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1807 DUP2 PUSH2 0x17E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1823 JUMPI PUSH2 0x1822 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1831 DUP5 DUP3 DUP6 ADD PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1865 DUP3 PUSH2 0x183A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1875 DUP2 PUSH2 0x185A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1890 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x186C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x189F DUP2 PUSH2 0x185A JUMP JUMPDEST DUP2 EQ PUSH2 0x18AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18BC DUP2 PUSH2 0x1896 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18D9 JUMPI PUSH2 0x18D8 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18E7 DUP6 DUP3 DUP7 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18F8 DUP6 DUP3 DUP7 ADD PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x190B DUP2 PUSH2 0x17D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1926 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1902 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1945 JUMPI PUSH2 0x1944 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1953 DUP7 DUP3 DUP8 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1964 DUP7 DUP3 DUP8 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1975 DUP7 DUP3 DUP8 ADD PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1995 JUMPI PUSH2 0x1994 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A3 DUP5 DUP3 DUP6 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19B5 DUP2 PUSH2 0x16EF JUMP JUMPDEST DUP2 EQ PUSH2 0x19C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19D2 DUP2 PUSH2 0x19AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19EF JUMPI PUSH2 0x19EE PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19FD DUP6 DUP3 DUP7 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A0E DUP6 DUP3 DUP7 ADD PUSH2 0x19C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1A5A DUP3 PUSH2 0x176B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1A79 JUMPI PUSH2 0x1A78 PUSH2 0x1A22 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8C PUSH2 0x1656 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A98 DUP3 DUP3 PUSH2 0x1A51 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AB8 JUMPI PUSH2 0x1AB7 PUSH2 0x1A22 JUMP JUMPDEST JUMPDEST PUSH2 0x1AC1 DUP3 PUSH2 0x176B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF0 PUSH2 0x1AEB DUP5 PUSH2 0x1A9D JUMP JUMPDEST PUSH2 0x1A82 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B0C JUMPI PUSH2 0x1B0B PUSH2 0x1A1D JUMP JUMPDEST JUMPDEST PUSH2 0x1B17 DUP5 DUP3 DUP6 PUSH2 0x1ACE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B34 JUMPI PUSH2 0x1B33 PUSH2 0x1A18 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B44 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1ADD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B67 JUMPI PUSH2 0x1B66 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B75 DUP8 DUP3 DUP9 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1B86 DUP8 DUP3 DUP9 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1B97 DUP8 DUP3 DUP9 ADD PUSH2 0x17F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BB8 JUMPI PUSH2 0x1BB7 PUSH2 0x1665 JUMP JUMPDEST JUMPDEST PUSH2 0x1BC4 DUP8 DUP3 DUP9 ADD PUSH2 0x1B1F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BE7 JUMPI PUSH2 0x1BE6 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BF5 DUP6 DUP3 DUP7 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C06 DUP6 DUP3 DUP7 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C57 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C6A JUMPI PUSH2 0x1C69 PUSH2 0x1C10 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F76656420717565727920666F72206E6F6E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x78697374656E7420746F6B656E00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CCC PUSH1 0x2D DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD7 DUP3 PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CFB DUP2 PUSH2 0x1CBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F76616C20746F2063757272656E74206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5E PUSH1 0x22 DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D69 DUP3 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D8D DUP2 PUSH2 0x1D51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F76652063616C6C6572206973206E6F74206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F76656420666F7220616C6C00000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF0 PUSH1 0x39 DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFB DUP3 PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E1F DUP2 PUSH2 0x1DE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E82 PUSH1 0x2B DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E8D DUP3 PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EB1 DUP2 PUSH2 0x1E75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F766520746F2063616C6C6572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EEE PUSH1 0x1A DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF9 DUP3 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F1D DUP2 PUSH2 0x1EE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E7366657220746F206E6F6E2045524337323152 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6563656976657220696D706C656D656E74657200000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F80 PUSH1 0x33 DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F8B DUP3 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FAF DUP2 PUSH2 0x1F73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2012 PUSH1 0x2F DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x201D DUP3 PUSH2 0x1FB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2041 DUP2 PUSH2 0x2005 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205E DUP3 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x2068 DUP2 DUP6 PUSH2 0x2048 JUMP JUMPDEST SWAP4 POP PUSH2 0x2078 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1741 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2090 DUP3 DUP6 PUSH2 0x2053 JUMP JUMPDEST SWAP2 POP PUSH2 0x209C DUP3 DUP5 PUSH2 0x2053 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2104 PUSH1 0x32 DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x210F DUP3 PUSH2 0x20A8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2133 DUP2 PUSH2 0x20F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E736665722066726F6D20696E636F7272656374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206F776E65720000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2196 PUSH1 0x26 DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x21A1 DUP3 PUSH2 0x213A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21C5 DUP2 PUSH2 0x2189 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2228 PUSH1 0x25 DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x2233 DUP3 PUSH2 0x21CC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2257 DUP2 PUSH2 0x221B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A206F776E657220717565727920666F72206E6F6E65786973 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74656E7420746F6B656E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BA PUSH1 0x2A DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x22C5 DUP3 PUSH2 0x225E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22E9 DUP2 PUSH2 0x22AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20756E61626C6520746F2064657465726D696E6520746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206F776E6572206F6620746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x234C PUSH1 0x2F DUP4 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x2357 DUP3 PUSH2 0x22F0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x237B DUP2 PUSH2 0x233F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A9 DUP3 PUSH2 0x2382 JUMP JUMPDEST PUSH2 0x23B3 DUP2 DUP6 PUSH2 0x238D JUMP JUMPDEST SWAP4 POP PUSH2 0x23C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1741 JUMP JUMPDEST PUSH2 0x23CC DUP2 PUSH2 0x176B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x23EC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x23F9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x2406 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1902 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2418 DUP2 DUP5 PUSH2 0x239E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2432 DUP2 PUSH2 0x1696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x244E JUMPI PUSH2 0x244D PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x245C DUP5 DUP3 DUP6 ADD PUSH2 0x2423 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x249F DUP3 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x24D1 JUMPI PUSH2 0x24D0 PUSH2 0x2465 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2516 DUP3 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2521 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2531 JUMPI PUSH2 0x2530 PUSH2 0x24DC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2547 DUP3 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2552 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x256A JUMPI PUSH2 0x2569 PUSH2 0x2465 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x257B DUP3 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2586 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2596 JUMPI PUSH2 0x2595 PUSH2 0x24DC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25AC DUP3 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x25B7 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x25CF JUMPI PUSH2 0x25CE PUSH2 0x2465 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP RETURN GAS 0xB7 DELEGATECALL CALLCODE SMOD SWAP4 LOG2 0xE6 0xB4 SWAP12 SDIV 0xB2 0xCC 0x4C SMOD 0xF9 RETURNDATACOPY 0x4F DUP13 PUSH24 0x14B28B151B55D573768764736F6C63430008110033000000 ",
							"sourceMap": "961:14197:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2289:293;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4064:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5626:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5147:413;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2126:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6502:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6735:177;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3873:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2646:221;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4233:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5912:288;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6983:355;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4408:335;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6271:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2289:293;2391:4;2439:25;2424:40;;;:11;:40;;;;:101;;;;2492:33;2477:48;;;:11;:48;;;;2424:101;:150;;;;2538:36;2562:11;2538:23;:36::i;:::-;2424:150;2408:166;;2289:293;;;:::o;4064:100::-;4118:13;4151:5;4144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4064:100;:::o;5626:214::-;5694:7;5722:16;5730:7;5722;:16::i;:::-;5714:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;5808:15;:24;5824:7;5808:24;;;;;;;;;;;;;;;;;;;;;5801:31;;5626:214;;;:::o;5147:413::-;5220:13;5236:24;5252:7;5236:15;:24::i;:::-;5220:40;;5285:5;5279:11;;:2;:11;;;5271:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;5380:5;5364:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;5389:37;5406:5;5413:12;:10;:12::i;:::-;5389:16;:37::i;:::-;5364:62;5342:169;;;;;;;;;;;;:::i;:::-;;;;;;;;;5524:28;5533:2;5537:7;5546:5;5524:8;:28::i;:::-;5209:351;5147:413;;:::o;2126:91::-;2170:7;2197:12;;2190:19;;2126:91;:::o;6502:162::-;6628:28;6638:4;6644:2;6648:7;6628:9;:28::i;:::-;6502:162;;;:::o;6735:177::-;6865:39;6882:4;6888:2;6892:7;6865:39;;;;;;;;;;;;:16;:39::i;:::-;6735:177;;;:::o;3873:124::-;3937:7;3964:20;3976:7;3964:11;:20::i;:::-;:25;;;3957:32;;3873:124;;;:::o;2646:221::-;2710:7;2755:1;2738:19;;:5;:19;;;2730:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;2831:12;:19;2844:5;2831:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;2823:36;;2816:43;;2646:221;;;:::o;4233:104::-;4289:13;4322:7;4315:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4233:104;:::o;5912:288::-;6019:12;:10;:12::i;:::-;6007:24;;:8;:24;;;5999:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;6120:8;6075:18;:32;6094:12;:10;:12::i;:::-;6075:32;;;;;;;;;;;;;;;:42;6108:8;6075:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;6173:8;6144:48;;6159:12;:10;:12::i;:::-;6144:48;;;6183:8;6144:48;;;;;;:::i;:::-;;;;;;;;5912:288;;:::o;6983:355::-;7142:28;7152:4;7158:2;7162:7;7142:9;:28::i;:::-;7203:48;7226:4;7232:2;7236:7;7245:5;7203:22;:48::i;:::-;7181:149;;;;;;;;;;;;:::i;:::-;;;;;;;;;6983:355;;;;:::o;4408:335::-;4481:13;4515:16;4523:7;4515;:16::i;:::-;4507:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;4596:21;4620:10;:8;:10::i;:::-;4596:34;;4673:1;4654:7;4648:21;:26;:87;;;;;;;;;;;;;;;;;4701:7;4710:18;:7;:16;:18::i;:::-;4684:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4648:87;4641:94;;;4408:335;;;:::o;6271:164::-;6368:4;6392:18;:25;6411:5;6392:25;;;;;;;;;;;;;;;:35;6418:8;6392:35;;;;;;;;;;;;;;;;;;;;;;;;;6385:42;;6271:164;;;;:::o;829:155:6:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;7593:111:8:-;7650:4;7684:12;;7674:7;:22;7667:29;;7593:111;;;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;12373:196:8:-;12515:2;12488:15;:24;12504:7;12488:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12553:7;12549:2;12533:28;;12542:5;12533:28;;;;;;;;;;;;12373:196;;;:::o;10321:1934::-;10436:35;10474:20;10486:7;10474:11;:20::i;:::-;10436:58;;10507:22;10549:13;:18;;;10533:34;;:12;:10;:12::i;:::-;:34;;;:83;;;;10604:12;:10;:12::i;:::-;10580:36;;:20;10592:7;10580:11;:20::i;:::-;:36;;;10533:83;:146;;;;10629:50;10646:13;:18;;;10666:12;:10;:12::i;:::-;10629:16;:50::i;:::-;10533:146;10507:173;;10701:17;10693:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;10816:4;10794:26;;:13;:18;;;:26;;;10786:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;10896:1;10882:16;;:2;:16;;;10874:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;10953:43;10975:4;10981:2;10985:7;10994:1;10953:21;:43::i;:::-;11061:49;11078:1;11082:7;11091:13;:18;;;11061:8;:49::i;:::-;11428:1;11398:12;:18;11411:4;11398:18;;;;;;;;;;;;;;;:26;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11468:1;11440:12;:16;11453:2;11440:16;;;;;;;;;;;;;;;:24;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11510:2;11482:11;:20;11494:7;11482:20;;;;;;;;;;;:25;;;:30;;;;;;;;;;;;;;;;;;11568:15;11523:11;:20;11535:7;11523:20;;;;;;;;;;;:35;;;:61;;;;;;;;;;;;;;;;;;11824:19;11856:1;11846:7;:11;11824:33;;11913:1;11872:43;;:11;:24;11884:11;11872:24;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;11868:275;;11936:20;11944:11;11936:7;:20::i;:::-;11932:200;;;12009:13;:18;;;11977:11;:24;11989:11;11977:24;;;;;;;;;;;:29;;;:50;;;;;;;;;;;;;;;;;;12088:13;:28;;;12046:11;:24;12058:11;12046:24;;;;;;;;;;;:39;;;:70;;;;;;;;;;;;;;;;;;11932:200;11868:275;11377:773;12186:7;12182:2;12167:27;;12176:4;12167:27;;;;;;;;;;;;12205:42;12226:4;12232:2;12236:7;12245:1;12205:20;:42::i;:::-;10425:1830;;10321:1934;;;:::o;3306:505::-;3367:21;;:::i;:::-;3409:16;3417:7;3409;:16::i;:::-;3401:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3507:12;3522:7;3507:22;;3502:225;3539:1;3531:4;:9;3502:225;;3565:31;3599:11;:17;3611:4;3599:17;;;;;;;;;;;3565:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3661:1;3635:28;;:9;:14;;;:28;;;3631:85;;3691:9;3684:16;;;;;;3631:85;3550:177;3542:6;;;;;;;;3502:225;;;;3746:57;;;;;;;;;;:::i;:::-;;;;;;;;3306:505;;;;:::o;13134:804::-;13289:4;13310:15;:2;:13;;;:15::i;:::-;13306:625;;;13362:2;13346:36;;;13383:12;:10;:12::i;:::-;13397:4;13403:7;13412:5;13346:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;13342:534;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13609:1;13592:6;:13;:18;13588:273;;13635:61;;;;;;;;;;:::i;:::-;;;;;;;;13588:273;13811:6;13805:13;13796:6;13792:2;13788:15;13781:38;13342:534;13479:45;;;13469:55;;;:6;:55;;;;13462:62;;;;;13306:625;13915:4;13908:11;;13134:804;;;;;;;:::o;4991:94::-;5042:13;5068:9;;;;;;;;;;;;;;4991:94;:::o;392:703:5:-;448:13;674:1;665:5;:10;661:51;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;14426:159:8:-;;;;;:::o;14997:158::-;;;;;:::o;1175:320:3:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:118::-;4977:24;4995:5;4977:24;:::i;:::-;4972:3;4965:37;4890:118;;:::o;5014:222::-;5107:4;5145:2;5134:9;5130:18;5122:26;;5158:71;5226:1;5215:9;5211:17;5202:6;5158:71;:::i;:::-;5014:222;;;;:::o;5242:619::-;5319:6;5327;5335;5384:2;5372:9;5363:7;5359:23;5355:32;5352:119;;;5390:79;;:::i;:::-;5352:119;5510:1;5535:53;5580:7;5571:6;5560:9;5556:22;5535:53;:::i;:::-;5525:63;;5481:117;5637:2;5663:53;5708:7;5699:6;5688:9;5684:22;5663:53;:::i;:::-;5653:63;;5608:118;5765:2;5791:53;5836:7;5827:6;5816:9;5812:22;5791:53;:::i;:::-;5781:63;;5736:118;5242:619;;;;;:::o;5867:329::-;5926:6;5975:2;5963:9;5954:7;5950:23;5946:32;5943:119;;;5981:79;;:::i;:::-;5943:119;6101:1;6126:53;6171:7;6162:6;6151:9;6147:22;6126:53;:::i;:::-;6116:63;;6072:117;5867:329;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:232::-;11123:34;11119:1;11111:6;11107:14;11100:58;11192:15;11187:2;11179:6;11175:15;11168:40;10983:232;:::o;11221:366::-;11363:3;11384:67;11448:2;11443:3;11384:67;:::i;:::-;11377:74;;11460:93;11549:3;11460:93;:::i;:::-;11578:2;11573:3;11569:12;11562:19;;11221:366;;;:::o;11593:419::-;11759:4;11797:2;11786:9;11782:18;11774:26;;11846:9;11840:4;11836:20;11832:1;11821:9;11817:17;11810:47;11874:131;12000:4;11874:131;:::i;:::-;11866:139;;11593:419;;;:::o;12018:221::-;12158:34;12154:1;12146:6;12142:14;12135:58;12227:4;12222:2;12214:6;12210:15;12203:29;12018:221;:::o;12245:366::-;12387:3;12408:67;12472:2;12467:3;12408:67;:::i;:::-;12401:74;;12484:93;12573:3;12484:93;:::i;:::-;12602:2;12597:3;12593:12;12586:19;;12245:366;;;:::o;12617:419::-;12783:4;12821:2;12810:9;12806:18;12798:26;;12870:9;12864:4;12860:20;12856:1;12845:9;12841:17;12834:47;12898:131;13024:4;12898:131;:::i;:::-;12890:139;;12617:419;;;:::o;13042:244::-;13182:34;13178:1;13170:6;13166:14;13159:58;13251:27;13246:2;13238:6;13234:15;13227:52;13042:244;:::o;13292:366::-;13434:3;13455:67;13519:2;13514:3;13455:67;:::i;:::-;13448:74;;13531:93;13620:3;13531:93;:::i;:::-;13649:2;13644:3;13640:12;13633:19;;13292:366;;;:::o;13664:419::-;13830:4;13868:2;13857:9;13853:18;13845:26;;13917:9;13911:4;13907:20;13903:1;13892:9;13888:17;13881:47;13945:131;14071:4;13945:131;:::i;:::-;13937:139;;13664:419;;;:::o;14089:230::-;14229:34;14225:1;14217:6;14213:14;14206:58;14298:13;14293:2;14285:6;14281:15;14274:38;14089:230;:::o;14325:366::-;14467:3;14488:67;14552:2;14547:3;14488:67;:::i;:::-;14481:74;;14564:93;14653:3;14564:93;:::i;:::-;14682:2;14677:3;14673:12;14666:19;;14325:366;;;:::o;14697:419::-;14863:4;14901:2;14890:9;14886:18;14878:26;;14950:9;14944:4;14940:20;14936:1;14925:9;14921:17;14914:47;14978:131;15104:4;14978:131;:::i;:::-;14970:139;;14697:419;;;:::o;15122:176::-;15262:28;15258:1;15250:6;15246:14;15239:52;15122:176;:::o;15304:366::-;15446:3;15467:67;15531:2;15526:3;15467:67;:::i;:::-;15460:74;;15543:93;15632:3;15543:93;:::i;:::-;15661:2;15656:3;15652:12;15645:19;;15304:366;;;:::o;15676:419::-;15842:4;15880:2;15869:9;15865:18;15857:26;;15929:9;15923:4;15919:20;15915:1;15904:9;15900:17;15893:47;15957:131;16083:4;15957:131;:::i;:::-;15949:139;;15676:419;;;:::o;16101:238::-;16241:34;16237:1;16229:6;16225:14;16218:58;16310:21;16305:2;16297:6;16293:15;16286:46;16101:238;:::o;16345:366::-;16487:3;16508:67;16572:2;16567:3;16508:67;:::i;:::-;16501:74;;16584:93;16673:3;16584:93;:::i;:::-;16702:2;16697:3;16693:12;16686:19;;16345:366;;;:::o;16717:419::-;16883:4;16921:2;16910:9;16906:18;16898:26;;16970:9;16964:4;16960:20;16956:1;16945:9;16941:17;16934:47;16998:131;17124:4;16998:131;:::i;:::-;16990:139;;16717:419;;;:::o;17142:234::-;17282:34;17278:1;17270:6;17266:14;17259:58;17351:17;17346:2;17338:6;17334:15;17327:42;17142:234;:::o;17382:366::-;17524:3;17545:67;17609:2;17604:3;17545:67;:::i;:::-;17538:74;;17621:93;17710:3;17621:93;:::i;:::-;17739:2;17734:3;17730:12;17723:19;;17382:366;;;:::o;17754:419::-;17920:4;17958:2;17947:9;17943:18;17935:26;;18007:9;18001:4;17997:20;17993:1;17982:9;17978:17;17971:47;18035:131;18161:4;18035:131;:::i;:::-;18027:139;;17754:419;;;:::o;18179:148::-;18281:11;18318:3;18303:18;;18179:148;;;;:::o;18333:390::-;18439:3;18467:39;18500:5;18467:39;:::i;:::-;18522:89;18604:6;18599:3;18522:89;:::i;:::-;18515:96;;18620:65;18678:6;18673:3;18666:4;18659:5;18655:16;18620:65;:::i;:::-;18710:6;18705:3;18701:16;18694:23;;18443:280;18333:390;;;;:::o;18729:435::-;18909:3;18931:95;19022:3;19013:6;18931:95;:::i;:::-;18924:102;;19043:95;19134:3;19125:6;19043:95;:::i;:::-;19036:102;;19155:3;19148:10;;18729:435;;;;;:::o;19170:237::-;19310:34;19306:1;19298:6;19294:14;19287:58;19379:20;19374:2;19366:6;19362:15;19355:45;19170:237;:::o;19413:366::-;19555:3;19576:67;19640:2;19635:3;19576:67;:::i;:::-;19569:74;;19652:93;19741:3;19652:93;:::i;:::-;19770:2;19765:3;19761:12;19754:19;;19413:366;;;:::o;19785:419::-;19951:4;19989:2;19978:9;19974:18;19966:26;;20038:9;20032:4;20028:20;20024:1;20013:9;20009:17;20002:47;20066:131;20192:4;20066:131;:::i;:::-;20058:139;;19785:419;;;:::o;20210:225::-;20350:34;20346:1;20338:6;20334:14;20327:58;20419:8;20414:2;20406:6;20402:15;20395:33;20210:225;:::o;20441:366::-;20583:3;20604:67;20668:2;20663:3;20604:67;:::i;:::-;20597:74;;20680:93;20769:3;20680:93;:::i;:::-;20798:2;20793:3;20789:12;20782:19;;20441:366;;;:::o;20813:419::-;20979:4;21017:2;21006:9;21002:18;20994:26;;21066:9;21060:4;21056:20;21052:1;21041:9;21037:17;21030:47;21094:131;21220:4;21094:131;:::i;:::-;21086:139;;20813:419;;;:::o;21238:224::-;21378:34;21374:1;21366:6;21362:14;21355:58;21447:7;21442:2;21434:6;21430:15;21423:32;21238:224;:::o;21468:366::-;21610:3;21631:67;21695:2;21690:3;21631:67;:::i;:::-;21624:74;;21707:93;21796:3;21707:93;:::i;:::-;21825:2;21820:3;21816:12;21809:19;;21468:366;;;:::o;21840:419::-;22006:4;22044:2;22033:9;22029:18;22021:26;;22093:9;22087:4;22083:20;22079:1;22068:9;22064:17;22057:47;22121:131;22247:4;22121:131;:::i;:::-;22113:139;;21840:419;;;:::o;22265:229::-;22405:34;22401:1;22393:6;22389:14;22382:58;22474:12;22469:2;22461:6;22457:15;22450:37;22265:229;:::o;22500:366::-;22642:3;22663:67;22727:2;22722:3;22663:67;:::i;:::-;22656:74;;22739:93;22828:3;22739:93;:::i;:::-;22857:2;22852:3;22848:12;22841:19;;22500:366;;;:::o;22872:419::-;23038:4;23076:2;23065:9;23061:18;23053:26;;23125:9;23119:4;23115:20;23111:1;23100:9;23096:17;23089:47;23153:131;23279:4;23153:131;:::i;:::-;23145:139;;22872:419;;;:::o;23297:234::-;23437:34;23433:1;23425:6;23421:14;23414:58;23506:17;23501:2;23493:6;23489:15;23482:42;23297:234;:::o;23537:366::-;23679:3;23700:67;23764:2;23759:3;23700:67;:::i;:::-;23693:74;;23776:93;23865:3;23776:93;:::i;:::-;23894:2;23889:3;23885:12;23878:19;;23537:366;;;:::o;23909:419::-;24075:4;24113:2;24102:9;24098:18;24090:26;;24162:9;24156:4;24152:20;24148:1;24137:9;24133:17;24126:47;24190:131;24316:4;24190:131;:::i;:::-;24182:139;;23909:419;;;:::o;24334:98::-;24385:6;24419:5;24413:12;24403:22;;24334:98;;;:::o;24438:168::-;24521:11;24555:6;24550:3;24543:19;24595:4;24590:3;24586:14;24571:29;;24438:168;;;;:::o;24612:373::-;24698:3;24726:38;24758:5;24726:38;:::i;:::-;24780:70;24843:6;24838:3;24780:70;:::i;:::-;24773:77;;24859:65;24917:6;24912:3;24905:4;24898:5;24894:16;24859:65;:::i;:::-;24949:29;24971:6;24949:29;:::i;:::-;24944:3;24940:39;24933:46;;24702:283;24612:373;;;;:::o;24991:640::-;25186:4;25224:3;25213:9;25209:19;25201:27;;25238:71;25306:1;25295:9;25291:17;25282:6;25238:71;:::i;:::-;25319:72;25387:2;25376:9;25372:18;25363:6;25319:72;:::i;:::-;25401;25469:2;25458:9;25454:18;25445:6;25401:72;:::i;:::-;25520:9;25514:4;25510:20;25505:2;25494:9;25490:18;25483:48;25548:76;25619:4;25610:6;25548:76;:::i;:::-;25540:84;;24991:640;;;;;;;:::o;25637:141::-;25693:5;25724:6;25718:13;25709:22;;25740:32;25766:5;25740:32;:::i;:::-;25637:141;;;;:::o;25784:349::-;25853:6;25902:2;25890:9;25881:7;25877:23;25873:32;25870:119;;;25908:79;;:::i;:::-;25870:119;26028:1;26053:63;26108:7;26099:6;26088:9;26084:22;26053:63;:::i;:::-;26043:73;;25999:127;25784:349;;;;:::o;26139:180::-;26187:77;26184:1;26177:88;26284:4;26281:1;26274:15;26308:4;26305:1;26298:15;26325:233;26364:3;26387:24;26405:5;26387:24;:::i;:::-;26378:33;;26433:66;26426:5;26423:77;26420:103;;26503:18;;:::i;:::-;26420:103;26550:1;26543:5;26539:13;26532:20;;26325:233;;;:::o;26564:180::-;26612:77;26609:1;26602:88;26709:4;26706:1;26699:15;26733:4;26730:1;26723:15;26750:185;26790:1;26807:20;26825:1;26807:20;:::i;:::-;26802:25;;26841:20;26859:1;26841:20;:::i;:::-;26836:25;;26880:1;26870:35;;26885:18;;:::i;:::-;26870:35;26927:1;26924;26920:9;26915:14;;26750:185;;;;:::o;26941:194::-;26981:4;27001:20;27019:1;27001:20;:::i;:::-;26996:25;;27035:20;27053:1;27035:20;:::i;:::-;27030:25;;27079:1;27076;27072:9;27064:17;;27103:1;27097:4;27094:11;27091:37;;;27108:18;;:::i;:::-;27091:37;26941:194;;;;:::o;27141:176::-;27173:1;27190:20;27208:1;27190:20;:::i;:::-;27185:25;;27224:20;27242:1;27224:20;:::i;:::-;27219:25;;27263:1;27253:35;;27268:18;;:::i;:::-;27253:35;27309:1;27306;27302:9;27297:14;;27141:176;;;;:::o;27323:191::-;27363:3;27382:20;27400:1;27382:20;:::i;:::-;27377:25;;27416:20;27434:1;27416:20;:::i;:::-;27411:25;;27459:1;27456;27452:9;27445:16;;27480:3;27477:1;27474:10;27471:36;;;27487:18;;:::i;:::-;27471:36;27323:191;;;;:::o;27520:180::-;27568:77;27565:1;27558:88;27665:4;27662:1;27655:15;27689:4;27686:1;27679:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1957200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2969",
								"getApproved(uint256)": "5099",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "797",
								"symbol()": "infinite",
								"tokenURI(uint256)": "3258",
								"totalSupply()": "2482",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "17",
								"_approve(address,uint256,address)": "26292",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "17",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "2134",
								"_mint(address,uint256,bytes memory,bool)": "infinite",
								"_numberMinted(address)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"ownershipOf(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 961,
									"end": 15158,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2002,
									"end": 2118,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2077,
									"end": 2082,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2074,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 2069,
									"end": 2082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2110,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2093,
									"end": 2100,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 2093,
									"end": 2110,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000f35ab7f4f20793a2e6b49b05b2cc4c07f93e4f8c7714b28b151b55d573768764736f6c63430008110033",
									".code": [
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "6352211E"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "A22CB465"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "A22CB465"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "B88D4FDE"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "C87B56DD"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "E985E9C5"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "6352211E"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A7"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "81812FC"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2289,
											"end": 2582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2289,
											"end": 2582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2289,
											"end": 2582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 4064,
											"end": 4164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 4064,
											"end": 4164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 5626,
											"end": 5840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 5626,
											"end": 5840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 5626,
											"end": 5840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 5147,
											"end": 5560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 5147,
											"end": 5560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2126,
											"end": 2217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2126,
											"end": 2217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 6502,
											"end": 6664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 6502,
											"end": 6664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 6735,
											"end": 6912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 6735,
											"end": 6912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3873,
											"end": 3997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 3873,
											"end": 3997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 3873,
											"end": 3997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 2646,
											"end": 2867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2646,
											"end": 2867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2646,
											"end": 2867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 4233,
											"end": 4337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 4233,
											"end": 4337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 5912,
											"end": 6200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 5912,
											"end": 6200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 6983,
											"end": 7338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 6983,
											"end": 7338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 4408,
											"end": 4743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 4408,
											"end": 4743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 4408,
											"end": 4743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 6271,
											"end": 6435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 6271,
											"end": 6435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 6271,
											"end": 6435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2391,
											"end": 2395,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2464,
											"name": "PUSH",
											"source": 8,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2424,
											"end": 2464,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2424,
											"end": 2464,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2464,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2435,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2464,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2424,
											"end": 2464,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2464,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2464,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 2424,
											"end": 2525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2525,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2492,
											"end": 2525,
											"name": "PUSH",
											"source": 8,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2477,
											"end": 2525,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2477,
											"end": 2525,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2525,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2488,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2525,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2477,
											"end": 2525,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2525,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2525,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 2424,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2574,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 2424,
											"end": 2574,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2538,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 2562,
											"end": 2573,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2538,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2538,
											"end": 2574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2538,
											"end": 2574,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 2538,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2574,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 2424,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2408,
											"end": 2574,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2408,
											"end": 2574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4118,
											"end": 4131,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4151,
											"end": 4156,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 4144,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 4144,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 5701,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5722,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 5730,
											"end": 5737,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5722,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 5722,
											"end": 5738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5722,
											"end": 5738,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 5722,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 5714,
											"end": 5788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5823,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5824,
											"end": 5831,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5801,
											"end": 5832,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5801,
											"end": 5832,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5220,
											"end": 5233,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5236,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 5252,
											"end": 5259,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5236,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 5236,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5236,
											"end": 5260,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 5236,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5220,
											"end": 5260,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5220,
											"end": 5260,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5285,
											"end": 5290,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5290,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5279,
											"end": 5290,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5281,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5290,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5279,
											"end": 5290,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5279,
											"end": 5290,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 5271,
											"end": 5329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5380,
											"end": 5385,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5364,
											"end": 5385,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5364,
											"end": 5385,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5364,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 5364,
											"end": 5374,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 5364,
											"end": 5376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5364,
											"end": 5376,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 5364,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5364,
											"end": 5385,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5364,
											"end": 5385,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5364,
											"end": 5385,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5364,
											"end": 5426,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5364,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 5364,
											"end": 5426,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5364,
											"end": 5426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 5406,
											"end": 5411,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 5413,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 5413,
											"end": 5425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5425,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 5413,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 5389,
											"end": 5426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5364,
											"end": 5426,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 5364,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 5342,
											"end": 5511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5524,
											"end": 5552,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 5533,
											"end": 5535,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5546,
											"end": 5551,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5524,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 5524,
											"end": 5552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5524,
											"end": 5552,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 5524,
											"end": 5552,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5209,
											"end": 5560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2177,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2209,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6628,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 6638,
											"end": 6642,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6648,
											"end": 6655,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6628,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 6628,
											"end": 6656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6628,
											"end": 6656,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 6628,
											"end": 6656,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 6882,
											"end": 6886,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6888,
											"end": 6890,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6892,
											"end": 6899,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 6865,
											"end": 6904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 3976,
											"end": 3983,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 3964,
											"end": 3984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 3989,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3989,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 3989,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3957,
											"end": 3989,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3957,
											"end": 3989,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2710,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2756,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2738,
											"end": 2757,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2738,
											"end": 2757,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2738,
											"end": 2743,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2738,
											"end": 2757,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2738,
											"end": 2757,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2738,
											"end": 2757,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 2730,
											"end": 2805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2831,
											"end": 2843,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2844,
											"end": 2849,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2831,
											"end": 2858,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2831,
											"end": 2858,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2858,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2831,
											"end": 2858,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2831,
											"end": 2858,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2831,
											"end": 2858,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2831,
											"end": 2858,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2831,
											"end": 2858,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2831,
											"end": 2858,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2831,
											"end": 2858,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2831,
											"end": 2858,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 2859,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2859,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4302,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4322,
											"end": 4329,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 4315,
											"end": 4329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 4315,
											"end": 4329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4233,
											"end": 4337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6019,
											"end": 6031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 6019,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 6019,
											"end": 6031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6019,
											"end": 6031,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 6019,
											"end": 6031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6007,
											"end": 6015,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 5999,
											"end": 6062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6120,
											"end": 6128,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6093,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 6094,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 6094,
											"end": 6106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6094,
											"end": 6106,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 6094,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6108,
											"end": 6116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6173,
											"end": 6181,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 6159,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 6159,
											"end": 6171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6171,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 6159,
											"end": 6171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "PUSH",
											"source": 8,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 6183,
											"end": 6191,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 6144,
											"end": 6192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 6200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7142,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 7152,
											"end": 7156,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7158,
											"end": 7160,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7162,
											"end": 7169,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7142,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 7142,
											"end": 7170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7142,
											"end": 7170,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 7142,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7203,
											"end": 7251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 7226,
											"end": 7230,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7232,
											"end": 7234,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7236,
											"end": 7243,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7245,
											"end": 7250,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7203,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 7203,
											"end": 7251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7203,
											"end": 7251,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 7203,
											"end": 7251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 7181,
											"end": 7330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4481,
											"end": 4494,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4515,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 4523,
											"end": 4530,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 4515,
											"end": 4531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4531,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 4515,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 4507,
											"end": 4583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4617,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 4620,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 4620,
											"end": 4630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4630,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 4620,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4630,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4674,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4654,
											"end": 4661,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4648,
											"end": 4669,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4648,
											"end": 4674,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4701,
											"end": 4708,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4710,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 4710,
											"end": 4717,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4710,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 4710,
											"end": 4728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4710,
											"end": 4728,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 4710,
											"end": 4728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 4684,
											"end": 4729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4641,
											"end": 4735,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4641,
											"end": 4735,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4641,
											"end": 4735,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6372,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6410,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6418,
											"end": 6426,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7593,
											"end": 7704,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 7593,
											"end": 7704,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7650,
											"end": 7654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7674,
											"end": 7681,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7674,
											"end": 7696,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7667,
											"end": 7696,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7667,
											"end": 7696,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7593,
											"end": 7704,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7593,
											"end": 7704,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7593,
											"end": 7704,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7593,
											"end": 7704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12373,
											"end": 12569,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 12373,
											"end": 12569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12515,
											"end": 12517,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12503,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12504,
											"end": 12511,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12553,
											"end": 12560,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12549,
											"end": 12551,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12542,
											"end": 12547,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "PUSH",
											"source": 8,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": 12373,
											"end": 12569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12373,
											"end": 12569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12373,
											"end": 12569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12373,
											"end": 12569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 12255,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 10321,
											"end": 12255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10436,
											"end": 10471,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10474,
											"end": 10494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 10486,
											"end": 10493,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10474,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 10474,
											"end": 10494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10474,
											"end": 10494,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 10474,
											"end": 10494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10436,
											"end": 10494,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10436,
											"end": 10494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10507,
											"end": 10529,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10549,
											"end": 10562,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10549,
											"end": 10567,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10549,
											"end": 10567,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10549,
											"end": 10567,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10533,
											"end": 10567,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10533,
											"end": 10567,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10533,
											"end": 10545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 10533,
											"end": 10543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 10533,
											"end": 10545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10533,
											"end": 10545,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 10533,
											"end": 10545,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10533,
											"end": 10567,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10533,
											"end": 10567,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10533,
											"end": 10567,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10533,
											"end": 10616,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10533,
											"end": 10616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 10533,
											"end": 10616,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10533,
											"end": 10616,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10604,
											"end": 10616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 10604,
											"end": 10614,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 10604,
											"end": 10616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10604,
											"end": 10616,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 10604,
											"end": 10616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10580,
											"end": 10600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 10592,
											"end": 10599,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10580,
											"end": 10591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 10580,
											"end": 10600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10580,
											"end": 10600,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 10580,
											"end": 10600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10533,
											"end": 10616,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 10533,
											"end": 10616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10533,
											"end": 10679,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10533,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 10533,
											"end": 10679,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10533,
											"end": 10679,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10629,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 10646,
											"end": 10659,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10666,
											"end": 10678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 10666,
											"end": 10676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 10666,
											"end": 10678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10666,
											"end": 10678,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 10666,
											"end": 10678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10629,
											"end": 10645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 10629,
											"end": 10679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10629,
											"end": 10679,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 10629,
											"end": 10679,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10533,
											"end": 10679,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 10533,
											"end": 10679,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10507,
											"end": 10680,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10507,
											"end": 10680,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10701,
											"end": 10718,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 10693,
											"end": 10773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10816,
											"end": 10820,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10794,
											"end": 10820,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10794,
											"end": 10820,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10794,
											"end": 10807,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10794,
											"end": 10812,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10794,
											"end": 10812,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10794,
											"end": 10812,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10794,
											"end": 10820,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10794,
											"end": 10820,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10794,
											"end": 10820,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 10786,
											"end": 10863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10896,
											"end": 10897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10882,
											"end": 10898,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10882,
											"end": 10898,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10882,
											"end": 10884,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10882,
											"end": 10898,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10882,
											"end": 10898,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10882,
											"end": 10898,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 10874,
											"end": 10940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 10975,
											"end": 10979,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10981,
											"end": 10983,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10985,
											"end": 10992,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10994,
											"end": 10995,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10953,
											"end": 10974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 10953,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 10996,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 10953,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11061,
											"end": 11110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 11078,
											"end": 11079,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11082,
											"end": 11089,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11091,
											"end": 11104,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11091,
											"end": 11109,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11091,
											"end": 11109,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11091,
											"end": 11109,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11061,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 11061,
											"end": 11110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11061,
											"end": 11110,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 11061,
											"end": 11110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11428,
											"end": 11429,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 11398,
											"end": 11410,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11411,
											"end": 11415,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11424,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11398,
											"end": 11424,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11424,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11468,
											"end": 11469,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 11440,
											"end": 11452,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11453,
											"end": 11455,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11464,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11440,
											"end": 11464,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11464,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11510,
											"end": 11512,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11493,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11494,
											"end": 11501,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11507,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11482,
											"end": 11507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11507,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11568,
											"end": 11583,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11534,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 11523,
											"end": 11543,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11535,
											"end": 11542,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11543,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11543,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11543,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11523,
											"end": 11543,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11543,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11543,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11543,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11543,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11523,
											"end": 11543,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11543,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11523,
											"end": 11543,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11558,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11523,
											"end": 11558,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11558,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11824,
											"end": 11843,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11856,
											"end": 11857,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 11846,
											"end": 11853,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11846,
											"end": 11857,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11824,
											"end": 11857,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11824,
											"end": 11857,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11913,
											"end": 11914,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11872,
											"end": 11915,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11872,
											"end": 11915,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 11883,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11884,
											"end": 11895,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 11901,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11872,
											"end": 11901,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 11901,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11872,
											"end": 11901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 11901,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 11901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 11901,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 11872,
											"end": 11901,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 11901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 11901,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 11901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11872,
											"end": 11901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 11915,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11872,
											"end": 11915,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 11915,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11868,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 11868,
											"end": 12143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11936,
											"end": 11956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 11944,
											"end": 11955,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11936,
											"end": 11943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 11936,
											"end": 11956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11936,
											"end": 11956,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 11936,
											"end": 11956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11932,
											"end": 12132,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11932,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 11932,
											"end": 12132,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12022,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12027,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12009,
											"end": 12027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12027,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 11988,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11989,
											"end": 12000,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12006,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11977,
											"end": 12006,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12006,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12088,
											"end": 12101,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12088,
											"end": 12116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12088,
											"end": 12116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12088,
											"end": 12116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12057,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 12046,
											"end": 12070,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12058,
											"end": 12069,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12070,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12070,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12070,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12046,
											"end": 12070,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12070,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12070,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12070,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12046,
											"end": 12070,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12070,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12046,
											"end": 12070,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12085,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12046,
											"end": 12085,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12085,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11932,
											"end": 12132,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 11932,
											"end": 12132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11868,
											"end": 12143,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 11868,
											"end": 12143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11377,
											"end": 12150,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12186,
											"end": 12193,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12182,
											"end": 12184,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12176,
											"end": 12180,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "PUSH",
											"source": 8,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": 12205,
											"end": 12247,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 12226,
											"end": 12230,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12232,
											"end": 12234,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12236,
											"end": 12243,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12245,
											"end": 12246,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 12205,
											"end": 12225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 12205,
											"end": 12247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12205,
											"end": 12247,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 12205,
											"end": 12247,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 12255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10425,
											"end": 12255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 12255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 12255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 12255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 12255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3811,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 3306,
											"end": 3811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3367,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 3367,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 3367,
											"end": 3388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3367,
											"end": 3388,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 3367,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3417,
											"end": 3424,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 3409,
											"end": 3425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 3401,
											"end": 3472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3519,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3522,
											"end": 3529,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3529,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3502,
											"end": 3727,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 3502,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3535,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3531,
											"end": 3540,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3502,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 3502,
											"end": 3727,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3596,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3610,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3611,
											"end": 3615,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3635,
											"end": 3663,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3635,
											"end": 3663,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3635,
											"end": 3644,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3635,
											"end": 3649,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3635,
											"end": 3649,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3635,
											"end": 3649,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3635,
											"end": 3663,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3635,
											"end": 3663,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3635,
											"end": 3663,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3631,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3631,
											"end": 3716,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3700,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3631,
											"end": 3716,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3631,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3550,
											"end": 3727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3548,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3548,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3548,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3542,
											"end": 3548,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3548,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3548,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3548,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3548,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3502,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 3502,
											"end": 3727,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3502,
											"end": 3727,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 3502,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3502,
											"end": 3727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3803,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3746,
											"end": 3803,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3803,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3746,
											"end": 3803,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3803,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3803,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3746,
											"end": 3803,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3746,
											"end": 3803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 3746,
											"end": 3803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3803,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3746,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3803,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3746,
											"end": 3803,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3803,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3803,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3803,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3811,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 3306,
											"end": 3811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3811,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3811,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3811,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13289,
											"end": 13293,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13310,
											"end": 13325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 13310,
											"end": 13312,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13310,
											"end": 13323,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13310,
											"end": 13323,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13310,
											"end": 13323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 13310,
											"end": 13325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13310,
											"end": 13325,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 13310,
											"end": 13325,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13306,
											"end": 13931,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13306,
											"end": 13931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 13306,
											"end": 13931,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13362,
											"end": 13364,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13382,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13346,
											"end": 13382,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13382,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 13383,
											"end": 13395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 13383,
											"end": 13393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 13383,
											"end": 13395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13383,
											"end": 13395,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 13383,
											"end": 13395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13397,
											"end": 13401,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13410,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13412,
											"end": 13417,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 13346,
											"end": 13418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 13346,
											"end": 13418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13609,
											"end": 13610,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13592,
											"end": 13598,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13592,
											"end": 13605,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13592,
											"end": 13610,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13588,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 13588,
											"end": 13861,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 13635,
											"end": 13696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13588,
											"end": 13861,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 13588,
											"end": 13861,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13811,
											"end": 13817,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13805,
											"end": 13818,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13796,
											"end": 13802,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13792,
											"end": 13794,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13788,
											"end": 13803,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13781,
											"end": 13819,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13479,
											"end": 13524,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 13479,
											"end": 13524,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 13479,
											"end": 13524,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13469,
											"end": 13475,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 13462,
											"end": 13524,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13462,
											"end": 13524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13462,
											"end": 13524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13462,
											"end": 13524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 13462,
											"end": 13524,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13306,
											"end": 13931,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 13306,
											"end": 13931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13915,
											"end": 13919,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 13908,
											"end": 13919,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13908,
											"end": 13919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13134,
											"end": 13938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4991,
											"end": 5085,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 4991,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5055,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4991,
											"end": 5085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4991,
											"end": 5085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 448,
											"end": 461,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 674,
											"end": 675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 665,
											"end": 675,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 661,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 661,
											"end": 712,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 721,
											"end": 733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 721,
											"end": 741,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 721,
											"end": 741,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 751,
											"end": 765,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 790,
											"end": 791,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 786,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 782,
											"end": 791,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 775,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 807,
											"end": 815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 837,
											"end": 839,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 829,
											"end": 839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 850,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 859,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 897,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 881,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 859,
											"end": 898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 859,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 920,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 915,
											"end": 925,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 951,
											"end": 952,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 941,
											"end": 952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1019,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 1009,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 996,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1022,
											"name": "PUSH",
											"source": 5,
											"value": "F8"
										},
										{
											"begin": 983,
											"end": 1022,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 966,
											"end": 972,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 973,
											"end": 979,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 966,
											"end": 980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1047,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 1036,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1087,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14426,
											"end": 14585,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 14426,
											"end": 14585,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14426,
											"end": 14585,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14426,
											"end": 14585,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14426,
											"end": 14585,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14426,
											"end": 14585,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14426,
											"end": 14585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14997,
											"end": 15155,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 14997,
											"end": 15155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14997,
											"end": 15155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14997,
											"end": 15155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14997,
											"end": 15155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14997,
											"end": 15155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14997,
											"end": 15155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "192"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 4995,
											"end": 5000,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 4977,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4972,
											"end": 4975,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4890,
											"end": 5008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5147,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5134,
											"end": 5143,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5130,
											"end": 5148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 5226,
											"end": 5227,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5211,
											"end": 5228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5202,
											"end": 5208,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 5158,
											"end": 5229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5014,
											"end": 5236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5319,
											"end": 5325,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5333,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5335,
											"end": 5341,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5386,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5372,
											"end": 5381,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5363,
											"end": 5370,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5359,
											"end": 5382,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5355,
											"end": 5387,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 5390,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5510,
											"end": 5511,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 5580,
											"end": 5587,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5571,
											"end": 5577,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5556,
											"end": 5578,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 5535,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5481,
											"end": 5598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5637,
											"end": 5639,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 5708,
											"end": 5715,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5699,
											"end": 5705,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5697,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5706,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 5663,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5608,
											"end": 5726,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 5836,
											"end": 5843,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5816,
											"end": 5825,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5812,
											"end": 5834,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 5791,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5736,
											"end": 5854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5926,
											"end": 5932,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5977,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5972,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5954,
											"end": 5961,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5946,
											"end": 5978,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 5981,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 6171,
											"end": 6178,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6151,
											"end": 6160,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6169,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 6126,
											"end": 6179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6189,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5867,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10116,
											"end": 10118,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10091,
											"end": 10114,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10087,
											"end": 10119,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 10122,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 10267,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10213,
											"end": 10330,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 10395,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10340,
											"end": 10458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9991,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10519,
											"end": 10596,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10597,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10637,
											"end": 10638,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10645,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10728,
											"end": 10740,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 10854,
											"end": 10860,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10913,
											"end": 10927,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 10943,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10708,
											"end": 10977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10657,
											"end": 10977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10983,
											"end": 11215,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 10983,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11123,
											"end": 11157,
											"name": "PUSH",
											"source": 9,
											"value": "455243373231413A20617070726F76656420717565727920666F72206E6F6E65"
										},
										{
											"begin": 11119,
											"end": 11120,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11117,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11107,
											"end": 11121,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11100,
											"end": 11158,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11192,
											"end": 11207,
											"name": "PUSH",
											"source": 9,
											"value": "78697374656E7420746F6B656E00000000000000000000000000000000000000"
										},
										{
											"begin": 11187,
											"end": 11189,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11179,
											"end": 11185,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11175,
											"end": 11190,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11168,
											"end": 11208,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10983,
											"end": 11215,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10983,
											"end": 11215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11221,
											"end": 11587,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 11221,
											"end": 11587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11363,
											"end": 11366,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11384,
											"end": 11451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 11448,
											"end": 11450,
											"name": "PUSH",
											"source": 9,
											"value": "2D"
										},
										{
											"begin": 11443,
											"end": 11446,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11384,
											"end": 11451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 11384,
											"end": 11451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11384,
											"end": 11451,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 11384,
											"end": 11451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11377,
											"end": 11451,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11377,
											"end": 11451,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11460,
											"end": 11553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 11549,
											"end": 11552,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11460,
											"end": 11553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 11460,
											"end": 11553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11460,
											"end": 11553,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 11460,
											"end": 11553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11580,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11573,
											"end": 11576,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11569,
											"end": 11581,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11581,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11581,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11221,
											"end": 11587,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11221,
											"end": 11587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11221,
											"end": 11587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11221,
											"end": 11587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11593,
											"end": 12012,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 11593,
											"end": 12012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11759,
											"end": 11763,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11797,
											"end": 11799,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11786,
											"end": 11795,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11782,
											"end": 11800,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11774,
											"end": 11800,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11774,
											"end": 11800,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11855,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11840,
											"end": 11844,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11836,
											"end": 11856,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11832,
											"end": 11833,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11821,
											"end": 11830,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11817,
											"end": 11834,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11810,
											"end": 11857,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11874,
											"end": 12005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 12000,
											"end": 12004,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11874,
											"end": 12005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 11874,
											"end": 12005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11874,
											"end": 12005,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 11874,
											"end": 12005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11866,
											"end": 12005,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11866,
											"end": 12005,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11593,
											"end": 12012,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11593,
											"end": 12012,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11593,
											"end": 12012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11593,
											"end": 12012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12018,
											"end": 12239,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 12018,
											"end": 12239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12158,
											"end": 12192,
											"name": "PUSH",
											"source": 9,
											"value": "455243373231413A20617070726F76616C20746F2063757272656E74206F776E"
										},
										{
											"begin": 12154,
											"end": 12155,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12146,
											"end": 12152,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12142,
											"end": 12156,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12135,
											"end": 12193,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12227,
											"end": 12231,
											"name": "PUSH",
											"source": 9,
											"value": "6572000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12222,
											"end": 12224,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12214,
											"end": 12220,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12210,
											"end": 12225,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12203,
											"end": 12232,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12018,
											"end": 12239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12018,
											"end": 12239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12245,
											"end": 12611,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 12245,
											"end": 12611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12387,
											"end": 12390,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12408,
											"end": 12475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 12472,
											"end": 12474,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 12467,
											"end": 12470,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12408,
											"end": 12475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 12408,
											"end": 12475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12408,
											"end": 12475,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 12408,
											"end": 12475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12401,
											"end": 12475,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12401,
											"end": 12475,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12484,
											"end": 12577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 12573,
											"end": 12576,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12484,
											"end": 12577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 12484,
											"end": 12577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12484,
											"end": 12577,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 12484,
											"end": 12577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12602,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12597,
											"end": 12600,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12593,
											"end": 12605,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12586,
											"end": 12605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12586,
											"end": 12605,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12245,
											"end": 12611,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12245,
											"end": 12611,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12245,
											"end": 12611,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12245,
											"end": 12611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12617,
											"end": 13036,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 12617,
											"end": 13036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12783,
											"end": 12787,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12821,
											"end": 12823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12810,
											"end": 12819,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12806,
											"end": 12824,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12798,
											"end": 12824,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12798,
											"end": 12824,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12870,
											"end": 12879,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12864,
											"end": 12868,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12860,
											"end": 12880,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12856,
											"end": 12857,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12845,
											"end": 12854,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12841,
											"end": 12858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12834,
											"end": 12881,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12898,
											"end": 13029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 13024,
											"end": 13028,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12898,
											"end": 13029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 12898,
											"end": 13029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12898,
											"end": 13029,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 12898,
											"end": 13029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12890,
											"end": 13029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12890,
											"end": 13029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12617,
											"end": 13036,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12617,
											"end": 13036,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12617,
											"end": 13036,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12617,
											"end": 13036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13042,
											"end": 13286,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 13042,
											"end": 13286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13182,
											"end": 13216,
											"name": "PUSH",
											"source": 9,
											"value": "455243373231413A20617070726F76652063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 13178,
											"end": 13179,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13170,
											"end": 13176,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13166,
											"end": 13180,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13159,
											"end": 13217,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13251,
											"end": 13278,
											"name": "PUSH",
											"source": 9,
											"value": "776E6572206E6F7220617070726F76656420666F7220616C6C00000000000000"
										},
										{
											"begin": 13246,
											"end": 13248,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13238,
											"end": 13244,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13234,
											"end": 13249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13227,
											"end": 13279,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13042,
											"end": 13286,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13042,
											"end": 13286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13292,
											"end": 13658,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 13292,
											"end": 13658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13434,
											"end": 13437,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13455,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 13519,
											"end": 13521,
											"name": "PUSH",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 13514,
											"end": 13517,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13455,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 13455,
											"end": 13522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13455,
											"end": 13522,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 13455,
											"end": 13522,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13448,
											"end": 13522,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13448,
											"end": 13522,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13531,
											"end": 13624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 13620,
											"end": 13623,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13531,
											"end": 13624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 13531,
											"end": 13624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13531,
											"end": 13624,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 13531,
											"end": 13624,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13649,
											"end": 13651,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13644,
											"end": 13647,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13640,
											"end": 13652,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13633,
											"end": 13652,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13633,
											"end": 13652,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13292,
											"end": 13658,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13292,
											"end": 13658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13292,
											"end": 13658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13292,
											"end": 13658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13664,
											"end": 14083,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 13664,
											"end": 14083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13830,
											"end": 13834,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13868,
											"end": 13870,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13857,
											"end": 13866,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13853,
											"end": 13871,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13845,
											"end": 13871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13845,
											"end": 13871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13917,
											"end": 13926,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13911,
											"end": 13915,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13907,
											"end": 13927,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13903,
											"end": 13904,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13892,
											"end": 13901,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13888,
											"end": 13905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13881,
											"end": 13928,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13945,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13945,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 13945,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13945,
											"end": 14076,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 13945,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13937,
											"end": 14076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13937,
											"end": 14076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13664,
											"end": 14083,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13664,
											"end": 14083,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13664,
											"end": 14083,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13664,
											"end": 14083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14089,
											"end": 14319,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 14089,
											"end": 14319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14229,
											"end": 14263,
											"name": "PUSH",
											"source": 9,
											"value": "455243373231413A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 14225,
											"end": 14226,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14217,
											"end": 14223,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14213,
											"end": 14227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14206,
											"end": 14264,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14298,
											"end": 14311,
											"name": "PUSH",
											"source": 9,
											"value": "65726F2061646472657373000000000000000000000000000000000000000000"
										},
										{
											"begin": 14293,
											"end": 14295,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14285,
											"end": 14291,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14281,
											"end": 14296,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14274,
											"end": 14312,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14089,
											"end": 14319,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14089,
											"end": 14319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14325,
											"end": 14691,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 14325,
											"end": 14691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14467,
											"end": 14470,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14488,
											"end": 14555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 14552,
											"end": 14554,
											"name": "PUSH",
											"source": 9,
											"value": "2B"
										},
										{
											"begin": 14547,
											"end": 14550,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14488,
											"end": 14555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 14488,
											"end": 14555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14488,
											"end": 14555,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 14488,
											"end": 14555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14481,
											"end": 14555,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14481,
											"end": 14555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14564,
											"end": 14657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 14653,
											"end": 14656,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14564,
											"end": 14657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 14564,
											"end": 14657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14564,
											"end": 14657,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 14564,
											"end": 14657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14682,
											"end": 14684,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14677,
											"end": 14680,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14673,
											"end": 14685,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14666,
											"end": 14685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14666,
											"end": 14685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14325,
											"end": 14691,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14325,
											"end": 14691,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14325,
											"end": 14691,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14325,
											"end": 14691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14697,
											"end": 15116,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 14697,
											"end": 15116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14863,
											"end": 14867,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14901,
											"end": 14903,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14890,
											"end": 14899,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14886,
											"end": 14904,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14878,
											"end": 14904,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14878,
											"end": 14904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14950,
											"end": 14959,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14944,
											"end": 14948,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14940,
											"end": 14960,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14936,
											"end": 14937,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14925,
											"end": 14934,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14921,
											"end": 14938,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14914,
											"end": 14961,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14978,
											"end": 15109,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 15104,
											"end": 15108,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14978,
											"end": 15109,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 14978,
											"end": 15109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14978,
											"end": 15109,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 14978,
											"end": 15109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14970,
											"end": 15109,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14970,
											"end": 15109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14697,
											"end": 15116,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14697,
											"end": 15116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14697,
											"end": 15116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14697,
											"end": 15116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15122,
											"end": 15298,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 15122,
											"end": 15298,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15262,
											"end": 15290,
											"name": "PUSH",
											"source": 9,
											"value": "455243373231413A20617070726F766520746F2063616C6C6572000000000000"
										},
										{
											"begin": 15258,
											"end": 15259,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15250,
											"end": 15256,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15246,
											"end": 15260,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15239,
											"end": 15291,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15122,
											"end": 15298,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15122,
											"end": 15298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15304,
											"end": 15670,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 15304,
											"end": 15670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15446,
											"end": 15449,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15467,
											"end": 15534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 15531,
											"end": 15533,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 15526,
											"end": 15529,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15467,
											"end": 15534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 15467,
											"end": 15534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15467,
											"end": 15534,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 15467,
											"end": 15534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15460,
											"end": 15534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15460,
											"end": 15534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15543,
											"end": 15636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 15632,
											"end": 15635,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15543,
											"end": 15636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 15543,
											"end": 15636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15543,
											"end": 15636,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 15543,
											"end": 15636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15661,
											"end": 15663,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15656,
											"end": 15659,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15652,
											"end": 15664,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15645,
											"end": 15664,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15645,
											"end": 15664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15304,
											"end": 15670,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15304,
											"end": 15670,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15304,
											"end": 15670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15304,
											"end": 15670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15676,
											"end": 16095,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 15676,
											"end": 16095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15842,
											"end": 15846,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15880,
											"end": 15882,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15869,
											"end": 15878,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15865,
											"end": 15883,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15857,
											"end": 15883,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15857,
											"end": 15883,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15929,
											"end": 15938,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15923,
											"end": 15927,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15919,
											"end": 15939,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15915,
											"end": 15916,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15904,
											"end": 15913,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15900,
											"end": 15917,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15893,
											"end": 15940,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15957,
											"end": 16088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 16083,
											"end": 16087,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15957,
											"end": 16088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 15957,
											"end": 16088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15957,
											"end": 16088,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 15957,
											"end": 16088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15949,
											"end": 16088,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15949,
											"end": 16088,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15676,
											"end": 16095,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15676,
											"end": 16095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15676,
											"end": 16095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15676,
											"end": 16095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16101,
											"end": 16339,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 16101,
											"end": 16339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16241,
											"end": 16275,
											"name": "PUSH",
											"source": 9,
											"value": "455243373231413A207472616E7366657220746F206E6F6E2045524337323152"
										},
										{
											"begin": 16237,
											"end": 16238,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16229,
											"end": 16235,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16225,
											"end": 16239,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16218,
											"end": 16276,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16310,
											"end": 16331,
											"name": "PUSH",
											"source": 9,
											"value": "6563656976657220696D706C656D656E74657200000000000000000000000000"
										},
										{
											"begin": 16305,
											"end": 16307,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16297,
											"end": 16303,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16293,
											"end": 16308,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16286,
											"end": 16332,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16101,
											"end": 16339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16101,
											"end": 16339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16345,
											"end": 16711,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 16345,
											"end": 16711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16487,
											"end": 16490,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16508,
											"end": 16575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 16572,
											"end": 16574,
											"name": "PUSH",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 16567,
											"end": 16570,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16508,
											"end": 16575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 16508,
											"end": 16575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16508,
											"end": 16575,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 16508,
											"end": 16575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16501,
											"end": 16575,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16501,
											"end": 16575,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16584,
											"end": 16677,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 16673,
											"end": 16676,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16584,
											"end": 16677,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 16584,
											"end": 16677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16584,
											"end": 16677,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 16584,
											"end": 16677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16702,
											"end": 16704,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16697,
											"end": 16700,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16693,
											"end": 16705,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16686,
											"end": 16705,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16686,
											"end": 16705,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16345,
											"end": 16711,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16345,
											"end": 16711,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16345,
											"end": 16711,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16345,
											"end": 16711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16717,
											"end": 17136,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 16717,
											"end": 17136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16883,
											"end": 16887,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16921,
											"end": 16923,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16910,
											"end": 16919,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16906,
											"end": 16924,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16898,
											"end": 16924,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16898,
											"end": 16924,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 16979,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16964,
											"end": 16968,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16960,
											"end": 16980,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16956,
											"end": 16957,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16945,
											"end": 16954,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16941,
											"end": 16958,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16934,
											"end": 16981,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16998,
											"end": 17129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 17124,
											"end": 17128,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16998,
											"end": 17129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 16998,
											"end": 17129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16998,
											"end": 17129,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 16998,
											"end": 17129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16990,
											"end": 17129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16990,
											"end": 17129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16717,
											"end": 17136,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16717,
											"end": 17136,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16717,
											"end": 17136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16717,
											"end": 17136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17142,
											"end": 17376,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 17142,
											"end": 17376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17282,
											"end": 17316,
											"name": "PUSH",
											"source": 9,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 17278,
											"end": 17279,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17270,
											"end": 17276,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17266,
											"end": 17280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17259,
											"end": 17317,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17351,
											"end": 17368,
											"name": "PUSH",
											"source": 9,
											"value": "6E6578697374656E7420746F6B656E0000000000000000000000000000000000"
										},
										{
											"begin": 17346,
											"end": 17348,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17338,
											"end": 17344,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17334,
											"end": 17349,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17327,
											"end": 17369,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17142,
											"end": 17376,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17142,
											"end": 17376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17382,
											"end": 17748,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 17382,
											"end": 17748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17524,
											"end": 17527,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17545,
											"end": 17612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 17609,
											"end": 17611,
											"name": "PUSH",
											"source": 9,
											"value": "2F"
										},
										{
											"begin": 17604,
											"end": 17607,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17545,
											"end": 17612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 17545,
											"end": 17612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17545,
											"end": 17612,
											"name": "tag",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 17545,
											"end": 17612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17538,
											"end": 17612,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17538,
											"end": 17612,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17621,
											"end": 17714,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 17710,
											"end": 17713,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17621,
											"end": 17714,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 17621,
											"end": 17714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17621,
											"end": 17714,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 17621,
											"end": 17714,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17739,
											"end": 17741,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17734,
											"end": 17737,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17730,
											"end": 17742,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17723,
											"end": 17742,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17723,
											"end": 17742,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17382,
											"end": 17748,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17382,
											"end": 17748,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17382,
											"end": 17748,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17382,
											"end": 17748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17754,
											"end": 18173,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 17754,
											"end": 18173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17920,
											"end": 17924,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17958,
											"end": 17960,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17947,
											"end": 17956,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17943,
											"end": 17961,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17935,
											"end": 17961,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17935,
											"end": 17961,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18007,
											"end": 18016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18001,
											"end": 18005,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17997,
											"end": 18017,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17993,
											"end": 17994,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17982,
											"end": 17991,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17978,
											"end": 17995,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17971,
											"end": 18018,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18035,
											"end": 18166,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 18161,
											"end": 18165,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18035,
											"end": 18166,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 18035,
											"end": 18166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18035,
											"end": 18166,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 18035,
											"end": 18166,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18027,
											"end": 18166,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18027,
											"end": 18166,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17754,
											"end": 18173,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17754,
											"end": 18173,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17754,
											"end": 18173,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17754,
											"end": 18173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18179,
											"end": 18327,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 18179,
											"end": 18327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18281,
											"end": 18292,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18318,
											"end": 18321,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18303,
											"end": 18321,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18303,
											"end": 18321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18179,
											"end": 18327,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18179,
											"end": 18327,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18179,
											"end": 18327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18179,
											"end": 18327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18179,
											"end": 18327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18333,
											"end": 18723,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 18333,
											"end": 18723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18439,
											"end": 18442,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18467,
											"end": 18506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 18500,
											"end": 18505,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18467,
											"end": 18506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 18467,
											"end": 18506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18467,
											"end": 18506,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 18467,
											"end": 18506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18522,
											"end": 18611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 18604,
											"end": 18610,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18599,
											"end": 18602,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18522,
											"end": 18611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 18522,
											"end": 18611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18522,
											"end": 18611,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 18522,
											"end": 18611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18515,
											"end": 18611,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 18515,
											"end": 18611,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18620,
											"end": 18685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 18678,
											"end": 18684,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18673,
											"end": 18676,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18666,
											"end": 18670,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18659,
											"end": 18664,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 18655,
											"end": 18671,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18620,
											"end": 18685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 18620,
											"end": 18685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18620,
											"end": 18685,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 18620,
											"end": 18685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18710,
											"end": 18716,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18705,
											"end": 18708,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18701,
											"end": 18717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18694,
											"end": 18717,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18694,
											"end": 18717,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18443,
											"end": 18723,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18333,
											"end": 18723,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18333,
											"end": 18723,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18333,
											"end": 18723,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18333,
											"end": 18723,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18333,
											"end": 18723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18729,
											"end": 19164,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 18729,
											"end": 19164,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18909,
											"end": 18912,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18931,
											"end": 19026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 19022,
											"end": 19025,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19013,
											"end": 19019,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18931,
											"end": 19026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 18931,
											"end": 19026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18931,
											"end": 19026,
											"name": "tag",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 18931,
											"end": 19026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18924,
											"end": 19026,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18924,
											"end": 19026,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19043,
											"end": 19138,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 19134,
											"end": 19137,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19125,
											"end": 19131,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19043,
											"end": 19138,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 19043,
											"end": 19138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19043,
											"end": 19138,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 19043,
											"end": 19138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19036,
											"end": 19138,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19036,
											"end": 19138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19155,
											"end": 19158,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19148,
											"end": 19158,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19148,
											"end": 19158,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18729,
											"end": 19164,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 18729,
											"end": 19164,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18729,
											"end": 19164,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18729,
											"end": 19164,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18729,
											"end": 19164,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18729,
											"end": 19164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19170,
											"end": 19407,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 19170,
											"end": 19407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19310,
											"end": 19344,
											"name": "PUSH",
											"source": 9,
											"value": "455243373231413A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 19306,
											"end": 19307,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19298,
											"end": 19304,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19294,
											"end": 19308,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19287,
											"end": 19345,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19379,
											"end": 19399,
											"name": "PUSH",
											"source": 9,
											"value": "6F776E6572206E6F7220617070726F7665640000000000000000000000000000"
										},
										{
											"begin": 19374,
											"end": 19376,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19366,
											"end": 19372,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19362,
											"end": 19377,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19355,
											"end": 19400,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19170,
											"end": 19407,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19170,
											"end": 19407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19413,
											"end": 19779,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 19413,
											"end": 19779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19555,
											"end": 19558,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19576,
											"end": 19643,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 19640,
											"end": 19642,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 19635,
											"end": 19638,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19576,
											"end": 19643,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 19576,
											"end": 19643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19576,
											"end": 19643,
											"name": "tag",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 19576,
											"end": 19643,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19569,
											"end": 19643,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19569,
											"end": 19643,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19652,
											"end": 19745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 19741,
											"end": 19744,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19652,
											"end": 19745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 19652,
											"end": 19745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19652,
											"end": 19745,
											"name": "tag",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 19652,
											"end": 19745,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19770,
											"end": 19772,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19765,
											"end": 19768,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19761,
											"end": 19773,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19754,
											"end": 19773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19754,
											"end": 19773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19413,
											"end": 19779,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19413,
											"end": 19779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19413,
											"end": 19779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19413,
											"end": 19779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19785,
											"end": 20204,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 19785,
											"end": 20204,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19951,
											"end": 19955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19989,
											"end": 19991,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19978,
											"end": 19987,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19974,
											"end": 19992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19966,
											"end": 19992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19966,
											"end": 19992,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20038,
											"end": 20047,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20032,
											"end": 20036,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20028,
											"end": 20048,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20024,
											"end": 20025,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20013,
											"end": 20022,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20009,
											"end": 20026,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20002,
											"end": 20049,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20066,
											"end": 20197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 20192,
											"end": 20196,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20066,
											"end": 20197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 20066,
											"end": 20197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20066,
											"end": 20197,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 20066,
											"end": 20197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20058,
											"end": 20197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20058,
											"end": 20197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19785,
											"end": 20204,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19785,
											"end": 20204,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19785,
											"end": 20204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19785,
											"end": 20204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20210,
											"end": 20435,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 20210,
											"end": 20435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20350,
											"end": 20384,
											"name": "PUSH",
											"source": 9,
											"value": "455243373231413A207472616E736665722066726F6D20696E636F7272656374"
										},
										{
											"begin": 20346,
											"end": 20347,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20338,
											"end": 20344,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20334,
											"end": 20348,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20327,
											"end": 20385,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20419,
											"end": 20427,
											"name": "PUSH",
											"source": 9,
											"value": "206F776E65720000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20414,
											"end": 20416,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20406,
											"end": 20412,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20402,
											"end": 20417,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20395,
											"end": 20428,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20210,
											"end": 20435,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20210,
											"end": 20435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20441,
											"end": 20807,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 20441,
											"end": 20807,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20583,
											"end": 20586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20604,
											"end": 20671,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 20668,
											"end": 20670,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 20663,
											"end": 20666,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20604,
											"end": 20671,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 20604,
											"end": 20671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20604,
											"end": 20671,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 20604,
											"end": 20671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20597,
											"end": 20671,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20597,
											"end": 20671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20680,
											"end": 20773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 20769,
											"end": 20772,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20680,
											"end": 20773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 20680,
											"end": 20773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20680,
											"end": 20773,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 20680,
											"end": 20773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20798,
											"end": 20800,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20793,
											"end": 20796,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20789,
											"end": 20801,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20782,
											"end": 20801,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20782,
											"end": 20801,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20441,
											"end": 20807,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20441,
											"end": 20807,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20441,
											"end": 20807,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20441,
											"end": 20807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20813,
											"end": 21232,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 20813,
											"end": 21232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20979,
											"end": 20983,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21017,
											"end": 21019,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21006,
											"end": 21015,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21002,
											"end": 21020,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20994,
											"end": 21020,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20994,
											"end": 21020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21066,
											"end": 21075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21060,
											"end": 21064,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21056,
											"end": 21076,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21052,
											"end": 21053,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21041,
											"end": 21050,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21037,
											"end": 21054,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21030,
											"end": 21077,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21094,
											"end": 21225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 21220,
											"end": 21224,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21094,
											"end": 21225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 21094,
											"end": 21225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21094,
											"end": 21225,
											"name": "tag",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 21094,
											"end": 21225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21086,
											"end": 21225,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21086,
											"end": 21225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20813,
											"end": 21232,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20813,
											"end": 21232,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20813,
											"end": 21232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20813,
											"end": 21232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21238,
											"end": 21462,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 21238,
											"end": 21462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21378,
											"end": 21412,
											"name": "PUSH",
											"source": 9,
											"value": "455243373231413A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 21374,
											"end": 21375,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21366,
											"end": 21372,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21362,
											"end": 21376,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21355,
											"end": 21413,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21447,
											"end": 21454,
											"name": "PUSH",
											"source": 9,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21442,
											"end": 21444,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21434,
											"end": 21440,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21430,
											"end": 21445,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21423,
											"end": 21455,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21238,
											"end": 21462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21238,
											"end": 21462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21468,
											"end": 21834,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 21468,
											"end": 21834,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21610,
											"end": 21613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21631,
											"end": 21698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 21695,
											"end": 21697,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 21690,
											"end": 21693,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21631,
											"end": 21698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 21631,
											"end": 21698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21631,
											"end": 21698,
											"name": "tag",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 21631,
											"end": 21698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21624,
											"end": 21698,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21624,
											"end": 21698,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21707,
											"end": 21800,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 21796,
											"end": 21799,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21707,
											"end": 21800,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 21707,
											"end": 21800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21707,
											"end": 21800,
											"name": "tag",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 21707,
											"end": 21800,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21825,
											"end": 21827,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 21820,
											"end": 21823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21816,
											"end": 21828,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21809,
											"end": 21828,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21809,
											"end": 21828,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21468,
											"end": 21834,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21468,
											"end": 21834,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21468,
											"end": 21834,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21468,
											"end": 21834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21840,
											"end": 22259,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 21840,
											"end": 22259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22006,
											"end": 22010,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22044,
											"end": 22046,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22033,
											"end": 22042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22029,
											"end": 22047,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22021,
											"end": 22047,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22021,
											"end": 22047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22093,
											"end": 22102,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22087,
											"end": 22091,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22083,
											"end": 22103,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22079,
											"end": 22080,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22068,
											"end": 22077,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22064,
											"end": 22081,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22057,
											"end": 22104,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22121,
											"end": 22252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 22247,
											"end": 22251,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22121,
											"end": 22252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 22121,
											"end": 22252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22121,
											"end": 22252,
											"name": "tag",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 22121,
											"end": 22252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22113,
											"end": 22252,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22113,
											"end": 22252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21840,
											"end": 22259,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21840,
											"end": 22259,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21840,
											"end": 22259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21840,
											"end": 22259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22265,
											"end": 22494,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 22265,
											"end": 22494,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22405,
											"end": 22439,
											"name": "PUSH",
											"source": 9,
											"value": "455243373231413A206F776E657220717565727920666F72206E6F6E65786973"
										},
										{
											"begin": 22401,
											"end": 22402,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22393,
											"end": 22399,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22389,
											"end": 22403,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22382,
											"end": 22440,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22474,
											"end": 22486,
											"name": "PUSH",
											"source": 9,
											"value": "74656E7420746F6B656E00000000000000000000000000000000000000000000"
										},
										{
											"begin": 22469,
											"end": 22471,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22461,
											"end": 22467,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22457,
											"end": 22472,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22450,
											"end": 22487,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22265,
											"end": 22494,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22265,
											"end": 22494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22500,
											"end": 22866,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 22500,
											"end": 22866,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22642,
											"end": 22645,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22663,
											"end": 22730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 22727,
											"end": 22729,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 22722,
											"end": 22725,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22663,
											"end": 22730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 22663,
											"end": 22730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22663,
											"end": 22730,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 22663,
											"end": 22730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22656,
											"end": 22730,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22656,
											"end": 22730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22739,
											"end": 22832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 22828,
											"end": 22831,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22739,
											"end": 22832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 22739,
											"end": 22832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22739,
											"end": 22832,
											"name": "tag",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 22739,
											"end": 22832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22857,
											"end": 22859,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22852,
											"end": 22855,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22848,
											"end": 22860,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22841,
											"end": 22860,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22841,
											"end": 22860,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22500,
											"end": 22866,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22500,
											"end": 22866,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22500,
											"end": 22866,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22500,
											"end": 22866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22872,
											"end": 23291,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 22872,
											"end": 23291,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23038,
											"end": 23042,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23076,
											"end": 23078,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23065,
											"end": 23074,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23061,
											"end": 23079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23053,
											"end": 23079,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23053,
											"end": 23079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23125,
											"end": 23134,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23119,
											"end": 23123,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23115,
											"end": 23135,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 23111,
											"end": 23112,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23100,
											"end": 23109,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23096,
											"end": 23113,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23089,
											"end": 23136,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23153,
											"end": 23284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 23279,
											"end": 23283,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23153,
											"end": 23284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 23153,
											"end": 23284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23153,
											"end": 23284,
											"name": "tag",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 23153,
											"end": 23284,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23145,
											"end": 23284,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23145,
											"end": 23284,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22872,
											"end": 23291,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22872,
											"end": 23291,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22872,
											"end": 23291,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22872,
											"end": 23291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23297,
											"end": 23531,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 23297,
											"end": 23531,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23437,
											"end": 23471,
											"name": "PUSH",
											"source": 9,
											"value": "455243373231413A20756E61626C6520746F2064657465726D696E6520746865"
										},
										{
											"begin": 23433,
											"end": 23434,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23425,
											"end": 23431,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23421,
											"end": 23435,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23414,
											"end": 23472,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23506,
											"end": 23523,
											"name": "PUSH",
											"source": 9,
											"value": "206F776E6572206F6620746F6B656E0000000000000000000000000000000000"
										},
										{
											"begin": 23501,
											"end": 23503,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23493,
											"end": 23499,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23489,
											"end": 23504,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23482,
											"end": 23524,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23297,
											"end": 23531,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23297,
											"end": 23531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23537,
											"end": 23903,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 23537,
											"end": 23903,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23679,
											"end": 23682,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23700,
											"end": 23767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 23764,
											"end": 23766,
											"name": "PUSH",
											"source": 9,
											"value": "2F"
										},
										{
											"begin": 23759,
											"end": 23762,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23700,
											"end": 23767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 23700,
											"end": 23767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23700,
											"end": 23767,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 23700,
											"end": 23767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23693,
											"end": 23767,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23693,
											"end": 23767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23776,
											"end": 23869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 23865,
											"end": 23868,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23776,
											"end": 23869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 23776,
											"end": 23869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23776,
											"end": 23869,
											"name": "tag",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 23776,
											"end": 23869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23894,
											"end": 23896,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23889,
											"end": 23892,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23885,
											"end": 23897,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23878,
											"end": 23897,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23878,
											"end": 23897,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23537,
											"end": 23903,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23537,
											"end": 23903,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23537,
											"end": 23903,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23537,
											"end": 23903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23909,
											"end": 24328,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 23909,
											"end": 24328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24075,
											"end": 24079,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24113,
											"end": 24115,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24102,
											"end": 24111,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24098,
											"end": 24116,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24090,
											"end": 24116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24090,
											"end": 24116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24162,
											"end": 24171,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24156,
											"end": 24160,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24152,
											"end": 24172,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 24148,
											"end": 24149,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24137,
											"end": 24146,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24133,
											"end": 24150,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24126,
											"end": 24173,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24190,
											"end": 24321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 24316,
											"end": 24320,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24190,
											"end": 24321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 24190,
											"end": 24321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24190,
											"end": 24321,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 24190,
											"end": 24321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24182,
											"end": 24321,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24182,
											"end": 24321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23909,
											"end": 24328,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23909,
											"end": 24328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23909,
											"end": 24328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23909,
											"end": 24328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24334,
											"end": 24432,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 24334,
											"end": 24432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24385,
											"end": 24391,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24419,
											"end": 24424,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24413,
											"end": 24425,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 24403,
											"end": 24425,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24403,
											"end": 24425,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24334,
											"end": 24432,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24334,
											"end": 24432,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24334,
											"end": 24432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24334,
											"end": 24432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24438,
											"end": 24606,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 24438,
											"end": 24606,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24521,
											"end": 24532,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24555,
											"end": 24561,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24550,
											"end": 24553,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24543,
											"end": 24562,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24595,
											"end": 24599,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24590,
											"end": 24593,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24586,
											"end": 24600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24571,
											"end": 24600,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24571,
											"end": 24600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24438,
											"end": 24606,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 24438,
											"end": 24606,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24438,
											"end": 24606,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24438,
											"end": 24606,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24438,
											"end": 24606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24612,
											"end": 24985,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 24612,
											"end": 24985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24698,
											"end": 24701,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24726,
											"end": 24764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 24758,
											"end": 24763,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24726,
											"end": 24764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 24726,
											"end": 24764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24726,
											"end": 24764,
											"name": "tag",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 24726,
											"end": 24764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24780,
											"end": 24850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 24843,
											"end": 24849,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24838,
											"end": 24841,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 24780,
											"end": 24850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 24780,
											"end": 24850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24780,
											"end": 24850,
											"name": "tag",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 24780,
											"end": 24850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24773,
											"end": 24850,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 24773,
											"end": 24850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24859,
											"end": 24924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 24917,
											"end": 24923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24912,
											"end": 24915,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 24905,
											"end": 24909,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24898,
											"end": 24903,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 24894,
											"end": 24910,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24859,
											"end": 24924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 24859,
											"end": 24924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24859,
											"end": 24924,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 24859,
											"end": 24924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24949,
											"end": 24978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 24971,
											"end": 24977,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24949,
											"end": 24978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 24949,
											"end": 24978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24949,
											"end": 24978,
											"name": "tag",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 24949,
											"end": 24978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24944,
											"end": 24947,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 24940,
											"end": 24979,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24933,
											"end": 24979,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24933,
											"end": 24979,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24702,
											"end": 24985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24612,
											"end": 24985,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 24612,
											"end": 24985,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24612,
											"end": 24985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24612,
											"end": 24985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24612,
											"end": 24985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24991,
											"end": 25631,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 24991,
											"end": 25631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25186,
											"end": 25190,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25224,
											"end": 25227,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 25213,
											"end": 25222,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25209,
											"end": 25228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25201,
											"end": 25228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25201,
											"end": 25228,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25238,
											"end": 25309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 25306,
											"end": 25307,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25295,
											"end": 25304,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25291,
											"end": 25308,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25282,
											"end": 25288,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 25238,
											"end": 25309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 25238,
											"end": 25309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25238,
											"end": 25309,
											"name": "tag",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 25238,
											"end": 25309,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25319,
											"end": 25391,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 25387,
											"end": 25389,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25376,
											"end": 25385,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25372,
											"end": 25390,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25363,
											"end": 25369,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 25319,
											"end": 25391,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 25319,
											"end": 25391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25319,
											"end": 25391,
											"name": "tag",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 25319,
											"end": 25391,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25401,
											"end": 25473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 25469,
											"end": 25471,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 25458,
											"end": 25467,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25454,
											"end": 25472,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25445,
											"end": 25451,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 25401,
											"end": 25473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 25401,
											"end": 25473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25401,
											"end": 25473,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 25401,
											"end": 25473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25520,
											"end": 25529,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25514,
											"end": 25518,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25510,
											"end": 25530,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 25505,
											"end": 25507,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 25494,
											"end": 25503,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25490,
											"end": 25508,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25483,
											"end": 25531,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25548,
											"end": 25624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 25619,
											"end": 25623,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25610,
											"end": 25616,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 25548,
											"end": 25624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 25548,
											"end": 25624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25548,
											"end": 25624,
											"name": "tag",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 25548,
											"end": 25624,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25540,
											"end": 25624,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25540,
											"end": 25624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24991,
											"end": 25631,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 24991,
											"end": 25631,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 24991,
											"end": 25631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24991,
											"end": 25631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24991,
											"end": 25631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24991,
											"end": 25631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24991,
											"end": 25631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24991,
											"end": 25631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25637,
											"end": 25778,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 25637,
											"end": 25778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25693,
											"end": 25698,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25724,
											"end": 25730,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25718,
											"end": 25731,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 25709,
											"end": 25731,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25709,
											"end": 25731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25740,
											"end": 25772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 25766,
											"end": 25771,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25740,
											"end": 25772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 25740,
											"end": 25772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25740,
											"end": 25772,
											"name": "tag",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 25740,
											"end": 25772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25637,
											"end": 25778,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25637,
											"end": 25778,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25637,
											"end": 25778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25637,
											"end": 25778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25637,
											"end": 25778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25784,
											"end": 26133,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 25784,
											"end": 26133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25853,
											"end": 25859,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25902,
											"end": 25904,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25890,
											"end": 25899,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25881,
											"end": 25888,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 25877,
											"end": 25900,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 25873,
											"end": 25905,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 25870,
											"end": 25989,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 25870,
											"end": 25989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 25870,
											"end": 25989,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 25908,
											"end": 25987,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 25908,
											"end": 25987,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 25908,
											"end": 25987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25908,
											"end": 25987,
											"name": "tag",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 25908,
											"end": 25987,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25870,
											"end": 25989,
											"name": "tag",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 25870,
											"end": 25989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26028,
											"end": 26029,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26053,
											"end": 26116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 26108,
											"end": 26115,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 26099,
											"end": 26105,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26088,
											"end": 26097,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 26084,
											"end": 26106,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26053,
											"end": 26116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 26053,
											"end": 26116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26053,
											"end": 26116,
											"name": "tag",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 26053,
											"end": 26116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26043,
											"end": 26116,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26043,
											"end": 26116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25999,
											"end": 26126,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25784,
											"end": 26133,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25784,
											"end": 26133,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25784,
											"end": 26133,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25784,
											"end": 26133,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25784,
											"end": 26133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26139,
											"end": 26319,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 26139,
											"end": 26319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26187,
											"end": 26264,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26184,
											"end": 26185,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26177,
											"end": 26265,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26284,
											"end": 26288,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 26281,
											"end": 26282,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 26274,
											"end": 26289,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26308,
											"end": 26312,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 26305,
											"end": 26306,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26298,
											"end": 26313,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 26325,
											"end": 26558,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 26325,
											"end": 26558,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26364,
											"end": 26367,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26387,
											"end": 26411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 26405,
											"end": 26410,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26387,
											"end": 26411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 26387,
											"end": 26411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26387,
											"end": 26411,
											"name": "tag",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 26387,
											"end": 26411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26378,
											"end": 26411,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26378,
											"end": 26411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26433,
											"end": 26499,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26426,
											"end": 26431,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26423,
											"end": 26500,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 26420,
											"end": 26523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 26420,
											"end": 26523,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 26503,
											"end": 26521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 26503,
											"end": 26521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 26503,
											"end": 26521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26503,
											"end": 26521,
											"name": "tag",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 26503,
											"end": 26521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26420,
											"end": 26523,
											"name": "tag",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 26420,
											"end": 26523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26550,
											"end": 26551,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 26543,
											"end": 26548,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26539,
											"end": 26552,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26532,
											"end": 26552,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26532,
											"end": 26552,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26325,
											"end": 26558,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26325,
											"end": 26558,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26325,
											"end": 26558,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26325,
											"end": 26558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26564,
											"end": 26744,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 26564,
											"end": 26744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26612,
											"end": 26689,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26609,
											"end": 26610,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26602,
											"end": 26690,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26709,
											"end": 26713,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 26706,
											"end": 26707,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 26699,
											"end": 26714,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26733,
											"end": 26737,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 26730,
											"end": 26731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26723,
											"end": 26738,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 26750,
											"end": 26935,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 26750,
											"end": 26935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26790,
											"end": 26791,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26807,
											"end": 26827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 26825,
											"end": 26826,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26807,
											"end": 26827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 26807,
											"end": 26827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26807,
											"end": 26827,
											"name": "tag",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 26807,
											"end": 26827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26802,
											"end": 26827,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26802,
											"end": 26827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26841,
											"end": 26861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 26859,
											"end": 26860,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26841,
											"end": 26861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 26841,
											"end": 26861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26841,
											"end": 26861,
											"name": "tag",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 26841,
											"end": 26861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26836,
											"end": 26861,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 26836,
											"end": 26861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26880,
											"end": 26881,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26870,
											"end": 26905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 26870,
											"end": 26905,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 26885,
											"end": 26903,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 26885,
											"end": 26903,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 26885,
											"end": 26903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26885,
											"end": 26903,
											"name": "tag",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 26885,
											"end": 26903,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26870,
											"end": 26905,
											"name": "tag",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 26870,
											"end": 26905,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26927,
											"end": 26928,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26924,
											"end": 26925,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26920,
											"end": 26929,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 26915,
											"end": 26929,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26915,
											"end": 26929,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26750,
											"end": 26935,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 26750,
											"end": 26935,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26750,
											"end": 26935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26750,
											"end": 26935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26750,
											"end": 26935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26941,
											"end": 27135,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 26941,
											"end": 27135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26981,
											"end": 26985,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27001,
											"end": 27021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 27019,
											"end": 27020,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27001,
											"end": 27021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 27001,
											"end": 27021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27001,
											"end": 27021,
											"name": "tag",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 27001,
											"end": 27021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26996,
											"end": 27021,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26996,
											"end": 27021,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27035,
											"end": 27055,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 27053,
											"end": 27054,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27035,
											"end": 27055,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 27035,
											"end": 27055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27035,
											"end": 27055,
											"name": "tag",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 27035,
											"end": 27055,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27030,
											"end": 27055,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 27030,
											"end": 27055,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27079,
											"end": 27080,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27076,
											"end": 27077,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27072,
											"end": 27081,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 27064,
											"end": 27081,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27064,
											"end": 27081,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27103,
											"end": 27104,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27097,
											"end": 27101,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27094,
											"end": 27105,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 27091,
											"end": 27128,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 27091,
											"end": 27128,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 27091,
											"end": 27128,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 27108,
											"end": 27126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 27108,
											"end": 27126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 27108,
											"end": 27126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27108,
											"end": 27126,
											"name": "tag",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 27108,
											"end": 27126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27091,
											"end": 27128,
											"name": "tag",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 27091,
											"end": 27128,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26941,
											"end": 27135,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 26941,
											"end": 27135,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26941,
											"end": 27135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26941,
											"end": 27135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26941,
											"end": 27135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27141,
											"end": 27317,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 27141,
											"end": 27317,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27173,
											"end": 27174,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27190,
											"end": 27210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 27208,
											"end": 27209,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27190,
											"end": 27210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 27190,
											"end": 27210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27190,
											"end": 27210,
											"name": "tag",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 27190,
											"end": 27210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27185,
											"end": 27210,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27185,
											"end": 27210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27224,
											"end": 27244,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 27242,
											"end": 27243,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27224,
											"end": 27244,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 27224,
											"end": 27244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27224,
											"end": 27244,
											"name": "tag",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 27224,
											"end": 27244,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27219,
											"end": 27244,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 27219,
											"end": 27244,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27263,
											"end": 27264,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27253,
											"end": 27288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 27253,
											"end": 27288,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 27268,
											"end": 27286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 27268,
											"end": 27286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 27268,
											"end": 27286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27268,
											"end": 27286,
											"name": "tag",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 27268,
											"end": 27286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27253,
											"end": 27288,
											"name": "tag",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 27253,
											"end": 27288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27309,
											"end": 27310,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27306,
											"end": 27307,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27302,
											"end": 27311,
											"name": "MOD",
											"source": 9
										},
										{
											"begin": 27297,
											"end": 27311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27297,
											"end": 27311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27141,
											"end": 27317,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 27141,
											"end": 27317,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27141,
											"end": 27317,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27141,
											"end": 27317,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27141,
											"end": 27317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27323,
											"end": 27514,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 27323,
											"end": 27514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27363,
											"end": 27366,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27382,
											"end": 27402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 27400,
											"end": 27401,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27382,
											"end": 27402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 27382,
											"end": 27402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27382,
											"end": 27402,
											"name": "tag",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 27382,
											"end": 27402,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27377,
											"end": 27402,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27377,
											"end": 27402,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27416,
											"end": 27436,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 27434,
											"end": 27435,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27416,
											"end": 27436,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 27416,
											"end": 27436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27416,
											"end": 27436,
											"name": "tag",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 27416,
											"end": 27436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27411,
											"end": 27436,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 27411,
											"end": 27436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27459,
											"end": 27460,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27456,
											"end": 27457,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27452,
											"end": 27461,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27445,
											"end": 27461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27445,
											"end": 27461,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27480,
											"end": 27483,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 27477,
											"end": 27478,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27474,
											"end": 27484,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 27471,
											"end": 27507,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 27471,
											"end": 27507,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 27471,
											"end": 27507,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 27487,
											"end": 27505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 27487,
											"end": 27505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 27487,
											"end": 27505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27487,
											"end": 27505,
											"name": "tag",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 27487,
											"end": 27505,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27471,
											"end": 27507,
											"name": "tag",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 27471,
											"end": 27507,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27323,
											"end": 27514,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 27323,
											"end": 27514,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27323,
											"end": 27514,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27323,
											"end": 27514,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27323,
											"end": 27514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27520,
											"end": 27700,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 27520,
											"end": 27700,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27568,
											"end": 27645,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27565,
											"end": 27566,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27558,
											"end": 27646,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27665,
											"end": 27669,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 27662,
											"end": 27663,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 27655,
											"end": 27670,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27689,
											"end": 27693,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 27686,
											"end": 27687,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27679,
											"end": 27694,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..). Does not support burning tokens to address(0). Assumes that an owner cannot have more than the 2**128 - 1 (max value of uint128) of supply\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/ERC721A.sol\":{\"keccak256\":\"0x0f9fc0a120947cda735da655f8d0a73911d78f703016cce42d099ad6b83ffac9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100a523948e5700e4f0be9eae3cf2b07bf2c05df1049c50f58e8be8411f152dd\",\"dweb:/ipfs/QmQXTqzskpGNyHRapbeNy6p9Zc4ZLBTR4FZyB9ytPCZMYQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 775,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 777,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 779,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 784,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_ownerships",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(TokenOwnership)768_storage)"
							},
							{
								"astId": 789,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_addressData",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(AddressData)773_storage)"
							},
							{
								"astId": 793,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 799,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_struct(AddressData)773_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct ERC721A.AddressData)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressData)773_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(TokenOwnership)768_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenOwnership)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenOwnership)768_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressData)773_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.AddressData",
								"members": [
									{
										"astId": 770,
										"contract": "contracts/ERC721A.sol:ERC721A",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint128"
									},
									{
										"astId": 772,
										"contract": "contracts/ERC721A.sol:ERC721A",
										"label": "numberMinted",
										"offset": 16,
										"slot": "0",
										"type": "t_uint128"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(TokenOwnership)768_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenOwnership",
								"members": [
									{
										"astId": 765,
										"contract": "contracts/ERC721A.sol:ERC721A",
										"label": "addr",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 767,
										"contract": "contracts/ERC721A.sol:ERC721A",
										"label": "startTimestamp",
										"offset": 20,
										"slot": "0",
										"type": "t_uint64"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							739
						],
						"IERC721": [
							115
						]
					},
					"id": 116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 116,
							"sourceUnit": 740,
							"src": "133:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nameLocations": [
											"271:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 739,
										"src": "271:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 115,
							"linearizedBaseContracts": [
								115,
								739
							],
							"name": "IERC721",
							"nameLocation": "260:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 14,
									"name": "Transfer",
									"nameLocation": "384:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "393:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "415:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "435:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:0"
									},
									"src": "378:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 23,
									"name": "Approval",
									"nameLocation": "571:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "580:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "603:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "629:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:0"
									},
									"src": "565:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 32,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "803:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "826:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:0"
									},
									"src": "782:85:0"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "973:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1011:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:0"
									},
									"scope": 115,
									"src": "954:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1187:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1227:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:0"
									},
									"scope": 115,
									"src": "1170:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1844:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1866:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1886:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1911:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 56,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:0"
									},
									"scope": 115,
									"src": "1809:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2679:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2701:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2721:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:0"
									},
									"scope": 115,
									"src": "2644:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2758:504:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3306:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3298:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3328:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3320:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3348:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3340:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:73:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:0"
									},
									"scope": 115,
									"src": "3267:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3377:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3843:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3859:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3851:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3871:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3863:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:29:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:0:0"
									},
									"scope": 115,
									"src": "3834:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "3895:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4218:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4244:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4236:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4259:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4254:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 92,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:34:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4278:0:0"
									},
									"scope": 115,
									"src": "4209:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "4285:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4438:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4458:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4450:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:17:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4498:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4490:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:18:0"
									},
									"scope": 115,
									"src": "4429:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "4514:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4666:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4706:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4698:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:33:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4739:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4739:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4738:6:0"
									},
									"scope": 115,
									"src": "4657:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 116,
							"src": "250:4497:0",
							"usedErrors": []
						}
					],
					"src": "108:4640:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							133
						]
					},
					"id": 134,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 117,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 118,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:1",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 133,
							"linearizedBaseContracts": [
								133
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:1",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "859:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "885:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "907:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "932:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "976:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 129,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:1"
									},
									"scope": 133,
									"src": "824:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 134,
							"src": "294:692:1",
							"usedErrors": []
						}
					],
					"src": "116:871:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							739
						],
						"IERC721": [
							115
						],
						"IERC721Metadata": [
							160
						]
					},
					"id": 161,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 135,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 161,
							"sourceUnit": 116,
							"src": "137:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 138,
										"name": "IERC721",
										"nameLocations": [
											"326:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "326:7:2"
									},
									"id": 139,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:2"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:2",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 160,
							"linearizedBaseContracts": [
								160,
								115,
								739
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:2",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "442:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:2"
									},
									"scope": 160,
									"src": "403:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:2",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:2"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "569:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 148,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:2"
									},
									"scope": 160,
									"src": "528:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:2",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:2"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "743:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:2"
									},
									"scope": 160,
									"src": "685:73:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 161,
							"src": "297:463:2",
							"usedErrors": []
						}
					],
					"src": "112:649:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							455
						]
					},
					"id": 456,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 162,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 163,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 455,
							"linearizedBaseContracts": [
								455
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "1241:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 171,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "1465:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 170,
												"id": 176,
												"nodeType": "Return",
												"src": "1458:30:3"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1195:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:3"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1235:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:3"
									},
									"scope": 455,
									"src": "1175:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "2483:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 189,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$455",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$455",
																				"typeString": "library Address"
																			}
																		],
																		"id": 188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 187,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 192,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2526:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:3"
											},
											{
												"assignments": [
													198,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "2578:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 197,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 205,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 199,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "2596:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 201,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2618:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 207,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2647:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:3"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2431:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2458:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:3"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:3"
									},
									"scope": 455,
									"src": "2412:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "3555:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3585:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3593:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 222,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															229,
															249
														],
														"referencedDeclaration": 249,
														"src": "3572:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 227,
												"nodeType": "Return",
												"src": "3565:67:3"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3504:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:3"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3541:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:3"
									},
									"scope": 455,
									"src": "3466:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "4008:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 242,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "4047:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 243,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "4055:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 245,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "4064:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 241,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															269,
															319
														],
														"referencedDeclaration": 319,
														"src": "4025:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 247,
												"nodeType": "Return",
												"src": "4018:59:3"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3892:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3916:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3943:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:3"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3994:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:3"
									},
									"scope": 455,
									"src": "3861:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "4589:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 262,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "4628:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 263,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4636:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 264,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "4642:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 261,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															269,
															319
														],
														"referencedDeclaration": 319,
														"src": "4606:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 260,
												"id": 267,
												"nodeType": "Return",
												"src": "4599:94:3"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4486:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4510:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4537:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:3"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4575:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:3"
									},
									"scope": 455,
									"src": "4446:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "5127:320:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 286,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$455",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$455",
																				"typeString": "library Address"
																			}
																		],
																		"id": 285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 284,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5159:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 289,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "5170:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 296,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "5247:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 295,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "5236:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 294,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:3"
											},
											{
												"assignments": [
													302,
													304
												],
												"declarations": [
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "5300:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 301,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 304,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "5314:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 303,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 311,
												"initialValue": {
													"arguments": [
														{
															"id": 309,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "5367:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 305,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "5341:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5348:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 307,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "5360:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 313,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "5406:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 314,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "5415:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 315,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "5427:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 312,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "5389:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 282,
												"id": 317,
												"nodeType": "Return",
												"src": "5382:58:3"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4988:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5012:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5062:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 277,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:3"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5113:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:3"
									},
									"scope": 455,
									"src": "4948:499:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "5724:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "5760:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 331,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "5768:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 329,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															336,
															371
														],
														"referencedDeclaration": 371,
														"src": "5741:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 328,
												"id": 334,
												"nodeType": "Return",
												"src": "5734:80:3"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "5652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "5668:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 323,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:3"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "5710:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 326,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:3"
									},
									"scope": 455,
									"src": "5624:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "6163:228:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 350,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "6192:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 349,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "6181:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:3"
											},
											{
												"assignments": [
													356,
													358
												],
												"declarations": [
													{
														"constant": false,
														"id": 356,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "6252:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 355,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 358,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "6266:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 357,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 363,
												"initialValue": {
													"arguments": [
														{
															"id": 361,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "6311:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 359,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "6293:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6300:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 365,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "6350:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 366,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "6359:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 367,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "6371:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 364,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "6333:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 347,
												"id": 369,
												"nodeType": "Return",
												"src": "6326:58:3"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6042:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6066:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6093:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 342,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:3"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6149:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:3"
									},
									"scope": 455,
									"src": "6005:386:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6667:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "6705:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "6713:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 381,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															388,
															423
														],
														"referencedDeclaration": 423,
														"src": "6684:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 380,
												"id": 386,
												"nodeType": "Return",
												"src": "6677:84:3"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6600:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6616:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 375,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:3"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6653:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:3"
									},
									"scope": 455,
									"src": "6570:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "7109:232:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 402,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "7138:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 401,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "7127:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:3"
											},
											{
												"assignments": [
													408,
													410
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 422,
														"src": "7200:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 407,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 410,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 422,
														"src": "7214:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 409,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 415,
												"initialValue": {
													"arguments": [
														{
															"id": 413,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "7261:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 411,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "7241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7248:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 417,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "7300:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 418,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "7309:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 419,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "7321:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 416,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "7283:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 399,
												"id": 421,
												"nodeType": "Return",
												"src": "7276:58:3"
											}
										]
									},
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "6993:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "7017:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "7044:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 394,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:3"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "7095:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:3"
									},
									"scope": 455,
									"src": "6954:387:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "7721:582:3",
										"statements": [
											{
												"condition": {
													"id": 435,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 426,
													"src": "7735:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 451,
													"nodeType": "Block",
													"src": "7792:505:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 439,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "7876:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7887:6:3",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 449,
																"nodeType": "Block",
																"src": "8234:53:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 446,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 430,
																					"src": "8259:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 445,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 448,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:3"
																	}
																]
															},
															"id": 450,
															"nodeType": "IfStatement",
															"src": "7872:415:3",
															"trueBody": {
																"id": 444,
																"nodeType": "Block",
																"src": "7899:329:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:3"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 428,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 428,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 443,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 452,
												"nodeType": "IfStatement",
												"src": "7731:566:3",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "7744:42:3",
													"statements": [
														{
															"expression": {
																"id": 436,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "7765:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 434,
															"id": 437,
															"nodeType": "Return",
															"src": "7758:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:3",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7596:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7618:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 427,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7651:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:3"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7707:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 432,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:3"
									},
									"scope": 455,
									"src": "7561:742:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 456,
							"src": "194:8111:3",
							"usedErrors": []
						}
					],
					"src": "101:8205:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 457,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 458,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 463,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 462,
												"id": 465,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 477,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 472,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 477,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 478,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							703
						]
					},
					"id": 704,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 480,
								"nodeType": "StructuredDocumentation",
								"src": "126:34:5",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 703,
							"linearizedBaseContracts": [
								703
							],
							"name": "Strings",
							"nameLocation": "169:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 483,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "208:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 703,
									"src": "183:58:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 481,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "183:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 482,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "223:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 486,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "270:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 703,
									"src": "247:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 484,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "247:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 485,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "288:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "463:632:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "665:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "674:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "665:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 500,
												"nodeType": "IfStatement",
												"src": "661:51:5",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "677:35:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "698:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 493,
															"id": 498,
															"nodeType": "Return",
															"src": "691:10:5"
														}
													]
												}
											},
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "729:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "721:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 501,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "721:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 504,
												"initialValue": {
													"id": 503,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 489,
													"src": "736:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "721:20:5"
											},
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "759:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "751:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "751:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"nodeType": "VariableDeclarationStatement",
												"src": "751:14:5"
											},
											{
												"body": {
													"id": 518,
													"nodeType": "Block",
													"src": "793:57:5",
													"statements": [
														{
															"expression": {
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "807:8:5",
																"subExpression": {
																	"id": 511,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "807:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 513,
															"nodeType": "ExpressionStatement",
															"src": "807:8:5"
														},
														{
															"expression": {
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 514,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "829:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "837:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "829:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 517,
															"nodeType": "ExpressionStatement",
															"src": "829:10:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 508,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "782:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "790:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "782:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 519,
												"nodeType": "WhileStatement",
												"src": "775:75:5"
											},
											{
												"assignments": [
													521
												],
												"declarations": [
													{
														"constant": false,
														"id": 521,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "872:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "859:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 520,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "859:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 526,
												"initialValue": {
													"arguments": [
														{
															"id": 524,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "891:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "881:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 522,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "885:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "881:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:39:5"
											},
											{
												"body": {
													"id": 557,
													"nodeType": "Block",
													"src": "927:131:5",
													"statements": [
														{
															"expression": {
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 530,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "941:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "951:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "941:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 533,
															"nodeType": "ExpressionStatement",
															"src": "941:11:5"
														},
														{
															"expression": {
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 534,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 521,
																		"src": "966:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 536,
																	"indexExpression": {
																		"id": 535,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 506,
																		"src": "973:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "966:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 548,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 541,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "996:2:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 546,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 544,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 489,
																									"src": "1009:5:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 545,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1017:2:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "1009:10:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 543,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1001:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 542,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1001:7:5",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 547,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1001:19:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "996:24:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "990:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 539,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "990:5:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "990:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "983:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 537,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "983:6:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "983:39:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "966:56:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 552,
															"nodeType": "ExpressionStatement",
															"src": "966:56:5"
														},
														{
															"expression": {
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 553,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "1036:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1045:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1036:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 556,
															"nodeType": "ExpressionStatement",
															"src": "1036:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 527,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "915:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "924:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "915:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 558,
												"nodeType": "WhileStatement",
												"src": "908:150:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 561,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "1081:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1074:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 559,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1074:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1074:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 493,
												"id": 563,
												"nodeType": "Return",
												"src": "1067:21:5"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "297:90:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "401:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "418:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "410:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:15:5"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 491,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "448:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:15:5"
									},
									"scope": 703,
									"src": "392:703:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "1274:255:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 573,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "1288:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1297:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1288:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 579,
												"nodeType": "IfStatement",
												"src": "1284:54:5",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "1300:38:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1321:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 572,
															"id": 577,
															"nodeType": "Return",
															"src": "1314:13:5"
														}
													]
												}
											},
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1355:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 605,
														"src": "1347:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 580,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1347:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"initialValue": {
													"id": 582,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 568,
													"src": "1362:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1347:20:5"
											},
											{
												"assignments": [
													585
												],
												"declarations": [
													{
														"constant": false,
														"id": 585,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1385:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 605,
														"src": "1377:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 584,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1377:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 587,
												"initialValue": {
													"hexValue": "30",
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1394:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1377:18:5"
											},
											{
												"body": {
													"id": 598,
													"nodeType": "Block",
													"src": "1423:57:5",
													"statements": [
														{
															"expression": {
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1437:8:5",
																"subExpression": {
																	"id": 591,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "1437:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 593,
															"nodeType": "ExpressionStatement",
															"src": "1437:8:5"
														},
														{
															"expression": {
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 594,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "1459:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1468:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1459:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 597,
															"nodeType": "ExpressionStatement",
															"src": "1459:10:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 588,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "1412:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1420:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1412:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "WhileStatement",
												"src": "1405:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "1508:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 602,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "1515:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 600,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															606,
															682,
															702
														],
														"referencedDeclaration": 682,
														"src": "1496:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 572,
												"id": 604,
												"nodeType": "Return",
												"src": "1489:33:5"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "1101:94:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1209:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1229:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1221:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:15:5"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1259:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1259:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:15:5"
									},
									"scope": 703,
									"src": "1200:329:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "1742:351:5",
										"statements": [
											{
												"assignments": [
													617
												],
												"declarations": [
													{
														"constant": false,
														"id": 617,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1765:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 681,
														"src": "1752:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 616,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1752:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 626,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1784:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 621,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "1788:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1784:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1797:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1784:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1774:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 618,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1778:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1752:47:5"
											},
											{
												"expression": {
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 627,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "1809:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 629,
														"indexExpression": {
															"hexValue": "30",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1816:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1809:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 630,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1821:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1809:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "1809:15:5"
											},
											{
												"expression": {
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 633,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "1834:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 635,
														"indexExpression": {
															"hexValue": "31",
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1841:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1834:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1846:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1834:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "1834:15:5"
											},
											{
												"body": {
													"id": 667,
													"nodeType": "Block",
													"src": "1904:87:5",
													"statements": [
														{
															"expression": {
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 653,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "1918:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 655,
																	"indexExpression": {
																		"id": 654,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 640,
																		"src": "1925:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1918:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 656,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "1930:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 660,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 657,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 609,
																			"src": "1943:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1951:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1943:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1930:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1918:37:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 662,
															"nodeType": "ExpressionStatement",
															"src": "1918:37:5"
														},
														{
															"expression": {
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 663,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "1969:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1979:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1969:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 666,
															"nodeType": "ExpressionStatement",
															"src": "1969:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "1892:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1896:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1892:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 668,
												"initializationExpression": {
													"assignments": [
														640
													],
													"declarations": [
														{
															"constant": false,
															"id": 640,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1872:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 668,
															"src": "1864:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 639,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1864:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 646,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1876:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 642,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "1880:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1876:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1889:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1876:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1864:26:5"
												},
												"loopExpression": {
													"expression": {
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1899:3:5",
														"subExpression": {
															"id": 650,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "1901:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 652,
													"nodeType": "ExpressionStatement",
													"src": "1899:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1859:132:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 670,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "2008:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2008:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2020:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2000:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2000:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "2000:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 678,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "2079:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2072:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 676,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2072:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2072:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 615,
												"id": 680,
												"nodeType": "Return",
												"src": "2065:21:5"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "1535:112:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1661:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1681:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1673:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1696:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1688:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:31:5"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1727:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 613,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:15:5"
									},
									"scope": 703,
									"src": "1652:441:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "2318:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 695,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 685,
																			"src": "2363:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2355:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 693,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2355:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2355:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2347:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 691,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2347:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2347:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 698,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "2371:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 690,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															606,
															682,
															702
														],
														"referencedDeclaration": 682,
														"src": "2335:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 689,
												"id": 700,
												"nodeType": "Return",
												"src": "2328:59:5"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "2099:141:5",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2254:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2274:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2266:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:14:5"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2303:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 687,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2303:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:15:5"
									},
									"scope": 703,
									"src": "2245:149:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 704,
							"src": "161:2235:5",
							"usedErrors": []
						}
					],
					"src": "101:2296:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							727
						],
						"IERC165": [
							739
						]
					},
					"id": 728,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 705,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 706,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 728,
							"sourceUnit": 740,
							"src": "124:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 708,
										"name": "IERC165",
										"nameLocations": [
											"754:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 739,
										"src": "754:7:6"
									},
									"id": 709,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:6"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 707,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 727,
							"linearizedBaseContracts": [
								727,
								739
							],
							"name": "ERC165",
							"nameLocation": "744:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										738
									],
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "920:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 718,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "937:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 720,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "957:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$739_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$739_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 719,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$739",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:6",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 717,
												"id": 724,
												"nodeType": "Return",
												"src": "930:47:6"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 714,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:6"
									},
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "856:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 711,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:6"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "914:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:6"
									},
									"scope": 727,
									"src": "829:155:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 728,
							"src": "726:260:6",
							"usedErrors": []
						}
					],
					"src": "99:888:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							739
						]
					},
					"id": 740,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 729,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 730,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 739,
							"linearizedBaseContracts": [
								739
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 738,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 732,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 735,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 739,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 740,
							"src": "405:447:7",
							"usedErrors": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"contracts/ERC721A.sol": {
				"ast": {
					"absolutePath": "contracts/ERC721A.sol",
					"exportedSymbols": {
						"Address": [
							455
						],
						"Context": [
							477
						],
						"ERC165": [
							727
						],
						"ERC721A": [
							1694
						],
						"IERC165": [
							739
						],
						"IERC721": [
							115
						],
						"IERC721Metadata": [
							160
						],
						"IERC721Receiver": [
							133
						],
						"Strings": [
							703
						]
					},
					"id": 1695,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 741,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "59:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 742,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1695,
							"sourceUnit": 116,
							"src": "86:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 743,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1695,
							"sourceUnit": 134,
							"src": "146:66:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"id": 744,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1695,
							"sourceUnit": 161,
							"src": "214:77:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 745,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1695,
							"sourceUnit": 456,
							"src": "293:51:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 746,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1695,
							"sourceUnit": 478,
							"src": "346:51:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 747,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1695,
							"sourceUnit": 704,
							"src": "399:51:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"id": 748,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1695,
							"sourceUnit": 728,
							"src": "452:64:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 750,
										"name": "Context",
										"nameLocations": [
											"981:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 477,
										"src": "981:7:8"
									},
									"id": 751,
									"nodeType": "InheritanceSpecifier",
									"src": "981:7:8"
								},
								{
									"baseName": {
										"id": 752,
										"name": "ERC165",
										"nameLocations": [
											"990:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 727,
										"src": "990:6:8"
									},
									"id": 753,
									"nodeType": "InheritanceSpecifier",
									"src": "990:6:8"
								},
								{
									"baseName": {
										"id": 754,
										"name": "IERC721",
										"nameLocations": [
											"998:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "998:7:8"
									},
									"id": 755,
									"nodeType": "InheritanceSpecifier",
									"src": "998:7:8"
								},
								{
									"baseName": {
										"id": 756,
										"name": "IERC721Metadata",
										"nameLocations": [
											"1007:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 160,
										"src": "1007:15:8"
									},
									"id": 757,
									"nodeType": "InheritanceSpecifier",
									"src": "1007:15:8"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 749,
								"nodeType": "StructuredDocumentation",
								"src": "520:439:8",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..).\n Does not support burning tokens to address(0).\n Assumes that an owner cannot have more than the 2**128 - 1 (max value of uint128) of supply"
							},
							"fullyImplemented": true,
							"id": 1694,
							"linearizedBaseContracts": [
								1694,
								160,
								115,
								727,
								739,
								477
							],
							"name": "ERC721A",
							"nameLocation": "970:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 760,
									"libraryName": {
										"id": 758,
										"name": "Address",
										"nameLocations": [
											"1036:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 455,
										"src": "1036:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "1030:26:8",
									"typeName": {
										"id": 759,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1048:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 763,
									"libraryName": {
										"id": 761,
										"name": "Strings",
										"nameLocations": [
											"1068:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 703,
										"src": "1068:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "1062:26:8",
									"typeName": {
										"id": 762,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1080:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "ERC721A.TokenOwnership",
									"id": 768,
									"members": [
										{
											"constant": false,
											"id": 765,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1137:4:8",
											"nodeType": "VariableDeclaration",
											"scope": 768,
											"src": "1129:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 764,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1129:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 767,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "1159:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 768,
											"src": "1152:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 766,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1152:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1103:14:8",
									"nodeType": "StructDefinition",
									"scope": 1694,
									"src": "1096:85:8",
									"visibility": "public"
								},
								{
									"canonicalName": "ERC721A.AddressData",
									"id": 773,
									"members": [
										{
											"constant": false,
											"id": 770,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "1227:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 773,
											"src": "1219:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 769,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1219:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 772,
											"mutability": "mutable",
											"name": "numberMinted",
											"nameLocation": "1253:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 773,
											"src": "1245:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 771,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1245:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressData",
									"nameLocation": "1196:11:8",
									"nodeType": "StructDefinition",
									"scope": 1694,
									"src": "1189:84:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 775,
									"mutability": "mutable",
									"name": "currentIndex",
									"nameLocation": "1298:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1694,
									"src": "1281:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 774,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1281:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 777,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1353:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1694,
									"src": "1338:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 776,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1338:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 779,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1403:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1694,
									"src": "1388:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 778,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1388:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 784,
									"mutability": "mutable",
									"name": "_ownerships",
									"nameLocation": "1636:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1694,
									"src": "1592:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$768_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
									},
									"typeName": {
										"id": 783,
										"keyType": {
											"id": 780,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1600:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1592:34:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$768_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
										},
										"valueType": {
											"id": 782,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 781,
												"name": "TokenOwnership",
												"nameLocations": [
													"1611:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 768,
												"src": "1611:14:8"
											},
											"referencedDeclaration": 768,
											"src": "1611:14:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenOwnership_$768_storage_ptr",
												"typeString": "struct ERC721A.TokenOwnership"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 789,
									"mutability": "mutable",
									"name": "_addressData",
									"nameLocation": "1742:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1694,
									"src": "1702:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$773_storage_$",
										"typeString": "mapping(address => struct ERC721A.AddressData)"
									},
									"typeName": {
										"id": 788,
										"keyType": {
											"id": 785,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1710:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1702:31:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$773_storage_$",
											"typeString": "mapping(address => struct ERC721A.AddressData)"
										},
										"valueType": {
											"id": 787,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 786,
												"name": "AddressData",
												"nameLocations": [
													"1721:11:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 773,
												"src": "1721:11:8"
											},
											"referencedDeclaration": 773,
											"src": "1721:11:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressData_$773_storage_ptr",
												"typeString": "struct ERC721A.AddressData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 793,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1849:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1694,
									"src": "1813:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 792,
										"keyType": {
											"id": 790,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1821:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1813:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 791,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1832:7:8",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 799,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1975:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 1694,
									"src": "1922:71:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 798,
										"keyType": {
											"id": 794,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1930:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1922:44:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 797,
											"keyType": {
												"id": 795,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1949:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1941:24:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 796,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1960:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "2058:60:8",
										"statements": [
											{
												"expression": {
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 806,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "2069:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 807,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "2077:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2069:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "2069:13:8"
											},
											{
												"expression": {
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 810,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "2093:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 811,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "2103:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2093:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "2093:17:8"
											}
										]
									},
									"id": 815,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2028:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "2014:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 800,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2014:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2049:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "2035:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 802,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2035:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:44:8"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2058:0:8"
									},
									"scope": 1694,
									"src": "2002:116:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "2179:38:8",
										"statements": [
											{
												"expression": {
													"id": 820,
													"name": "currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 775,
													"src": "2197:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 819,
												"id": 821,
												"nodeType": "Return",
												"src": "2190:19:8"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2135:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2146:2:8"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "2170:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2169:9:8"
									},
									"scope": 1694,
									"src": "2126:91:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										726,
										738
									],
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "2397:185:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 834,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "2424:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 836,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 115,
																			"src": "2444:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 835,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2439:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2439:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$115",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2453:11:8",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "2439:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "2424:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 840,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "2477:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 842,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 160,
																			"src": "2497:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$160_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$160_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 841,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2492:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2492:21:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$160",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2514:11:8",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "2492:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "2477:48:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2424:101:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 849,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "2562:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 847,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2538:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721A_$1694_$",
																	"typeString": "type(contract super ERC721A)"
																}
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2544:17:8",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 726,
															"src": "2538:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2538:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2424:150:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 833,
												"id": 852,
												"nodeType": "Return",
												"src": "2408:166:8"
											}
										]
									},
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "2225:58:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2298:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 830,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 828,
												"name": "ERC165",
												"nameLocations": [
													"2365:6:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 727,
												"src": "2365:6:8"
											},
											{
												"id": 829,
												"name": "IERC165",
												"nameLocations": [
													"2373:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 739,
												"src": "2373:7:8"
											}
										],
										"src": "2356:25:8"
									},
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2323:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "2316:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 825,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2316:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2315:20:8"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "2391:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 831,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:6:8"
									},
									"scope": 1694,
									"src": "2289:293:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										40
									],
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "2719:148:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 864,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "2738:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2755:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2747:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 865,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2747:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2747:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2738:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2759:45:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
																"typeString": "literal_string \"ERC721A: balance query for the zero address\""
															},
															"value": "ERC721A: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
																"typeString": "literal_string \"ERC721A: balance query for the zero address\""
															}
														],
														"id": 863,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2730:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2730:75:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "2730:75:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 875,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "2831:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$773_storage_$",
																		"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																	}
																},
																"id": 877,
																"indexExpression": {
																	"id": 876,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "2844:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2831:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$773_storage",
																	"typeString": "struct ERC721A.AddressData storage ref"
																}
															},
															"id": 878,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2851:7:8",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 770,
															"src": "2831:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2823:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 873,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2823:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 862,
												"id": 880,
												"nodeType": "Return",
												"src": "2816:43:8"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "2590:50:8",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2655:9:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 859,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2692:8:8"
									},
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2673:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "2665:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2665:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2664:15:8"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "2710:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:9:8"
									},
									"scope": 1694,
									"src": "2646:221:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "2945:159:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 890,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 884,
																"src": "2964:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2981:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2973:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 891,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2973:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2973:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2964:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a206e756d626572206d696e74656420717565727920666f7220746865207a65726f2061646472657373",
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2985:51:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c3e37e02c3080172abd6c32dc3a6b6918df0b3dc1fb7feda8214222d4942acc",
																"typeString": "literal_string \"ERC721A: number minted query for the zero address\""
															},
															"value": "ERC721A: number minted query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c3e37e02c3080172abd6c32dc3a6b6918df0b3dc1fb7feda8214222d4942acc",
																"typeString": "literal_string \"ERC721A: number minted query for the zero address\""
															}
														],
														"id": 889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2956:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2956:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "2956:81:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 901,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "3063:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$773_storage_$",
																		"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																	}
																},
																"id": 903,
																"indexExpression": {
																	"id": 902,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "3076:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3063:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$773_storage",
																	"typeString": "struct ERC721A.AddressData storage ref"
																}
															},
															"id": 904,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3083:12:8",
															"memberName": "numberMinted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 772,
															"src": "3063:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3055:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 899,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3055:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3055:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 888,
												"id": 906,
												"nodeType": "Return",
												"src": "3048:48:8"
											}
										]
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "2884:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2906:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "2898:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2898:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2897:15:8"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "2936:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2936:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2935:9:8"
									},
									"scope": 1694,
									"src": "2875:229:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "3390:421:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 919,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "3417:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 918,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "3409:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3409:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3427:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
																"typeString": "literal_string \"ERC721A: owner query for nonexistent token\""
															},
															"value": "ERC721A: owner query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
																"typeString": "literal_string \"ERC721A: owner query for nonexistent token\""
															}
														],
														"id": 917,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3401:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3401:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "3401:71:8"
											},
											{
												"id": 954,
												"nodeType": "UncheckedBlock",
												"src": "3481:253:8",
												"statements": [
													{
														"body": {
															"id": 952,
															"nodeType": "Block",
															"src": "3550:177:8",
															"statements": [
																{
																	"assignments": [
																		936
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 936,
																			"mutability": "mutable",
																			"name": "ownership",
																			"nameLocation": "3587:9:8",
																			"nodeType": "VariableDeclaration",
																			"scope": 952,
																			"src": "3565:31:8",
																			"stateVariable": false,
																			"storageLocation": "memory",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$768_memory_ptr",
																				"typeString": "struct ERC721A.TokenOwnership"
																			},
																			"typeName": {
																				"id": 935,
																				"nodeType": "UserDefinedTypeName",
																				"pathNode": {
																					"id": 934,
																					"name": "TokenOwnership",
																					"nameLocations": [
																						"3565:14:8"
																					],
																					"nodeType": "IdentifierPath",
																					"referencedDeclaration": 768,
																					"src": "3565:14:8"
																				},
																				"referencedDeclaration": 768,
																				"src": "3565:14:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$768_storage_ptr",
																					"typeString": "struct ERC721A.TokenOwnership"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 940,
																	"initialValue": {
																		"baseExpression": {
																			"id": 937,
																			"name": "_ownerships",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 784,
																			"src": "3599:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$768_storage_$",
																				"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																			}
																		},
																		"id": 939,
																		"indexExpression": {
																			"id": 938,
																			"name": "curr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 925,
																			"src": "3611:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3599:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$768_storage",
																			"typeString": "struct ERC721A.TokenOwnership storage ref"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "3565:51:8"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 941,
																				"name": "ownership",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 936,
																				"src": "3635:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$768_memory_ptr",
																					"typeString": "struct ERC721A.TokenOwnership memory"
																				}
																			},
																			"id": 942,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3645:4:8",
																			"memberName": "addr",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 765,
																			"src": "3635:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 945,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3661:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 944,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3653:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 943,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3653:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3653:10:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "3635:28:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 951,
																	"nodeType": "IfStatement",
																	"src": "3631:85:8",
																	"trueBody": {
																		"id": 950,
																		"nodeType": "Block",
																		"src": "3665:51:8",
																		"statements": [
																			{
																				"expression": {
																					"id": 948,
																					"name": "ownership",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 936,
																					"src": "3691:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenOwnership_$768_memory_ptr",
																						"typeString": "struct ERC721A.TokenOwnership memory"
																					}
																				},
																				"functionReturnParameters": 916,
																				"id": 949,
																				"nodeType": "Return",
																				"src": "3684:16:8"
																			}
																		]
																	}
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 928,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "3531:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3539:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3531:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 953,
														"initializationExpression": {
															"assignments": [
																925
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 925,
																	"mutability": "mutable",
																	"name": "curr",
																	"nameLocation": "3515:4:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 953,
																	"src": "3507:12:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 924,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3507:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 927,
															"initialValue": {
																"id": 926,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 911,
																"src": "3522:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3507:22:8"
														},
														"loopExpression": {
															"expression": {
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "--",
																"prefix": false,
																"src": "3542:6:8",
																"subExpression": {
																	"id": 931,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "3542:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 933,
															"nodeType": "ExpressionStatement",
															"src": "3542:6:8"
														},
														"nodeType": "ForStatement",
														"src": "3502:225:8"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "455243373231413a20756e61626c6520746f2064657465726d696e6520746865206f776e6572206f6620746f6b656e",
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3753:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
																"typeString": "literal_string \"ERC721A: unable to determine the owner of token\""
															},
															"value": "ERC721A: unable to determine the owner of token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
																"typeString": "literal_string \"ERC721A: unable to determine the owner of token\""
															}
														],
														"id": 955,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "3746:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3746:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "3746:57:8"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "3112:188:8",
										"text": " Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around in the collection over time."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownershipOf",
									"nameLocation": "3315:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3335:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3327:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3327:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3326:17:8"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3367:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$768_memory_ptr",
													"typeString": "struct ERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 914,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 913,
														"name": "TokenOwnership",
														"nameLocations": [
															"3367:14:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 768,
														"src": "3367:14:8"
													},
													"referencedDeclaration": 768,
													"src": "3367:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$768_storage_ptr",
														"typeString": "struct ERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3366:23:8"
									},
									"scope": 1694,
									"src": "3306:505:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										48
									],
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "3946:51:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 970,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "3976:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 969,
															"name": "ownershipOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "3964:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$768_memory_ptr_$",
																"typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3964:20:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$768_memory_ptr",
															"typeString": "struct ERC721A.TokenOwnership memory"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3985:4:8",
													"memberName": "addr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 765,
													"src": "3964:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 968,
												"id": 973,
												"nodeType": "Return",
												"src": "3957:32:8"
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "3819:48:8",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "3882:7:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 965,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3919:8:8"
									},
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3898:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "3890:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3890:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3889:17:8"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "3937:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3937:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3936:9:8"
									},
									"scope": 1694,
									"src": "3873:124:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										145
									],
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "4133:31:8",
										"statements": [
											{
												"expression": {
													"id": 982,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "4151:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 981,
												"id": 983,
												"nodeType": "Return",
												"src": "4144:12:8"
											}
										]
									},
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "4005:53:8",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "4073:4:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 978,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4100:8:8"
									},
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4077:2:8"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "4118:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 979,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4118:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4117:15:8"
									},
									"scope": 1694,
									"src": "4064:100:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										151
									],
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "4304:33:8",
										"statements": [
											{
												"expression": {
													"id": 992,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 779,
													"src": "4322:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 991,
												"id": 993,
												"nodeType": "Return",
												"src": "4315:14:8"
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "4172:55:8",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "4242:6:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 988,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4271:8:8"
									},
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4248:2:8"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "4289:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 989,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4289:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4288:15:8"
									},
									"scope": 1694,
									"src": "4233:104:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										159
									],
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "4496:247:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1006,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "4523:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1005,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "4515:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4515:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4533:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															},
															"value": "ERC721Metadata: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															}
														],
														"id": 1004,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4507:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4507:76:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "4507:76:8"
											},
											{
												"assignments": [
													1012
												],
												"declarations": [
													{
														"constant": false,
														"id": 1012,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "4610:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1036,
														"src": "4596:21:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1011,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4596:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1015,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1013,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "4620:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4620:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4596:34:8"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1018,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "4654:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4648:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1016,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "4648:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4648:14:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4663:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4648:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4673:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4648:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4733:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4648:87:8",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1027,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "4701:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1028,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 998,
																				"src": "4710:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4718:8:8",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 565,
																			"src": "4710:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4710:18:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1025,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "4684:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4688:12:8",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "4684:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4684:45:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4677:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1023,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "4677:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 1032,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4677:53:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1003,
												"id": 1035,
												"nodeType": "Return",
												"src": "4641:94:8"
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "4345:57:8",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "4417:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1000,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4463:8:8"
									},
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4434:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "4426:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4426:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4425:17:8"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "4481:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1001,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4481:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4480:15:8"
									},
									"scope": 1694,
									"src": "4408:335:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "5057:28:8",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5075:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 1042,
												"id": 1044,
												"nodeType": "Return",
												"src": "5068:9:8"
											}
										]
									},
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "4751:234:8",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "5000:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5008:2:8"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "5042:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1040,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5042:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5041:15:8"
									},
									"scope": 1694,
									"src": "4991:94:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										88
									],
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "5209:351:8",
										"statements": [
											{
												"assignments": [
													1056
												],
												"declarations": [
													{
														"constant": false,
														"id": 1056,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5228:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1089,
														"src": "5220:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1055,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5220:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1061,
												"initialValue": {
													"arguments": [
														{
															"id": 1059,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "5252:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1057,
															"name": "ERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1694,
															"src": "5236:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721A_$1694_$",
																"typeString": "type(contract ERC721A)"
															}
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5244:7:8",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 975,
														"src": "5236:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5236:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5220:40:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1063,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "5279:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1064,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "5285:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5279:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5292:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
																"typeString": "literal_string \"ERC721A: approval to current owner\""
															},
															"value": "ERC721A: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
																"typeString": "literal_string \"ERC721A: approval to current owner\""
															}
														],
														"id": 1062,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5271:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5271:58:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "5271:58:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1070,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "5364:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5364:12:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1072,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "5380:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5364:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1075,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1056,
																		"src": "5406:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1076,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "5413:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5413:12:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1074,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "5389:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5389:37:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5364:62:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5441:59:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
																"typeString": "literal_string \"ERC721A: approve caller is not owner nor approved for all\""
															},
															"value": "ERC721A: approve caller is not owner nor approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
																"typeString": "literal_string \"ERC721A: approve caller is not owner nor approved for all\""
															}
														],
														"id": 1069,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5342:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:169:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "5342:169:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1084,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "5533:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1085,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "5537:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1086,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "5546:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1083,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "5524:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5524:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "5524:28:8"
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "5093:48:8",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5156:7:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1053,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5200:8:8"
									},
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5172:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "5164:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5164:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5184:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "5176:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5176:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5163:29:8"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5209:0:8"
									},
									"scope": 1694,
									"src": "5147:413:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										104
									],
									"body": {
										"id": 1110,
										"nodeType": "Block",
										"src": "5703:137:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1101,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "5730:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1100,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "5722:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5722:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5740:47:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
																"typeString": "literal_string \"ERC721A: approved query for nonexistent token\""
															},
															"value": "ERC721A: approved query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
																"typeString": "literal_string \"ERC721A: approved query for nonexistent token\""
															}
														],
														"id": 1099,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5714:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5714:74:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "5714:74:8"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1106,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "5808:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1108,
													"indexExpression": {
														"id": 1107,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "5824:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5808:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1098,
												"id": 1109,
												"nodeType": "Return",
												"src": "5801:31:8"
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "5568:52:8",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 1111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "5635:11:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1095,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5676:8:8"
									},
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5655:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "5647:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5647:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5646:17:8"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "5694:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5694:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5693:9:8"
									},
									"scope": 1694,
									"src": "5626:214:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										96
									],
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "5988:212:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1121,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "6007:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1122,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "6019:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6019:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6007:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20617070726f766520746f2063616c6c6572",
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6033:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
																"typeString": "literal_string \"ERC721A: approve to caller\""
															},
															"value": "ERC721A: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
																"typeString": "literal_string \"ERC721A: approve to caller\""
															}
														],
														"id": 1120,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5999:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5999:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "5999:63:8"
											},
											{
												"expression": {
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1128,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "6075:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1132,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1129,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "6094:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6094:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6075:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1133,
														"indexExpression": {
															"id": 1131,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1114,
															"src": "6108:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6075:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1134,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "6120:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6075:53:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1136,
												"nodeType": "ExpressionStatement",
												"src": "6075:53:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1138,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "6159:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6159:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1140,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1114,
															"src": "6173:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1141,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "6183:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1137,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "6144:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6144:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1143,
												"nodeType": "EmitStatement",
												"src": "6139:53:8"
											}
										]
									},
									"documentation": {
										"id": 1112,
										"nodeType": "StructuredDocumentation",
										"src": "5848:58:8",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "5921:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1118,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5979:8:8"
									},
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5947:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "5939:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5939:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "5962:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "5957:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5957:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5938:33:8"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:0:8"
									},
									"scope": 1694,
									"src": "5912:288:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										114
									],
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "6374:61:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1156,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "6392:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1158,
														"indexExpression": {
															"id": 1157,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "6411:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6392:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1160,
													"indexExpression": {
														"id": 1159,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "6418:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6392:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1161,
												"nodeType": "Return",
												"src": "6385:42:8"
											}
										]
									},
									"documentation": {
										"id": 1146,
										"nodeType": "StructuredDocumentation",
										"src": "6208:57:8",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "6280:16:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1152,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6350:8:8"
									},
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6305:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "6297:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6297:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6320:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "6312:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6312:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6296:33:8"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "6368:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6368:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6367:6:8"
									},
									"scope": 1694,
									"src": "6271:164:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										80
									],
									"body": {
										"id": 1180,
										"nodeType": "Block",
										"src": "6617:47:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1175,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "6638:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1176,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "6644:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1177,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "6648:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1174,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "6628:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6628:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "6628:28:8"
											}
										]
									},
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "6443:53:8",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 1181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6511:12:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1172,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6608:8:8"
									},
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6542:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "6534:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6534:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6565:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "6557:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6557:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6586:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "6578:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6523:77:8"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6617:0:8"
									},
									"scope": 1694,
									"src": "6502:162:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										70
									],
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "6854:58:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1193,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "6882:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1194,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "6888:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1195,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "6892:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6901:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1192,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1200,
															1230
														],
														"referencedDeclaration": 1230,
														"src": "6865:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6865:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "6865:39:8"
											}
										]
									},
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "6672:57:8",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6744:16:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1190,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6845:8:8"
									},
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6779:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "6771:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6771:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6802:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "6794:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6794:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6823:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "6815:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6815:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6760:77:8"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6854:0:8"
									},
									"scope": 1694,
									"src": "6735:177:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										60
									],
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "7131:207:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1214,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "7152:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1215,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "7158:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1216,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "7162:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1213,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "7142:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7142:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1218,
												"nodeType": "ExpressionStatement",
												"src": "7142:28:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1221,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1203,
																	"src": "7226:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1222,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1205,
																	"src": "7232:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1223,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1207,
																	"src": "7236:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1224,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1209,
																	"src": "7245:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1220,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1667,
																"src": "7203:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7203:48:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7266:53:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721A: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 1219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7181:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7181:149:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "7181:149:8"
											}
										]
									},
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "6920:57:8",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6992:16:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1211,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7122:8:8"
									},
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7027:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "7019:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7019:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7050:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "7042:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7042:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7071:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "7063:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7063:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "7102:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "7089:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1208,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7089:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7008:106:8"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7131:0:8"
									},
									"scope": 1694,
									"src": "6983:355:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "7656:48:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1238,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "7674:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1239,
														"name": "currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "7684:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7674:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1237,
												"id": 1241,
												"nodeType": "Return",
												"src": "7667:29:8"
											}
										]
									},
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "7346:241:8",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),"
									},
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7602:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7618:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "7610:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7610:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7609:17:8"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "7650:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7650:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7649:6:8"
									},
									"scope": 1694,
									"src": "7593:111:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1256,
										"nodeType": "Block",
										"src": "7770:46:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1251,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "7791:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1252,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "7795:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7805:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1250,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1257,
															1275
														],
														"referencedDeclaration": 1275,
														"src": "7781:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7781:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "7781:27:8"
											}
										]
									},
									"id": 1257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "7721:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7739:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "7731:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7731:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "7751:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "7743:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7743:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7730:30:8"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7770:0:8"
									},
									"scope": 1694,
									"src": "7712:104:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "8291:51:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1268,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "8308:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1269,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "8312:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1270,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "8322:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8329:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1267,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "8302:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bytes memory,bool)"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8302:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "8302:32:8"
											}
										]
									},
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "7824:349:8",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8188:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8216:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "8208:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8208:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "8237:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "8229:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8229:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "8269:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "8256:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1263,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8256:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8197:84:8"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8291:0:8"
									},
									"scope": 1694,
									"src": "8179:163:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "8729:1338:8",
										"statements": [
											{
												"assignments": [
													1288
												],
												"declarations": [
													{
														"constant": false,
														"id": 1288,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "8748:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1414,
														"src": "8740:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1287,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8740:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1290,
												"initialValue": {
													"id": 1289,
													"name": "currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 775,
													"src": "8763:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8740:35:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1292,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "8794:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8808:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8800:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1293,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8800:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8800:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8794:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8812:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d44a4129b83bd8f726e10653f1f05aa5a9f14d8c9c066d6e6701839279ddce3b",
																"typeString": "literal_string \"ERC721A: mint to the zero address\""
															},
															"value": "ERC721A: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d44a4129b83bd8f726e10653f1f05aa5a9f14d8c9c066d6e6701839279ddce3b",
																"typeString": "literal_string \"ERC721A: mint to the zero address\""
															}
														],
														"id": 1291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8786:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8786:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "8786:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1302,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "8867:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8879:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8867:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a207175616e74697479206d7573742062652067726561746572207468616e2030",
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8882:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dc1f9fb0e603971836d588a8edc31ad1917393079ad1425796c0e460d6033de1",
																"typeString": "literal_string \"ERC721A: quantity must be greater than 0\""
															},
															"value": "ERC721A: quantity must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dc1f9fb0e603971836d588a8edc31ad1917393079ad1425796c0e460d6033de1",
																"typeString": "literal_string \"ERC721A: quantity must be greater than 0\""
															}
														],
														"id": 1301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8859:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8859:66:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "8859:66:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8968:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8960:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1309,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8960:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8960:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1313,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "8972:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1314,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "8976:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1315,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "8990:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1308,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1680,
														"src": "8938:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8938:61:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "8938:61:8"
											},
											{
												"id": 1403,
												"nodeType": "UncheckedBlock",
												"src": "9248:739:8",
												"statements": [
													{
														"expression": {
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1318,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "9269:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$773_storage_$",
																			"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1320,
																	"indexExpression": {
																		"id": 1319,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1278,
																		"src": "9282:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9269:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$773_storage",
																		"typeString": "struct ERC721A.AddressData storage ref"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "9286:7:8",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 770,
																"src": "9269:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1324,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1280,
																		"src": "9305:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9297:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 1322,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9297:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9297:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "9269:45:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"id": 1327,
														"nodeType": "ExpressionStatement",
														"src": "9269:45:8"
													},
													{
														"expression": {
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1328,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "9325:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$773_storage_$",
																			"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1330,
																	"indexExpression": {
																		"id": 1329,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1278,
																		"src": "9338:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9325:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$773_storage",
																		"typeString": "struct ERC721A.AddressData storage ref"
																	}
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "9342:12:8",
																"memberName": "numberMinted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 772,
																"src": "9325:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1334,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1280,
																		"src": "9366:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9358:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 1332,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9358:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9358:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "9325:50:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"id": 1337,
														"nodeType": "ExpressionStatement",
														"src": "9325:50:8"
													},
													{
														"expression": {
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1338,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "9388:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$768_storage_$",
																			"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1340,
																	"indexExpression": {
																		"id": 1339,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1288,
																		"src": "9400:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9388:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$768_storage",
																		"typeString": "struct ERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1341,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "9414:4:8",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 765,
																"src": "9388:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1342,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "9421:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9388:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1344,
														"nodeType": "ExpressionStatement",
														"src": "9388:35:8"
													},
													{
														"expression": {
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1345,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "9434:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$768_storage_$",
																			"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1347,
																	"indexExpression": {
																		"id": 1346,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1288,
																		"src": "9446:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9434:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$768_storage",
																		"typeString": "struct ERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "9460:14:8",
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 767,
																"src": "9434:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1351,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "9484:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9490:9:8",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "9484:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9477:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1349,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "9477:6:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9477:23:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "9434:66:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1355,
														"nodeType": "ExpressionStatement",
														"src": "9434:66:8"
													},
													{
														"assignments": [
															1357
														],
														"declarations": [
															{
																"constant": false,
																"id": 1357,
																"mutability": "mutable",
																"name": "updatedIndex",
																"nameLocation": "9521:12:8",
																"nodeType": "VariableDeclaration",
																"scope": 1403,
																"src": "9513:20:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1356,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9513:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1359,
														"initialValue": {
															"id": 1358,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "9536:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9513:35:8"
													},
													{
														"body": {
															"id": 1397,
															"nodeType": "Block",
															"src": "9596:344:8",
															"statements": [
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 1372,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9633:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 1371,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9625:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1370,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9625:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1373,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9625:10:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1374,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1278,
																				"src": "9637:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1375,
																				"name": "updatedIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1357,
																				"src": "9641:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1369,
																			"name": "Transfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 14,
																			"src": "9616:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9616:38:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1377,
																	"nodeType": "EmitStatement",
																	"src": "9611:43:8"
																},
																{
																	"condition": {
																		"id": 1378,
																		"name": "safe",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1284,
																		"src": "9673:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1393,
																	"nodeType": "IfStatement",
																	"src": "9669:229:8",
																	"trueBody": {
																		"id": 1392,
																		"nodeType": "Block",
																		"src": "9679:219:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"hexValue": "30",
																											"id": 1383,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "9759:1:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											},
																											"value": "0"
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											}
																										],
																										"id": 1382,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "9751:7:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_address_$",
																											"typeString": "type(address)"
																										},
																										"typeName": {
																											"id": 1381,
																											"name": "address",
																											"nodeType": "ElementaryTypeName",
																											"src": "9751:7:8",
																											"typeDescriptions": {}
																										}
																									},
																									"id": 1384,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "9751:10:8",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"id": 1385,
																									"name": "to",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1278,
																									"src": "9763:2:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"id": 1386,
																									"name": "updatedIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1357,
																									"src": "9767:12:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"id": 1387,
																									"name": "_data",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1282,
																									"src": "9781:5:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes_memory_ptr",
																										"typeString": "bytes memory"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_bytes_memory_ptr",
																										"typeString": "bytes memory"
																									}
																								],
																								"id": 1380,
																								"name": "_checkOnERC721Received",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1667,
																								"src": "9728:22:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																									"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																								}
																							},
																							"id": 1388,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "9728:59:8",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"hexValue": "455243373231413a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																							"id": 1389,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9810:53:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																								"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
																							},
																							"value": "ERC721A: transfer to non ERC721Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																								"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
																							}
																						],
																						"id": 1379,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "9698:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (bool,string memory) pure"
																						}
																					},
																					"id": 1390,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "9698:184:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1391,
																				"nodeType": "ExpressionStatement",
																				"src": "9698:184:8"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"id": 1395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "9914:14:8",
																		"subExpression": {
																			"id": 1394,
																			"name": "updatedIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1357,
																			"src": "9914:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1396,
																	"nodeType": "ExpressionStatement",
																	"src": "9914:14:8"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1363,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1361,
																"src": "9577:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1364,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "9581:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9577:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1398,
														"initializationExpression": {
															"assignments": [
																1361
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1361,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "9574:1:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1398,
																	"src": "9566:9:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1360,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9566:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1362,
															"nodeType": "VariableDeclarationStatement",
															"src": "9566:9:8"
														},
														"loopExpression": {
															"expression": {
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "9591:3:8",
																"subExpression": {
																	"id": 1366,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1361,
																	"src": "9591:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1368,
															"nodeType": "ExpressionStatement",
															"src": "9591:3:8"
														},
														"nodeType": "ForStatement",
														"src": "9561:379:8"
													},
													{
														"expression": {
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1399,
																"name": "currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "9952:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1400,
																"name": "updatedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "9967:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9952:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1402,
														"nodeType": "ExpressionStatement",
														"src": "9952:27:8"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10028:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10020:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1405,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10020:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10020:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1409,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "10032:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1410,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "10036:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1411,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "10050:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1404,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "9999:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9999:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "9999:60:8"
											}
										]
									},
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "8350:245:8",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
									},
									"id": 1415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8610:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8634:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "8626:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8626:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "8655:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "8647:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "8687:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "8674:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1281,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8674:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "safe",
												"nameLocation": "8708:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "8703:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1283,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8703:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8615:104:8"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8729:0:8"
									},
									"scope": 1694,
									"src": "8601:1466:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "10425:1830:8",
										"statements": [
											{
												"assignments": [
													1427
												],
												"declarations": [
													{
														"constant": false,
														"id": 1427,
														"mutability": "mutable",
														"name": "prevOwnership",
														"nameLocation": "10458:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1579,
														"src": "10436:35:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$768_memory_ptr",
															"typeString": "struct ERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 1426,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1425,
																"name": "TokenOwnership",
																"nameLocations": [
																	"10436:14:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 768,
																"src": "10436:14:8"
															},
															"referencedDeclaration": 768,
															"src": "10436:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$768_storage_ptr",
																"typeString": "struct ERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1431,
												"initialValue": {
													"arguments": [
														{
															"id": 1429,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "10486:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1428,
														"name": "ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "10474:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$768_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10474:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$768_memory_ptr",
														"typeString": "struct ERC721A.TokenOwnership memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10436:58:8"
											},
											{
												"assignments": [
													1433
												],
												"declarations": [
													{
														"constant": false,
														"id": 1433,
														"mutability": "mutable",
														"name": "isApprovedOrOwner",
														"nameLocation": "10512:17:8",
														"nodeType": "VariableDeclaration",
														"scope": 1579,
														"src": "10507:22:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1432,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10507:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1454,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1434,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "10533:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10533:12:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 1436,
																			"name": "prevOwnership",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1427,
																			"src": "10549:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$768_memory_ptr",
																				"typeString": "struct ERC721A.TokenOwnership memory"
																			}
																		},
																		"id": 1437,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10563:4:8",
																		"memberName": "addr",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 765,
																		"src": "10549:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "10533:34:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1440,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1422,
																				"src": "10592:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1439,
																			"name": "getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1111,
																			"src": "10580:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10580:20:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1442,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "10604:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10604:12:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "10580:36:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "10533:83:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1447,
																			"name": "prevOwnership",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1427,
																			"src": "10646:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$768_memory_ptr",
																				"typeString": "struct ERC721A.TokenOwnership memory"
																			}
																		},
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10660:4:8",
																		"memberName": "addr",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 765,
																		"src": "10646:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1449,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "10666:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10666:12:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1446,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "10629:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10629:50:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10533:146:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1453,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10532:148:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10507:173:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1456,
															"name": "isApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "10701:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10720:52:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
																"typeString": "literal_string \"ERC721A: transfer caller is not owner nor approved\""
															},
															"value": "ERC721A: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
																"typeString": "literal_string \"ERC721A: transfer caller is not owner nor approved\""
															}
														],
														"id": 1455,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10693:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10693:80:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "10693:80:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1461,
																	"name": "prevOwnership",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1427,
																	"src": "10794:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$768_memory_ptr",
																		"typeString": "struct ERC721A.TokenOwnership memory"
																	}
																},
																"id": 1462,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10808:4:8",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 765,
																"src": "10794:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1463,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "10816:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10794:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10822:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
																"typeString": "literal_string \"ERC721A: transfer from incorrect owner\""
															},
															"value": "ERC721A: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
																"typeString": "literal_string \"ERC721A: transfer from incorrect owner\""
															}
														],
														"id": 1460,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10786:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10786:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "10786:77:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1469,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "10882:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10896:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10888:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1470,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10888:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10888:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10882:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10900:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
																"typeString": "literal_string \"ERC721A: transfer to the zero address\""
															},
															"value": "ERC721A: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
																"typeString": "literal_string \"ERC721A: transfer to the zero address\""
															}
														],
														"id": 1468,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10874:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10874:66:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "10874:66:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1479,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "10975:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1480,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "10981:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1481,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "10985:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10994:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1478,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1680,
														"src": "10953:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10953:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1484,
												"nodeType": "ExpressionStatement",
												"src": "10953:43:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11078:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11070:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1486,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11070:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11070:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1490,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "11082:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1491,
																"name": "prevOwnership",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1427,
																"src": "11091:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$768_memory_ptr",
																	"typeString": "struct ERC721A.TokenOwnership memory"
																}
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11105:4:8",
															"memberName": "addr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 765,
															"src": "11091:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1485,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "11061:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11061:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1494,
												"nodeType": "ExpressionStatement",
												"src": "11061:49:8"
											},
											{
												"id": 1565,
												"nodeType": "UncheckedBlock",
												"src": "11377:773:8",
												"statements": [
													{
														"expression": {
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1495,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "11398:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$773_storage_$",
																			"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1497,
																	"indexExpression": {
																		"id": 1496,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "11411:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11398:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$773_storage",
																		"typeString": "struct ERC721A.AddressData storage ref"
																	}
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "11417:7:8",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 770,
																"src": "11398:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11428:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11398:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"id": 1501,
														"nodeType": "ExpressionStatement",
														"src": "11398:31:8"
													},
													{
														"expression": {
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1502,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "11440:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$773_storage_$",
																			"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1504,
																	"indexExpression": {
																		"id": 1503,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1420,
																		"src": "11453:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11440:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$773_storage",
																		"typeString": "struct ERC721A.AddressData storage ref"
																	}
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "11457:7:8",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 770,
																"src": "11440:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11468:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11440:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"id": 1508,
														"nodeType": "ExpressionStatement",
														"src": "11440:29:8"
													},
													{
														"expression": {
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1509,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "11482:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$768_storage_$",
																			"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1511,
																	"indexExpression": {
																		"id": 1510,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1422,
																		"src": "11494:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11482:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$768_storage",
																		"typeString": "struct ERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1512,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "11503:4:8",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 765,
																"src": "11482:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1513,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "11510:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11482:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1515,
														"nodeType": "ExpressionStatement",
														"src": "11482:30:8"
													},
													{
														"expression": {
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1516,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "11523:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$768_storage_$",
																			"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1518,
																	"indexExpression": {
																		"id": 1517,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1422,
																		"src": "11535:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11523:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$768_storage",
																		"typeString": "struct ERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "11544:14:8",
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 767,
																"src": "11523:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1522,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "11568:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11574:9:8",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "11568:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11561:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1520,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "11561:6:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11561:23:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "11523:61:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1526,
														"nodeType": "ExpressionStatement",
														"src": "11523:61:8"
													},
													{
														"assignments": [
															1528
														],
														"declarations": [
															{
																"constant": false,
																"id": 1528,
																"mutability": "mutable",
																"name": "nextTokenId",
																"nameLocation": "11832:11:8",
																"nodeType": "VariableDeclaration",
																"scope": 1565,
																"src": "11824:19:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1527,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11824:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1532,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1529,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "11846:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11856:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11846:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11824:33:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1533,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "11872:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$768_storage_$",
																			"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1535,
																	"indexExpression": {
																		"id": 1534,
																		"name": "nextTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1528,
																		"src": "11884:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11872:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$768_storage",
																		"typeString": "struct ERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11897:4:8",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 765,
																"src": "11872:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11913:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11905:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1537,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11905:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11905:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11872:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1564,
														"nodeType": "IfStatement",
														"src": "11868:275:8",
														"trueBody": {
															"id": 1563,
															"nodeType": "Block",
															"src": "11917:226:8",
															"statements": [
																{
																	"condition": {
																		"arguments": [
																			{
																				"id": 1543,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1528,
																				"src": "11944:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1542,
																			"name": "_exists",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1243,
																			"src": "11936:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (uint256) view returns (bool)"
																			}
																		},
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11936:20:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1562,
																	"nodeType": "IfStatement",
																	"src": "11932:200:8",
																	"trueBody": {
																		"id": 1561,
																		"nodeType": "Block",
																		"src": "11958:174:8",
																		"statements": [
																			{
																				"expression": {
																					"id": 1551,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"baseExpression": {
																								"id": 1545,
																								"name": "_ownerships",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 784,
																								"src": "11977:11:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$768_storage_$",
																									"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																								}
																							},
																							"id": 1547,
																							"indexExpression": {
																								"id": 1546,
																								"name": "nextTokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1528,
																								"src": "11989:11:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "11977:24:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$768_storage",
																								"typeString": "struct ERC721A.TokenOwnership storage ref"
																							}
																						},
																						"id": 1548,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "12002:4:8",
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 765,
																						"src": "11977:29:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 1549,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1427,
																							"src": "12009:13:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$768_memory_ptr",
																								"typeString": "struct ERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 1550,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "12023:4:8",
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 765,
																						"src": "12009:18:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "11977:50:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 1552,
																				"nodeType": "ExpressionStatement",
																				"src": "11977:50:8"
																			},
																			{
																				"expression": {
																					"id": 1559,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"baseExpression": {
																								"id": 1553,
																								"name": "_ownerships",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 784,
																								"src": "12046:11:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$768_storage_$",
																									"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																								}
																							},
																							"id": 1555,
																							"indexExpression": {
																								"id": 1554,
																								"name": "nextTokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1528,
																								"src": "12058:11:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "12046:24:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$768_storage",
																								"typeString": "struct ERC721A.TokenOwnership storage ref"
																							}
																						},
																						"id": 1556,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "12071:14:8",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 767,
																						"src": "12046:39:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 1557,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1427,
																							"src": "12088:13:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$768_memory_ptr",
																								"typeString": "struct ERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 1558,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "12102:14:8",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 767,
																						"src": "12088:28:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"src": "12046:70:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				"id": 1560,
																				"nodeType": "ExpressionStatement",
																				"src": "12046:70:8"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1567,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "12176:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1568,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "12182:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1569,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "12186:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1566,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "12167:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12167:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1571,
												"nodeType": "EmitStatement",
												"src": "12162:32:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1573,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "12226:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1574,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "12232:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1575,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "12236:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12245:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1572,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "12205:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12205:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1578,
												"nodeType": "ExpressionStatement",
												"src": "12205:42:8"
											}
										]
									},
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "10075:240:8",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "10330:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10358:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "10350:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10350:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10381:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "10373:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10373:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10402:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "10394:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10394:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10339:77:8"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10425:0:8"
									},
									"scope": 1694,
									"src": "10321:1934:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1602,
										"nodeType": "Block",
										"src": "12477:92:8",
										"statements": [
											{
												"expression": {
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1590,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "12488:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1592,
														"indexExpression": {
															"id": 1591,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "12504:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12488:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1593,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "12515:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12488:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1595,
												"nodeType": "ExpressionStatement",
												"src": "12488:29:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1597,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "12542:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1598,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "12549:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1599,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "12553:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1596,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "12533:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12533:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1601,
												"nodeType": "EmitStatement",
												"src": "12528:33:8"
											}
										]
									},
									"documentation": {
										"id": 1581,
										"nodeType": "StructuredDocumentation",
										"src": "12263:104:8",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 1603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "12382:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12409:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "12401:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12401:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12430:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "12422:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12422:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12456:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "12448:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12448:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12390:78:8"
									},
									"returnParameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12477:0:8"
									},
									"scope": 1694,
									"src": "12373:196:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1666,
										"nodeType": "Block",
										"src": "13295:643:8",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1617,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "13310:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13313:10:8",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 178,
														"src": "13310:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13310:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1664,
													"nodeType": "Block",
													"src": "13893:38:8",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13915:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1616,
															"id": 1663,
															"nodeType": "Return",
															"src": "13908:11:8"
														}
													]
												},
												"id": 1665,
												"nodeType": "IfStatement",
												"src": "13306:625:8",
												"trueBody": {
													"id": 1661,
													"nodeType": "Block",
													"src": "13327:560:8",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1641,
																		"nodeType": "Block",
																		"src": "13443:97:8",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1639,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1633,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1631,
																						"src": "13469:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"arguments": [
																									{
																										"id": 1635,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1608,
																										"src": "13495:2:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1634,
																									"name": "IERC721Receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 133,
																									"src": "13479:15:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
																										"typeString": "type(contract IERC721Receiver)"
																									}
																								},
																								"id": 1636,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13479:19:8",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC721Receiver_$133",
																									"typeString": "contract IERC721Receiver"
																								}
																							},
																							"id": 1637,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "13499:16:8",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 132,
																							"src": "13479:36:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																								"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																							}
																						},
																						"id": 1638,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "13516:8:8",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "13479:45:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "13469:55:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 1616,
																				"id": 1640,
																				"nodeType": "Return",
																				"src": "13462:62:8"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1642,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1632,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1631,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "13435:6:8",
																				"nodeType": "VariableDeclaration",
																				"scope": 1642,
																				"src": "13428:13:8",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1630,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "13428:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "13427:15:8"
																	},
																	"src": "13419:121:8"
																},
																{
																	"block": {
																		"id": 1658,
																		"nodeType": "Block",
																		"src": "13569:307:8",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1649,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1646,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1644,
																							"src": "13592:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1647,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "13599:6:8",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "13592:13:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1648,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13609:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "13592:18:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1656,
																					"nodeType": "Block",
																					"src": "13722:139:8",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "13754:88:8",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "13792:2:8",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "13796:6:8"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "13788:3:8"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "13788:15:8"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "13811:6:8"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "13805:5:8"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "13805:13:8"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "13781:6:8"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "13781:38:8"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "13781:38:8"
																									}
																								]
																							},
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 1644,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "13796:6:8",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1644,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "13811:6:8",
																									"valueSize": 1
																								}
																							],
																							"id": 1655,
																							"nodeType": "InlineAssembly",
																							"src": "13745:97:8"
																						}
																					]
																				},
																				"id": 1657,
																				"nodeType": "IfStatement",
																				"src": "13588:273:8",
																				"trueBody": {
																					"id": 1654,
																					"nodeType": "Block",
																					"src": "13612:104:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243373231413a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 1651,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "13642:53:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																											"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721A: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																											"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 1650,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "13635:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1652,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13635:61:8",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1653,
																							"nodeType": "ExpressionStatement",
																							"src": "13635:61:8"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1659,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1645,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1644,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "13561:6:8",
																				"nodeType": "VariableDeclaration",
																				"scope": 1659,
																				"src": "13548:19:8",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1643,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "13548:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "13547:21:8"
																	},
																	"src": "13541:335:8"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1624,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "13383:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13383:12:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1626,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1606,
																		"src": "13397:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1627,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1610,
																		"src": "13403:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1628,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1612,
																		"src": "13412:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1621,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1608,
																				"src": "13362:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1620,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 133,
																			"src": "13346:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13346:19:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$133",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13366:16:8",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 132,
																	"src": "13346:36:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13346:72:8",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1660,
															"nodeType": "TryStatement",
															"src": "13342:534:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1604,
										"nodeType": "StructuredDocumentation",
										"src": "12577:551:8",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "13143:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13184:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "13176:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13176:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13207:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "13199:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13199:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13228:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "13220:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13220:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "13259:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "13246:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1611,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13246:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13165:106:8"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "13289:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1614,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13289:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13288:6:8"
									},
									"scope": 1694,
									"src": "13134:804:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "14583:2:8",
										"statements": []
									},
									"documentation": {
										"id": 1668,
										"nodeType": "StructuredDocumentation",
										"src": "13946:474:8",
										"text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`."
									},
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "14435:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14475:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "14467:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14467:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14498:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "14490:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14490:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "14519:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "14511:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14511:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "14550:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "14542:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14542:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14456:109:8"
									},
									"returnParameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14583:0:8"
									},
									"scope": 1694,
									"src": "14426:159:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1692,
										"nodeType": "Block",
										"src": "15153:2:8",
										"statements": []
									},
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "14593:398:8",
										"text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n minting.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero."
									},
									"id": 1693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "15006:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15045:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "15037:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15037:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15068:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "15060:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15060:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "15089:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "15081:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15081:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15120:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "15112:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15112:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15026:109:8"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15153:0:8"
									},
									"scope": 1694,
									"src": "14997:158:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1695,
							"src": "961:14197:8",
							"usedErrors": []
						}
					],
					"src": "59:15099:8"
				},
				"id": 8
			}
		}
	}
}