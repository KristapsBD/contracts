{
	"id": "16465630861d0ea40fb6542b029b3cf5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Gluttony.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport \"./ERC721A.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\ncontract Gluttony is ERC721A, Ownable, ReentrancyGuard {\r\n    using Strings for uint256;\r\n\r\n    uint256 public PRICE;\r\n    uint256 public MAX_SUPPLY;\r\n    string private BASE_URI;\r\n    uint256 public FREE_MINT_LIMIT_PER_WALLET;\r\n    uint256 public MAX_MINT_AMOUNT_PER_TX;\r\n    bool public IS_SALE_ACTIVE;\r\n    uint256 public FREE_MINT_IS_ALLOWED_UNTIL; // Free mint is allowed until x mint\r\n    bool public METADATA_FROZEN;\r\n\r\n    mapping(address => uint256) private freeMintCountMap;\r\n\r\n    constructor(uint256 price, uint256 maxSupply, string memory baseUri, uint256 freeMintAllowance, uint256 maxMintPerTx, bool isSaleActive, uint256 freeMintIsAllowedUntil) ERC721A(\"Gluttony\", \"GLT-7DS\") {\r\n        PRICE = price;\r\n        MAX_SUPPLY = maxSupply;\r\n        BASE_URI = baseUri;\r\n        FREE_MINT_LIMIT_PER_WALLET = freeMintAllowance;\r\n        MAX_MINT_AMOUNT_PER_TX = maxMintPerTx;\r\n        IS_SALE_ACTIVE = isSaleActive;\r\n        FREE_MINT_IS_ALLOWED_UNTIL = freeMintIsAllowedUntil;\r\n    }\r\n\r\n    /** FREE MINT **/\r\n\r\n    function updateFreeMintCount(address minter, uint256 count) private {\r\n        freeMintCountMap[minter] += count;\r\n    }\r\n\r\n    /** GETTERS **/\r\n\r\n    function _baseURI() internal view virtual override returns (string memory) {\r\n        return BASE_URI;\r\n    }\r\n\r\n    /** SETTERS **/\r\n\r\n    function setPrice(uint256 customPrice) external onlyOwner {\r\n        PRICE = customPrice;\r\n    }\r\n\r\n    function lowerMaxSupply(uint256 newMaxSupply) external onlyOwner {\r\n        require(newMaxSupply < MAX_SUPPLY, \"Invalid new max supply\");\r\n        require(newMaxSupply >= currentIndex, \"Invalid new max supply\");\r\n        MAX_SUPPLY = newMaxSupply;\r\n    }\r\n\r\n    function setBaseURI(string memory customBaseURI_) external onlyOwner {\r\n        require(!METADATA_FROZEN, \"Metadata frozen!\");\r\n        BASE_URI = customBaseURI_;\r\n    }\r\n\r\n    function setFreeMintAllowance(uint256 freeMintAllowance) external onlyOwner {\r\n        FREE_MINT_LIMIT_PER_WALLET = freeMintAllowance;\r\n    }\r\n\r\n    function setMaxMintPerTx(uint256 maxMintPerTx) external onlyOwner {\r\n        MAX_MINT_AMOUNT_PER_TX = maxMintPerTx;\r\n    }\r\n\r\n    function setSaleActive(bool saleIsActive) external onlyOwner {\r\n        IS_SALE_ACTIVE = saleIsActive;\r\n    }\r\n\r\n    function setFreeMintAllowedUntil(uint256 freeMintIsAllowedUntil) external onlyOwner {\r\n        FREE_MINT_IS_ALLOWED_UNTIL = freeMintIsAllowedUntil;\r\n    }\r\n\r\n    function freezeMetadata() external onlyOwner {\r\n        METADATA_FROZEN = true;\r\n    }\r\n\r\n    /** MINT **/\r\n\r\n    modifier mintCompliance(uint256 _mintAmount) {\r\n        require(_mintAmount > 0 && _mintAmount <= MAX_MINT_AMOUNT_PER_TX, \"Invalid mint amount!\");\r\n        require(currentIndex + _mintAmount <= MAX_SUPPLY, \"Max supply exceeded!\");\r\n        _;\r\n    }\r\n\r\n    function mint(uint256 _mintAmount) public payable mintCompliance(_mintAmount) {\r\n        require(IS_SALE_ACTIVE, \"Sale is not active!\");\r\n\r\n        uint256 price = PRICE * _mintAmount;\r\n\r\n        if (currentIndex < FREE_MINT_IS_ALLOWED_UNTIL) {\r\n            uint256 remainingFreeMint = FREE_MINT_LIMIT_PER_WALLET - freeMintCountMap[msg.sender];\r\n            if (remainingFreeMint > 0) {\r\n                if (_mintAmount >= remainingFreeMint) {\r\n                    price -= remainingFreeMint * PRICE;\r\n                    updateFreeMintCount(msg.sender, remainingFreeMint);\r\n                } else {\r\n                    price -= _mintAmount * PRICE;\r\n                    updateFreeMintCount(msg.sender, _mintAmount);\r\n                }\r\n            }\r\n        }\r\n\r\n        require(msg.value >= price, \"Insufficient funds!\");\r\n\r\n        _safeMint(msg.sender, _mintAmount);\r\n    }\r\n\r\n    function mintOwner(address _to, uint256 _mintAmount) public mintCompliance(_mintAmount) onlyOwner {\r\n        _safeMint(_to, _mintAmount);\r\n    }\r\n\r\n    /** PAYOUT **/\r\n\r\n    address private constant payoutAddress =\r\n    0xc919cE1b37Fc4e0405885a3350CC153B27dd06e0;\r\n\r\n    function withdraw() public onlyOwner nonReentrant {\r\n        uint256 balance = address(this).balance;\r\n\r\n        Address.sendValue(payable(payoutAddress), balance);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\r\nimport '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';\r\nimport '@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol';\r\nimport '@openzeppelin/contracts/utils/Address.sol';\r\nimport '@openzeppelin/contracts/utils/Context.sol';\r\nimport '@openzeppelin/contracts/utils/Strings.sol';\r\nimport '@openzeppelin/contracts/utils/introspection/ERC165.sol';\r\n\r\n/**\r\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\r\n * the Metadata extension. Built to optimize for lower gas during batch mints.\r\n *\r\n * Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..).\r\n *\r\n * Does not support burning tokens to address(0).\r\n *\r\n * Assumes that an owner cannot have more than the 2**128 - 1 (max value of uint128) of supply\r\n */\r\ncontract ERC721A is Context, ERC165, IERC721, IERC721Metadata {\r\n    using Address for address;\r\n    using Strings for uint256;\r\n\r\n    struct TokenOwnership {\r\n        address addr;\r\n        uint64 startTimestamp;\r\n    }\r\n\r\n    struct AddressData {\r\n        uint128 balance;\r\n        uint128 numberMinted;\r\n    }\r\n\r\n    uint256 internal currentIndex;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    // Mapping from token ID to ownership details\r\n    // An empty struct value does not necessarily mean the token is unowned. See ownershipOf implementation for details.\r\n    mapping(uint256 => TokenOwnership) internal _ownerships;\r\n\r\n    // Mapping owner address to address data\r\n    mapping(address => AddressData) private _addressData;\r\n\r\n    // Mapping from token ID to approved address\r\n    mapping(uint256 => address) private _tokenApprovals;\r\n\r\n    // Mapping from owner to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return currentIndex;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n        interfaceId == type(IERC721).interfaceId ||\r\n        interfaceId == type(IERC721Metadata).interfaceId ||\r\n        super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner) public view override returns (uint256) {\r\n        require(owner != address(0), 'ERC721A: balance query for the zero address');\r\n        return uint256(_addressData[owner].balance);\r\n    }\r\n\r\n    function _numberMinted(address owner) internal view returns (uint256) {\r\n        require(owner != address(0), 'ERC721A: number minted query for the zero address');\r\n        return uint256(_addressData[owner].numberMinted);\r\n    }\r\n\r\n    /**\r\n     * Gas spent here starts off proportional to the maximum mint batch size.\r\n     * It gradually moves to O(1) as tokens get transferred around in the collection over time.\r\n     */\r\n    function ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {\r\n        require(_exists(tokenId), 'ERC721A: owner query for nonexistent token');\r\n\r\n    unchecked {\r\n        for (uint256 curr = tokenId; curr >= 0; curr--) {\r\n            TokenOwnership memory ownership = _ownerships[curr];\r\n            if (ownership.addr != address(0)) {\r\n                return ownership;\r\n            }\r\n        }\r\n    }\r\n\r\n        revert('ERC721A: unable to determine the owner of token');\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view override returns (address) {\r\n        return ownershipOf(tokenId).addr;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        require(_exists(tokenId), 'ERC721Metadata: URI query for nonexistent token');\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '';\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, can be overriden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) public override {\r\n        address owner = ERC721A.ownerOf(tokenId);\r\n        require(to != owner, 'ERC721A: approval to current owner');\r\n\r\n        require(\r\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\r\n            'ERC721A: approve caller is not owner nor approved for all'\r\n        );\r\n\r\n        _approve(to, tokenId, owner);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(uint256 tokenId) public view override returns (address) {\r\n        require(_exists(tokenId), 'ERC721A: approved query for nonexistent token');\r\n\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public override {\r\n        require(operator != _msgSender(), 'ERC721A: approve to caller');\r\n\r\n        _operatorApprovals[_msgSender()][operator] = approved;\r\n        emit ApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public override {\r\n        _transfer(from, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public override {\r\n        safeTransferFrom(from, to, tokenId, '');\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) public override {\r\n        _transfer(from, to, tokenId);\r\n        require(\r\n            _checkOnERC721Received(from, to, tokenId, _data),\r\n            'ERC721A: transfer to non ERC721Receiver implementer'\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `tokenId` exists.\r\n     *\r\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\r\n     *\r\n     * Tokens start existing when they are minted (`_mint`),\r\n     */\r\n    function _exists(uint256 tokenId) internal view returns (bool) {\r\n        return tokenId < currentIndex;\r\n    }\r\n\r\n    function _safeMint(address to, uint256 quantity) internal {\r\n        _safeMint(to, quantity, '');\r\n    }\r\n\r\n    /**\r\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(\r\n        address to,\r\n        uint256 quantity,\r\n        bytes memory _data\r\n    ) internal {\r\n        _mint(to, quantity, _data, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _mint(\r\n        address to,\r\n        uint256 quantity,\r\n        bytes memory _data,\r\n        bool safe\r\n    ) internal {\r\n        uint256 startTokenId = currentIndex;\r\n        require(to != address(0), 'ERC721A: mint to the zero address');\r\n        require(quantity != 0, 'ERC721A: quantity must be greater than 0');\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are incredibly unrealistic.\r\n        // balance or numberMinted overflow if current value of either + quantity > 3.4e38 (2**128) - 1\r\n        // updatedIndex overflows if currentIndex + quantity > 1.56e77 (2**256) - 1\r\n    unchecked {\r\n        _addressData[to].balance += uint128(quantity);\r\n        _addressData[to].numberMinted += uint128(quantity);\r\n\r\n        _ownerships[startTokenId].addr = to;\r\n        _ownerships[startTokenId].startTimestamp = uint64(block.timestamp);\r\n\r\n        uint256 updatedIndex = startTokenId;\r\n\r\n        for (uint256 i; i < quantity; i++) {\r\n            emit Transfer(address(0), to, updatedIndex);\r\n            if (safe) {\r\n                require(\r\n                    _checkOnERC721Received(address(0), to, updatedIndex, _data),\r\n                    'ERC721A: transfer to non ERC721Receiver implementer'\r\n                );\r\n            }\r\n\r\n            updatedIndex++;\r\n        }\r\n\r\n        currentIndex = updatedIndex;\r\n    }\r\n\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) private {\r\n        TokenOwnership memory prevOwnership = ownershipOf(tokenId);\r\n\r\n        bool isApprovedOrOwner = (_msgSender() == prevOwnership.addr ||\r\n        getApproved(tokenId) == _msgSender() ||\r\n        isApprovedForAll(prevOwnership.addr, _msgSender()));\r\n\r\n        require(isApprovedOrOwner, 'ERC721A: transfer caller is not owner nor approved');\r\n\r\n        require(prevOwnership.addr == from, 'ERC721A: transfer from incorrect owner');\r\n        require(to != address(0), 'ERC721A: transfer to the zero address');\r\n\r\n        _beforeTokenTransfers(from, to, tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner\r\n        _approve(address(0), tokenId, prevOwnership.addr);\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\r\n    unchecked {\r\n        _addressData[from].balance -= 1;\r\n        _addressData[to].balance += 1;\r\n\r\n        _ownerships[tokenId].addr = to;\r\n        _ownerships[tokenId].startTimestamp = uint64(block.timestamp);\r\n\r\n        // If the ownership slot of tokenId+1 is not explicitly set, that means the transfer initiator owns it.\r\n        // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\r\n        uint256 nextTokenId = tokenId + 1;\r\n        if (_ownerships[nextTokenId].addr == address(0)) {\r\n            if (_exists(nextTokenId)) {\r\n                _ownerships[nextTokenId].addr = prevOwnership.addr;\r\n                _ownerships[nextTokenId].startTimestamp = prevOwnership.startTimestamp;\r\n            }\r\n        }\r\n    }\r\n\r\n        emit Transfer(from, to, tokenId);\r\n        _afterTokenTransfers(from, to, tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * Emits a {Approval} event.\r\n     */\r\n    function _approve(\r\n        address to,\r\n        uint256 tokenId,\r\n        address owner\r\n    ) private {\r\n        _tokenApprovals[tokenId] = to;\r\n        emit Approval(owner, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\r\n     * The call is not executed if the target address is not a contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param _data bytes optional data to send along with the call\r\n     * @return bool whether the call correctly returned the expected magic value\r\n     */\r\n    function _checkOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) private returns (bool) {\r\n        if (to.isContract()) {\r\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\r\n                return retval == IERC721Receiver(to).onERC721Received.selector;\r\n            } catch (bytes memory reason) {\r\n                if (reason.length == 0) {\r\n                    revert('ERC721A: transfer to non ERC721Receiver implementer');\r\n                } else {\r\n                    assembly {\r\n                        revert(add(32, reason), mload(reason))\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\r\n     *\r\n     * startTokenId - the first token id to be transferred\r\n     * quantity - the amount to be transferred\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     */\r\n    function _beforeTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\r\n     * minting.\r\n     *\r\n     * startTokenId - the first token id to be transferred\r\n     * quantity - the amount to be transferred\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _afterTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n}"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201c964e8bcd19b5c6ee6e2bd43879b34ccad3d37246c2e4ec1913a9a91f3c0f1464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c964e8bcd19b5c6ee6e2bd43879b34ccad3d37246c2e4ec1913a9a91f3c0f1464736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP7 0x4E DUP12 0xCD NOT 0xB5 0xC6 0xEE PUSH15 0x2BD43879B34CCAD3D37246C2E4EC19 SGT 0xA9 0xA9 0x1F EXTCODECOPY 0xF EQ PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:8111:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8111:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c964e8bcd19b5c6ee6e2bd43879b34ccad3d37246c2e4ec1913a9a91f3c0f1464736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP7 0x4E DUP12 0xCD NOT 0xB5 0xC6 0xEE PUSH15 0x2BD43879B34CCAD3D37246C2E4EC19 SGT 0xA9 0xA9 0x1F EXTCODECOPY 0xF EQ PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:8111:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c964e8bcd19b5c6ee6e2bd43879b34ccad3d37246c2e4ec1913a9a91f3c0f1464736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ERC721A.sol",
								"contracts/Gluttony.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220aeef44b26d2bbc650eaa8906df2621dabb874bbe181c635e5cfbbf8e1ea64ecd64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aeef44b26d2bbc650eaa8906df2621dabb874bbe181c635e5cfbbf8e1ea64ecd64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xEF DIFFICULTY 0xB2 PUSH14 0x2BBC650EAA8906DF2621DABB874B 0xBE XOR SHR PUSH4 0x5E5CFBBF DUP15 0x1E 0xA6 0x4E 0xCD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "161:2235:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;161:2235:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aeef44b26d2bbc650eaa8906df2621dabb874bbe181c635e5cfbbf8e1ea64ecd64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xEF DIFFICULTY 0xB2 PUSH14 0x2BBC650EAA8906DF2621DABB874B 0xBE XOR SHR PUSH4 0x5E5CFBBF DUP15 0x1E 0xA6 0x4E 0xCD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "161:2235:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220aeef44b26d2bbc650eaa8906df2621dabb874bbe181c635e5cfbbf8e1ea64ecd64736f6c63430008110033",
									".code": [
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ERC721A.sol",
								"contracts/Gluttony.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..). Does not support burning tokens to address(0). Assumes that an owner cannot have more than the 2**128 - 1 (max value of uint128) of supply",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC721A.sol\":961:15158  contract ERC721A is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC721A.sol\":2002:2118  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ERC721A.sol\":2069:2074  _name */\n  0x01\n    /* \"contracts/ERC721A.sol\":2069:2082  _name = name_ */\n  tag_6\n    /* \"contracts/ERC721A.sol\":2077:2082  name_ */\n  dup4\n    /* \"contracts/ERC721A.sol\":2069:2074  _name */\n  dup3\n    /* \"contracts/ERC721A.sol\":2069:2082  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/ERC721A.sol\":2093:2100  _symbol */\n  0x02\n    /* \"contracts/ERC721A.sol\":2093:2110  _symbol = symbol_ */\n  tag_8\n    /* \"contracts/ERC721A.sol\":2103:2110  symbol_ */\n  dup3\n    /* \"contracts/ERC721A.sol\":2093:2100  _symbol */\n  dup3\n    /* \"contracts/ERC721A.sol\":2093:2110  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/ERC721A.sol\":2002:2118  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/ERC721A.sol\":961:15158  contract ERC721A is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"contracts/ERC721A.sol\":961:15158  contract ERC721A is Context, ERC165, IERC721, IERC721Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC721A.sol\":961:15158  contract ERC721A is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC721A.sol\":2289:2582  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"contracts/ERC721A.sol\":2289:2582  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":4064:4164  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":5626:5840  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_5:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1679:1730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"contracts/ERC721A.sol\":5626:5840  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"contracts/ERC721A.sol\":5147:5560  function approve(address to, uint256 tokenId) public override {... */\n    tag_6:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/ERC721A.sol\":2126:2217  function totalSupply() public view returns (uint256) {... */\n    tag_7:\n        /* \"contracts/ERC721A.sol\":2170:2177  uint256 */\n      0x00\n        /* \"contracts/ERC721A.sol\":2197:2209  currentIndex */\n      sload\n        /* \"contracts/ERC721A.sol\":2126:2217  function totalSupply() public view returns (uint256) {... */\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":2324:2349   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2312:2314   */\n      0x20\n        /* \"#utility.yul\":2297:2315   */\n      add\n        /* \"contracts/ERC721A.sol\":2126:2217  function totalSupply() public view returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":2178:2355   */\n      jump\n        /* \"contracts/ERC721A.sol\":6502:6664  function transferFrom(... */\n    tag_8:\n      tag_36\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":6735:6912  function safeTransferFrom(... */\n    tag_9:\n      tag_36\n      tag_49\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":3873:3997  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_10:\n      tag_30\n      tag_52\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":2646:2867  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_11:\n      tag_40\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":4233:4337  function symbol() public view virtual override returns (string memory) {... */\n    tag_12:\n      tag_26\n      tag_61\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":5912:6200  function setApprovalForAll(address operator, bool approved) public override {... */\n    tag_13:\n      tag_36\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":6983:7338  function safeTransferFrom(... */\n    tag_14:\n      tag_36\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":4408:4743  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_26\n      tag_72\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":6271:6435  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_16:\n      tag_20\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":2289:2582  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_23:\n        /* \"contracts/ERC721A.sol\":2391:2395  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":2424:2464  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"contracts/ERC721A.sol\":2424:2525  interfaceId == type(IERC721).interfaceId ||... */\n      tag_81\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":2477:2525  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"contracts/ERC721A.sol\":2424:2525  interfaceId == type(IERC721).interfaceId ||... */\n    tag_81:\n        /* \"contracts/ERC721A.sol\":2424:2574  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_83\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":2538:2574  super.supportsInterface(interfaceId) */\n    tag_83:\n        /* \"contracts/ERC721A.sol\":2408:2574  return... */\n      swap3\n        /* \"contracts/ERC721A.sol\":2289:2582  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":4064:4164  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"contracts/ERC721A.sol\":4118:4131  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":4151:4156  _name */\n      0x01\n        /* \"contracts/ERC721A.sol\":4144:4156  return _name */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_87\n      jump\t// in\n    tag_88:\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":4064:4164  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":5626:5840  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_33:\n        /* \"contracts/ERC721A.sol\":5694:5701  address */\n      0x00\n        /* \"contracts/ERC721A.sol\":5722:5738  _exists(tokenId) */\n      tag_93\n        /* \"contracts/ERC721A.sol\":5730:5737  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":7650:7654  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":7684:7696  currentIndex */\n      sload\n      gt\n        /* \"contracts/ERC721A.sol\":7674:7696  tokenId < currentIndex */\n      swap1\n        /* \"contracts/ERC721A.sol\":7593:7704  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      jump\n        /* \"contracts/ERC721A.sol\":5722:5738  _exists(tokenId) */\n    tag_93:\n        /* \"contracts/ERC721A.sol\":5714:5788  require(_exists(tokenId), 'ERC721A: approved query for nonexistent token') */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5363:5365   */\n      0x20\n        /* \"contracts/ERC721A.sol\":5714:5788  require(_exists(tokenId), 'ERC721A: approved query for nonexistent token') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5345:5366   */\n      mstore\n        /* \"#utility.yul\":5402:5404   */\n      0x2d\n        /* \"#utility.yul\":5382:5400   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5375:5405   */\n      mstore\n        /* \"#utility.yul\":5441:5475   */\n      0x455243373231413a20617070726f76656420717565727920666f72206e6f6e65\n        /* \"#utility.yul\":5421:5439   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5414:5476   */\n      mstore\n      shl(0x99, 0x3c34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":5492:5510   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5485:5528   */\n      mstore\n        /* \"#utility.yul\":5545:5564   */\n      0x84\n      add\n        /* \"contracts/ERC721A.sol\":5714:5788  require(_exists(tokenId), 'ERC721A: approved query for nonexistent token') */\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n      pop\n        /* \"contracts/ERC721A.sol\":5808:5832  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":5808:5823  _tokenApprovals */\n      0x05\n        /* \"contracts/ERC721A.sol\":5808:5832  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":5626:5840  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":5147:5560  function approve(address to, uint256 tokenId) public override {... */\n    tag_39:\n        /* \"contracts/ERC721A.sol\":5220:5233  address owner */\n      0x00\n        /* \"contracts/ERC721A.sol\":5236:5260  ERC721A.ownerOf(tokenId) */\n      tag_99\n        /* \"contracts/ERC721A.sol\":5252:5259  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":5236:5251  ERC721A.ownerOf */\n      tag_53\n        /* \"contracts/ERC721A.sol\":5236:5260  ERC721A.ownerOf(tokenId) */\n      jump\t// in\n    tag_99:\n        /* \"contracts/ERC721A.sol\":5220:5260  address owner = ERC721A.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":5285:5290  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":5279:5290  to != owner */\n      and\n        /* \"contracts/ERC721A.sol\":5279:5281  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":5279:5290  to != owner */\n      and\n      sub\n        /* \"contracts/ERC721A.sol\":5271:5329  require(to != owner, 'ERC721A: approval to current owner') */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5777:5779   */\n      0x20\n        /* \"contracts/ERC721A.sol\":5271:5329  require(to != owner, 'ERC721A: approval to current owner') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5759:5780   */\n      mstore\n        /* \"#utility.yul\":5816:5818   */\n      0x22\n        /* \"#utility.yul\":5796:5814   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5789:5819   */\n      mstore\n        /* \"#utility.yul\":5855:5889   */\n      0x455243373231413a20617070726f76616c20746f2063757272656e74206f776e\n        /* \"#utility.yul\":5835:5853   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5828:5890   */\n      mstore\n      shl(0xf1, 0x32b9)\n        /* \"#utility.yul\":5906:5924   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5899:5931   */\n      mstore\n        /* \"#utility.yul\":5948:5967   */\n      0x84\n      add\n        /* \"contracts/ERC721A.sol\":5271:5329  require(to != owner, 'ERC721A: approval to current owner') */\n      tag_96\n        /* \"#utility.yul\":5575:5973   */\n      jump\n        /* \"contracts/ERC721A.sol\":5271:5329  require(to != owner, 'ERC721A: approval to current owner') */\n    tag_100:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":5364:5385  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"contracts/ERC721A.sol\":5364:5426  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_106\n      jumpi\n      pop\n        /* \"contracts/ERC721A.sol\":5389:5426  isApprovedForAll(owner, _msgSender()) */\n      tag_106\n        /* \"contracts/ERC721A.sol\":5406:5411  owner */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":6271:6435  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_78\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":5389:5426  isApprovedForAll(owner, _msgSender()) */\n    tag_106:\n        /* \"contracts/ERC721A.sol\":5342:5511  require(... */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6180:6182   */\n      0x20\n        /* \"contracts/ERC721A.sol\":5342:5511  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6162:6183   */\n      mstore\n        /* \"#utility.yul\":6219:6221   */\n      0x39\n        /* \"#utility.yul\":6199:6217   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6192:6222   */\n      mstore\n        /* \"#utility.yul\":6258:6292   */\n      0x455243373231413a20617070726f76652063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":6238:6256   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6231:6293   */\n      mstore\n        /* \"#utility.yul\":6329:6356   */\n      0x776e6572206e6f7220617070726f76656420666f7220616c6c00000000000000\n        /* \"#utility.yul\":6309:6327   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6302:6357   */\n      mstore\n        /* \"#utility.yul\":6374:6393   */\n      0x84\n      add\n        /* \"contracts/ERC721A.sol\":5342:5511  require(... */\n      tag_96\n        /* \"#utility.yul\":5978:6399   */\n      jump\n        /* \"contracts/ERC721A.sol\":5342:5511  require(... */\n    tag_108:\n        /* \"contracts/ERC721A.sol\":5524:5552  _approve(to, tokenId, owner) */\n      tag_111\n        /* \"contracts/ERC721A.sol\":5533:5535  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":5537:5544  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":5546:5551  owner */\n      dup4\n        /* \"contracts/ERC721A.sol\":5524:5532  _approve */\n      tag_112\n        /* \"contracts/ERC721A.sol\":5524:5552  _approve(to, tokenId, owner) */\n      jump\t// in\n    tag_111:\n        /* \"contracts/ERC721A.sol\":5209:5560  {... */\n      pop\n        /* \"contracts/ERC721A.sol\":5147:5560  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":6502:6664  function transferFrom(... */\n    tag_47:\n        /* \"contracts/ERC721A.sol\":6628:6656  _transfer(from, to, tokenId) */\n      tag_111\n        /* \"contracts/ERC721A.sol\":6638:6642  from */\n      dup4\n        /* \"contracts/ERC721A.sol\":6644:6646  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":6648:6655  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":6628:6637  _transfer */\n      tag_116\n        /* \"contracts/ERC721A.sol\":6628:6656  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":6735:6912  function safeTransferFrom(... */\n    tag_50:\n        /* \"contracts/ERC721A.sol\":6865:6904  safeTransferFrom(from, to, tokenId, '') */\n      tag_111\n        /* \"contracts/ERC721A.sol\":6882:6886  from */\n      dup4\n        /* \"contracts/ERC721A.sol\":6888:6890  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":6892:6899  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":6865:6904  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC721A.sol\":6865:6881  safeTransferFrom */\n      tag_70\n        /* \"contracts/ERC721A.sol\":6865:6904  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":3873:3997  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_53:\n        /* \"contracts/ERC721A.sol\":3937:3944  address */\n      0x00\n        /* \"contracts/ERC721A.sol\":3964:3984  ownershipOf(tokenId) */\n      tag_120\n        /* \"contracts/ERC721A.sol\":3976:3983  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":3964:3975  ownershipOf */\n      tag_121\n        /* \"contracts/ERC721A.sol\":3964:3984  ownershipOf(tokenId) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/ERC721A.sol\":3964:3989  ownershipOf(tokenId).addr */\n      mload\n      swap3\n        /* \"contracts/ERC721A.sol\":3873:3997  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":2646:2867  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_58:\n        /* \"contracts/ERC721A.sol\":2710:2717  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":2738:2757  owner != address(0) */\n      dup3\n      and\n        /* \"contracts/ERC721A.sol\":2730:2805  require(owner != address(0), 'ERC721A: balance query for the zero address') */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6606:6608   */\n      0x20\n        /* \"contracts/ERC721A.sol\":2730:2805  require(owner != address(0), 'ERC721A: balance query for the zero address') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6588:6609   */\n      mstore\n        /* \"#utility.yul\":6645:6647   */\n      0x2b\n        /* \"#utility.yul\":6625:6643   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6618:6648   */\n      mstore\n        /* \"#utility.yul\":6684:6718   */\n      0x455243373231413a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":6664:6682   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6657:6719   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":6735:6753   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6728:6769   */\n      mstore\n        /* \"#utility.yul\":6786:6805   */\n      0x84\n      add\n        /* \"contracts/ERC721A.sol\":2730:2805  require(owner != address(0), 'ERC721A: balance query for the zero address') */\n      tag_96\n        /* \"#utility.yul\":6404:6811   */\n      jump\n        /* \"contracts/ERC721A.sol\":2730:2805  require(owner != address(0), 'ERC721A: balance query for the zero address') */\n    tag_123:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":2831:2850  _addressData[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":2831:2843  _addressData */\n      0x04\n        /* \"contracts/ERC721A.sol\":2831:2850  _addressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":2831:2858  _addressData[owner].balance */\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":2646:2867  function balanceOf(address owner) public view override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":4233:4337  function symbol() public view virtual override returns (string memory) {... */\n    tag_61:\n        /* \"contracts/ERC721A.sol\":4289:4302  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":4322:4329  _symbol */\n      0x02\n        /* \"contracts/ERC721A.sol\":4315:4329  return _symbol */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":5912:6200  function setApprovalForAll(address operator, bool approved) public override {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":6007:6031  operator != _msgSender() */\n      dup4\n      and\n      sub\n        /* \"contracts/ERC721A.sol\":5999:6062  require(operator != _msgSender(), 'ERC721A: approve to caller') */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7018:7020   */\n      0x20\n        /* \"contracts/ERC721A.sol\":5999:6062  require(operator != _msgSender(), 'ERC721A: approve to caller') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7000:7021   */\n      mstore\n        /* \"#utility.yul\":7057:7059   */\n      0x1a\n        /* \"#utility.yul\":7037:7055   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7030:7060   */\n      mstore\n        /* \"#utility.yul\":7096:7124   */\n      0x455243373231413a20617070726f766520746f2063616c6c6572000000000000\n        /* \"#utility.yul\":7076:7094   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7069:7125   */\n      mstore\n        /* \"#utility.yul\":7142:7160   */\n      0x64\n      add\n        /* \"contracts/ERC721A.sol\":5999:6062  require(operator != _msgSender(), 'ERC721A: approve to caller') */\n      tag_96\n        /* \"#utility.yul\":6816:7166   */\n      jump\n        /* \"contracts/ERC721A.sol\":5999:6062  require(operator != _msgSender(), 'ERC721A: approve to caller') */\n    tag_134:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":6075:6107  _operatorApprovals[_msgSender()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":6075:6093  _operatorApprovals */\n      0x06\n        /* \"contracts/ERC721A.sol\":6075:6107  _operatorApprovals[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":6075:6117  _operatorApprovals[_msgSender()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":6075:6128  _operatorApprovals[_msgSender()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ERC721A.sol\":6144:6192  ApprovalForAll(_msgSender(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":6075:6117  _operatorApprovals[_msgSender()][operator] */\n      swap2\n      swap3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      swap2\n        /* \"contracts/ERC721A.sol\":6144:6192  ApprovalForAll(_msgSender(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"contracts/ERC721A.sol\":6144:6192  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC721A.sol\":5912:6200  function setApprovalForAll(address operator, bool approved) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":6983:7338  function safeTransferFrom(... */\n    tag_70:\n        /* \"contracts/ERC721A.sol\":7142:7170  _transfer(from, to, tokenId) */\n      tag_141\n        /* \"contracts/ERC721A.sol\":7152:7156  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":7158:7160  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":7162:7169  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":7142:7151  _transfer */\n      tag_116\n        /* \"contracts/ERC721A.sol\":7142:7170  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/ERC721A.sol\":7203:7251  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_142\n        /* \"contracts/ERC721A.sol\":7226:7230  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":7232:7234  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":7236:7243  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":7245:7250  _data */\n      dup5\n        /* \"contracts/ERC721A.sol\":7203:7225  _checkOnERC721Received */\n      tag_143\n        /* \"contracts/ERC721A.sol\":7203:7251  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/ERC721A.sol\":7181:7330  require(... */\n      tag_144\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_146\n      jump\t// in\n    tag_144:\n        /* \"contracts/ERC721A.sol\":6983:7338  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":4408:4743  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_73:\n        /* \"contracts/ERC721A.sol\":4481:4494  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":4515:4531  _exists(tokenId) */\n      tag_148\n        /* \"contracts/ERC721A.sol\":4523:4530  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":7650:7654  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":7684:7696  currentIndex */\n      sload\n      gt\n        /* \"contracts/ERC721A.sol\":7674:7696  tokenId < currentIndex */\n      swap1\n        /* \"contracts/ERC721A.sol\":7593:7704  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      jump\n        /* \"contracts/ERC721A.sol\":4515:4531  _exists(tokenId) */\n    tag_148:\n        /* \"contracts/ERC721A.sol\":4507:4583  require(_exists(tokenId), 'ERC721Metadata: URI query for nonexistent token') */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7793:7795   */\n      0x20\n        /* \"contracts/ERC721A.sol\":4507:4583  require(_exists(tokenId), 'ERC721Metadata: URI query for nonexistent token') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7775:7796   */\n      mstore\n        /* \"#utility.yul\":7832:7834   */\n      0x2f\n        /* \"#utility.yul\":7812:7830   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7805:7835   */\n      mstore\n        /* \"#utility.yul\":7871:7905   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":7851:7869   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7844:7906   */\n      mstore\n      shl(0x89, 0x3732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":7922:7940   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7915:7960   */\n      mstore\n        /* \"#utility.yul\":7977:7996   */\n      0x84\n      add\n        /* \"contracts/ERC721A.sol\":4507:4583  require(_exists(tokenId), 'ERC721Metadata: URI query for nonexistent token') */\n      tag_96\n        /* \"#utility.yul\":7591:8002   */\n      jump\n        /* \"contracts/ERC721A.sol\":4507:4583  require(_exists(tokenId), 'ERC721Metadata: URI query for nonexistent token') */\n    tag_149:\n        /* \"contracts/ERC721A.sol\":4596:4617  string memory baseURI */\n      0x00\n        /* \"contracts/ERC721A.sol\":4620:4630  _baseURI() */\n      tag_152\n        /* \"contracts/ERC721A.sol\":5068:5077  return '' */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"contracts/ERC721A.sol\":4991:5085  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"contracts/ERC721A.sol\":4620:4630  _baseURI() */\n    tag_152:\n        /* \"contracts/ERC721A.sol\":4596:4630  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":4654:4661  baseURI */\n      dup1\n        /* \"contracts/ERC721A.sol\":4648:4669  bytes(baseURI).length */\n      mload\n        /* \"contracts/ERC721A.sol\":4673:4674  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":4648:4674  bytes(baseURI).length != 0 */\n      sub\n        /* \"contracts/ERC721A.sol\":4648:4735  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n      tag_154\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_155)\n    tag_154:\n        /* \"contracts/ERC721A.sol\":4701:4708  baseURI */\n      dup1\n        /* \"contracts/ERC721A.sol\":4710:4728  tokenId.toString() */\n      tag_156\n        /* \"contracts/ERC721A.sol\":4710:4717  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":4710:4726  tokenId.toString */\n      tag_157\n        /* \"contracts/ERC721A.sol\":4710:4728  tokenId.toString() */\n      jump\t// in\n    tag_156:\n        /* \"contracts/ERC721A.sol\":4684:4729  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_158\n      swap3\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ERC721A.sol\":4648:4735  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n    tag_155:\n        /* \"contracts/ERC721A.sol\":4641:4735  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n      swap4\n        /* \"contracts/ERC721A.sol\":4408:4743  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":6271:6435  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":6392:6417  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/ERC721A.sol\":6368:6372  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":6392:6417  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":6392:6410  _operatorApprovals */\n      0x06\n        /* \"contracts/ERC721A.sol\":6392:6417  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC721A.sol\":6392:6427  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":6271:6435  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":12373:12569  function _approve(... */\n    tag_112:\n        /* \"contracts/ERC721A.sol\":12488:12512  _tokenApprovals[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":12488:12503  _tokenApprovals */\n      0x05\n        /* \"contracts/ERC721A.sol\":12488:12512  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ERC721A.sol\":12488:12517  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ERC721A.sol\":12533:12561  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"contracts/ERC721A.sol\":12488:12512  _tokenApprovals[tokenId] */\n      dup6\n      swap4\n        /* \"contracts/ERC721A.sol\":12533:12561  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"contracts/ERC721A.sol\":12373:12569  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":10321:12255  function _transfer(... */\n    tag_116:\n        /* \"contracts/ERC721A.sol\":10436:10471  TokenOwnership memory prevOwnership */\n      0x00\n        /* \"contracts/ERC721A.sol\":10474:10494  ownershipOf(tokenId) */\n      tag_166\n        /* \"contracts/ERC721A.sol\":10486:10493  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":10474:10485  ownershipOf */\n      tag_121\n        /* \"contracts/ERC721A.sol\":10474:10494  ownershipOf(tokenId) */\n      jump\t// in\n    tag_166:\n        /* \"contracts/ERC721A.sol\":10549:10567  prevOwnership.addr */\n      dup1\n      mload\n        /* \"contracts/ERC721A.sol\":10436:10494  TokenOwnership memory prevOwnership = ownershipOf(tokenId) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/ERC721A.sol\":10507:10529  bool isApprovedOrOwner */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":10533:10567  _msgSender() == prevOwnership.addr */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":10533:10567  _msgSender() == prevOwnership.addr */\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":10533:10616  _msgSender() == prevOwnership.addr ||... */\n      dup1\n      tag_168\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":10580:10600  getApproved(tokenId) */\n      tag_170\n        /* \"contracts/ERC721A.sol\":10592:10599  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":10580:10591  getApproved */\n      tag_33\n        /* \"contracts/ERC721A.sol\":10580:10600  getApproved(tokenId) */\n      jump\t// in\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":10580:10616  getApproved(tokenId) == _msgSender() */\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":10533:10616  _msgSender() == prevOwnership.addr ||... */\n    tag_168:\n        /* \"contracts/ERC721A.sol\":10533:10679  _msgSender() == prevOwnership.addr ||... */\n      dup1\n      tag_172\n      jumpi\n      pop\n        /* \"contracts/ERC721A.sol\":10646:10664  prevOwnership.addr */\n      dup2\n      mload\n        /* \"contracts/ERC721A.sol\":10629:10679  isApprovedForAll(prevOwnership.addr, _msgSender()) */\n      tag_172\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":6271:6435  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_78\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":10629:10679  isApprovedForAll(prevOwnership.addr, _msgSender()) */\n    tag_172:\n        /* \"contracts/ERC721A.sol\":10507:10680  bool isApprovedOrOwner = (_msgSender() == prevOwnership.addr ||... */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":10701:10718  isApprovedOrOwner */\n      dup1\n        /* \"contracts/ERC721A.sol\":10693:10773  require(isApprovedOrOwner, 'ERC721A: transfer caller is not owner nor approved') */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8710:8712   */\n      0x20\n        /* \"contracts/ERC721A.sol\":10693:10773  require(isApprovedOrOwner, 'ERC721A: transfer caller is not owner nor approved') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8692:8713   */\n      mstore\n        /* \"#utility.yul\":8749:8751   */\n      0x32\n        /* \"#utility.yul\":8729:8747   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8722:8752   */\n      mstore\n        /* \"#utility.yul\":8788:8822   */\n      0x455243373231413a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":8768:8786   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8761:8823   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":8839:8857   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8832:8880   */\n      mstore\n        /* \"#utility.yul\":8897:8916   */\n      0x84\n      add\n        /* \"contracts/ERC721A.sol\":10693:10773  require(isApprovedOrOwner, 'ERC721A: transfer caller is not owner nor approved') */\n      tag_96\n        /* \"#utility.yul\":8508:8922   */\n      jump\n        /* \"contracts/ERC721A.sol\":10693:10773  require(isApprovedOrOwner, 'ERC721A: transfer caller is not owner nor approved') */\n    tag_174:\n        /* \"contracts/ERC721A.sol\":10816:10820  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":10794:10820  prevOwnership.addr == from */\n      and\n        /* \"contracts/ERC721A.sol\":10794:10807  prevOwnership */\n      dup3\n        /* \"contracts/ERC721A.sol\":10794:10812  prevOwnership.addr */\n      0x00\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":10794:10820  prevOwnership.addr == from */\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":10786:10863  require(prevOwnership.addr == from, 'ERC721A: transfer from incorrect owner') */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9129:9131   */\n      0x20\n        /* \"contracts/ERC721A.sol\":10786:10863  require(prevOwnership.addr == from, 'ERC721A: transfer from incorrect owner') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9111:9132   */\n      mstore\n        /* \"#utility.yul\":9168:9170   */\n      0x26\n        /* \"#utility.yul\":9148:9166   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9141:9171   */\n      mstore\n        /* \"#utility.yul\":9207:9241   */\n      0x455243373231413a207472616e736665722066726f6d20696e636f7272656374\n        /* \"#utility.yul\":9187:9205   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9180:9242   */\n      mstore\n      shl(0xd1, 0x1037bbb732b9)\n        /* \"#utility.yul\":9258:9276   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9251:9287   */\n      mstore\n        /* \"#utility.yul\":9304:9323   */\n      0x84\n      add\n        /* \"contracts/ERC721A.sol\":10786:10863  require(prevOwnership.addr == from, 'ERC721A: transfer from incorrect owner') */\n      tag_96\n        /* \"#utility.yul\":8927:9329   */\n      jump\n        /* \"contracts/ERC721A.sol\":10786:10863  require(prevOwnership.addr == from, 'ERC721A: transfer from incorrect owner') */\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":10882:10898  to != address(0) */\n      dup5\n      and\n        /* \"contracts/ERC721A.sol\":10874:10940  require(to != address(0), 'ERC721A: transfer to the zero address') */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9536:9538   */\n      0x20\n        /* \"contracts/ERC721A.sol\":10874:10940  require(to != address(0), 'ERC721A: transfer to the zero address') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9518:9539   */\n      mstore\n        /* \"#utility.yul\":9575:9577   */\n      0x25\n        /* \"#utility.yul\":9555:9573   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9548:9578   */\n      mstore\n        /* \"#utility.yul\":9614:9648   */\n      0x455243373231413a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":9594:9612   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9587:9649   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":9665:9683   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9658:9693   */\n      mstore\n        /* \"#utility.yul\":9710:9729   */\n      0x84\n      add\n        /* \"contracts/ERC721A.sol\":10874:10940  require(to != address(0), 'ERC721A: transfer to the zero address') */\n      tag_96\n        /* \"#utility.yul\":9334:9735   */\n      jump\n        /* \"contracts/ERC721A.sol\":10874:10940  require(to != address(0), 'ERC721A: transfer to the zero address') */\n    tag_180:\n        /* \"contracts/ERC721A.sol\":11061:11110  _approve(address(0), tokenId, prevOwnership.addr) */\n      tag_185\n        /* \"contracts/ERC721A.sol\":11078:11079  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":11082:11089  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":11091:11104  prevOwnership */\n      dup5\n        /* \"contracts/ERC721A.sol\":11091:11109  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":11061:11069  _approve */\n      tag_112\n        /* \"contracts/ERC721A.sol\":11061:11110  _approve(address(0), tokenId, prevOwnership.addr) */\n      jump\t// in\n    tag_185:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":11398:11416  _addressData[from] */\n      dup6\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":11398:11410  _addressData */\n      0x04\n        /* \"contracts/ERC721A.sol\":11398:11416  _addressData[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC721A.sol\":11398:11429  _addressData[from].balance -= 1 */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffff)\n      dup1\n      dup3\n      and\n      sub(shl(0x80, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      not(0x00)\n      add\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ERC721A.sol\":11440:11456  _addressData[to] */\n      dup10\n      dup7\n      and\n      dup1\n      dup7\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"contracts/ERC721A.sol\":11440:11469  _addressData[to].balance += 1 */\n      dup1\n      sload\n      swap4\n      dup5\n      and\n      swap4\n      dup4\n      and\n      0x01\n      swap1\n      dup2\n      add\n      swap1\n      swap4\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ERC721A.sol\":11482:11502  _ownerships[tokenId] */\n      dup9\n      dup6\n      mstore\n        /* \"contracts/ERC721A.sol\":11482:11493  _ownerships */\n      0x03\n        /* \"contracts/ERC721A.sol\":11482:11502  _ownerships[tokenId] */\n      swap1\n      swap4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/ERC721A.sol\":11482:11512  _ownerships[tokenId].addr = to */\n      dup1\n      sload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":11523:11584  _ownerships[tokenId].startTimestamp = uint64(block.timestamp) */\n      and\n      swap1\n      swap2\n      or\n      shl(0xa0, 0x01)\n        /* \"contracts/ERC721A.sol\":11568:11583  block.timestamp */\n      timestamp\n        /* \"contracts/ERC721A.sol\":11523:11584  _ownerships[tokenId].startTimestamp = uint64(block.timestamp) */\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":11846:11857  tokenId + 1 */\n      swap1\n      dup7\n      add\n        /* \"contracts/ERC721A.sol\":11872:11896  _ownerships[nextTokenId] */\n      dup1\n      dup4\n      mstore\n      swap2\n      keccak256\n        /* \"contracts/ERC721A.sol\":11872:11901  _ownerships[nextTokenId].addr */\n      sload\n        /* \"contracts/ERC721A.sol\":11846:11857  tokenId + 1 */\n      swap1\n      swap2\n        /* \"contracts/ERC721A.sol\":11872:11901  _ownerships[nextTokenId].addr */\n      and\n        /* \"contracts/ERC721A.sol\":11868:12143  if (_ownerships[nextTokenId].addr == address(0)) {... */\n      tag_188\n      jumpi\n        /* \"contracts/ERC721A.sol\":11936:11956  _exists(nextTokenId) */\n      tag_187\n        /* \"contracts/ERC721A.sol\":11944:11955  nextTokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":7650:7654  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":7684:7696  currentIndex */\n      sload\n      gt\n        /* \"contracts/ERC721A.sol\":7674:7696  tokenId < currentIndex */\n      swap1\n        /* \"contracts/ERC721A.sol\":7593:7704  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      jump\n        /* \"contracts/ERC721A.sol\":11936:11956  _exists(nextTokenId) */\n    tag_187:\n        /* \"contracts/ERC721A.sol\":11932:12132  if (_exists(nextTokenId)) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"contracts/ERC721A.sol\":12009:12027  prevOwnership.addr */\n      dup3\n      mload\n      0x00\n        /* \"contracts/ERC721A.sol\":11977:12001  _ownerships[nextTokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":11977:11988  _ownerships */\n      0x03\n        /* \"contracts/ERC721A.sol\":11977:12001  _ownerships[nextTokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/ERC721A.sol\":11977:12027  _ownerships[nextTokenId].addr = prevOwnership.addr */\n      dup1\n      sload\n        /* \"contracts/ERC721A.sol\":12088:12116  prevOwnership.startTimestamp */\n      swap2\n      dup7\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":12046:12116  _ownerships[nextTokenId].startTimestamp = prevOwnership.startTimestamp */\n      0xffffffffffffffff\n      and\n      shl(0xa0, 0x01)\n      mul\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap3\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":11977:12027  _ownerships[nextTokenId].addr = prevOwnership.addr */\n      swap1\n      swap4\n      and\n        /* \"contracts/ERC721A.sol\":12046:12116  _ownerships[nextTokenId].startTimestamp = prevOwnership.startTimestamp */\n      swap3\n      swap1\n      swap3\n      or\n      or\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":11932:12132  if (_exists(nextTokenId)) {... */\n    tag_188:\n        /* \"contracts/ERC721A.sol\":11377:12150  unchecked {... */\n      pop\n        /* \"contracts/ERC721A.sol\":12186:12193  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":12182:12184  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":12167:12194  Transfer(from, to, tokenId) */\n      and\n        /* \"contracts/ERC721A.sol\":12176:12180  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":12167:12194  Transfer(from, to, tokenId) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC721A.sol\":10425:12255  {... */\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":10321:12255  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":3306:3811  function ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_121:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/ERC721A.sol\":3409:3425  _exists(tokenId) */\n      tag_194\n        /* \"contracts/ERC721A.sol\":3417:3424  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":7650:7654  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":7684:7696  currentIndex */\n      sload\n      gt\n        /* \"contracts/ERC721A.sol\":7674:7696  tokenId < currentIndex */\n      swap1\n        /* \"contracts/ERC721A.sol\":7593:7704  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      jump\n        /* \"contracts/ERC721A.sol\":3409:3425  _exists(tokenId) */\n    tag_194:\n        /* \"contracts/ERC721A.sol\":3401:3472  require(_exists(tokenId), 'ERC721A: owner query for nonexistent token') */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9942:9944   */\n      0x20\n        /* \"contracts/ERC721A.sol\":3401:3472  require(_exists(tokenId), 'ERC721A: owner query for nonexistent token') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9924:9945   */\n      mstore\n        /* \"#utility.yul\":9981:9983   */\n      0x2a\n        /* \"#utility.yul\":9961:9979   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9954:9984   */\n      mstore\n        /* \"#utility.yul\":10020:10054   */\n      0x455243373231413a206f776e657220717565727920666f72206e6f6e65786973\n        /* \"#utility.yul\":10000:10018   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9993:10055   */\n      mstore\n      shl(0xb1, 0x3a32b73a103a37b5b2b7)\n        /* \"#utility.yul\":10071:10089   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10064:10104   */\n      mstore\n        /* \"#utility.yul\":10121:10140   */\n      0x84\n      add\n        /* \"contracts/ERC721A.sol\":3401:3472  require(_exists(tokenId), 'ERC721A: owner query for nonexistent token') */\n      tag_96\n        /* \"#utility.yul\":9740:10146   */\n      jump\n        /* \"contracts/ERC721A.sol\":3401:3472  require(_exists(tokenId), 'ERC721A: owner query for nonexistent token') */\n    tag_195:\n        /* \"contracts/ERC721A.sol\":3522:3529  tokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":3502:3727  for (uint256 curr = tokenId; curr >= 0; curr--) {... */\n    tag_198:\n        /* \"contracts/ERC721A.sol\":3565:3596  TokenOwnership memory ownership */\n      0x00\n        /* \"contracts/ERC721A.sol\":3599:3616  _ownerships[curr] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":3599:3610  _ownerships */\n      0x03\n        /* \"contracts/ERC721A.sol\":3599:3616  _ownerships[curr] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":3565:3616  TokenOwnership memory ownership = _ownerships[curr] */\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      swap1\n      swap4\n      mstore\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup1\n      dup5\n      mstore\n      shl(0xa0, 0x01)\n      swap1\n      swap2\n      div\n      0xffffffffffffffff\n      and\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/ERC721A.sol\":3635:3663  ownership.addr != address(0) */\n      iszero\n        /* \"contracts/ERC721A.sol\":3631:3716  if (ownership.addr != address(0)) {... */\n      tag_201\n      jumpi\n        /* \"contracts/ERC721A.sol\":3691:3700  ownership */\n      swap4\n        /* \"contracts/ERC721A.sol\":3306:3811  function ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":3631:3716  if (ownership.addr != address(0)) {... */\n    tag_201:\n      pop\n      not(0x00)\n        /* \"contracts/ERC721A.sol\":3542:3548  curr-- */\n      add\n        /* \"contracts/ERC721A.sol\":3502:3727  for (uint256 curr = tokenId; curr >= 0; curr--) {... */\n      jump(tag_198)\n        /* \"contracts/ERC721A.sol\":13134:13938  function _checkOnERC721Received(... */\n    tag_143:\n        /* \"contracts/ERC721A.sol\":13289:13293  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":13310:13323  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"contracts/ERC721A.sol\":13306:13931  if (to.isContract()) {... */\n      tag_207\n      jumpi\n        /* \"contracts/ERC721A.sol\":13346:13418  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":13346:13382  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"contracts/ERC721A.sol\":13346:13418  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      tag_209\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"contracts/ERC721A.sol\":13397:13401  from */\n      dup10\n      swap1\n        /* \"contracts/ERC721A.sol\":13403:13410  tokenId */\n      dup9\n      swap1\n        /* \"contracts/ERC721A.sol\":13412:13417  _data */\n      dup9\n      swap1\n        /* \"contracts/ERC721A.sol\":13346:13418  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      0x04\n      add\n      tag_210\n      jump\t// in\n    tag_209:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_211\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_212\n      swap2\n      dup2\n      add\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      0x01\n    tag_211:\n        /* \"contracts/ERC721A.sol\":13342:13876  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_214\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_219\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_218)\n    tag_219:\n      0x60\n      swap2\n      pop\n    tag_218:\n      pop\n        /* \"contracts/ERC721A.sol\":13592:13598  reason */\n      dup1\n        /* \"contracts/ERC721A.sol\":13592:13605  reason.length */\n      mload\n        /* \"contracts/ERC721A.sol\":13609:13610  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":13592:13610  reason.length == 0 */\n      sub\n        /* \"contracts/ERC721A.sol\":13588:13861  if (reason.length == 0) {... */\n      tag_220\n      jumpi\n        /* \"contracts/ERC721A.sol\":13635:13696  revert('ERC721A: transfer to non ERC721Receiver implementer') */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_146\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":13588:13861  if (reason.length == 0) {... */\n    tag_220:\n        /* \"contracts/ERC721A.sol\":13811:13817  reason */\n      dup1\n        /* \"contracts/ERC721A.sol\":13805:13818  mload(reason) */\n      mload\n        /* \"contracts/ERC721A.sol\":13796:13802  reason */\n      dup2\n        /* \"contracts/ERC721A.sol\":13792:13794  32 */\n      0x20\n        /* \"contracts/ERC721A.sol\":13788:13803  add(32, reason) */\n      add\n        /* \"contracts/ERC721A.sol\":13781:13819  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/ERC721A.sol\":13342:13876  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_214:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":13469:13524  retval == IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":13462:13524  return retval == IERC721Receiver(to).onERC721Received.selector */\n      jump(tag_224)\n        /* \"contracts/ERC721A.sol\":13306:13931  if (to.isContract()) {... */\n    tag_207:\n      pop\n        /* \"contracts/ERC721A.sol\":13915:13919  true */\n      0x01\n        /* \"contracts/ERC721A.sol\":13306:13931  if (to.isContract()) {... */\n    tag_224:\n        /* \"contracts/ERC721A.sol\":13134:13938  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":392:1095  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":448:461  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":665:670  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":674:675  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":665:675  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":661:712  if (value == 0) {... */\n      tag_227\n      jumpi\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":691:701  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":392:1095  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":661:712  if (value == 0) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":736:741  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":721:733  uint256 temp */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":782:791  temp != 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":807:815  digits++ */\n      dup1\n      tag_230\n      dup2\n      tag_231\n      jump\t// in\n    tag_230:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":829:839  temp /= 10 */\n      tag_232\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":837:839  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":829:839  temp /= 10 */\n      dup4\n      tag_233\n      jump\t// in\n    tag_232:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n      jump(tag_228)\n    tag_229:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":859:878  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":891:897  digits */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":881:898  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_235\n      jumpi\n      tag_235\n      tag_236\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_237\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_237:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":859:898  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":915:925  value != 0 */\n      dup5\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":941:952  digits -= 1 */\n      tag_240\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":951:952  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":941:952  digits -= 1 */\n      dup4\n      tag_241\n      jump\t// in\n    tag_240:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1019  value % 10 */\n      tag_242\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1019  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1014  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1019  value % 10 */\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":996:1020  48 + uint256(value % 10) */\n      tag_244\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":996:998  48 */\n      0x30\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":996:1020  48 + uint256(value % 10) */\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":983:1022  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:972  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":973:979  digits */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:980  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_247\n      jumpi\n      tag_247\n      tag_248\n      jump\t// in\n    tag_247:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:1022  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1036:1047  value /= 10 */\n      tag_249\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1045:1047  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1036:1047  value /= 10 */\n      dup7\n      tag_233\n      jump\t// in\n    tag_249:\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n      jump(tag_238)\n        /* \"#utility.yul\":14:145   */\n    tag_253:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_261\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":68:139   */\n    tag_261:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:395   */\n    tag_22:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_263:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_155\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_253\n      jump\t// in\n        /* \"#utility.yul\":592:842   */\n    tag_254:\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":687:800   */\n    tag_267:\n        /* \"#utility.yul\":701:707   */\n      dup4\n        /* \"#utility.yul\":698:699   */\n      dup2\n        /* \"#utility.yul\":695:708   */\n      lt\n        /* \"#utility.yul\":687:800   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":777:788   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":771:789   */\n      mload\n        /* \"#utility.yul\":758:769   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":751:790   */\n      mstore\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":716:726   */\n      add\n        /* \"#utility.yul\":687:800   */\n      jump(tag_267)\n    tag_269:\n      pop\n      pop\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":816:832   */\n      swap2\n      add\n        /* \"#utility.yul\":809:836   */\n      mstore\n        /* \"#utility.yul\":592:842   */\n      jump\t// out\n        /* \"#utility.yul\":847:1118   */\n    tag_255:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":921:933   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:952   */\n      dup5\n        /* \"#utility.yul\":942:961   */\n      mstore\n        /* \"#utility.yul\":970:1046   */\n      tag_271\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1032:1036   */\n      0x20\n        /* \"#utility.yul\":1027:1030   */\n      dup7\n        /* \"#utility.yul\":1023:1037   */\n      add\n        /* \"#utility.yul\":1016:1020   */\n      0x20\n        /* \"#utility.yul\":1009:1014   */\n      dup7\n        /* \"#utility.yul\":1005:1021   */\n      add\n        /* \"#utility.yul\":970:1046   */\n      tag_254\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1107:1111   */\n      0x20\n        /* \"#utility.yul\":1062:1112   */\n      add\n      swap3\n        /* \"#utility.yul\":847:1118   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1343   */\n    tag_29:\n        /* \"#utility.yul\":1272:1274   */\n      0x20\n        /* \"#utility.yul\":1261:1270   */\n      dup2\n        /* \"#utility.yul\":1254:1275   */\n      mstore\n        /* \"#utility.yul\":1235:1239   */\n      0x00\n        /* \"#utility.yul\":1292:1337   */\n      tag_155\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"#utility.yul\":1310:1316   */\n      dup5\n        /* \"#utility.yul\":1292:1337   */\n      tag_255\n      jump\t// in\n        /* \"#utility.yul\":1348:1528   */\n    tag_32:\n        /* \"#utility.yul\":1407:1413   */\n      0x00\n        /* \"#utility.yul\":1460:1462   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1439:1446   */\n      dup5\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_275:\n      pop\n        /* \"#utility.yul\":1499:1522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1348:1528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1914   */\n    tag_256:\n        /* \"#utility.yul\":1809:1829   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1889   */\n      dup2\n      and\n        /* \"#utility.yul\":1848:1890   */\n      dup2\n      eq\n        /* \"#utility.yul\":1838:1908   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1838:1908   */\n    tag_278:\n        /* \"#utility.yul\":1741:1914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1919:2173   */\n    tag_38:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      dup1\n        /* \"#utility.yul\":2048:2050   */\n      0x40\n        /* \"#utility.yul\":2036:2045   */\n      dup4\n        /* \"#utility.yul\":2027:2034   */\n      dup6\n        /* \"#utility.yul\":2023:2046   */\n      sub\n        /* \"#utility.yul\":2019:2051   */\n      slt\n        /* \"#utility.yul\":2016:2068   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":2064:2065   */\n      0x00\n        /* \"#utility.yul\":2061:2062   */\n      dup1\n        /* \"#utility.yul\":2054:2066   */\n      revert\n        /* \"#utility.yul\":2016:2068   */\n    tag_280:\n        /* \"#utility.yul\":2087:2116   */\n      tag_281\n        /* \"#utility.yul\":2106:2115   */\n      dup4\n        /* \"#utility.yul\":2087:2116   */\n      tag_256\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":2077:2116   */\n      swap5\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2148:2166   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2135:2167   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1919:2173   */\n      jump\t// out\n        /* \"#utility.yul\":2360:2688   */\n    tag_46:\n        /* \"#utility.yul\":2437:2443   */\n      0x00\n        /* \"#utility.yul\":2445:2451   */\n      dup1\n        /* \"#utility.yul\":2453:2459   */\n      0x00\n        /* \"#utility.yul\":2506:2508   */\n      0x60\n        /* \"#utility.yul\":2494:2503   */\n      dup5\n        /* \"#utility.yul\":2485:2492   */\n      dup7\n        /* \"#utility.yul\":2481:2504   */\n      sub\n        /* \"#utility.yul\":2477:2509   */\n      slt\n        /* \"#utility.yul\":2474:2526   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":2522:2523   */\n      0x00\n        /* \"#utility.yul\":2519:2520   */\n      dup1\n        /* \"#utility.yul\":2512:2524   */\n      revert\n        /* \"#utility.yul\":2474:2526   */\n    tag_284:\n        /* \"#utility.yul\":2545:2574   */\n      tag_285\n        /* \"#utility.yul\":2564:2573   */\n      dup5\n        /* \"#utility.yul\":2545:2574   */\n      tag_256\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":2535:2574   */\n      swap3\n      pop\n        /* \"#utility.yul\":2593:2631   */\n      tag_286\n        /* \"#utility.yul\":2627:2629   */\n      0x20\n        /* \"#utility.yul\":2616:2625   */\n      dup6\n        /* \"#utility.yul\":2612:2630   */\n      add\n        /* \"#utility.yul\":2593:2631   */\n      tag_256\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":2583:2631   */\n      swap2\n      pop\n        /* \"#utility.yul\":2678:2680   */\n      0x40\n        /* \"#utility.yul\":2667:2676   */\n      dup5\n        /* \"#utility.yul\":2663:2681   */\n      add\n        /* \"#utility.yul\":2650:2682   */\n      calldataload\n        /* \"#utility.yul\":2640:2682   */\n      swap1\n      pop\n        /* \"#utility.yul\":2360:2688   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2693:2879   */\n    tag_57:\n        /* \"#utility.yul\":2752:2758   */\n      0x00\n        /* \"#utility.yul\":2805:2807   */\n      0x20\n        /* \"#utility.yul\":2793:2802   */\n      dup3\n        /* \"#utility.yul\":2784:2791   */\n      dup5\n        /* \"#utility.yul\":2780:2803   */\n      sub\n        /* \"#utility.yul\":2776:2808   */\n      slt\n        /* \"#utility.yul\":2773:2825   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":2821:2822   */\n      0x00\n        /* \"#utility.yul\":2818:2819   */\n      dup1\n        /* \"#utility.yul\":2811:2823   */\n      revert\n        /* \"#utility.yul\":2773:2825   */\n    tag_288:\n        /* \"#utility.yul\":2844:2873   */\n      tag_155\n        /* \"#utility.yul\":2863:2872   */\n      dup3\n        /* \"#utility.yul\":2844:2873   */\n      tag_256\n      jump\t// in\n        /* \"#utility.yul\":2884:3231   */\n    tag_65:\n        /* \"#utility.yul\":2949:2955   */\n      0x00\n        /* \"#utility.yul\":2957:2963   */\n      dup1\n        /* \"#utility.yul\":3010:3012   */\n      0x40\n        /* \"#utility.yul\":2998:3007   */\n      dup4\n        /* \"#utility.yul\":2989:2996   */\n      dup6\n        /* \"#utility.yul\":2985:3008   */\n      sub\n        /* \"#utility.yul\":2981:3013   */\n      slt\n        /* \"#utility.yul\":2978:3030   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":3026:3027   */\n      0x00\n        /* \"#utility.yul\":3023:3024   */\n      dup1\n        /* \"#utility.yul\":3016:3028   */\n      revert\n        /* \"#utility.yul\":2978:3030   */\n    tag_291:\n        /* \"#utility.yul\":3049:3078   */\n      tag_292\n        /* \"#utility.yul\":3068:3077   */\n      dup4\n        /* \"#utility.yul\":3049:3078   */\n      tag_256\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":3039:3078   */\n      swap2\n      pop\n        /* \"#utility.yul\":3128:3130   */\n      0x20\n        /* \"#utility.yul\":3117:3126   */\n      dup4\n        /* \"#utility.yul\":3113:3131   */\n      add\n        /* \"#utility.yul\":3100:3132   */\n      calldataload\n        /* \"#utility.yul\":3175:3180   */\n      dup1\n        /* \"#utility.yul\":3168:3181   */\n      iszero\n        /* \"#utility.yul\":3161:3182   */\n      iszero\n        /* \"#utility.yul\":3154:3159   */\n      dup2\n        /* \"#utility.yul\":3151:3183   */\n      eq\n        /* \"#utility.yul\":3141:3201   */\n      tag_293\n      jumpi\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3194:3195   */\n      dup1\n        /* \"#utility.yul\":3187:3199   */\n      revert\n        /* \"#utility.yul\":3141:3201   */\n    tag_293:\n        /* \"#utility.yul\":3220:3225   */\n      dup1\n        /* \"#utility.yul\":3210:3225   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2884:3231   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3236:3363   */\n    tag_236:\n        /* \"#utility.yul\":3297:3307   */\n      0x4e487b71\n        /* \"#utility.yul\":3292:3295   */\n      0xe0\n        /* \"#utility.yul\":3288:3308   */\n      shl\n        /* \"#utility.yul\":3285:3286   */\n      0x00\n        /* \"#utility.yul\":3278:3309   */\n      mstore\n        /* \"#utility.yul\":3328:3332   */\n      0x41\n        /* \"#utility.yul\":3325:3326   */\n      0x04\n        /* \"#utility.yul\":3318:3333   */\n      mstore\n        /* \"#utility.yul\":3352:3356   */\n      0x24\n        /* \"#utility.yul\":3349:3350   */\n      0x00\n        /* \"#utility.yul\":3342:3357   */\n      revert\n        /* \"#utility.yul\":3368:4506   */\n    tag_69:\n        /* \"#utility.yul\":3463:3469   */\n      0x00\n        /* \"#utility.yul\":3471:3477   */\n      dup1\n        /* \"#utility.yul\":3479:3485   */\n      0x00\n        /* \"#utility.yul\":3487:3493   */\n      dup1\n        /* \"#utility.yul\":3540:3543   */\n      0x80\n        /* \"#utility.yul\":3528:3537   */\n      dup6\n        /* \"#utility.yul\":3519:3526   */\n      dup8\n        /* \"#utility.yul\":3515:3538   */\n      sub\n        /* \"#utility.yul\":3511:3544   */\n      slt\n        /* \"#utility.yul\":3508:3561   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":3557:3558   */\n      0x00\n        /* \"#utility.yul\":3554:3555   */\n      dup1\n        /* \"#utility.yul\":3547:3559   */\n      revert\n        /* \"#utility.yul\":3508:3561   */\n    tag_296:\n        /* \"#utility.yul\":3580:3609   */\n      tag_297\n        /* \"#utility.yul\":3599:3608   */\n      dup6\n        /* \"#utility.yul\":3580:3609   */\n      tag_256\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":3570:3609   */\n      swap4\n      pop\n        /* \"#utility.yul\":3628:3666   */\n      tag_298\n        /* \"#utility.yul\":3662:3664   */\n      0x20\n        /* \"#utility.yul\":3651:3660   */\n      dup7\n        /* \"#utility.yul\":3647:3665   */\n      add\n        /* \"#utility.yul\":3628:3666   */\n      tag_256\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":3618:3666   */\n      swap3\n      pop\n        /* \"#utility.yul\":3713:3715   */\n      0x40\n        /* \"#utility.yul\":3702:3711   */\n      dup6\n        /* \"#utility.yul\":3698:3716   */\n      add\n        /* \"#utility.yul\":3685:3717   */\n      calldataload\n        /* \"#utility.yul\":3675:3717   */\n      swap2\n      pop\n        /* \"#utility.yul\":3768:3770   */\n      0x60\n        /* \"#utility.yul\":3757:3766   */\n      dup6\n        /* \"#utility.yul\":3753:3771   */\n      add\n        /* \"#utility.yul\":3740:3772   */\n      calldataload\n        /* \"#utility.yul\":3791:3809   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3832:3834   */\n      dup1\n        /* \"#utility.yul\":3824:3830   */\n      dup3\n        /* \"#utility.yul\":3821:3835   */\n      gt\n        /* \"#utility.yul\":3818:3852   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":3848:3849   */\n      0x00\n        /* \"#utility.yul\":3845:3846   */\n      dup1\n        /* \"#utility.yul\":3838:3850   */\n      revert\n        /* \"#utility.yul\":3818:3852   */\n    tag_299:\n        /* \"#utility.yul\":3886:3892   */\n      dup2\n        /* \"#utility.yul\":3875:3884   */\n      dup8\n        /* \"#utility.yul\":3871:3893   */\n      add\n        /* \"#utility.yul\":3861:3893   */\n      swap2\n      pop\n        /* \"#utility.yul\":3931:3938   */\n      dup8\n        /* \"#utility.yul\":3924:3928   */\n      0x1f\n        /* \"#utility.yul\":3920:3922   */\n      dup4\n        /* \"#utility.yul\":3916:3929   */\n      add\n        /* \"#utility.yul\":3912:3939   */\n      slt\n        /* \"#utility.yul\":3902:3957   */\n      tag_300\n      jumpi\n        /* \"#utility.yul\":3953:3954   */\n      0x00\n        /* \"#utility.yul\":3950:3951   */\n      dup1\n        /* \"#utility.yul\":3943:3955   */\n      revert\n        /* \"#utility.yul\":3902:3957   */\n    tag_300:\n        /* \"#utility.yul\":3989:3991   */\n      dup2\n        /* \"#utility.yul\":3976:3992   */\n      calldataload\n        /* \"#utility.yul\":4011:4013   */\n      dup2\n        /* \"#utility.yul\":4007:4009   */\n      dup2\n        /* \"#utility.yul\":4004:4014   */\n      gt\n        /* \"#utility.yul\":4001:4037   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":4017:4035   */\n      tag_302\n      tag_236\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4092:4094   */\n      0x40\n        /* \"#utility.yul\":4086:4095   */\n      mload\n        /* \"#utility.yul\":4060:4062   */\n      0x1f\n        /* \"#utility.yul\":4146:4159   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4142:4164   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4166:4168   */\n      0x3f\n        /* \"#utility.yul\":4138:4169   */\n      add\n        /* \"#utility.yul\":4134:4174   */\n      and\n        /* \"#utility.yul\":4122:4175   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4190:4208   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4210:4232   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4187:4233   */\n      or\n        /* \"#utility.yul\":4184:4256   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":4236:4254   */\n      tag_304\n      tag_236\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4276:4286   */\n      dup2\n        /* \"#utility.yul\":4272:4274   */\n      0x40\n        /* \"#utility.yul\":4265:4287   */\n      mstore\n        /* \"#utility.yul\":4311:4313   */\n      dup3\n        /* \"#utility.yul\":4303:4309   */\n      dup2\n        /* \"#utility.yul\":4296:4314   */\n      mstore\n        /* \"#utility.yul\":4351:4358   */\n      dup11\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"#utility.yul\":4341:4343   */\n      dup5\n        /* \"#utility.yul\":4337:4339   */\n      dup8\n        /* \"#utility.yul\":4333:4344   */\n      add\n        /* \"#utility.yul\":4329:4349   */\n      add\n        /* \"#utility.yul\":4326:4359   */\n      gt\n        /* \"#utility.yul\":4323:4376   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":4372:4373   */\n      0x00\n        /* \"#utility.yul\":4369:4370   */\n      dup1\n        /* \"#utility.yul\":4362:4374   */\n      revert\n        /* \"#utility.yul\":4323:4376   */\n    tag_305:\n        /* \"#utility.yul\":4428:4430   */\n      dup3\n        /* \"#utility.yul\":4423:4425   */\n      0x20\n        /* \"#utility.yul\":4419:4421   */\n      dup7\n        /* \"#utility.yul\":4415:4426   */\n      add\n        /* \"#utility.yul\":4410:4412   */\n      0x20\n        /* \"#utility.yul\":4402:4408   */\n      dup4\n        /* \"#utility.yul\":4398:4413   */\n      add\n        /* \"#utility.yul\":4385:4431   */\n      calldatacopy\n        /* \"#utility.yul\":4473:4474   */\n      0x00\n        /* \"#utility.yul\":4468:4470   */\n      0x20\n        /* \"#utility.yul\":4463:4465   */\n      dup5\n        /* \"#utility.yul\":4455:4461   */\n      dup4\n        /* \"#utility.yul\":4451:4466   */\n      add\n        /* \"#utility.yul\":4447:4471   */\n      add\n        /* \"#utility.yul\":4440:4475   */\n      mstore\n        /* \"#utility.yul\":4494:4500   */\n      dup1\n        /* \"#utility.yul\":4484:4500   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3368:4506   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4511:4771   */\n    tag_77:\n        /* \"#utility.yul\":4579:4585   */\n      0x00\n        /* \"#utility.yul\":4587:4593   */\n      dup1\n        /* \"#utility.yul\":4640:4642   */\n      0x40\n        /* \"#utility.yul\":4628:4637   */\n      dup4\n        /* \"#utility.yul\":4619:4626   */\n      dup6\n        /* \"#utility.yul\":4615:4638   */\n      sub\n        /* \"#utility.yul\":4611:4643   */\n      slt\n        /* \"#utility.yul\":4608:4660   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":4656:4657   */\n      0x00\n        /* \"#utility.yul\":4653:4654   */\n      dup1\n        /* \"#utility.yul\":4646:4658   */\n      revert\n        /* \"#utility.yul\":4608:4660   */\n    tag_307:\n        /* \"#utility.yul\":4679:4708   */\n      tag_308\n        /* \"#utility.yul\":4698:4707   */\n      dup4\n        /* \"#utility.yul\":4679:4708   */\n      tag_256\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4669:4708   */\n      swap2\n      pop\n        /* \"#utility.yul\":4727:4765   */\n      tag_309\n        /* \"#utility.yul\":4761:4763   */\n      0x20\n        /* \"#utility.yul\":4750:4759   */\n      dup5\n        /* \"#utility.yul\":4746:4764   */\n      add\n        /* \"#utility.yul\":4727:4765   */\n      tag_256\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4717:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4511:4771   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4776:5156   */\n    tag_87:\n        /* \"#utility.yul\":4855:4856   */\n      0x01\n        /* \"#utility.yul\":4851:4863   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4898:4910   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4919:4980   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":4973:4977   */\n      0x7f\n        /* \"#utility.yul\":4965:4971   */\n      dup3\n        /* \"#utility.yul\":4961:4978   */\n      and\n        /* \"#utility.yul\":4951:4978   */\n      swap2\n      pop\n        /* \"#utility.yul\":4919:4980   */\n    tag_311:\n        /* \"#utility.yul\":5026:5028   */\n      0x20\n        /* \"#utility.yul\":5018:5024   */\n      dup3\n        /* \"#utility.yul\":5015:5029   */\n      lt\n        /* \"#utility.yul\":4995:5013   */\n      dup2\n        /* \"#utility.yul\":4992:5030   */\n      sub\n        /* \"#utility.yul\":4989:5150   */\n      tag_312\n      jumpi\n        /* \"#utility.yul\":5072:5082   */\n      0x4e487b71\n        /* \"#utility.yul\":5067:5070   */\n      0xe0\n        /* \"#utility.yul\":5063:5083   */\n      shl\n        /* \"#utility.yul\":5060:5061   */\n      0x00\n        /* \"#utility.yul\":5053:5084   */\n      mstore\n        /* \"#utility.yul\":5107:5111   */\n      0x22\n        /* \"#utility.yul\":5104:5105   */\n      0x04\n        /* \"#utility.yul\":5097:5112   */\n      mstore\n        /* \"#utility.yul\":5135:5139   */\n      0x24\n        /* \"#utility.yul\":5132:5133   */\n      0x00\n        /* \"#utility.yul\":5125:5140   */\n      revert\n        /* \"#utility.yul\":4989:5150   */\n    tag_312:\n      pop\n        /* \"#utility.yul\":4776:5156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7171:7586   */\n    tag_146:\n        /* \"#utility.yul\":7373:7375   */\n      0x20\n        /* \"#utility.yul\":7355:7376   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7412:7414   */\n      0x33\n        /* \"#utility.yul\":7392:7410   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7385:7415   */\n      mstore\n        /* \"#utility.yul\":7451:7485   */\n      0x455243373231413a207472616e7366657220746f206e6f6e2045524337323152\n        /* \"#utility.yul\":7446:7448   */\n      0x40\n        /* \"#utility.yul\":7431:7449   */\n      dup3\n      add\n        /* \"#utility.yul\":7424:7486   */\n      mstore\n      shl(0x69, 0x32b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":7517:7519   */\n      0x60\n        /* \"#utility.yul\":7502:7520   */\n      dup3\n      add\n        /* \"#utility.yul\":7495:7544   */\n      mstore\n        /* \"#utility.yul\":7576:7579   */\n      0x80\n        /* \"#utility.yul\":7561:7580   */\n      add\n      swap1\n        /* \"#utility.yul\":7171:7586   */\n      jump\t// out\n        /* \"#utility.yul\":8007:8503   */\n    tag_159:\n        /* \"#utility.yul\":8186:8189   */\n      0x00\n        /* \"#utility.yul\":8224:8230   */\n      dup4\n        /* \"#utility.yul\":8218:8231   */\n      mload\n        /* \"#utility.yul\":8240:8306   */\n      tag_321\n        /* \"#utility.yul\":8299:8305   */\n      dup2\n        /* \"#utility.yul\":8294:8297   */\n      dup5\n        /* \"#utility.yul\":8287:8291   */\n      0x20\n        /* \"#utility.yul\":8279:8285   */\n      dup9\n        /* \"#utility.yul\":8275:8292   */\n      add\n        /* \"#utility.yul\":8240:8306   */\n      tag_254\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":8369:8382   */\n      dup4\n      mload\n        /* \"#utility.yul\":8328:8344   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":8391:8461   */\n      tag_322\n        /* \"#utility.yul\":8369:8382   */\n      dup2\n        /* \"#utility.yul\":8328:8344   */\n      dup4\n        /* \"#utility.yul\":8438:8442   */\n      0x20\n        /* \"#utility.yul\":8426:8443   */\n      dup9\n      add\n        /* \"#utility.yul\":8391:8461   */\n      tag_254\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":8477:8497   */\n      add\n      swap5\n        /* \"#utility.yul\":8007:8503   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10567:11056   */\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10836:10851   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":10818:10852   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10888:10903   */\n      dup5\n      and\n        /* \"#utility.yul\":10883:10885   */\n      0x20\n        /* \"#utility.yul\":10868:10886   */\n      dup3\n      add\n        /* \"#utility.yul\":10861:10904   */\n      mstore\n        /* \"#utility.yul\":10935:10937   */\n      0x40\n        /* \"#utility.yul\":10920:10938   */\n      dup2\n      add\n        /* \"#utility.yul\":10913:10947   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":10983:10986   */\n      0x80\n        /* \"#utility.yul\":10978:10980   */\n      0x60\n        /* \"#utility.yul\":10963:10981   */\n      dup3\n      add\n        /* \"#utility.yul\":10956:10987   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10761:10765   */\n      0x00\n      swap1\n        /* \"#utility.yul\":11004:11050   */\n      tag_329\n      swap1\n        /* \"#utility.yul\":11030:11049   */\n      dup4\n      add\n        /* \"#utility.yul\":11022:11028   */\n      dup5\n        /* \"#utility.yul\":11004:11050   */\n      tag_255\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":10996:11050   */\n      swap7\n        /* \"#utility.yul\":10567:11056   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11061:11310   */\n    tag_213:\n        /* \"#utility.yul\":11130:11136   */\n      0x00\n        /* \"#utility.yul\":11183:11185   */\n      0x20\n        /* \"#utility.yul\":11171:11180   */\n      dup3\n        /* \"#utility.yul\":11162:11169   */\n      dup5\n        /* \"#utility.yul\":11158:11181   */\n      sub\n        /* \"#utility.yul\":11154:11186   */\n      slt\n        /* \"#utility.yul\":11151:11203   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":11199:11200   */\n      0x00\n        /* \"#utility.yul\":11196:11197   */\n      dup1\n        /* \"#utility.yul\":11189:11201   */\n      revert\n        /* \"#utility.yul\":11151:11203   */\n    tag_331:\n        /* \"#utility.yul\":11231:11240   */\n      dup2\n        /* \"#utility.yul\":11225:11241   */\n      mload\n        /* \"#utility.yul\":11250:11280   */\n      tag_155\n        /* \"#utility.yul\":11274:11279   */\n      dup2\n        /* \"#utility.yul\":11250:11280   */\n      tag_253\n      jump\t// in\n        /* \"#utility.yul\":11315:11442   */\n    tag_257:\n        /* \"#utility.yul\":11376:11386   */\n      0x4e487b71\n        /* \"#utility.yul\":11371:11374   */\n      0xe0\n        /* \"#utility.yul\":11367:11387   */\n      shl\n        /* \"#utility.yul\":11364:11365   */\n      0x00\n        /* \"#utility.yul\":11357:11388   */\n      mstore\n        /* \"#utility.yul\":11407:11411   */\n      0x11\n        /* \"#utility.yul\":11404:11405   */\n      0x04\n        /* \"#utility.yul\":11397:11412   */\n      mstore\n        /* \"#utility.yul\":11431:11435   */\n      0x24\n        /* \"#utility.yul\":11428:11429   */\n      0x00\n        /* \"#utility.yul\":11421:11436   */\n      revert\n        /* \"#utility.yul\":11447:11582   */\n    tag_231:\n        /* \"#utility.yul\":11486:11489   */\n      0x00\n        /* \"#utility.yul\":11507:11524   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":11504:11547   */\n      tag_336\n      jumpi\n        /* \"#utility.yul\":11527:11545   */\n      tag_336\n      tag_257\n      jump\t// in\n    tag_336:\n      pop\n        /* \"#utility.yul\":11574:11575   */\n      0x01\n        /* \"#utility.yul\":11563:11576   */\n      add\n      swap1\n        /* \"#utility.yul\":11447:11582   */\n      jump\t// out\n        /* \"#utility.yul\":11587:11714   */\n    tag_258:\n        /* \"#utility.yul\":11648:11658   */\n      0x4e487b71\n        /* \"#utility.yul\":11643:11646   */\n      0xe0\n        /* \"#utility.yul\":11639:11659   */\n      shl\n        /* \"#utility.yul\":11636:11637   */\n      0x00\n        /* \"#utility.yul\":11629:11660   */\n      mstore\n        /* \"#utility.yul\":11679:11683   */\n      0x12\n        /* \"#utility.yul\":11676:11677   */\n      0x04\n        /* \"#utility.yul\":11669:11684   */\n      mstore\n        /* \"#utility.yul\":11703:11707   */\n      0x24\n        /* \"#utility.yul\":11700:11701   */\n      0x00\n        /* \"#utility.yul\":11693:11708   */\n      revert\n        /* \"#utility.yul\":11719:11839   */\n    tag_233:\n        /* \"#utility.yul\":11759:11760   */\n      0x00\n        /* \"#utility.yul\":11785:11786   */\n      dup3\n        /* \"#utility.yul\":11775:11810   */\n      tag_340\n      jumpi\n        /* \"#utility.yul\":11790:11808   */\n      tag_340\n      tag_258\n      jump\t// in\n    tag_340:\n      pop\n        /* \"#utility.yul\":11824:11833   */\n      div\n      swap1\n        /* \"#utility.yul\":11719:11839   */\n      jump\t// out\n        /* \"#utility.yul\":11844:11972   */\n    tag_241:\n        /* \"#utility.yul\":11911:11920   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":11932:11943   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":11929:11966   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":11946:11964   */\n      tag_83\n      tag_257\n      jump\t// in\n        /* \"#utility.yul\":11977:12089   */\n    tag_243:\n        /* \"#utility.yul\":12009:12010   */\n      0x00\n        /* \"#utility.yul\":12035:12036   */\n      dup3\n        /* \"#utility.yul\":12025:12060   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":12040:12058   */\n      tag_346\n      tag_258\n      jump\t// in\n    tag_346:\n      pop\n        /* \"#utility.yul\":12074:12083   */\n      mod\n      swap1\n        /* \"#utility.yul\":11977:12089   */\n      jump\t// out\n        /* \"#utility.yul\":12094:12219   */\n    tag_245:\n        /* \"#utility.yul\":12159:12168   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":12180:12190   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":12177:12213   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":12193:12211   */\n      tag_83\n      tag_257\n      jump\t// in\n        /* \"#utility.yul\":12224:12351   */\n    tag_248:\n        /* \"#utility.yul\":12285:12295   */\n      0x4e487b71\n        /* \"#utility.yul\":12280:12283   */\n      0xe0\n        /* \"#utility.yul\":12276:12296   */\n      shl\n        /* \"#utility.yul\":12273:12274   */\n      0x00\n        /* \"#utility.yul\":12266:12297   */\n      mstore\n        /* \"#utility.yul\":12316:12320   */\n      0x32\n        /* \"#utility.yul\":12313:12314   */\n      0x04\n        /* \"#utility.yul\":12306:12321   */\n      mstore\n        /* \"#utility.yul\":12340:12344   */\n      0x24\n        /* \"#utility.yul\":12337:12338   */\n      0x00\n        /* \"#utility.yul\":12330:12345   */\n      revert\n\n    auxdata: 0xa2646970667358221220325f0113b0ccdfdfc492183b97d69e5824d0890e12df373494e3b0ff983a562864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_968": {
									"entryPoint": null,
									"id": 968,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 90,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:12"
															},
															"nodeType": "YulIf",
															"src": "220:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:12",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:12"
															},
															"nodeType": "YulIf",
															"src": "353:36:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:12"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:12"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:12"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:12"
															},
															"nodeType": "YulIf",
															"src": "536:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:12"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:12"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:12"
															},
															"nodeType": "YulIf",
															"src": "698:53:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:12"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:12"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:12"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:12"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:12"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:12",
																"statements": []
															},
															"src": "779:133:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:12"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:12"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:12",
														"type": ""
													}
												],
												"src": "146:840:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:12"
															},
															"nodeType": "YulIf",
															"src": "1119:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:12",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:12"
															},
															"nodeType": "YulIf",
															"src": "1256:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:12"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:12"
															},
															"nodeType": "YulIf",
															"src": "1429:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:12"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:12",
														"type": ""
													}
												],
												"src": "991:562:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:12"
															},
															"nodeType": "YulIf",
															"src": "1701:61:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:12"
															},
															"nodeType": "YulIf",
															"src": "1771:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:12",
														"type": ""
													}
												],
												"src": "1558:380:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:12",
														"type": ""
													}
												],
												"src": "1943:121:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:12"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:12"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:12"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:12",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:12",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:12"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:12"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:12"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:12",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:12"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:12"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:12"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:12"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:12"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:12"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:12"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:12",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:12"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:12"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:12",
																			"statements": []
																		},
																		"src": "2516:82:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:12"
															},
															"nodeType": "YulIf",
															"src": "2160:448:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:12",
														"type": ""
													}
												],
												"src": "2069:545:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:12",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:12"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:12"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:12",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:12"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:12"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:12",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:12",
														"type": ""
													}
												],
												"src": "2619:166:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:12",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:12"
															},
															"nodeType": "YulIf",
															"src": "2929:56:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:12"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:12"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:12",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:12"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:12"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:12"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:12"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:12",
																					"statements": []
																				},
																				"src": "3376:236:12"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:12",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:12",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:12"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:12"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:12"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:12",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:12"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:12"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:12",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:12"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:12"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:12"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:12"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:12"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:12"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:12"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:12",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:12"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:12"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:12"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:12"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:12",
														"type": ""
													}
												],
												"src": "2790:1352:12"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620015423803806200154283398101604081905262000034916200011f565b600162000042838262000218565b50600262000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61124e80620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101d2578063b88d4fde146101e5578063c87b56dd146101f8578063e985e9c51461020b57600080fd5b80636352211e146101a457806370a08231146101b757806395d89b41146101ca57600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806318160ddd1461016c57806323b872dd1461017e57806342842e0e1461019157600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610dc2565b61021e565b60405190151581526020015b60405180910390f35b61011f610270565b60405161010e9190610e2f565b61013f61013a366004610e42565b610302565b6040516001600160a01b03909116815260200161010e565b61016a610165366004610e77565b610392565b005b6000545b60405190815260200161010e565b61016a61018c366004610ea1565b6104a9565b61016a61019f366004610ea1565b6104b4565b61013f6101b2366004610e42565b6104cf565b6101706101c5366004610edd565b6104e1565b61011f610572565b61016a6101e0366004610ef8565b610581565b61016a6101f3366004610f4a565b610645565b61011f610206366004610e42565b61067e565b610102610219366004611026565b610758565b60006001600160e01b031982166380ac58cd60e01b148061024f57506001600160e01b03198216635b5e139f60e01b145b8061026a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606001805461027f90611059565b80601f01602080910402602001604051908101604052809291908181526020018280546102ab90611059565b80156102f85780601f106102cd576101008083540402835291602001916102f8565b820191906000526020600020905b8154815290600101906020018083116102db57829003601f168201915b5050505050905090565b600061030f826000541190565b6103765760405162461bcd60e51b815260206004820152602d60248201527f455243373231413a20617070726f76656420717565727920666f72206e6f6e6560448201526c3c34b9ba32b73a103a37b5b2b760991b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b600061039d826104cf565b9050806001600160a01b0316836001600160a01b03160361040b5760405162461bcd60e51b815260206004820152602260248201527f455243373231413a20617070726f76616c20746f2063757272656e74206f776e60448201526132b960f11b606482015260840161036d565b336001600160a01b038216148061042757506104278133610758565b6104995760405162461bcd60e51b815260206004820152603960248201527f455243373231413a20617070726f76652063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656420666f7220616c6c00000000000000606482015260840161036d565b6104a4838383610786565b505050565b6104a48383836107e2565b6104a483838360405180602001604052806000815250610645565b60006104da82610acf565b5192915050565b60006001600160a01b03821661054d5760405162461bcd60e51b815260206004820152602b60248201527f455243373231413a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b606482015260840161036d565b506001600160a01b03166000908152600460205260409020546001600160801b031690565b60606002805461027f90611059565b336001600160a01b038316036105d95760405162461bcd60e51b815260206004820152601a60248201527f455243373231413a20617070726f766520746f2063616c6c6572000000000000604482015260640161036d565b3360008181526006602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106508484846107e2565b61065c84848484610ba6565b6106785760405162461bcd60e51b815260040161036d90611093565b50505050565b606061068b826000541190565b6106ef5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161036d565b600061070660408051602081019091526000815290565b905080516000036107265760405180602001604052806000815250610751565b8061073084610ca8565b6040516020016107419291906110e6565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b60008281526005602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006107ed82610acf565b80519091506000906001600160a01b0316336001600160a01b0316148061082457503361081984610302565b6001600160a01b0316145b80610836575081516108369033610758565b9050806108a05760405162461bcd60e51b815260206004820152603260248201527f455243373231413a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606482015260840161036d565b846001600160a01b031682600001516001600160a01b0316146109145760405162461bcd60e51b815260206004820152602660248201527f455243373231413a207472616e736665722066726f6d20696e636f72726563746044820152651037bbb732b960d11b606482015260840161036d565b6001600160a01b0384166109785760405162461bcd60e51b815260206004820152602560248201527f455243373231413a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161036d565b6109886000848460000151610786565b6001600160a01b03858116600090815260046020908152604080832080546fffffffffffffffffffffffffffffffff198082166001600160801b03928316600019018316179092558986168086528386208054938416938316600190810190931693909317909255888552600390935281842080546001600160e01b031916909117600160a01b4267ffffffffffffffff1602179055908601808352912054909116610a8657610a39816000541190565b15610a86578251600082815260036020908152604090912080549186015167ffffffffffffffff16600160a01b026001600160e01b03199092166001600160a01b03909316929092171790555b5082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050505050565b6040805180820190915260008082526020820152610aee826000541190565b610b4d5760405162461bcd60e51b815260206004820152602a60248201527f455243373231413a206f776e657220717565727920666f72206e6f6e657869736044820152693a32b73a103a37b5b2b760b11b606482015260840161036d565b815b6000818152600360209081526040918290208251808401909352546001600160a01b038116808452600160a01b90910467ffffffffffffffff169183019190915215610b9c579392505050565b5060001901610b4f565b60006001600160a01b0384163b15610c9c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610bea903390899088908890600401611115565b6020604051808303816000875af1925050508015610c25575060408051601f3d908101601f19168201909252610c2291810190611152565b60015b610c82573d808015610c53576040519150601f19603f3d011682016040523d82523d6000602084013e610c58565b606091505b508051600003610c7a5760405162461bcd60e51b815260040161036d90611093565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ca0565b5060015b949350505050565b606081600003610ccf5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610cf95780610ce381611185565b9150610cf29050600a836111b4565b9150610cd3565b60008167ffffffffffffffff811115610d1457610d14610f34565b6040519080825280601f01601f191660200182016040528015610d3e576020820181803683370190505b5090505b8415610ca057610d536001836111c8565b9150610d60600a866111db565b610d6b9060306111ef565b60f81b818381518110610d8057610d80611202565b60200101906001600160f81b031916908160001a905350610da2600a866111b4565b9450610d42565b6001600160e01b031981168114610dbf57600080fd5b50565b600060208284031215610dd457600080fd5b813561075181610da9565b60005b83811015610dfa578181015183820152602001610de2565b50506000910152565b60008151808452610e1b816020860160208601610ddf565b601f01601f19169290920160200192915050565b6020815260006107516020830184610e03565b600060208284031215610e5457600080fd5b5035919050565b80356001600160a01b0381168114610e7257600080fd5b919050565b60008060408385031215610e8a57600080fd5b610e9383610e5b565b946020939093013593505050565b600080600060608486031215610eb657600080fd5b610ebf84610e5b565b9250610ecd60208501610e5b565b9150604084013590509250925092565b600060208284031215610eef57600080fd5b61075182610e5b565b60008060408385031215610f0b57600080fd5b610f1483610e5b565b915060208301358015158114610f2957600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f6057600080fd5b610f6985610e5b565b9350610f7760208601610e5b565b925060408501359150606085013567ffffffffffffffff80821115610f9b57600080fd5b818701915087601f830112610faf57600080fd5b813581811115610fc157610fc1610f34565b604051601f8201601f19908116603f01168101908382118183101715610fe957610fe9610f34565b816040528281528a602084870101111561100257600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561103957600080fd5b61104283610e5b565b915061105060208401610e5b565b90509250929050565b600181811c9082168061106d57607f821691505b60208210810361108d57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526033908201527f455243373231413a207472616e7366657220746f206e6f6e204552433732315260408201527232b1b2b4bb32b91034b6b83632b6b2b73a32b960691b606082015260800190565b600083516110f8818460208801610ddf565b83519083019061110c818360208801610ddf565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061114890830184610e03565b9695505050505050565b60006020828403121561116457600080fd5b815161075181610da9565b634e487b7160e01b600052601160045260246000fd5b6000600182016111975761119761116f565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826111c3576111c361119e565b500490565b8181038181111561026a5761026a61116f565b6000826111ea576111ea61119e565b500690565b8082018082111561026a5761026a61116f565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220325f0113b0ccdfdfc492183b97d69e5824d0890e12df373494e3b0ff983a562864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1542 CODESIZE SUB DUP1 PUSH3 0x1542 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x1 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x2 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x124E DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xDC2 JUMP JUMPDEST PUSH2 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xE42 JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xE77 JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0xE42 JUMP JUMPDEST PUSH2 0x4CF JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x572 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0x645 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0xE42 JUMP JUMPDEST PUSH2 0x67E JUMP JUMPDEST PUSH2 0x102 PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x1026 JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x24F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x26A JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x27F SWAP1 PUSH2 0x1059 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x1059 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F DUP3 PUSH1 0x0 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x376 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20617070726F76656420717565727920666F72206E6F6E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x3C34B9BA32B73A103A37B5B2B7 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39D DUP3 PUSH2 0x4CF JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20617070726F76616C20746F2063757272656E74206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x427 JUMPI POP PUSH2 0x427 DUP2 CALLER PUSH2 0x758 JUMP JUMPDEST PUSH2 0x499 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20617070726F76652063616C6C6572206973206E6F74206F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F76656420666F7220616C6C00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST PUSH2 0x4A4 DUP4 DUP4 DUP4 PUSH2 0x786 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4A4 DUP4 DUP4 DUP4 PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x4A4 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x645 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DA DUP3 PUSH2 0xACF JUMP JUMPDEST MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x54D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x27F SWAP1 PUSH2 0x1059 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x5D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20617070726F766520746F2063616C6C6572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x36D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x650 DUP5 DUP5 DUP5 PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x65C DUP5 DUP5 DUP5 DUP5 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x678 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36D SWAP1 PUSH2 0x1093 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x68B DUP3 PUSH1 0x0 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x706 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x726 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x751 JUMP JUMPDEST DUP1 PUSH2 0x730 DUP5 PUSH2 0xCA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x741 SWAP3 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7ED DUP3 PUSH2 0xACF JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x824 JUMPI POP CALLER PUSH2 0x819 DUP5 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x836 JUMPI POP DUP2 MLOAD PUSH2 0x836 SWAP1 CALLER PUSH2 0x758 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x914 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A207472616E736665722066726F6D20696E636F7272656374 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1037BBB732B9 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x978 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST PUSH2 0x988 PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP1 DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 NOT ADD DUP4 AND OR SWAP1 SWAP3 SSTORE DUP10 DUP7 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD SWAP4 DUP5 AND SWAP4 DUP4 AND PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP4 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP9 DUP6 MSTORE PUSH1 0x3 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xA0 SHL TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE SWAP1 DUP7 ADD DUP1 DUP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 AND PUSH2 0xA86 JUMPI PUSH2 0xA39 DUP2 PUSH1 0x0 SLOAD GT SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xA86 JUMPI DUP3 MLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE JUMPDEST POP DUP3 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xAEE DUP3 PUSH1 0x0 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0xB4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A206F776E657220717565727920666F72206E6F6E65786973 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x3A32B73A103A37B5B2B7 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP5 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO PUSH2 0xB9C JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x0 NOT ADD PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xBEA SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC25 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC22 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC82 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xC53 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xC7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36D SWAP1 PUSH2 0x1093 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xCA0 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xCCF JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xCF9 JUMPI DUP1 PUSH2 0xCE3 DUP2 PUSH2 0x1185 JUMP JUMPDEST SWAP2 POP PUSH2 0xCF2 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x11B4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD14 JUMPI PUSH2 0xD14 PUSH2 0xF34 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD3E JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xCA0 JUMPI PUSH2 0xD53 PUSH1 0x1 DUP4 PUSH2 0x11C8 JUMP JUMPDEST SWAP2 POP PUSH2 0xD60 PUSH1 0xA DUP7 PUSH2 0x11DB JUMP JUMPDEST PUSH2 0xD6B SWAP1 PUSH1 0x30 PUSH2 0x11EF JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD80 JUMPI PUSH2 0xD80 PUSH2 0x1202 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xDA2 PUSH1 0xA DUP7 PUSH2 0x11B4 JUMP JUMPDEST SWAP5 POP PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x751 DUP2 PUSH2 0xDA9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDFA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDE2 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xE1B DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x751 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE93 DUP4 PUSH2 0xE5B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEBF DUP5 PUSH2 0xE5B JUMP JUMPDEST SWAP3 POP PUSH2 0xECD PUSH1 0x20 DUP6 ADD PUSH2 0xE5B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP3 PUSH2 0xE5B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF14 DUP4 PUSH2 0xE5B JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF69 DUP6 PUSH2 0xE5B JUMP JUMPDEST SWAP4 POP PUSH2 0xF77 PUSH1 0x20 DUP7 ADD PUSH2 0xE5B JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xFC1 JUMPI PUSH2 0xFC1 PUSH2 0xF34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xFE9 JUMPI PUSH2 0xFE9 PUSH2 0xF34 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1002 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1039 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1042 DUP4 PUSH2 0xE5B JUMP JUMPDEST SWAP2 POP PUSH2 0x1050 PUSH1 0x20 DUP5 ADD PUSH2 0xE5B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x106D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x108D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x33 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243373231413A207472616E7366657220746F206E6F6E2045524337323152 PUSH1 0x40 DUP3 ADD MSTORE PUSH19 0x32B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x69 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x10F8 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xDDF JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x110C DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1148 SWAP1 DUP4 ADD DUP5 PUSH2 0xE03 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x751 DUP2 PUSH2 0xDA9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1197 JUMPI PUSH2 0x1197 PUSH2 0x116F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11C3 JUMPI PUSH2 0x11C3 PUSH2 0x119E JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x26A JUMPI PUSH2 0x26A PUSH2 0x116F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11EA JUMPI PUSH2 0x11EA PUSH2 0x119E JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x26A JUMPI PUSH2 0x26A PUSH2 0x116F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x5F ADD SGT 0xB0 0xCC 0xDF 0xDF 0xC4 SWAP3 XOR EXTCODESIZE SWAP8 0xD6 SWAP15 PC 0x24 0xD0 DUP10 0xE SLT 0xDF CALLDATACOPY CALLVALUE SWAP5 0xE3 0xB0 SELFDESTRUCT SWAP9 GASPRICE JUMP 0x28 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "961:14197:10:-:0;;;2002:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2069:5;:13;2077:5;2069;:13;:::i;:::-;-1:-1:-1;2093:7:10;:17;2103:7;2093;:17;:::i;:::-;;2002:116;;961:14197;;14:127:12;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:12;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:12;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:12:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:12;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:12;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:12;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:12;;;3992:26;3943:89;-1:-1:-1;;2747:1:12;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:12;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:12;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:12;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:12:o;:::-;961:14197:10;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1846": {
									"entryPoint": null,
									"id": 1846,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_1756": {
									"entryPoint": 1926,
									"id": 1756,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_1199": {
									"entryPoint": null,
									"id": 1199,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1833": {
									"entryPoint": null,
									"id": 1833,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1820": {
									"entryPoint": 2982,
									"id": 1820,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1396": {
									"entryPoint": null,
									"id": 1396,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_620": {
									"entryPoint": null,
									"id": 620,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_1733": {
									"entryPoint": 2018,
									"id": 1733,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_1243": {
									"entryPoint": 914,
									"id": 1243,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1035": {
									"entryPoint": 1249,
									"id": 1035,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1264": {
									"entryPoint": 770,
									"id": 1264,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1316": {
									"entryPoint": 1880,
									"id": 1316,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_331": {
									"entryPoint": null,
									"id": 331,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_1138": {
									"entryPoint": 624,
									"id": 1138,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1128": {
									"entryPoint": 1231,
									"id": 1128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ownershipOf_1113": {
									"entryPoint": 2767,
									"id": 1113,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1353": {
									"entryPoint": 1204,
									"id": 1353,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1383": {
									"entryPoint": 1605,
									"id": 1383,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1298": {
									"entryPoint": 1409,
									"id": 1298,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1007": {
									"entryPoint": 542,
									"id": 1007,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_879": {
									"entryPoint": null,
									"id": 879,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1148": {
									"entryPoint": 1394,
									"id": 1148,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_718": {
									"entryPoint": 3240,
									"id": 718,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1190": {
									"entryPoint": 1662,
									"id": 1190,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_976": {
									"entryPoint": null,
									"id": 976,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1334": {
									"entryPoint": 1193,
									"id": 1334,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4326,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4373,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3551,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 4571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4463,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4510,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4610,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3892,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12353:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:12",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:12",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:12"
															},
															"nodeType": "YulIf",
															"src": "68:71:12"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:12",
														"type": ""
													}
												],
												"src": "14:131:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:12"
															},
															"nodeType": "YulIf",
															"src": "229:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:12",
														"type": ""
													}
												],
												"src": "150:245:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:12",
														"type": ""
													}
												],
												"src": "400:187:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "658:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "668:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "677:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "672:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "737:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "762:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "767:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "758:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "781:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "786:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "777:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "777:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "771:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "751:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "751:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "698:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "701:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "709:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "711:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "720:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "723:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "711:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "691:3:12",
																"statements": []
															},
															"src": "687:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "816:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "834:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "809:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "809:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "636:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "641:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "646:6:12",
														"type": ""
													}
												],
												"src": "592:250:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:221:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "907:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "921:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "911:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "942:19:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1009:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1016:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1005:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1005:16:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1032:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "970:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:76:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "970:76:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1055:57:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1062:50:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "874:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "881:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "889:3:12",
														"type": ""
													}
												],
												"src": "847:271:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1244:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1261:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1254:21:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1284:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1318:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1292:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:45:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1284:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1213:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1224:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1235:4:12",
														"type": ""
													}
												],
												"src": "1123:220:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1418:110:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1464:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:32:12"
															},
															"nodeType": "YulIf",
															"src": "1428:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1489:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1499:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1384:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1395:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1407:6:12",
														"type": ""
													}
												],
												"src": "1348:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1634:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1644:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1644:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1701:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1722:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1713:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1713:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1726:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1709:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1709:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1679:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1679:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1603:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1614:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1625:4:12",
														"type": ""
													}
												],
												"src": "1533:203:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1800:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1892:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1901:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1904:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1894:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1862:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1882:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1873:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1873:11:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1886:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1869:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1869:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1858:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1848:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1848:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:50:12"
															},
															"nodeType": "YulIf",
															"src": "1838:70:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1780:5:12",
														"type": ""
													}
												],
												"src": "1741:173:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:167:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2052:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2054:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2054:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2054:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2027:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2023:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:32:12"
															},
															"nodeType": "YulIf",
															"src": "2016:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2077:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2087:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2125:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2135:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1964:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1975:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1987:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1995:6:12",
														"type": ""
													}
												],
												"src": "1919:254:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2279:76:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2289:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2301:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2312:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2297:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2297:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2289:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2331:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2342:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2324:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2248:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2259:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2270:4:12",
														"type": ""
													}
												],
												"src": "2178:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2464:224:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2510:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2519:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2522:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2512:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2512:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2512:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2485:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2494:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2481:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2506:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2477:32:12"
															},
															"nodeType": "YulIf",
															"src": "2474:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2535:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2564:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2545:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2545:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2535:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2583:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2616:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2627:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2612:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2612:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2593:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2593:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2583:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2640:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2667:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2678:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2663:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2663:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2650:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2650:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2640:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2414:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2425:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2437:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2445:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2453:6:12",
														"type": ""
													}
												],
												"src": "2360:328:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2763:116:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2809:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2818:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2821:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2811:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2811:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2811:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2784:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2793:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2780:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2780:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2805:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2776:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2776:32:12"
															},
															"nodeType": "YulIf",
															"src": "2773:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2834:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2863:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2844:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2844:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2834:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2729:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2740:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2752:6:12",
														"type": ""
													}
												],
												"src": "2693:186:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2968:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3014:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3023:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3026:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3016:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3016:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3016:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2989:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2998:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2985:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2985:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3010:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2981:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2981:32:12"
															},
															"nodeType": "YulIf",
															"src": "2978:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3039:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3068:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3049:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3049:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3087:45:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3117:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3128:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3113:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3113:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3100:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3100:32:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3091:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3185:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3194:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3197:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3187:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3187:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3187:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3154:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3175:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3168:6:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3168:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3161:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3161:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3151:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3151:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3144:40:12"
															},
															"nodeType": "YulIf",
															"src": "3141:60:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3210:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3220:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3210:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2926:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2937:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2949:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2957:6:12",
														"type": ""
													}
												],
												"src": "2884:347:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3268:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3285:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3292:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3297:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3288:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3278:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3278:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3278:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3325:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3328:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3318:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3349:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3352:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3342:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3342:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3342:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3236:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3498:1008:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3545:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3554:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3557:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3547:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3547:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3547:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3519:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3528:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3515:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3540:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3511:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3511:33:12"
															},
															"nodeType": "YulIf",
															"src": "3508:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3570:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3599:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3580:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3580:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3570:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3618:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3628:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3675:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3702:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3713:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3698:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3698:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3685:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3675:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3726:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3757:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3768:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3753:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3753:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3740:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3740:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3730:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3781:28:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3791:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3785:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3836:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3845:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3848:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3838:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3838:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3838:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3824:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3832:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3821:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3821:14:12"
															},
															"nodeType": "YulIf",
															"src": "3818:34:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3861:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3875:9:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3886:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:22:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3865:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3941:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3953:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3943:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3943:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3943:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3920:2:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3924:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3916:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3916:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3931:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3912:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3905:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3905:35:12"
															},
															"nodeType": "YulIf",
															"src": "3902:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3966:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3989:2:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3976:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:16:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3970:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4015:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4017:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4017:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4017:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4007:2:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4011:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4004:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4004:10:12"
															},
															"nodeType": "YulIf",
															"src": "4001:36:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4046:17:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4060:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:7:12"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4050:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4072:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4092:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4086:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4086:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4076:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4126:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "4150:2:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4154:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4146:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4146:13:12"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "4161:2:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4142:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4142:22:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4166:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4138:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4138:31:12"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4171:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4134:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4134:40:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4122:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:53:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4108:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4234:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4236:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4236:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4236:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4193:10:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4205:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4190:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4190:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4213:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4225:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4210:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4210:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4187:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4187:46:12"
															},
															"nodeType": "YulIf",
															"src": "4184:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4272:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4276:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4265:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4303:6:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4311:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4296:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4296:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4296:18:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4360:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4369:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4372:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4362:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4362:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4362:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4337:2:12"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4341:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4333:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4333:11:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4346:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4329:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4329:20:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4351:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4326:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4326:33:12"
															},
															"nodeType": "YulIf",
															"src": "4323:53:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4402:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4410:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4398:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4398:15:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4419:2:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4423:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4415:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4415:11:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4428:2:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4385:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4385:46:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4385:46:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4455:6:12"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4463:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4451:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4451:15:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4468:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4447:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4447:24:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4473:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4440:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4440:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4440:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4484:16:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4494:6:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4484:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3440:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3451:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3463:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3471:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3479:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3487:6:12",
														"type": ""
													}
												],
												"src": "3368:1138:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4598:173:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4644:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4653:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4656:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4646:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4646:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4619:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4628:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4615:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4615:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4640:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4611:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4611:32:12"
															},
															"nodeType": "YulIf",
															"src": "4608:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4669:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4698:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4679:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4679:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4717:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4750:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4761:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4746:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4746:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4727:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4727:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4556:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4567:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4579:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4587:6:12",
														"type": ""
													}
												],
												"src": "4511:260:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4831:325:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4841:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4855:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4858:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4851:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4851:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4841:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4872:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4902:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4908:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4898:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4898:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4876:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4949:31:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4951:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4965:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4973:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4961:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4961:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4951:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4929:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4922:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4922:26:12"
															},
															"nodeType": "YulIf",
															"src": "4919:61:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5039:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5060:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5067:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5072:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5063:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5063:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5053:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5053:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5053:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5104:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5107:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5097:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5097:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5097:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5132:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5135:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5125:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5125:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5125:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4995:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5018:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5026:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5015:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5015:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4992:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4992:38:12"
															},
															"nodeType": "YulIf",
															"src": "4989:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4811:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4820:6:12",
														"type": ""
													}
												],
												"src": "4776:380:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5335:235:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5352:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5363:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5345:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5345:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5345:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5386:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5397:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5382:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5382:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5402:2:12",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5375:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5375:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5425:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5436:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5421:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5421:18:12"
																	},
																	{
																		"hexValue": "455243373231413a20617070726f76656420717565727920666f72206e6f6e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5441:34:12",
																		"type": "",
																		"value": "ERC721A: approved query for none"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5414:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5496:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5507:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5492:18:12"
																	},
																	{
																		"hexValue": "78697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5512:15:12",
																		"type": "",
																		"value": "xistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5485:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5485:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5485:43:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5537:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5549:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5560:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5545:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5545:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5537:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5312:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5326:4:12",
														"type": ""
													}
												],
												"src": "5161:409:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5749:224:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5766:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5777:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5759:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5759:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5759:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5800:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5811:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5796:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5796:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5816:2:12",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5789:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5789:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5789:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5839:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5850:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5835:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5835:18:12"
																	},
																	{
																		"hexValue": "455243373231413a20617070726f76616c20746f2063757272656e74206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5855:34:12",
																		"type": "",
																		"value": "ERC721A: approval to current own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5828:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5828:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5828:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5910:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5921:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5906:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5906:18:12"
																	},
																	{
																		"hexValue": "6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5926:4:12",
																		"type": "",
																		"value": "er"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5899:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5899:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5899:32:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5940:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5952:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5963:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5948:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5948:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5940:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5726:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5740:4:12",
														"type": ""
													}
												],
												"src": "5575:398:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6152:247:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6169:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6180:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6162:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6162:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6162:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6203:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6214:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6199:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6199:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6219:2:12",
																		"type": "",
																		"value": "57"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6192:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6192:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6192:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6242:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6253:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6238:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6238:18:12"
																	},
																	{
																		"hexValue": "455243373231413a20617070726f76652063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6258:34:12",
																		"type": "",
																		"value": "ERC721A: approve caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6231:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6231:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6231:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6313:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6324:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6309:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6309:18:12"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6329:27:12",
																		"type": "",
																		"value": "wner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6302:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6302:55:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6302:55:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6366:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6378:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6389:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6374:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6374:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6366:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6129:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6143:4:12",
														"type": ""
													}
												],
												"src": "5978:421:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6578:233:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6595:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6606:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6588:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6588:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6588:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6629:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6640:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6625:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6625:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6645:2:12",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6618:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6618:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6618:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6668:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6679:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6664:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6664:18:12"
																	},
																	{
																		"hexValue": "455243373231413a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6684:34:12",
																		"type": "",
																		"value": "ERC721A: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6657:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6657:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6657:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6739:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6750:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6735:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6735:18:12"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6755:13:12",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6728:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6728:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6728:41:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6778:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6790:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6801:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6786:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6786:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6778:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6555:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6569:4:12",
														"type": ""
													}
												],
												"src": "6404:407:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6990:176:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7007:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7018:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7000:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7000:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7000:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7041:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7052:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7037:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7037:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7057:2:12",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7030:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7030:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7030:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7080:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7091:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7076:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7076:18:12"
																	},
																	{
																		"hexValue": "455243373231413a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7096:28:12",
																		"type": "",
																		"value": "ERC721A: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7069:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7069:56:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7069:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7134:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7146:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7157:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7142:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7142:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7134:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6967:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6981:4:12",
														"type": ""
													}
												],
												"src": "6816:350:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7345:241:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7362:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7373:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7355:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7355:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7355:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7396:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7407:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7392:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7392:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7412:2:12",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7385:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7385:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7385:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7435:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7446:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7431:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7431:18:12"
																	},
																	{
																		"hexValue": "455243373231413a207472616e7366657220746f206e6f6e2045524337323152",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7451:34:12",
																		"type": "",
																		"value": "ERC721A: transfer to non ERC721R"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7424:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7424:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7424:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7506:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7517:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7502:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7502:18:12"
																	},
																	{
																		"hexValue": "6563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7522:21:12",
																		"type": "",
																		"value": "eceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7495:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7495:49:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7495:49:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7553:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7565:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7576:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7561:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7561:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7553:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7322:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7336:4:12",
														"type": ""
													}
												],
												"src": "7171:415:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7765:237:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7782:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7793:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7775:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7775:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7775:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7816:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7827:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7812:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7812:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7832:2:12",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7805:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7805:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7805:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7855:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7866:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7851:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7851:18:12"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7871:34:12",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7844:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7844:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7844:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7926:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7937:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7922:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7922:18:12"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7942:17:12",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7915:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7915:45:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7915:45:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7969:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7981:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7992:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7977:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7977:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7969:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7742:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7756:4:12",
														"type": ""
													}
												],
												"src": "7591:411:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8194:309:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8204:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8224:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8218:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8218:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8208:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8279:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8287:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8275:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8275:17:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8294:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8299:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8240:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8240:66:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8240:66:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8315:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8332:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8337:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8328:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8328:16:12"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "8319:5:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8353:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8375:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8369:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8369:13:12"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "8357:8:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8430:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8438:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8426:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8426:17:12"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "8445:5:12"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "8452:8:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8391:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8391:70:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8391:70:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8470:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "8481:5:12"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "8488:8:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8477:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8477:20:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8470:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8162:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8167:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8175:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8186:3:12",
														"type": ""
													}
												],
												"src": "8007:496:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8682:240:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8699:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8710:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8692:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8692:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8692:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8733:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8744:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8729:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8729:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8749:2:12",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8722:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8722:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8722:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8772:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8783:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8768:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8768:18:12"
																	},
																	{
																		"hexValue": "455243373231413a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8788:34:12",
																		"type": "",
																		"value": "ERC721A: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8761:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8761:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8761:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8843:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8854:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8839:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8839:18:12"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8859:20:12",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8832:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8832:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8832:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8889:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8901:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8912:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8897:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8897:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8889:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8659:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8673:4:12",
														"type": ""
													}
												],
												"src": "8508:414:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9101:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9118:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9129:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9111:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9111:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9111:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9152:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9163:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9148:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9148:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9168:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9141:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9141:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9141:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9191:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9202:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9187:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9187:18:12"
																	},
																	{
																		"hexValue": "455243373231413a207472616e736665722066726f6d20696e636f7272656374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9207:34:12",
																		"type": "",
																		"value": "ERC721A: transfer from incorrect"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9180:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9180:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9180:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9262:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9273:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9258:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9258:18:12"
																	},
																	{
																		"hexValue": "206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9278:8:12",
																		"type": "",
																		"value": " owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9251:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9251:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9251:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9296:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9308:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9319:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9304:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9304:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9296:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9078:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9092:4:12",
														"type": ""
													}
												],
												"src": "8927:402:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9508:227:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9525:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9536:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9518:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9518:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9518:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9559:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9570:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9555:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9555:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9575:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9548:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9548:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9548:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9598:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9609:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9594:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9594:18:12"
																	},
																	{
																		"hexValue": "455243373231413a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9614:34:12",
																		"type": "",
																		"value": "ERC721A: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9587:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9587:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9587:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9669:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9680:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9665:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9665:18:12"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9685:7:12",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9658:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9658:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9658:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9702:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9714:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9725:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9710:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9710:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9702:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9485:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9499:4:12",
														"type": ""
													}
												],
												"src": "9334:401:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9914:232:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9931:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9942:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9924:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9924:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9924:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9965:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9976:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9961:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9961:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9981:2:12",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9954:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9954:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9954:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10004:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10015:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10000:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10000:18:12"
																	},
																	{
																		"hexValue": "455243373231413a206f776e657220717565727920666f72206e6f6e65786973",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10020:34:12",
																		"type": "",
																		"value": "ERC721A: owner query for nonexis"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9993:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9993:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9993:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10075:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10086:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10071:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10071:18:12"
																	},
																	{
																		"hexValue": "74656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10091:12:12",
																		"type": "",
																		"value": "tent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10064:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10064:40:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10064:40:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10113:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10125:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10136:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10121:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10121:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10113:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9891:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9905:4:12",
														"type": ""
													}
												],
												"src": "9740:406:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10325:237:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10342:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10353:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10335:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10335:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10335:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10376:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10387:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10372:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10372:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10392:2:12",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10365:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10365:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10365:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10415:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10426:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10411:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10411:18:12"
																	},
																	{
																		"hexValue": "455243373231413a20756e61626c6520746f2064657465726d696e6520746865",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10431:34:12",
																		"type": "",
																		"value": "ERC721A: unable to determine the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10404:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10404:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10404:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10486:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10497:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10482:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10482:18:12"
																	},
																	{
																		"hexValue": "206f776e6572206f6620746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10502:17:12",
																		"type": "",
																		"value": " owner of token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10475:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10475:45:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10475:45:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10529:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10541:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10552:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10537:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10537:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10529:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10302:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10316:4:12",
														"type": ""
													}
												],
												"src": "10151:411:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10770:286:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10780:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10798:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10803:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10794:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10794:11:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10807:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10790:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10790:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10784:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10825:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10848:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10836:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10836:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10818:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10818:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10818:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10872:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10883:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10868:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10868:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10892:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10900:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10888:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10888:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10861:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10861:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10861:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10924:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10935:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10920:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10920:18:12"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10940:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10913:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10913:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10913:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10967:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10978:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10963:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10963:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10983:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10956:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10956:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10956:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10996:54:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11022:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11034:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11045:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11030:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11030:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "11004:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11004:46:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10996:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10715:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10726:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10734:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10742:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10750:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10761:4:12",
														"type": ""
													}
												],
												"src": "10567:489:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11141:169:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11187:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11196:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11199:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11189:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11189:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11189:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11162:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11171:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11158:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11158:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11183:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11154:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11154:32:12"
															},
															"nodeType": "YulIf",
															"src": "11151:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11212:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11231:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11225:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11225:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "11216:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11274:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "11250:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11250:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11250:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11289:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11299:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11289:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11107:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11118:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11130:6:12",
														"type": ""
													}
												],
												"src": "11061:249:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11347:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11364:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11371:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11376:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11367:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11367:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11357:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11357:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11357:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11404:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11407:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11397:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11397:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11397:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11428:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11431:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11421:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11421:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11421:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11315:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11494:88:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11525:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11527:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11527:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11527:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11510:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11521:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11517:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11517:6:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11507:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11507:17:12"
															},
															"nodeType": "YulIf",
															"src": "11504:43:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11556:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11567:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11574:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11563:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11563:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11556:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11476:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11486:3:12",
														"type": ""
													}
												],
												"src": "11447:135:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11619:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11636:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11643:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11648:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11639:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11639:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11629:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11629:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11629:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11676:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11679:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11669:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11669:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11669:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11700:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11703:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11693:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11693:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11693:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11587:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11765:74:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11788:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11790:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11790:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11790:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11785:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11778:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11778:9:12"
															},
															"nodeType": "YulIf",
															"src": "11775:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11819:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11828:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11831:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11824:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11824:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11819:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11750:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11753:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11759:1:12",
														"type": ""
													}
												],
												"src": "11719:120:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11893:79:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11903:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11915:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11918:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11911:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11911:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11903:4:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11944:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11946:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11946:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11946:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "11935:4:12"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11941:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11932:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11932:11:12"
															},
															"nodeType": "YulIf",
															"src": "11929:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11875:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11878:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11884:4:12",
														"type": ""
													}
												],
												"src": "11844:128:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12015:74:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12038:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12040:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12040:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12040:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12035:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12028:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12028:9:12"
															},
															"nodeType": "YulIf",
															"src": "12025:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12069:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12078:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12081:1:12"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "12074:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12074:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12069:1:12"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12000:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12003:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12009:1:12",
														"type": ""
													}
												],
												"src": "11977:112:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12142:77:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12152:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12163:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12166:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12159:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12159:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12152:3:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12191:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12193:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12193:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12193:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12183:1:12"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "12186:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12180:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12180:10:12"
															},
															"nodeType": "YulIf",
															"src": "12177:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12125:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12128:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12134:3:12",
														"type": ""
													}
												],
												"src": "12094:125:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12256:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12273:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12280:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12285:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12276:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12276:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12266:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12266:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12266:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12313:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12316:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12306:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12306:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12306:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12337:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12340:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12330:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12330:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12330:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "12224:127:12"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721A: approved query for none\")\n        mstore(add(headStart, 96), \"xistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC721A: approval to current own\")\n        mstore(add(headStart, 96), \"er\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"ERC721A: approve caller is not o\")\n        mstore(add(headStart, 96), \"wner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC721A: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"ERC721A: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"ERC721A: transfer to non ERC721R\")\n        mstore(add(headStart, 96), \"eceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721Metadata: URI query for no\")\n        mstore(add(headStart, 96), \"nexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721A: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC721A: transfer from incorrect\")\n        mstore(add(headStart, 96), \" owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721A: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC721A: owner query for nonexis\")\n        mstore(add(headStart, 96), \"tent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721A: unable to determine the\")\n        mstore(add(headStart, 96), \" owner of token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101d2578063b88d4fde146101e5578063c87b56dd146101f8578063e985e9c51461020b57600080fd5b80636352211e146101a457806370a08231146101b757806395d89b41146101ca57600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806318160ddd1461016c57806323b872dd1461017e57806342842e0e1461019157600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610dc2565b61021e565b60405190151581526020015b60405180910390f35b61011f610270565b60405161010e9190610e2f565b61013f61013a366004610e42565b610302565b6040516001600160a01b03909116815260200161010e565b61016a610165366004610e77565b610392565b005b6000545b60405190815260200161010e565b61016a61018c366004610ea1565b6104a9565b61016a61019f366004610ea1565b6104b4565b61013f6101b2366004610e42565b6104cf565b6101706101c5366004610edd565b6104e1565b61011f610572565b61016a6101e0366004610ef8565b610581565b61016a6101f3366004610f4a565b610645565b61011f610206366004610e42565b61067e565b610102610219366004611026565b610758565b60006001600160e01b031982166380ac58cd60e01b148061024f57506001600160e01b03198216635b5e139f60e01b145b8061026a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606001805461027f90611059565b80601f01602080910402602001604051908101604052809291908181526020018280546102ab90611059565b80156102f85780601f106102cd576101008083540402835291602001916102f8565b820191906000526020600020905b8154815290600101906020018083116102db57829003601f168201915b5050505050905090565b600061030f826000541190565b6103765760405162461bcd60e51b815260206004820152602d60248201527f455243373231413a20617070726f76656420717565727920666f72206e6f6e6560448201526c3c34b9ba32b73a103a37b5b2b760991b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b600061039d826104cf565b9050806001600160a01b0316836001600160a01b03160361040b5760405162461bcd60e51b815260206004820152602260248201527f455243373231413a20617070726f76616c20746f2063757272656e74206f776e60448201526132b960f11b606482015260840161036d565b336001600160a01b038216148061042757506104278133610758565b6104995760405162461bcd60e51b815260206004820152603960248201527f455243373231413a20617070726f76652063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656420666f7220616c6c00000000000000606482015260840161036d565b6104a4838383610786565b505050565b6104a48383836107e2565b6104a483838360405180602001604052806000815250610645565b60006104da82610acf565b5192915050565b60006001600160a01b03821661054d5760405162461bcd60e51b815260206004820152602b60248201527f455243373231413a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b606482015260840161036d565b506001600160a01b03166000908152600460205260409020546001600160801b031690565b60606002805461027f90611059565b336001600160a01b038316036105d95760405162461bcd60e51b815260206004820152601a60248201527f455243373231413a20617070726f766520746f2063616c6c6572000000000000604482015260640161036d565b3360008181526006602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106508484846107e2565b61065c84848484610ba6565b6106785760405162461bcd60e51b815260040161036d90611093565b50505050565b606061068b826000541190565b6106ef5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161036d565b600061070660408051602081019091526000815290565b905080516000036107265760405180602001604052806000815250610751565b8061073084610ca8565b6040516020016107419291906110e6565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b60008281526005602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006107ed82610acf565b80519091506000906001600160a01b0316336001600160a01b0316148061082457503361081984610302565b6001600160a01b0316145b80610836575081516108369033610758565b9050806108a05760405162461bcd60e51b815260206004820152603260248201527f455243373231413a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606482015260840161036d565b846001600160a01b031682600001516001600160a01b0316146109145760405162461bcd60e51b815260206004820152602660248201527f455243373231413a207472616e736665722066726f6d20696e636f72726563746044820152651037bbb732b960d11b606482015260840161036d565b6001600160a01b0384166109785760405162461bcd60e51b815260206004820152602560248201527f455243373231413a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161036d565b6109886000848460000151610786565b6001600160a01b03858116600090815260046020908152604080832080546fffffffffffffffffffffffffffffffff198082166001600160801b03928316600019018316179092558986168086528386208054938416938316600190810190931693909317909255888552600390935281842080546001600160e01b031916909117600160a01b4267ffffffffffffffff1602179055908601808352912054909116610a8657610a39816000541190565b15610a86578251600082815260036020908152604090912080549186015167ffffffffffffffff16600160a01b026001600160e01b03199092166001600160a01b03909316929092171790555b5082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050505050565b6040805180820190915260008082526020820152610aee826000541190565b610b4d5760405162461bcd60e51b815260206004820152602a60248201527f455243373231413a206f776e657220717565727920666f72206e6f6e657869736044820152693a32b73a103a37b5b2b760b11b606482015260840161036d565b815b6000818152600360209081526040918290208251808401909352546001600160a01b038116808452600160a01b90910467ffffffffffffffff169183019190915215610b9c579392505050565b5060001901610b4f565b60006001600160a01b0384163b15610c9c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610bea903390899088908890600401611115565b6020604051808303816000875af1925050508015610c25575060408051601f3d908101601f19168201909252610c2291810190611152565b60015b610c82573d808015610c53576040519150601f19603f3d011682016040523d82523d6000602084013e610c58565b606091505b508051600003610c7a5760405162461bcd60e51b815260040161036d90611093565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ca0565b5060015b949350505050565b606081600003610ccf5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610cf95780610ce381611185565b9150610cf29050600a836111b4565b9150610cd3565b60008167ffffffffffffffff811115610d1457610d14610f34565b6040519080825280601f01601f191660200182016040528015610d3e576020820181803683370190505b5090505b8415610ca057610d536001836111c8565b9150610d60600a866111db565b610d6b9060306111ef565b60f81b818381518110610d8057610d80611202565b60200101906001600160f81b031916908160001a905350610da2600a866111b4565b9450610d42565b6001600160e01b031981168114610dbf57600080fd5b50565b600060208284031215610dd457600080fd5b813561075181610da9565b60005b83811015610dfa578181015183820152602001610de2565b50506000910152565b60008151808452610e1b816020860160208601610ddf565b601f01601f19169290920160200192915050565b6020815260006107516020830184610e03565b600060208284031215610e5457600080fd5b5035919050565b80356001600160a01b0381168114610e7257600080fd5b919050565b60008060408385031215610e8a57600080fd5b610e9383610e5b565b946020939093013593505050565b600080600060608486031215610eb657600080fd5b610ebf84610e5b565b9250610ecd60208501610e5b565b9150604084013590509250925092565b600060208284031215610eef57600080fd5b61075182610e5b565b60008060408385031215610f0b57600080fd5b610f1483610e5b565b915060208301358015158114610f2957600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f6057600080fd5b610f6985610e5b565b9350610f7760208601610e5b565b925060408501359150606085013567ffffffffffffffff80821115610f9b57600080fd5b818701915087601f830112610faf57600080fd5b813581811115610fc157610fc1610f34565b604051601f8201601f19908116603f01168101908382118183101715610fe957610fe9610f34565b816040528281528a602084870101111561100257600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561103957600080fd5b61104283610e5b565b915061105060208401610e5b565b90509250929050565b600181811c9082168061106d57607f821691505b60208210810361108d57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526033908201527f455243373231413a207472616e7366657220746f206e6f6e204552433732315260408201527232b1b2b4bb32b91034b6b83632b6b2b73a32b960691b606082015260800190565b600083516110f8818460208801610ddf565b83519083019061110c818360208801610ddf565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061114890830184610e03565b9695505050505050565b60006020828403121561116457600080fd5b815161075181610da9565b634e487b7160e01b600052601160045260246000fd5b6000600182016111975761119761116f565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826111c3576111c361119e565b500490565b8181038181111561026a5761026a61116f565b6000826111ea576111ea61119e565b500690565b8082018082111561026a5761026a61116f565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220325f0113b0ccdfdfc492183b97d69e5824d0890e12df373494e3b0ff983a562864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xDC2 JUMP JUMPDEST PUSH2 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xE42 JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xE77 JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0xE42 JUMP JUMPDEST PUSH2 0x4CF JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x572 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0x645 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0xE42 JUMP JUMPDEST PUSH2 0x67E JUMP JUMPDEST PUSH2 0x102 PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x1026 JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x24F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x26A JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x27F SWAP1 PUSH2 0x1059 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x1059 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F DUP3 PUSH1 0x0 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x376 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20617070726F76656420717565727920666F72206E6F6E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x3C34B9BA32B73A103A37B5B2B7 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39D DUP3 PUSH2 0x4CF JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20617070726F76616C20746F2063757272656E74206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x427 JUMPI POP PUSH2 0x427 DUP2 CALLER PUSH2 0x758 JUMP JUMPDEST PUSH2 0x499 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20617070726F76652063616C6C6572206973206E6F74206F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F76656420666F7220616C6C00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST PUSH2 0x4A4 DUP4 DUP4 DUP4 PUSH2 0x786 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4A4 DUP4 DUP4 DUP4 PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x4A4 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x645 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DA DUP3 PUSH2 0xACF JUMP JUMPDEST MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x54D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x27F SWAP1 PUSH2 0x1059 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x5D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20617070726F766520746F2063616C6C6572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x36D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x650 DUP5 DUP5 DUP5 PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x65C DUP5 DUP5 DUP5 DUP5 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x678 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36D SWAP1 PUSH2 0x1093 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x68B DUP3 PUSH1 0x0 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x706 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x726 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x751 JUMP JUMPDEST DUP1 PUSH2 0x730 DUP5 PUSH2 0xCA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x741 SWAP3 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7ED DUP3 PUSH2 0xACF JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x824 JUMPI POP CALLER PUSH2 0x819 DUP5 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x836 JUMPI POP DUP2 MLOAD PUSH2 0x836 SWAP1 CALLER PUSH2 0x758 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x914 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A207472616E736665722066726F6D20696E636F7272656374 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1037BBB732B9 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x978 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST PUSH2 0x988 PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP1 DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 NOT ADD DUP4 AND OR SWAP1 SWAP3 SSTORE DUP10 DUP7 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD SWAP4 DUP5 AND SWAP4 DUP4 AND PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP4 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP9 DUP6 MSTORE PUSH1 0x3 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xA0 SHL TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE SWAP1 DUP7 ADD DUP1 DUP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 AND PUSH2 0xA86 JUMPI PUSH2 0xA39 DUP2 PUSH1 0x0 SLOAD GT SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xA86 JUMPI DUP3 MLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE JUMPDEST POP DUP3 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xAEE DUP3 PUSH1 0x0 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0xB4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A206F776E657220717565727920666F72206E6F6E65786973 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x3A32B73A103A37B5B2B7 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP5 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO PUSH2 0xB9C JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x0 NOT ADD PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xBEA SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC25 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC22 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC82 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xC53 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xC7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36D SWAP1 PUSH2 0x1093 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xCA0 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xCCF JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xCF9 JUMPI DUP1 PUSH2 0xCE3 DUP2 PUSH2 0x1185 JUMP JUMPDEST SWAP2 POP PUSH2 0xCF2 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x11B4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD14 JUMPI PUSH2 0xD14 PUSH2 0xF34 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD3E JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xCA0 JUMPI PUSH2 0xD53 PUSH1 0x1 DUP4 PUSH2 0x11C8 JUMP JUMPDEST SWAP2 POP PUSH2 0xD60 PUSH1 0xA DUP7 PUSH2 0x11DB JUMP JUMPDEST PUSH2 0xD6B SWAP1 PUSH1 0x30 PUSH2 0x11EF JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD80 JUMPI PUSH2 0xD80 PUSH2 0x1202 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xDA2 PUSH1 0xA DUP7 PUSH2 0x11B4 JUMP JUMPDEST SWAP5 POP PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x751 DUP2 PUSH2 0xDA9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDFA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDE2 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xE1B DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x751 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE93 DUP4 PUSH2 0xE5B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEBF DUP5 PUSH2 0xE5B JUMP JUMPDEST SWAP3 POP PUSH2 0xECD PUSH1 0x20 DUP6 ADD PUSH2 0xE5B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP3 PUSH2 0xE5B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF14 DUP4 PUSH2 0xE5B JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF69 DUP6 PUSH2 0xE5B JUMP JUMPDEST SWAP4 POP PUSH2 0xF77 PUSH1 0x20 DUP7 ADD PUSH2 0xE5B JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xFC1 JUMPI PUSH2 0xFC1 PUSH2 0xF34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xFE9 JUMPI PUSH2 0xFE9 PUSH2 0xF34 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1002 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1039 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1042 DUP4 PUSH2 0xE5B JUMP JUMPDEST SWAP2 POP PUSH2 0x1050 PUSH1 0x20 DUP5 ADD PUSH2 0xE5B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x106D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x108D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x33 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243373231413A207472616E7366657220746F206E6F6E2045524337323152 PUSH1 0x40 DUP3 ADD MSTORE PUSH19 0x32B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x69 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x10F8 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xDDF JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x110C DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1148 SWAP1 DUP4 ADD DUP5 PUSH2 0xE03 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x751 DUP2 PUSH2 0xDA9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1197 JUMPI PUSH2 0x1197 PUSH2 0x116F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11C3 JUMPI PUSH2 0x11C3 PUSH2 0x119E JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x26A JUMPI PUSH2 0x26A PUSH2 0x116F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11EA JUMPI PUSH2 0x11EA PUSH2 0x119E JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x26A JUMPI PUSH2 0x26A PUSH2 0x116F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x5F ADD SGT 0xB0 0xCC 0xDF 0xDF 0xC4 SWAP3 XOR EXTCODESIZE SWAP8 0xD6 SWAP15 PC 0x24 0xD0 DUP10 0xE SLT 0xDF CALLDATACOPY CALLVALUE SWAP5 0xE3 0xB0 SELFDESTRUCT SWAP9 GASPRICE JUMP 0x28 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "961:14197:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2289:293;;;;;;:::i;:::-;;:::i;:::-;;;565:14:12;;558:22;540:41;;528:2;513:18;2289:293:10;;;;;;;;4064:100;;;:::i;:::-;;;;;;;:::i;5626:214::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:12;;;1679:51;;1667:2;1652:18;5626:214:10;1533:203:12;5147:413:10;;;;;;:::i;:::-;;:::i;:::-;;2126:91;2170:7;2197:12;2126:91;;;2324:25:12;;;2312:2;2297:18;2126:91:10;2178:177:12;6502:162:10;;;;;;:::i;:::-;;:::i;6735:177::-;;;;;;:::i;:::-;;:::i;3873:124::-;;;;;;:::i;:::-;;:::i;2646:221::-;;;;;;:::i;:::-;;:::i;4233:104::-;;;:::i;5912:288::-;;;;;;:::i;:::-;;:::i;6983:355::-;;;;;;:::i;:::-;;:::i;4408:335::-;;;;;;:::i;:::-;;:::i;6271:164::-;;;;;;:::i;:::-;;:::i;2289:293::-;2391:4;-1:-1:-1;;;;;;2424:40:10;;-1:-1:-1;;;2424:40:10;;:101;;-1:-1:-1;;;;;;;2477:48:10;;-1:-1:-1;;;2477:48:10;2424:101;:150;;;-1:-1:-1;;;;;;;;;;937:40:8;;;2538:36:10;2408:166;2289:293;-1:-1:-1;;2289:293:10:o;4064:100::-;4118:13;4151:5;4144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4064:100;:::o;5626:214::-;5694:7;5722:16;5730:7;7650:4;7684:12;-1:-1:-1;7674:22:10;7593:111;5722:16;5714:74;;;;-1:-1:-1;;;5714:74:10;;5363:2:12;5714:74:10;;;5345:21:12;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:12;;;5485:43;5545:19;;5714:74:10;;;;;;;;;-1:-1:-1;5808:24:10;;;;:15;:24;;;;;;-1:-1:-1;;;;;5808:24:10;;5626:214::o;5147:413::-;5220:13;5236:24;5252:7;5236:15;:24::i;:::-;5220:40;;5285:5;-1:-1:-1;;;;;5279:11:10;:2;-1:-1:-1;;;;;5279:11:10;;5271:58;;;;-1:-1:-1;;;5271:58:10;;5777:2:12;5271:58:10;;;5759:21:12;5816:2;5796:18;;;5789:30;5855:34;5835:18;;;5828:62;-1:-1:-1;;;5906:18:12;;;5899:32;5948:19;;5271:58:10;5575:398:12;5271:58:10;719:10:6;-1:-1:-1;;;;;5364:21:10;;;;:62;;-1:-1:-1;5389:37:10;5406:5;719:10:6;6271:164:10;:::i;5389:37::-;5342:169;;;;-1:-1:-1;;;5342:169:10;;6180:2:12;5342:169:10;;;6162:21:12;6219:2;6199:18;;;6192:30;6258:34;6238:18;;;6231:62;6329:27;6309:18;;;6302:55;6374:19;;5342:169:10;5978:421:12;5342:169:10;5524:28;5533:2;5537:7;5546:5;5524:8;:28::i;:::-;5209:351;5147:413;;:::o;6502:162::-;6628:28;6638:4;6644:2;6648:7;6628:9;:28::i;6735:177::-;6865:39;6882:4;6888:2;6892:7;6865:39;;;;;;;;;;;;:16;:39::i;3873:124::-;3937:7;3964:20;3976:7;3964:11;:20::i;:::-;:25;;3873:124;-1:-1:-1;;3873:124:10:o;2646:221::-;2710:7;-1:-1:-1;;;;;2738:19:10;;2730:75;;;;-1:-1:-1;;;2730:75:10;;6606:2:12;2730:75:10;;;6588:21:12;6645:2;6625:18;;;6618:30;6684:34;6664:18;;;6657:62;-1:-1:-1;;;6735:18:12;;;6728:41;6786:19;;2730:75:10;6404:407:12;2730:75:10;-1:-1:-1;;;;;;2831:19:10;;;;;:12;:19;;;;;:27;-1:-1:-1;;;;;2831:27:10;;2646:221::o;4233:104::-;4289:13;4322:7;4315:14;;;;;:::i;5912:288::-;719:10:6;-1:-1:-1;;;;;6007:24:10;;;5999:63;;;;-1:-1:-1;;;5999:63:10;;7018:2:12;5999:63:10;;;7000:21:12;7057:2;7037:18;;;7030:30;7096:28;7076:18;;;7069:56;7142:18;;5999:63:10;6816:350:12;5999:63:10;719:10:6;6075:32:10;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;6075:42:10;;;;;;;;;;;;:53;;-1:-1:-1;;6075:53:10;;;;;;;;;;6144:48;;540:41:12;;;6075:42:10;;719:10:6;6144:48:10;;513:18:12;6144:48:10;;;;;;;5912:288;;:::o;6983:355::-;7142:28;7152:4;7158:2;7162:7;7142:9;:28::i;:::-;7203:48;7226:4;7232:2;7236:7;7245:5;7203:22;:48::i;:::-;7181:149;;;;-1:-1:-1;;;7181:149:10;;;;;;;:::i;:::-;6983:355;;;;:::o;4408:335::-;4481:13;4515:16;4523:7;7650:4;7684:12;-1:-1:-1;7674:22:10;7593:111;4515:16;4507:76;;;;-1:-1:-1;;;4507:76:10;;7793:2:12;4507:76:10;;;7775:21:12;7832:2;7812:18;;;7805:30;7871:34;7851:18;;;7844:62;-1:-1:-1;;;7922:18:12;;;7915:45;7977:19;;4507:76:10;7591:411:12;4507:76:10;4596:21;4620:10;5068:9;;;;;;;;;-1:-1:-1;5068:9:10;;;4991:94;4620:10;4596:34;;4654:7;4648:21;4673:1;4648:26;:87;;;;;;;;;;;;;;;;;4701:7;4710:18;:7;:16;:18::i;:::-;4684:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4648:87;4641:94;4408:335;-1:-1:-1;;;4408:335:10:o;6271:164::-;-1:-1:-1;;;;;6392:25:10;;;6368:4;6392:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;6271:164::o;12373:196::-;12488:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;12488:29:10;-1:-1:-1;;;;;12488:29:10;;;;;;;;;12533:28;;12488:24;;12533:28;;;;;;;12373:196;;;:::o;10321:1934::-;10436:35;10474:20;10486:7;10474:11;:20::i;:::-;10549:18;;10436:58;;-1:-1:-1;10507:22:10;;-1:-1:-1;;;;;10533:34:10;719:10:6;-1:-1:-1;;;;;10533:34:10;;:83;;;-1:-1:-1;719:10:6;10580:20:10;10592:7;10580:11;:20::i;:::-;-1:-1:-1;;;;;10580:36:10;;10533:83;:146;;;-1:-1:-1;10646:18:10;;10629:50;;719:10:6;6271:164:10;:::i;10629:50::-;10507:173;;10701:17;10693:80;;;;-1:-1:-1;;;10693:80:10;;8710:2:12;10693:80:10;;;8692:21:12;8749:2;8729:18;;;8722:30;8788:34;8768:18;;;8761:62;-1:-1:-1;;;8839:18:12;;;8832:48;8897:19;;10693:80:10;8508:414:12;10693:80:10;10816:4;-1:-1:-1;;;;;10794:26:10;:13;:18;;;-1:-1:-1;;;;;10794:26:10;;10786:77;;;;-1:-1:-1;;;10786:77:10;;9129:2:12;10786:77:10;;;9111:21:12;9168:2;9148:18;;;9141:30;9207:34;9187:18;;;9180:62;-1:-1:-1;;;9258:18:12;;;9251:36;9304:19;;10786:77:10;8927:402:12;10786:77:10;-1:-1:-1;;;;;10882:16:10;;10874:66;;;;-1:-1:-1;;;10874:66:10;;9536:2:12;10874:66:10;;;9518:21:12;9575:2;9555:18;;;9548:30;9614:34;9594:18;;;9587:62;-1:-1:-1;;;9665:18:12;;;9658:35;9710:19;;10874:66:10;9334:401:12;10874:66:10;11061:49;11078:1;11082:7;11091:13;:18;;;11061:8;:49::i;:::-;-1:-1:-1;;;;;11398:18:10;;;;;;;:12;:18;;;;;;;;:31;;-1:-1:-1;;11398:31:10;;;-1:-1:-1;;;;;11398:31:10;;;-1:-1:-1;;11398:31:10;;;;;;;11440:16;;;;;;;;;:29;;;;;;;;-1:-1:-1;11440:29:10;;;;;;;;;;;;;11482:20;;;:11;:20;;;;;;:30;;-1:-1:-1;;;;;;11523:61:10;;;;-1:-1:-1;;;11568:15:10;11523:61;;;;;;11846:11;;;11872:24;;;;;:29;11846:11;;11872:29;11868:275;;11936:20;11944:11;7650:4;7684:12;-1:-1:-1;7674:22:10;7593:111;11936:20;11932:200;;;12009:18;;;11977:24;;;:11;:24;;;;;;;;:50;;12088:28;;;;12046:70;;-1:-1:-1;;;12046:70:10;-1:-1:-1;;;;;;12046:70:10;;;-1:-1:-1;;;;;11977:50:10;;;12046:70;;;;;;;11932:200;11377:773;12186:7;12182:2;-1:-1:-1;;;;;12167:27:10;12176:4;-1:-1:-1;;;;;12167:27:10;;;;;;;;;;;10425:1830;;10321:1934;;;:::o;3306:505::-;-1:-1:-1;;;;;;;;;;;;;;;;;3409:16:10;3417:7;7650:4;7684:12;-1:-1:-1;7674:22:10;7593:111;3409:16;3401:71;;;;-1:-1:-1;;;3401:71:10;;9942:2:12;3401:71:10;;;9924:21:12;9981:2;9961:18;;;9954:30;10020:34;10000:18;;;9993:62;-1:-1:-1;;;10071:18:12;;;10064:40;10121:19;;3401:71:10;9740:406:12;3401:71:10;3522:7;3502:225;3565:31;3599:17;;;:11;:17;;;;;;;;;3565:51;;;;;;;;;-1:-1:-1;;;;;3565:51:10;;;;;-1:-1:-1;;;3565:51:10;;;;;;;;;;;;3635:28;3631:85;;3691:9;3306:505;-1:-1:-1;;;3306:505:10:o;3631:85::-;-1:-1:-1;;;3542:6:10;3502:225;;13134:804;13289:4;-1:-1:-1;;;;;13310:13:10;;1465:19:5;:23;13306:625:10;;13346:72;;-1:-1:-1;;;13346:72:10;;-1:-1:-1;;;;;13346:36:10;;;;;:72;;719:10:6;;13397:4:10;;13403:7;;13412:5;;13346:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13346:72:10;;;;;;;;-1:-1:-1;;13346:72:10;;;;;;;;;;;;:::i;:::-;;;13342:534;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13592:6;:13;13609:1;13592:18;13588:273;;13635:61;;-1:-1:-1;;;13635:61:10;;;;;;;:::i;13588:273::-;13811:6;13805:13;13796:6;13792:2;13788:15;13781:38;13342:534;-1:-1:-1;;;;;;13469:55:10;-1:-1:-1;;;13469:55:10;;-1:-1:-1;13462:62:10;;13306:625;-1:-1:-1;13915:4:10;13306:625;13134:804;;;;;;:::o;392:703:7:-;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:7;;;;;;;;;;;;-1:-1:-1;;;691:10:7;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:7;;-1:-1:-1;837:2:7;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:7;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:7;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;966:56:7;;;;;;;;-1:-1:-1;1036:11:7;1045:2;1036:11;;:::i;:::-;;;908:150;;14:131:12;-1:-1:-1;;;;;;88:32:12;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:12;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:12;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:12:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:12;;1348:180;-1:-1:-1;1348:180:12:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:12;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:12:o;2360:328::-;2437:6;2445;2453;2506:2;2494:9;2485:7;2481:23;2477:32;2474:52;;;2522:1;2519;2512:12;2474:52;2545:29;2564:9;2545:29;:::i;:::-;2535:39;;2593:38;2627:2;2616:9;2612:18;2593:38;:::i;:::-;2583:48;;2678:2;2667:9;2663:18;2650:32;2640:42;;2360:328;;;;;:::o;2693:186::-;2752:6;2805:2;2793:9;2784:7;2780:23;2776:32;2773:52;;;2821:1;2818;2811:12;2773:52;2844:29;2863:9;2844:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:12;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;7171:415::-;7373:2;7355:21;;;7412:2;7392:18;;;7385:30;7451:34;7446:2;7431:18;;7424:62;-1:-1:-1;;;7517:2:12;7502:18;;7495:49;7576:3;7561:19;;7171:415::o;8007:496::-;8186:3;8224:6;8218:13;8240:66;8299:6;8294:3;8287:4;8279:6;8275:17;8240:66;:::i;:::-;8369:13;;8328:16;;;;8391:70;8369:13;8328:16;8438:4;8426:17;;8391:70;:::i;:::-;8477:20;;8007:496;-1:-1:-1;;;;8007:496:12:o;10567:489::-;-1:-1:-1;;;;;10836:15:12;;;10818:34;;10888:15;;10883:2;10868:18;;10861:43;10935:2;10920:18;;10913:34;;;10983:3;10978:2;10963:18;;10956:31;;;10761:4;;11004:46;;11030:19;;11022:6;11004:46;:::i;:::-;10996:54;10567:489;-1:-1:-1;;;;;;10567:489:12:o;11061:249::-;11130:6;11183:2;11171:9;11162:7;11158:23;11154:32;11151:52;;;11199:1;11196;11189:12;11151:52;11231:9;11225:16;11250:30;11274:5;11250:30;:::i;11315:127::-;11376:10;11371:3;11367:20;11364:1;11357:31;11407:4;11404:1;11397:15;11431:4;11428:1;11421:15;11447:135;11486:3;11507:17;;;11504:43;;11527:18;;:::i;:::-;-1:-1:-1;11574:1:12;11563:13;;11447:135::o;11587:127::-;11648:10;11643:3;11639:20;11636:1;11629:31;11679:4;11676:1;11669:15;11703:4;11700:1;11693:15;11719:120;11759:1;11785;11775:35;;11790:18;;:::i;:::-;-1:-1:-1;11824:9:12;;11719:120::o;11844:128::-;11911:9;;;11932:11;;;11929:37;;;11946:18;;:::i;11977:112::-;12009:1;12035;12025:35;;12040:18;;:::i;:::-;-1:-1:-1;12074:9:12;;11977:112::o;12094:125::-;12159:9;;;12180:10;;;12177:36;;;12193:18;;:::i;12224:127::-;12285:10;12280:3;12276:20;12273:1;12266:31;12316:4;12313:1;12306:15;12340:4;12337:1;12330:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "937200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2652",
								"getApproved(uint256)": "4700",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26647",
								"supportsInterface(bytes4)": "534",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "2326",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_approve(address,uint256,address)": "26264",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_mint(address,uint256,bytes memory,bool)": "infinite",
								"_numberMinted(address)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"ownershipOf(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 961,
									"end": 15158,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2002,
									"end": 2118,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2074,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 2077,
									"end": 2082,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2074,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 2069,
									"end": 2082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2093,
									"end": 2100,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2103,
									"end": 2110,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2093,
									"end": 2100,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 2093,
									"end": 2110,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 12,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 12,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 961,
									"end": 15158,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220325f0113b0ccdfdfc492183b97d69e5824d0890e12df373494e3b0ff983a562864736f6c63430008110033",
									".code": [
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "6352211E"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "A22CB465"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "A22CB465"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "B88D4FDE"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "C87B56DD"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "E985E9C5"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "6352211E"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "95EA7B3"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "95EA7B3"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "42842E0E"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A7"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "6FDDE03"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "81812FC"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 15158,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 2289,
											"end": 2582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 2289,
											"end": 2582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 4064,
											"end": 4164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 4064,
											"end": 4164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 5626,
											"end": 5840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 5626,
											"end": 5840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 5147,
											"end": 5560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 5147,
											"end": 5560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2170,
											"end": 2177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2178,
											"end": 2355,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 6502,
											"end": 6664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 6502,
											"end": 6664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 6735,
											"end": 6912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 6735,
											"end": 6912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 3873,
											"end": 3997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 3873,
											"end": 3997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 2646,
											"end": 2867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2646,
											"end": 2867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 4233,
											"end": 4337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 5912,
											"end": 6200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 5912,
											"end": 6200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 6983,
											"end": 7338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 6983,
											"end": 7338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 4408,
											"end": 4743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 4408,
											"end": 4743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 6271,
											"end": 6435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 6271,
											"end": 6435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2391,
											"end": 2395,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2424,
											"end": 2464,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2464,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2424,
											"end": 2464,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2464,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2424,
											"end": 2525,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2477,
											"end": 2525,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2525,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2477,
											"end": 2525,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2525,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2424,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2574,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 2424,
											"end": 2574,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2538,
											"end": 2574,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 2538,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2408,
											"end": 2574,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2289,
											"end": 2582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4118,
											"end": 4131,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4151,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 4144,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 4144,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5694,
											"end": 5701,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5722,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 5730,
											"end": 5737,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7650,
											"end": 7654,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 7674,
											"end": 7696,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7593,
											"end": 7704,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5722,
											"end": 5738,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 5722,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5345,
											"end": 5366,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5402,
											"end": 5404,
											"name": "PUSH",
											"source": 12,
											"value": "2D"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5375,
											"end": 5405,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5441,
											"end": 5475,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A20617070726F76656420717565727920666F72206E6F6E65"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5414,
											"end": 5476,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3C34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5485,
											"end": 5528,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5545,
											"end": 5564,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 5545,
											"end": 5564,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5808,
											"end": 5823,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5233,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5236,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 5252,
											"end": 5259,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5236,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 5236,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5236,
											"end": 5260,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 5236,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5260,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5285,
											"end": 5290,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5279,
											"end": 5290,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5279,
											"end": 5281,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5279,
											"end": 5290,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5279,
											"end": 5290,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5777,
											"end": 5779,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5759,
											"end": 5780,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5816,
											"end": 5818,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5789,
											"end": 5819,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5855,
											"end": 5889,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A20617070726F76616C20746F2063757272656E74206F776E"
										},
										{
											"begin": 5835,
											"end": 5853,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5835,
											"end": 5853,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5835,
											"end": 5853,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5828,
											"end": 5890,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5899,
											"end": 5931,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5967,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 5948,
											"end": 5967,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 5575,
											"end": 5973,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5364,
											"end": 5385,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5364,
											"end": 5385,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5364,
											"end": 5385,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5364,
											"end": 5385,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5364,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 5364,
											"end": 5426,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 5406,
											"end": 5411,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 6271,
											"end": 6435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6182,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6162,
											"end": 6183,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6219,
											"end": 6221,
											"name": "PUSH",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6192,
											"end": 6222,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6258,
											"end": 6292,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A20617070726F76652063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6231,
											"end": 6293,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6329,
											"end": 6356,
											"name": "PUSH",
											"source": 12,
											"value": "776E6572206E6F7220617070726F76656420666F7220616C6C00000000000000"
										},
										{
											"begin": 6309,
											"end": 6327,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6309,
											"end": 6327,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6309,
											"end": 6327,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6357,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6374,
											"end": 6393,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 6374,
											"end": 6393,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 5978,
											"end": 6399,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5524,
											"end": 5552,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 5533,
											"end": 5535,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5546,
											"end": 5551,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5524,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 5524,
											"end": 5552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5524,
											"end": 5552,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 5524,
											"end": 5552,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5209,
											"end": 5560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6628,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 6638,
											"end": 6642,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6648,
											"end": 6655,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6628,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 6628,
											"end": 6656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 6882,
											"end": 6886,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6888,
											"end": 6890,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6892,
											"end": 6899,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 6865,
											"end": 6904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 3976,
											"end": 3983,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 3964,
											"end": 3984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 3989,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 3989,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3873,
											"end": 3997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2717,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2738,
											"end": 2757,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2738,
											"end": 2757,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6606,
											"end": 6608,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6588,
											"end": 6609,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6645,
											"end": 6647,
											"name": "PUSH",
											"source": 12,
											"value": "2B"
										},
										{
											"begin": 6625,
											"end": 6643,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6625,
											"end": 6643,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6625,
											"end": 6643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6618,
											"end": 6648,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6718,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 6664,
											"end": 6682,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6664,
											"end": 6682,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6664,
											"end": 6682,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6657,
											"end": 6719,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6735,
											"end": 6753,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6735,
											"end": 6753,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6735,
											"end": 6753,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6728,
											"end": 6769,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6786,
											"end": 6805,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 6786,
											"end": 6805,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 6404,
											"end": 6811,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2843,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2858,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2831,
											"end": 2858,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4289,
											"end": 4302,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4322,
											"end": 4329,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 4315,
											"end": 4329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7018,
											"end": 7020,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7000,
											"end": 7021,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7057,
											"end": 7059,
											"name": "PUSH",
											"source": 12,
											"value": "1A"
										},
										{
											"begin": 7037,
											"end": 7055,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7037,
											"end": 7055,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7037,
											"end": 7055,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7030,
											"end": 7060,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7096,
											"end": 7124,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A20617070726F766520746F2063616C6C6572000000000000"
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7069,
											"end": 7125,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7142,
											"end": 7160,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7142,
											"end": 7160,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 6816,
											"end": 7166,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6093,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "PUSH",
											"source": 10,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7142,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 7152,
											"end": 7156,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7158,
											"end": 7160,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7162,
											"end": 7169,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7142,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 7142,
											"end": 7170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7142,
											"end": 7170,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 7142,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7203,
											"end": 7251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 7226,
											"end": 7230,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7232,
											"end": 7234,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7236,
											"end": 7243,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7245,
											"end": 7250,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7203,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 7203,
											"end": 7251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7203,
											"end": 7251,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 7203,
											"end": 7251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 7181,
											"end": 7330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4494,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4515,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 4523,
											"end": 4530,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7650,
											"end": 7654,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 7674,
											"end": 7696,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7593,
											"end": 7704,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4515,
											"end": 4531,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 4515,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7793,
											"end": 7795,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 7796,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7832,
											"end": 7834,
											"name": "PUSH",
											"source": 12,
											"value": "2F"
										},
										{
											"begin": 7812,
											"end": 7830,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7812,
											"end": 7830,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7812,
											"end": 7830,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7805,
											"end": 7835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7871,
											"end": 7905,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 7851,
											"end": 7869,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7851,
											"end": 7869,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7851,
											"end": 7869,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7844,
											"end": 7906,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7922,
											"end": 7940,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7922,
											"end": 7940,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7922,
											"end": 7940,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7915,
											"end": 7960,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 7996,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 7977,
											"end": 7996,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 7591,
											"end": 8002,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4596,
											"end": 4617,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4991,
											"end": 5085,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4630,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 4620,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4596,
											"end": 4630,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4596,
											"end": 4630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4654,
											"end": 4661,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4669,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4674,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4674,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4708,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 4710,
											"end": 4717,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 4710,
											"end": 4728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4728,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 4710,
											"end": 4728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 4684,
											"end": 4729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4641,
											"end": 4735,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4408,
											"end": 4743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6368,
											"end": 6372,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6410,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12373,
											"end": 12569,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 12373,
											"end": 12569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12503,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "PUSH",
											"source": 10,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 12373,
											"end": 12569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12373,
											"end": 12569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12373,
											"end": 12569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12373,
											"end": 12569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10321,
											"end": 12255,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 10321,
											"end": 12255,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10436,
											"end": 10471,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10474,
											"end": 10494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 10486,
											"end": 10493,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10474,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 10474,
											"end": 10494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10474,
											"end": 10494,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 10474,
											"end": 10494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10549,
											"end": 10567,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10549,
											"end": 10567,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10436,
											"end": 10494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10436,
											"end": 10494,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10507,
											"end": 10529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10507,
											"end": 10529,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10533,
											"end": 10567,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10533,
											"end": 10567,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10533,
											"end": 10567,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10533,
											"end": 10616,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10533,
											"end": 10616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 10533,
											"end": 10616,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10580,
											"end": 10600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 10592,
											"end": 10599,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10580,
											"end": 10591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 10580,
											"end": 10600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10580,
											"end": 10600,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 10580,
											"end": 10600,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10533,
											"end": 10616,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 10533,
											"end": 10616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10533,
											"end": 10679,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10533,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 10533,
											"end": 10679,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10629,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 10629,
											"end": 10679,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 6271,
											"end": 6435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10629,
											"end": 10679,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 10629,
											"end": 10679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10507,
											"end": 10680,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10507,
											"end": 10680,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10701,
											"end": 10718,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8710,
											"end": 8712,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8692,
											"end": 8713,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8749,
											"end": 8751,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 8729,
											"end": 8747,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8729,
											"end": 8747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8729,
											"end": 8747,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8722,
											"end": 8752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8788,
											"end": 8822,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 8768,
											"end": 8786,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8768,
											"end": 8786,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8768,
											"end": 8786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8761,
											"end": 8823,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8839,
											"end": 8857,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8839,
											"end": 8857,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8839,
											"end": 8857,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8832,
											"end": 8880,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8897,
											"end": 8916,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 8897,
											"end": 8916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 8508,
											"end": 8922,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10816,
											"end": 10820,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10794,
											"end": 10820,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10794,
											"end": 10807,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10794,
											"end": 10812,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10794,
											"end": 10812,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10794,
											"end": 10812,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10794,
											"end": 10820,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10794,
											"end": 10820,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9129,
											"end": 9131,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9111,
											"end": 9132,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9168,
											"end": 9170,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 9148,
											"end": 9166,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9148,
											"end": 9166,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9148,
											"end": 9166,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9141,
											"end": 9171,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9207,
											"end": 9241,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A207472616E736665722066726F6D20696E636F7272656374"
										},
										{
											"begin": 9187,
											"end": 9205,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9187,
											"end": 9205,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9187,
											"end": 9205,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9180,
											"end": 9242,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9251,
											"end": 9287,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9304,
											"end": 9323,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 9304,
											"end": 9323,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 8927,
											"end": 9329,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10882,
											"end": 10898,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10882,
											"end": 10898,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9536,
											"end": 9538,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9518,
											"end": 9539,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9575,
											"end": 9577,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 9555,
											"end": 9573,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9555,
											"end": 9573,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9555,
											"end": 9573,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9548,
											"end": 9578,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9614,
											"end": 9648,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 9594,
											"end": 9612,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9594,
											"end": 9612,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9594,
											"end": 9612,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9587,
											"end": 9649,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9665,
											"end": 9683,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9665,
											"end": 9683,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9665,
											"end": 9683,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9658,
											"end": 9693,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9710,
											"end": 9729,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 9710,
											"end": 9729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 9334,
											"end": 9735,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11061,
											"end": 11110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 11078,
											"end": 11079,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11082,
											"end": 11089,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11091,
											"end": 11104,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11091,
											"end": 11109,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11091,
											"end": 11109,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11091,
											"end": 11109,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11061,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 11061,
											"end": 11110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11061,
											"end": 11110,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 11061,
											"end": 11110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11410,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11493,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "OR",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11568,
											"end": 11583,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11846,
											"end": 11857,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11846,
											"end": 11857,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11846,
											"end": 11857,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11872,
											"end": 11901,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11846,
											"end": 11857,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11846,
											"end": 11857,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11872,
											"end": 11901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11868,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 11868,
											"end": 12143,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11936,
											"end": 11956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 11944,
											"end": 11955,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7650,
											"end": 7654,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 7674,
											"end": 7696,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7593,
											"end": 7704,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11936,
											"end": 11956,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 11936,
											"end": 11956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11932,
											"end": 12132,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11932,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 11932,
											"end": 12132,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12009,
											"end": 12027,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12009,
											"end": 12027,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12009,
											"end": 12027,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 11988,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12088,
											"end": 12116,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12088,
											"end": 12116,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12088,
											"end": 12116,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12088,
											"end": 12116,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11932,
											"end": 12132,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 11932,
											"end": 12132,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11377,
											"end": 12150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12186,
											"end": 12193,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12182,
											"end": 12184,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12176,
											"end": 12180,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "PUSH",
											"source": 10,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 10425,
											"end": 12255,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10425,
											"end": 12255,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10321,
											"end": 12255,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10321,
											"end": 12255,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10321,
											"end": 12255,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10321,
											"end": 12255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3811,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 3306,
											"end": 3811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 3417,
											"end": 3424,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7650,
											"end": 7654,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 7674,
											"end": 7696,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7593,
											"end": 7704,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9942,
											"end": 9944,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9924,
											"end": 9945,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9981,
											"end": 9983,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9954,
											"end": 9984,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10020,
											"end": 10054,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A206F776E657220717565727920666F72206E6F6E65786973"
										},
										{
											"begin": 10000,
											"end": 10018,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 10000,
											"end": 10018,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10000,
											"end": 10018,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9993,
											"end": 10055,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10071,
											"end": 10089,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10071,
											"end": 10089,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10089,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10064,
											"end": 10104,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10121,
											"end": 10140,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 10121,
											"end": 10140,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 9740,
											"end": 10146,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3522,
											"end": 3529,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3502,
											"end": 3727,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 3502,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3610,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3635,
											"end": 3663,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3631,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 3631,
											"end": 3716,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 3700,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3811,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3306,
											"end": 3811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3631,
											"end": 3716,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 3631,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3542,
											"end": 3548,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3502,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 3502,
											"end": 3727,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13289,
											"end": 13293,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13310,
											"end": 13323,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13310,
											"end": 13323,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13306,
											"end": 13931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 13306,
											"end": 13931,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13346,
											"end": 13382,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13382,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13382,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13382,
											"name": "PUSH",
											"source": 10,
											"value": "150B7A02"
										},
										{
											"begin": 13346,
											"end": 13382,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13397,
											"end": 13401,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 13397,
											"end": 13401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13403,
											"end": 13410,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 13403,
											"end": 13410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13412,
											"end": 13417,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 13412,
											"end": 13417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 13346,
											"end": 13418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 13346,
											"end": 13418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13592,
											"end": 13598,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13592,
											"end": 13605,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13609,
											"end": 13610,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13592,
											"end": 13610,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13588,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 13588,
											"end": 13861,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 13635,
											"end": 13696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13588,
											"end": 13861,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 13588,
											"end": 13861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13811,
											"end": 13817,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13805,
											"end": 13818,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13796,
											"end": 13802,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13792,
											"end": 13794,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13788,
											"end": 13803,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13781,
											"end": 13819,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13462,
											"end": 13524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 13462,
											"end": 13524,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13306,
											"end": 13931,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 13306,
											"end": 13931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13915,
											"end": 13919,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13306,
											"end": 13931,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 13306,
											"end": 13931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13134,
											"end": 13938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 448,
											"end": 461,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 674,
											"end": 675,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 661,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 392,
											"end": 1095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 661,
											"end": 712,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 736,
											"end": 741,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 721,
											"end": 733,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 782,
											"end": 791,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 775,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 815,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 807,
											"end": 815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 815,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 815,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 837,
											"end": 839,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 829,
											"end": 839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 829,
											"end": 839,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 829,
											"end": 839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 775,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 775,
											"end": 850,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 859,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 897,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 881,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 859,
											"end": 898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 859,
											"end": 898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 915,
											"end": 925,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 915,
											"end": 925,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 941,
											"end": 952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 941,
											"end": 952,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1017,
											"end": 1019,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 1009,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 996,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1022,
											"name": "PUSH",
											"source": 7,
											"value": "F8"
										},
										{
											"begin": 983,
											"end": 1022,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 966,
											"end": 972,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 973,
											"end": 979,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 966,
											"end": 980,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 966,
											"end": 980,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 966,
											"end": 980,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 966,
											"end": 980,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 966,
											"end": 980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 966,
											"end": 980,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 966,
											"end": 980,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1045,
											"end": 1047,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 1036,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 68,
											"end": 139,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 592,
											"end": 842,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 592,
											"end": 842,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 701,
											"end": 707,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 695,
											"end": 708,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 687,
											"end": 800,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 788,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 771,
											"end": 789,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 769,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 751,
											"end": 790,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 816,
											"end": 832,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 809,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 592,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 921,
											"end": 933,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 970,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 1292,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2048,
											"end": 2050,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2019,
											"end": 2051,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 2087,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2451,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2508,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2494,
											"end": 2503,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2481,
											"end": 2504,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2523,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2520,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2524,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 2564,
											"end": 2573,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 2545,
											"end": 2574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2535,
											"end": 2574,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2535,
											"end": 2574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 2627,
											"end": 2629,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2616,
											"end": 2625,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2612,
											"end": 2630,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 2593,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2583,
											"end": 2631,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2583,
											"end": 2631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2667,
											"end": 2676,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2663,
											"end": 2681,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2650,
											"end": 2682,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2693,
											"end": 2879,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 2693,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2793,
											"end": 2802,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2784,
											"end": 2791,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2780,
											"end": 2803,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2776,
											"end": 2808,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2821,
											"end": 2822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2811,
											"end": 2823,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 2863,
											"end": 2872,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 2844,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2963,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3010,
											"end": 3012,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2998,
											"end": 3007,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2989,
											"end": 2996,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2985,
											"end": 3008,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2981,
											"end": 3013,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3024,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3028,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 3049,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3126,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3180,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3168,
											"end": 3181,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3161,
											"end": 3182,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3159,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3151,
											"end": 3183,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3187,
											"end": 3199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 3231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3297,
											"end": 3307,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 3292,
											"end": 3295,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 3288,
											"end": 3308,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3285,
											"end": 3286,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3309,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3328,
											"end": 3332,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 3325,
											"end": 3326,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3352,
											"end": 3356,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3469,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3477,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3493,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3540,
											"end": 3543,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3528,
											"end": 3537,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3519,
											"end": 3526,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3515,
											"end": 3538,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3511,
											"end": 3544,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3559,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 3580,
											"end": 3609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 3662,
											"end": 3664,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 3628,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3713,
											"end": 3715,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3711,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3698,
											"end": 3716,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3768,
											"end": 3770,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3757,
											"end": 3766,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3753,
											"end": 3771,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3830,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3821,
											"end": 3835,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3846,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3886,
											"end": 3892,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3871,
											"end": 3893,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3931,
											"end": 3938,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3924,
											"end": 3928,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3916,
											"end": 3929,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3912,
											"end": 3939,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3953,
											"end": 3954,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 3955,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3976,
											"end": 3992,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4011,
											"end": 4013,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4007,
											"end": 4009,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 4017,
											"end": 4035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4092,
											"end": 4094,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4086,
											"end": 4095,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4060,
											"end": 4062,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4166,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 4138,
											"end": 4169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4134,
											"end": 4174,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4187,
											"end": 4233,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 4236,
											"end": 4254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4286,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4272,
											"end": 4274,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4265,
											"end": 4287,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4311,
											"end": 4313,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4337,
											"end": 4339,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4333,
											"end": 4344,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4329,
											"end": 4349,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4326,
											"end": 4359,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4372,
											"end": 4373,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4370,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4374,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4421,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4415,
											"end": 4426,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4412,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4408,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4398,
											"end": 4413,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4385,
											"end": 4431,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4470,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4451,
											"end": 4466,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4447,
											"end": 4471,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4440,
											"end": 4475,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4500,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4585,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4593,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4640,
											"end": 4642,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4628,
											"end": 4637,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4619,
											"end": 4626,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4638,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4611,
											"end": 4643,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4656,
											"end": 4657,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4654,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4646,
											"end": 4658,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 4698,
											"end": 4707,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 4679,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 4761,
											"end": 4763,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4759,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 4727,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 4977,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 4965,
											"end": 4971,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4961,
											"end": 4978,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 5028,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5018,
											"end": 5024,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5015,
											"end": 5029,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4992,
											"end": 5030,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5072,
											"end": 5082,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 5067,
											"end": 5070,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 5063,
											"end": 5083,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5060,
											"end": 5061,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5084,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5097,
											"end": 5112,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5135,
											"end": 5139,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5132,
											"end": 5133,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5140,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4776,
											"end": 5156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7171,
											"end": 7586,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 7171,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7373,
											"end": 7375,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7355,
											"end": 7376,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7355,
											"end": 7376,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7355,
											"end": 7376,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7412,
											"end": 7414,
											"name": "PUSH",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 7392,
											"end": 7410,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7392,
											"end": 7410,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7392,
											"end": 7410,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7385,
											"end": 7415,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7451,
											"end": 7485,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A207472616E7366657220746F206E6F6E2045524337323152"
										},
										{
											"begin": 7446,
											"end": 7448,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7431,
											"end": 7449,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7431,
											"end": 7449,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7424,
											"end": 7486,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7517,
											"end": 7519,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7502,
											"end": 7520,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7502,
											"end": 7520,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7495,
											"end": 7544,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7576,
											"end": 7579,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 7561,
											"end": 7580,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7561,
											"end": 7580,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7171,
											"end": 7586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8007,
											"end": 8503,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 8007,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8186,
											"end": 8189,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8224,
											"end": 8230,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8218,
											"end": 8231,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8240,
											"end": 8306,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 8299,
											"end": 8305,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8294,
											"end": 8297,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8287,
											"end": 8291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8279,
											"end": 8285,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8275,
											"end": 8292,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8240,
											"end": 8306,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 8240,
											"end": 8306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8240,
											"end": 8306,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 8240,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8369,
											"end": 8382,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8369,
											"end": 8382,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8328,
											"end": 8344,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8328,
											"end": 8344,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8328,
											"end": 8344,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8328,
											"end": 8344,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8391,
											"end": 8461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 8369,
											"end": 8382,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8328,
											"end": 8344,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8438,
											"end": 8442,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8426,
											"end": 8443,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8426,
											"end": 8443,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8391,
											"end": 8461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 8391,
											"end": 8461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8391,
											"end": 8461,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 8391,
											"end": 8461,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8477,
											"end": 8497,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8477,
											"end": 8497,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 8007,
											"end": 8503,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8007,
											"end": 8503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10567,
											"end": 11056,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 10567,
											"end": 11056,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10836,
											"end": 10851,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10836,
											"end": 10851,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10836,
											"end": 10851,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10818,
											"end": 10852,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10818,
											"end": 10852,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10888,
											"end": 10903,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10888,
											"end": 10903,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10883,
											"end": 10885,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10868,
											"end": 10886,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10868,
											"end": 10886,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10861,
											"end": 10904,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10935,
											"end": 10937,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10920,
											"end": 10938,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10920,
											"end": 10938,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10913,
											"end": 10947,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10913,
											"end": 10947,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10913,
											"end": 10947,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 10986,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 10978,
											"end": 10980,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10963,
											"end": 10981,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10963,
											"end": 10981,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10956,
											"end": 10987,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10956,
											"end": 10987,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10956,
											"end": 10987,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10761,
											"end": 10765,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10761,
											"end": 10765,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11004,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 11004,
											"end": 11050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11030,
											"end": 11049,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11030,
											"end": 11049,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11022,
											"end": 11028,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11004,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 11004,
											"end": 11050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11004,
											"end": 11050,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 11004,
											"end": 11050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10996,
											"end": 11050,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 10567,
											"end": 11056,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10567,
											"end": 11056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11061,
											"end": 11310,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 11061,
											"end": 11310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11130,
											"end": 11136,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11183,
											"end": 11185,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11171,
											"end": 11180,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11162,
											"end": 11169,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11158,
											"end": 11181,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11154,
											"end": 11186,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 11151,
											"end": 11203,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11151,
											"end": 11203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 11151,
											"end": 11203,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11199,
											"end": 11200,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11196,
											"end": 11197,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11189,
											"end": 11201,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11151,
											"end": 11203,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 11151,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11231,
											"end": 11240,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11225,
											"end": 11241,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11250,
											"end": 11280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 11274,
											"end": 11279,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11250,
											"end": 11280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 11250,
											"end": 11280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11315,
											"end": 11442,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 11315,
											"end": 11442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11376,
											"end": 11386,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 11371,
											"end": 11374,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 11367,
											"end": 11387,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 11364,
											"end": 11365,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11357,
											"end": 11388,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11407,
											"end": 11411,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 11404,
											"end": 11405,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11397,
											"end": 11412,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11431,
											"end": 11435,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11428,
											"end": 11429,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11421,
											"end": 11436,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11447,
											"end": 11582,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 11447,
											"end": 11582,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11486,
											"end": 11489,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11507,
											"end": 11524,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 11507,
											"end": 11524,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11507,
											"end": 11524,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11504,
											"end": 11547,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 11504,
											"end": 11547,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11527,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 11527,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 11527,
											"end": 11545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11527,
											"end": 11545,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 11527,
											"end": 11545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11574,
											"end": 11575,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 11563,
											"end": 11576,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11563,
											"end": 11576,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11447,
											"end": 11582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11714,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 11587,
											"end": 11714,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11648,
											"end": 11658,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 11643,
											"end": 11646,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 11639,
											"end": 11659,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 11636,
											"end": 11637,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11629,
											"end": 11660,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11679,
											"end": 11683,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 11676,
											"end": 11677,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11669,
											"end": 11684,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11703,
											"end": 11707,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11700,
											"end": 11701,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11693,
											"end": 11708,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11719,
											"end": 11839,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 11719,
											"end": 11839,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11759,
											"end": 11760,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11785,
											"end": 11786,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11775,
											"end": 11810,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 11775,
											"end": 11810,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11790,
											"end": 11808,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 11790,
											"end": 11808,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 11790,
											"end": 11808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11790,
											"end": 11808,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 11790,
											"end": 11808,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11824,
											"end": 11833,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 11824,
											"end": 11833,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11719,
											"end": 11839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11844,
											"end": 11972,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 11844,
											"end": 11972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11911,
											"end": 11920,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11911,
											"end": 11920,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11911,
											"end": 11920,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11932,
											"end": 11943,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11932,
											"end": 11943,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11932,
											"end": 11943,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11929,
											"end": 11966,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11929,
											"end": 11966,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 11929,
											"end": 11966,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11946,
											"end": 11964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 11946,
											"end": 11964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 11946,
											"end": 11964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11977,
											"end": 12089,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 11977,
											"end": 12089,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12009,
											"end": 12010,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12035,
											"end": 12036,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12025,
											"end": 12060,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 12025,
											"end": 12060,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12040,
											"end": 12058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 12040,
											"end": 12058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 12040,
											"end": 12058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12040,
											"end": 12058,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 12040,
											"end": 12058,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12074,
											"end": 12083,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 12074,
											"end": 12083,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11977,
											"end": 12089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12094,
											"end": 12219,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 12094,
											"end": 12219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12159,
											"end": 12168,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12159,
											"end": 12168,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12159,
											"end": 12168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12180,
											"end": 12190,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12180,
											"end": 12190,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12180,
											"end": 12190,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12177,
											"end": 12213,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12177,
											"end": 12213,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 12177,
											"end": 12213,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12193,
											"end": 12211,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 12193,
											"end": 12211,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 12193,
											"end": 12211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12224,
											"end": 12351,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 12224,
											"end": 12351,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12285,
											"end": 12295,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 12280,
											"end": 12283,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 12276,
											"end": 12296,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 12273,
											"end": 12274,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12266,
											"end": 12297,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12316,
											"end": 12320,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 12313,
											"end": 12314,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12306,
											"end": 12321,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12340,
											"end": 12344,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12337,
											"end": 12338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12330,
											"end": 12345,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ERC721A.sol",
								"contracts/Gluttony.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..). Does not support burning tokens to address(0). Assumes that an owner cannot have more than the 2**128 - 1 (max value of uint128) of supply\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/ERC721A.sol\":{\"keccak256\":\"0x0f9fc0a120947cda735da655f8d0a73911d78f703016cce42d099ad6b83ffac9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100a523948e5700e4f0be9eae3cf2b07bf2c05df1049c50f58e8be8411f152dd\",\"dweb:/ipfs/QmQXTqzskpGNyHRapbeNy6p9Zc4ZLBTR4FZyB9ytPCZMYQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 928,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 930,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 932,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 937,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_ownerships",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(TokenOwnership)921_storage)"
							},
							{
								"astId": 942,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_addressData",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(AddressData)926_storage)"
							},
							{
								"astId": 946,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 952,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_struct(AddressData)926_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct ERC721A.AddressData)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressData)926_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(TokenOwnership)921_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenOwnership)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenOwnership)921_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressData)926_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.AddressData",
								"members": [
									{
										"astId": 923,
										"contract": "contracts/ERC721A.sol:ERC721A",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint128"
									},
									{
										"astId": 925,
										"contract": "contracts/ERC721A.sol:ERC721A",
										"label": "numberMinted",
										"offset": 16,
										"slot": "0",
										"type": "t_uint128"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(TokenOwnership)921_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenOwnership",
								"members": [
									{
										"astId": 918,
										"contract": "contracts/ERC721A.sol:ERC721A",
										"label": "addr",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 920,
										"contract": "contracts/ERC721A.sol:ERC721A",
										"label": "startTimestamp",
										"offset": 20,
										"slot": "0",
										"type": "t_uint64"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Gluttony.sol": {
				"Gluttony": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxSupply",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "baseUri",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "freeMintAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxMintPerTx",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isSaleActive",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "freeMintIsAllowedUntil",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "FREE_MINT_IS_ALLOWED_UNTIL",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FREE_MINT_LIMIT_PER_WALLET",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "IS_SALE_ACTIVE",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_MINT_AMOUNT_PER_TX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "METADATA_FROZEN",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRICE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "freezeMetadata",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newMaxSupply",
									"type": "uint256"
								}
							],
							"name": "lowerMaxSupply",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_mintAmount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_mintAmount",
									"type": "uint256"
								}
							],
							"name": "mintOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "customBaseURI_",
									"type": "string"
								}
							],
							"name": "setBaseURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "freeMintAllowance",
									"type": "uint256"
								}
							],
							"name": "setFreeMintAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "freeMintIsAllowedUntil",
									"type": "uint256"
								}
							],
							"name": "setFreeMintAllowedUntil",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "maxMintPerTx",
									"type": "uint256"
								}
							],
							"name": "setMaxMintPerTx",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "customPrice",
									"type": "uint256"
								}
							],
							"name": "setPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "saleIsActive",
									"type": "bool"
								}
							],
							"name": "setSaleActive",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Gluttony.sol\":207:4328  contract Gluttony is ERC721A, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Gluttony.sol\":699:1200  constructor(uint256 price, uint256 maxSupply, string memory baseUri, uint256 freeMintAllowance, uint256 maxMintPerTx, bool isSaleActive, uint256 freeMintIsAllowedUntil) ERC721A(\"Gluttony\", \"GLT-7DS\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ERC721A.sol\":2002:2118  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc0, 0x476c7574746f6e79)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc8, 0x474c542d374453)\n  dup2\n  mstore\n  pop\n    /* \"contracts/ERC721A.sol\":2077:2082  name_ */\n  dup2\n    /* \"contracts/ERC721A.sol\":2069:2074  _name */\n  0x01\n    /* \"contracts/ERC721A.sol\":2069:2082  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"contracts/ERC721A.sol\":2093:2100  _symbol */\n  0x02\n    /* \"contracts/ERC721A.sol\":2093:2110  _symbol = symbol_ */\n  tag_11\n    /* \"contracts/ERC721A.sol\":2103:2110  symbol_ */\n  dup3\n    /* \"contracts/ERC721A.sol\":2093:2100  _symbol */\n  dup3\n    /* \"contracts/ERC721A.sol\":2093:2110  _symbol = symbol_ */\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/ERC721A.sol\":2002:2118  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x08\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  sstore\n    /* \"contracts/Gluttony.sol\":910:915  PRICE */\n  0x09\n    /* \"contracts/Gluttony.sol\":910:923  PRICE = price */\n  dup8\n  swap1\n  sstore\n    /* \"contracts/Gluttony.sol\":934:944  MAX_SUPPLY */\n  0x0a\n    /* \"contracts/Gluttony.sol\":934:956  MAX_SUPPLY = maxSupply */\n  dup7\n  swap1\n  sstore\n    /* \"contracts/Gluttony.sol\":967:975  BASE_URI */\n  0x0b\n    /* \"contracts/Gluttony.sol\":967:985  BASE_URI = baseUri */\n  tag_19\n    /* \"contracts/Gluttony.sol\":978:985  baseUri */\n  dup7\n    /* \"contracts/Gluttony.sol\":967:975  BASE_URI */\n  dup3\n    /* \"contracts/Gluttony.sol\":967:985  BASE_URI = baseUri */\n  tag_10\n  jump\t// in\ntag_19:\n  pop\n    /* \"contracts/Gluttony.sol\":996:1022  FREE_MINT_LIMIT_PER_WALLET */\n  0x0c\n    /* \"contracts/Gluttony.sol\":996:1042  FREE_MINT_LIMIT_PER_WALLET = freeMintAllowance */\n  swap4\n  swap1\n  swap4\n  sstore\n    /* \"contracts/Gluttony.sol\":1053:1075  MAX_MINT_AMOUNT_PER_TX */\n  0x0d\n    /* \"contracts/Gluttony.sol\":1053:1090  MAX_MINT_AMOUNT_PER_TX = maxMintPerTx */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"contracts/Gluttony.sol\":1101:1115  IS_SALE_ACTIVE */\n  0x0e\n    /* \"contracts/Gluttony.sol\":1101:1130  IS_SALE_ACTIVE = isSaleActive */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap2\n  iszero\n  iszero\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/Gluttony.sol\":1141:1167  FREE_MINT_IS_ALLOWED_UNTIL */\n  0x0f\n    /* \"contracts/Gluttony.sol\":1141:1192  FREE_MINT_IS_ALLOWED_UNTIL = freeMintIsAllowedUntil */\n  sstore\n  pop\n    /* \"contracts/Gluttony.sol\":207:4328  contract Gluttony is ERC721A, Ownable, ReentrancyGuard {... */\n  tag_29\n  swap2\n  pop\n  pop\n  jump\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  0x07\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_23:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:310   */\ntag_24:\n    /* \"#utility.yul\":222:235   */\n  dup1\n  mload\n    /* \"#utility.yul\":271:284   */\n  dup1\n  iszero\n    /* \"#utility.yul\":264:285   */\n  iszero\n    /* \"#utility.yul\":254:286   */\n  dup2\n  eq\n    /* \"#utility.yul\":244:304   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":300:301   */\n  0x00\n    /* \"#utility.yul\":297:298   */\n  dup1\n    /* \"#utility.yul\":290:302   */\n  revert\n    /* \"#utility.yul\":244:304   */\ntag_32:\n    /* \"#utility.yul\":146:310   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":315:1745   */\ntag_3:\n    /* \"#utility.yul\":446:452   */\n  0x00\n    /* \"#utility.yul\":454:460   */\n  dup1\n    /* \"#utility.yul\":462:468   */\n  0x00\n    /* \"#utility.yul\":470:476   */\n  dup1\n    /* \"#utility.yul\":478:484   */\n  0x00\n    /* \"#utility.yul\":486:492   */\n  dup1\n    /* \"#utility.yul\":494:500   */\n  0x00\n    /* \"#utility.yul\":547:550   */\n  0xe0\n    /* \"#utility.yul\":535:544   */\n  dup9\n    /* \"#utility.yul\":526:533   */\n  dup11\n    /* \"#utility.yul\":522:545   */\n  sub\n    /* \"#utility.yul\":518:551   */\n  slt\n    /* \"#utility.yul\":515:568   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":564:565   */\n  0x00\n    /* \"#utility.yul\":561:562   */\n  dup1\n    /* \"#utility.yul\":554:566   */\n  revert\n    /* \"#utility.yul\":515:568   */\ntag_34:\n    /* \"#utility.yul\":587:603   */\n  dup8\n  mload\n    /* \"#utility.yul\":622:624   */\n  0x20\n    /* \"#utility.yul\":649:667   */\n  dup1\n  dup11\n  add\n    /* \"#utility.yul\":643:668   */\n  mload\n    /* \"#utility.yul\":712:714   */\n  0x40\n    /* \"#utility.yul\":697:715   */\n  dup12\n  add\n    /* \"#utility.yul\":691:716   */\n  mload\n    /* \"#utility.yul\":587:603   */\n  swap3\n  swap10\n  pop\n    /* \"#utility.yul\":643:668   */\n  swap8\n  pop\n    /* \"#utility.yul\":622:624   */\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":765:779   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":762:796   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":789:790   */\n  dup1\n    /* \"#utility.yul\":782:794   */\n  revert\n    /* \"#utility.yul\":762:796   */\ntag_35:\n    /* \"#utility.yul\":830:836   */\n  dup2\n    /* \"#utility.yul\":819:828   */\n  dup12\n    /* \"#utility.yul\":815:837   */\n  add\n    /* \"#utility.yul\":805:837   */\n  swap2\n  pop\n    /* \"#utility.yul\":875:882   */\n  dup12\n    /* \"#utility.yul\":868:872   */\n  0x1f\n    /* \"#utility.yul\":864:866   */\n  dup4\n    /* \"#utility.yul\":860:873   */\n  add\n    /* \"#utility.yul\":856:883   */\n  slt\n    /* \"#utility.yul\":846:901   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":897:898   */\n  0x00\n    /* \"#utility.yul\":894:895   */\n  dup1\n    /* \"#utility.yul\":887:899   */\n  revert\n    /* \"#utility.yul\":846:901   */\ntag_36:\n    /* \"#utility.yul\":926:928   */\n  dup2\n    /* \"#utility.yul\":920:929   */\n  mload\n    /* \"#utility.yul\":948:950   */\n  dup2\n    /* \"#utility.yul\":944:946   */\n  dup2\n    /* \"#utility.yul\":941:951   */\n  gt\n    /* \"#utility.yul\":938:974   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":954:972   */\n  tag_38\n  tag_23\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1029:1031   */\n  0x40\n    /* \"#utility.yul\":1023:1032   */\n  mload\n    /* \"#utility.yul\":997:999   */\n  0x1f\n    /* \"#utility.yul\":1083:1096   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":1079:1101   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":1103:1105   */\n  0x3f\n    /* \"#utility.yul\":1075:1106   */\n  add\n    /* \"#utility.yul\":1071:1111   */\n  and\n    /* \"#utility.yul\":1059:1112   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":1127:1145   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":1147:1169   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":1124:1170   */\n  or\n    /* \"#utility.yul\":1121:1193   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1173:1191   */\n  tag_40\n  tag_23\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1213:1223   */\n  dup2\n    /* \"#utility.yul\":1209:1211   */\n  0x40\n    /* \"#utility.yul\":1202:1224   */\n  mstore\n    /* \"#utility.yul\":1248:1250   */\n  dup3\n    /* \"#utility.yul\":1240:1246   */\n  dup2\n    /* \"#utility.yul\":1233:1251   */\n  mstore\n    /* \"#utility.yul\":1288:1295   */\n  dup15\n    /* \"#utility.yul\":1283:1285   */\n  dup7\n    /* \"#utility.yul\":1278:1280   */\n  dup5\n    /* \"#utility.yul\":1274:1276   */\n  dup8\n    /* \"#utility.yul\":1270:1281   */\n  add\n    /* \"#utility.yul\":1266:1286   */\n  add\n    /* \"#utility.yul\":1263:1296   */\n  gt\n    /* \"#utility.yul\":1260:1313   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1309:1310   */\n  0x00\n    /* \"#utility.yul\":1306:1307   */\n  dup1\n    /* \"#utility.yul\":1299:1311   */\n  revert\n    /* \"#utility.yul\":1260:1313   */\ntag_41:\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1322:1332   */\n  swap4\n  pop\n    /* \"#utility.yul\":1341:1470   */\ntag_42:\n    /* \"#utility.yul\":1355:1357   */\n  dup3\n    /* \"#utility.yul\":1352:1353   */\n  dup5\n    /* \"#utility.yul\":1349:1358   */\n  lt\n    /* \"#utility.yul\":1341:1470   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1443:1453   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":1439:1458   */\n  dup7\n  add\n    /* \"#utility.yul\":1433:1459   */\n  mload\n    /* \"#utility.yul\":1412:1426   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":1408:1431   */\n  dup8\n  add\n    /* \"#utility.yul\":1401:1460   */\n  mstore\n    /* \"#utility.yul\":1366:1376   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":1341:1470   */\n  jump(tag_42)\ntag_44:\n    /* \"#utility.yul\":1512:1513   */\n  0x00\n    /* \"#utility.yul\":1507:1509   */\n  dup7\n    /* \"#utility.yul\":1502:1504   */\n  dup5\n    /* \"#utility.yul\":1494:1500   */\n  dup4\n    /* \"#utility.yul\":1490:1505   */\n  add\n    /* \"#utility.yul\":1486:1510   */\n  add\n    /* \"#utility.yul\":1479:1514   */\n  mstore\n    /* \"#utility.yul\":1533:1539   */\n  dup1\n    /* \"#utility.yul\":1523:1539   */\n  swap11\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1579:1581   */\n  0x60\n    /* \"#utility.yul\":1568:1577   */\n  dup9\n    /* \"#utility.yul\":1564:1582   */\n  add\n    /* \"#utility.yul\":1558:1583   */\n  mload\n    /* \"#utility.yul\":1548:1583   */\n  swap4\n  pop\n    /* \"#utility.yul\":1623:1626   */\n  0x80\n    /* \"#utility.yul\":1612:1621   */\n  dup9\n    /* \"#utility.yul\":1608:1627   */\n  add\n    /* \"#utility.yul\":1602:1628   */\n  mload\n    /* \"#utility.yul\":1592:1628   */\n  swap3\n  pop\n    /* \"#utility.yul\":1647:1694   */\n  tag_45\n    /* \"#utility.yul\":1689:1692   */\n  0xa0\n    /* \"#utility.yul\":1678:1687   */\n  dup10\n    /* \"#utility.yul\":1674:1693   */\n  add\n    /* \"#utility.yul\":1647:1694   */\n  tag_24\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1637:1694   */\n  swap2\n  pop\n    /* \"#utility.yul\":1734:1737   */\n  0xc0\n    /* \"#utility.yul\":1723:1732   */\n  dup9\n    /* \"#utility.yul\":1719:1738   */\n  add\n    /* \"#utility.yul\":1713:1739   */\n  mload\n    /* \"#utility.yul\":1703:1739   */\n  swap1\n  pop\n    /* \"#utility.yul\":315:1745   */\n  swap3\n  swap6\n  swap9\n  swap2\n  swap5\n  swap8\n  pop\n  swap3\n  swap6\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1750:2130   */\ntag_25:\n    /* \"#utility.yul\":1829:1830   */\n  0x01\n    /* \"#utility.yul\":1825:1837   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1872:1884   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1893:1954   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1947:1951   */\n  0x7f\n    /* \"#utility.yul\":1939:1945   */\n  dup3\n    /* \"#utility.yul\":1935:1952   */\n  and\n    /* \"#utility.yul\":1925:1952   */\n  swap2\n  pop\n    /* \"#utility.yul\":1893:1954   */\ntag_47:\n    /* \"#utility.yul\":2000:2002   */\n  0x20\n    /* \"#utility.yul\":1992:1998   */\n  dup3\n    /* \"#utility.yul\":1989:2003   */\n  lt\n    /* \"#utility.yul\":1969:1987   */\n  dup2\n    /* \"#utility.yul\":1966:2004   */\n  sub\n    /* \"#utility.yul\":1963:2124   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":2046:2056   */\n  0x4e487b71\n    /* \"#utility.yul\":2041:2044   */\n  0xe0\n    /* \"#utility.yul\":2037:2057   */\n  shl\n    /* \"#utility.yul\":2034:2035   */\n  0x00\n    /* \"#utility.yul\":2027:2058   */\n  mstore\n    /* \"#utility.yul\":2081:2085   */\n  0x22\n    /* \"#utility.yul\":2078:2079   */\n  0x04\n    /* \"#utility.yul\":2071:2086   */\n  mstore\n    /* \"#utility.yul\":2109:2113   */\n  0x24\n    /* \"#utility.yul\":2106:2107   */\n  0x00\n    /* \"#utility.yul\":2099:2114   */\n  revert\n    /* \"#utility.yul\":1963:2124   */\ntag_48:\n  pop\n    /* \"#utility.yul\":1750:2130   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2261:2806   */\ntag_27:\n    /* \"#utility.yul\":2363:2365   */\n  0x1f\n    /* \"#utility.yul\":2358:2361   */\n  dup3\n    /* \"#utility.yul\":2355:2366   */\n  gt\n    /* \"#utility.yul\":2352:2800   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2399:2400   */\n  0x00\n    /* \"#utility.yul\":2424:2429   */\n  dup2\n    /* \"#utility.yul\":2420:2422   */\n  dup2\n    /* \"#utility.yul\":2413:2430   */\n  mstore\n    /* \"#utility.yul\":2469:2473   */\n  0x20\n    /* \"#utility.yul\":2465:2467   */\n  dup2\n    /* \"#utility.yul\":2455:2474   */\n  keccak256\n    /* \"#utility.yul\":2539:2541   */\n  0x1f\n    /* \"#utility.yul\":2527:2537   */\n  dup6\n    /* \"#utility.yul\":2523:2542   */\n  add\n    /* \"#utility.yul\":2520:2521   */\n  0x05\n    /* \"#utility.yul\":2516:2543   */\n  shr\n    /* \"#utility.yul\":2510:2514   */\n  dup2\n    /* \"#utility.yul\":2506:2544   */\n  add\n    /* \"#utility.yul\":2575:2579   */\n  0x20\n    /* \"#utility.yul\":2563:2573   */\n  dup7\n    /* \"#utility.yul\":2560:2580   */\n  lt\n    /* \"#utility.yul\":2557:2604   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":2598:2602   */\n  dup1\n    /* \"#utility.yul\":2557:2604   */\ntag_52:\n    /* \"#utility.yul\":2653:2655   */\n  0x1f\n    /* \"#utility.yul\":2648:2651   */\n  dup6\n    /* \"#utility.yul\":2644:2656   */\n  add\n    /* \"#utility.yul\":2641:2642   */\n  0x05\n    /* \"#utility.yul\":2637:2657   */\n  shr\n    /* \"#utility.yul\":2631:2635   */\n  dup3\n    /* \"#utility.yul\":2627:2658   */\n  add\n    /* \"#utility.yul\":2617:2658   */\n  swap2\n  pop\n    /* \"#utility.yul\":2708:2790   */\ntag_53:\n    /* \"#utility.yul\":2726:2728   */\n  dup2\n    /* \"#utility.yul\":2719:2724   */\n  dup2\n    /* \"#utility.yul\":2716:2729   */\n  lt\n    /* \"#utility.yul\":2708:2790   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":2771:2788   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2752:2753   */\n  0x01\n    /* \"#utility.yul\":2741:2754   */\n  add\n    /* \"#utility.yul\":2708:2790   */\n  jump(tag_53)\ntag_55:\n    /* \"#utility.yul\":2712:2715   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2352:2800   */\ntag_51:\n    /* \"#utility.yul\":2261:2806   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2982:4334   */\ntag_10:\n    /* \"#utility.yul\":3102:3112   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3124:3154   */\n  dup2\n  gt\n    /* \"#utility.yul\":3121:3177   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":3157:3175   */\n  tag_59\n  tag_23\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":3186:3283   */\n  tag_60\n    /* \"#utility.yul\":3276:3282   */\n  dup2\n    /* \"#utility.yul\":3236:3274   */\n  tag_61\n    /* \"#utility.yul\":3268:3272   */\n  dup5\n    /* \"#utility.yul\":3262:3273   */\n  sload\n    /* \"#utility.yul\":3236:3274   */\n  tag_25\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":3230:3234   */\n  dup5\n    /* \"#utility.yul\":3186:3283   */\n  tag_27\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":3338:3342   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3402:3404   */\n  0x1f\n    /* \"#utility.yul\":3391:3405   */\n  dup4\n  gt\n    /* \"#utility.yul\":3419:3420   */\n  0x01\n    /* \"#utility.yul\":3414:4077   */\n  dup2\n  eq\n  tag_63\n  jumpi\n    /* \"#utility.yul\":4121:4122   */\n  0x00\n    /* \"#utility.yul\":4138:4144   */\n  dup5\n    /* \"#utility.yul\":4135:4224   */\n  iszero\n  tag_64\n  jumpi\n  pop\n    /* \"#utility.yul\":4190:4209   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4184:4210   */\n  mload\n    /* \"#utility.yul\":4135:4224   */\ntag_64:\n  not(0x00)\n    /* \"#utility.yul\":2939:2940   */\n  0x03\n    /* \"#utility.yul\":2935:2946   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2931:2955   */\n  shr\n    /* \"#utility.yul\":2927:2956   */\n  not\n    /* \"#utility.yul\":2917:2957   */\n  and\n    /* \"#utility.yul\":2963:2964   */\n  0x01\n    /* \"#utility.yul\":2959:2970   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2914:2971   */\n  or\n    /* \"#utility.yul\":4237:4318   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3384:4328   */\n  jump(tag_55)\n    /* \"#utility.yul\":3414:4077   */\ntag_63:\n    /* \"#utility.yul\":2208:2209   */\n  0x00\n    /* \"#utility.yul\":2201:2215   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2245:2249   */\n  0x20\n    /* \"#utility.yul\":2232:2250   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3450:3470   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3568:3804   */\ntag_67:\n    /* \"#utility.yul\":3582:3589   */\n  dup3\n    /* \"#utility.yul\":3579:3580   */\n  dup2\n    /* \"#utility.yul\":3576:3590   */\n  lt\n    /* \"#utility.yul\":3568:3804   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":3671:3690   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3665:3691   */\n  mload\n    /* \"#utility.yul\":3650:3692   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3763:3790   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3731:3732   */\n  0x01\n    /* \"#utility.yul\":3719:3733   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3598:3617   */\n  dup5\n  add\n    /* \"#utility.yul\":3568:3804   */\n  jump(tag_67)\ntag_69:\n    /* \"#utility.yul\":3572:3575   */\n  pop\n    /* \"#utility.yul\":3832:3838   */\n  dup6\n    /* \"#utility.yul\":3823:3830   */\n  dup3\n    /* \"#utility.yul\":3820:3839   */\n  lt\n    /* \"#utility.yul\":3817:4018   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":3893:3912   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3887:3913   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3976:3977   */\n  0x03\n    /* \"#utility.yul\":3972:3986   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3988:3991   */\n  0xf8\n    /* \"#utility.yul\":3968:3992   */\n  and\n    /* \"#utility.yul\":3964:4001   */\n  shr\n    /* \"#utility.yul\":3960:4002   */\n  not\n    /* \"#utility.yul\":3945:4003   */\n  and\n    /* \"#utility.yul\":3930:4004   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3817:4018   */\ntag_70:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4064:4065   */\n  0x01\n    /* \"#utility.yul\":4048:4062   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":4044:4066   */\n  add\n    /* \"#utility.yul\":4031:4067   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2982:4334   */\n  jump\t// out\ntag_29:\n    /* \"contracts/Gluttony.sol\":207:4328  contract Gluttony is ERC721A, Ownable, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Gluttony.sol\":207:4328  contract Gluttony is ERC721A, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xc87b56dd\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xd111515d\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xfdb4953a\n      eq\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0xa22cb465\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xb0551ac4\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xc4e9374d\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x8d859f3e\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x8d859f3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x91b7f5ed\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x715018a6\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x76d02b71\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x841718a6\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8b85e43d\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x32cb6b0c\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x42842e0e\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x55f804b3\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x616cdb1e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x32cb6b0c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4065b85f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x408cbf94\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x09ef6527\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x09ef6527\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x10b0c052\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC721A.sol\":2289:2582  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"contracts/ERC721A.sol\":2289:2582  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":4064:4164  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":5626:5840  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1679:1730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"contracts/ERC721A.sol\":5626:5840  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      tag_49\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"contracts/ERC721A.sol\":5147:5560  function approve(address to, uint256 tokenId) public override {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/Gluttony.sol\":440:477  uint256 public MAX_MINT_AMOUNT_PER_TX */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      sload(0x0d)\n      dup2\n      jump\n    tag_69:\n      mload(0x40)\n        /* \"#utility.yul\":2324:2349   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2312:2314   */\n      0x20\n        /* \"#utility.yul\":2297:2315   */\n      add\n        /* \"contracts/Gluttony.sol\":440:477  uint256 public MAX_MINT_AMOUNT_PER_TX */\n      tag_49\n        /* \"#utility.yul\":2178:2355   */\n      jump\n        /* \"contracts/Gluttony.sol\":392:433  uint256 public FREE_MINT_LIMIT_PER_WALLET */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_69\n      sload(0x0c)\n      dup2\n      jump\n        /* \"contracts/ERC721A.sol\":2126:2217  function totalSupply() public view returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n        /* \"contracts/ERC721A.sol\":2170:2177  uint256 */\n      0x00\n        /* \"contracts/ERC721A.sol\":2197:2209  currentIndex */\n      sload\n        /* \"contracts/ERC721A.sol\":2126:2217  function totalSupply() public view returns (uint256) {... */\n      jump(tag_69)\n        /* \"contracts/ERC721A.sol\":6502:6664  function transferFrom(... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_64\n      tag_83\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n        /* \"contracts/Gluttony.sol\":330:355  uint256 public MAX_SUPPLY */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_69\n      sload(0x0a)\n      dup2\n      jump\n        /* \"contracts/Gluttony.sol\":4154:4325  function withdraw() public onlyOwner nonReentrant {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_64\n      tag_92\n      jump\t// in\n        /* \"contracts/Gluttony.sol\":517:558  uint256 public FREE_MINT_IS_ALLOWED_UNTIL */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_69\n      sload(0x0f)\n      dup2\n      jump\n        /* \"contracts/Gluttony.sol\":3883:4027  function mintOwner(address _to, uint256 _mintAmount) public mintCompliance(_mintAmount) onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_64\n      tag_99\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":6735:6912  function safeTransferFrom(... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_64\n      tag_103\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n        /* \"contracts/Gluttony.sol\":1890:2059  function setBaseURI(string memory customBaseURI_) external onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_64\n      tag_107\n      calldatasize\n      0x04\n      tag_108\n      jump\t// in\n    tag_107:\n      tag_109\n      jump\t// in\n        /* \"contracts/Gluttony.sol\":2216:2338  function setMaxMintPerTx(uint256 maxMintPerTx) external onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_64\n      tag_112\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":3873:3997  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_57\n      tag_116\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":2646:2867  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_69\n      tag_121\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_121:\n      tag_123\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_64\n      tag_127\n      jump\t// in\n        /* \"contracts/Gluttony.sol\":484:510  bool public IS_SALE_ACTIVE */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      sload(0x0e)\n      tag_45\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/Gluttony.sol\":2346:2455  function setSaleActive(bool saleIsActive) external onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_64\n      tag_134\n      calldatasize\n      0x04\n      tag_135\n      jump\t// in\n    tag_134:\n      tag_136\n      jump\t// in\n        /* \"contracts/Gluttony.sol\":2463:2617  function setFreeMintAllowedUntil(uint256 freeMintIsAllowedUntil) external onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      tag_64\n      tag_139\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_139:\n      tag_140\n      jump\t// in\n        /* \"contracts/Gluttony.sol\":303:323  uint256 public PRICE */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_69\n      sload(0x09)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_57)\n        /* \"contracts/Gluttony.sol\":1524:1620  function setPrice(uint256 customPrice) external onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_64\n      tag_151\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_151:\n      tag_152\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":4233:4337  function symbol() public view virtual override returns (string memory) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      tag_52\n      tag_155\n      jump\t// in\n        /* \"contracts/Gluttony.sol\":2996:3875  function mint(uint256 _mintAmount) public payable mintCompliance(_mintAmount) {... */\n    tag_27:\n      tag_64\n      tag_158\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_158:\n      tag_159\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":5912:6200  function setApprovalForAll(address operator, bool approved) public override {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      tag_64\n      tag_162\n      calldatasize\n      0x04\n      tag_163\n      jump\t// in\n    tag_162:\n      tag_164\n      jump\t// in\n        /* \"contracts/Gluttony.sol\":2067:2208  function setFreeMintAllowance(uint256 freeMintAllowance) external onlyOwner {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      tag_64\n      tag_167\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_167:\n      tag_168\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":6983:7338  function safeTransferFrom(... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      tag_64\n      tag_171\n      calldatasize\n      0x04\n      tag_172\n      jump\t// in\n    tag_171:\n      tag_173\n      jump\t// in\n        /* \"contracts/Gluttony.sol\":1628:1882  function lowerMaxSupply(uint256 newMaxSupply) external onlyOwner {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      pop\n      tag_64\n      tag_176\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_176:\n      tag_177\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":4408:4743  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      tag_52\n      tag_180\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_180:\n      tag_181\n      jump\t// in\n        /* \"contracts/Gluttony.sol\":2625:2711  function freezeMetadata() external onlyOwner {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_183\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_183:\n      pop\n      tag_64\n      tag_185\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":6271:6435  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n      pop\n      tag_45\n      tag_188\n      calldatasize\n      0x04\n      tag_189\n      jump\t// in\n    tag_188:\n      tag_190\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      pop\n      tag_64\n      tag_194\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_194:\n      tag_195\n      jump\t// in\n        /* \"contracts/Gluttony.sol\":602:629  bool public METADATA_FROZEN */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_196\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_196:\n      pop\n      sload(0x10)\n      tag_45\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/ERC721A.sol\":2289:2582  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_48:\n        /* \"contracts/ERC721A.sol\":2391:2395  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":2424:2464  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"contracts/ERC721A.sol\":2424:2525  interfaceId == type(IERC721).interfaceId ||... */\n      tag_201\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":2477:2525  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"contracts/ERC721A.sol\":2424:2525  interfaceId == type(IERC721).interfaceId ||... */\n    tag_201:\n        /* \"contracts/ERC721A.sol\":2424:2574  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_203\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":2538:2574  super.supportsInterface(interfaceId) */\n    tag_203:\n        /* \"contracts/ERC721A.sol\":2408:2574  return... */\n      swap3\n        /* \"contracts/ERC721A.sol\":2289:2582  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":4064:4164  function name() public view virtual override returns (string memory) {... */\n    tag_53:\n        /* \"contracts/ERC721A.sol\":4118:4131  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":4151:4156  _name */\n      0x01\n        /* \"contracts/ERC721A.sol\":4144:4156  return _name */\n      dup1\n      sload\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_208\n      swap1\n      tag_207\n      jump\t// in\n    tag_208:\n      dup1\n      iszero\n      tag_209\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_210\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_209)\n    tag_210:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_211:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_211\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_209:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":4064:4164  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":5626:5840  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_60:\n        /* \"contracts/ERC721A.sol\":5694:5701  address */\n      0x00\n        /* \"contracts/ERC721A.sol\":5722:5738  _exists(tokenId) */\n      tag_213\n        /* \"contracts/ERC721A.sol\":5730:5737  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":7650:7654  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":7684:7696  currentIndex */\n      sload\n      gt\n        /* \"contracts/ERC721A.sol\":7674:7696  tokenId < currentIndex */\n      swap1\n        /* \"contracts/ERC721A.sol\":7593:7704  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      jump\n        /* \"contracts/ERC721A.sol\":5722:5738  _exists(tokenId) */\n    tag_213:\n        /* \"contracts/ERC721A.sol\":5714:5788  require(_exists(tokenId), 'ERC721A: approved query for nonexistent token') */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6242:6244   */\n      0x20\n        /* \"contracts/ERC721A.sol\":5714:5788  require(_exists(tokenId), 'ERC721A: approved query for nonexistent token') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6224:6245   */\n      mstore\n        /* \"#utility.yul\":6281:6283   */\n      0x2d\n        /* \"#utility.yul\":6261:6279   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6254:6284   */\n      mstore\n        /* \"#utility.yul\":6320:6354   */\n      0x455243373231413a20617070726f76656420717565727920666f72206e6f6e65\n        /* \"#utility.yul\":6300:6318   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6293:6355   */\n      mstore\n      shl(0x99, 0x3c34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":6371:6389   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6364:6407   */\n      mstore\n        /* \"#utility.yul\":6424:6443   */\n      0x84\n      add\n        /* \"contracts/ERC721A.sol\":5714:5788  require(_exists(tokenId), 'ERC721A: approved query for nonexistent token') */\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n      pop\n        /* \"contracts/ERC721A.sol\":5808:5832  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":5808:5823  _tokenApprovals */\n      0x05\n        /* \"contracts/ERC721A.sol\":5808:5832  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":5626:5840  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":5147:5560  function approve(address to, uint256 tokenId) public override {... */\n    tag_67:\n        /* \"contracts/ERC721A.sol\":5220:5233  address owner */\n      0x00\n        /* \"contracts/ERC721A.sol\":5236:5260  ERC721A.ownerOf(tokenId) */\n      tag_219\n        /* \"contracts/ERC721A.sol\":5252:5259  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":5236:5251  ERC721A.ownerOf */\n      tag_117\n        /* \"contracts/ERC721A.sol\":5236:5260  ERC721A.ownerOf(tokenId) */\n      jump\t// in\n    tag_219:\n        /* \"contracts/ERC721A.sol\":5220:5260  address owner = ERC721A.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":5285:5290  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":5279:5290  to != owner */\n      and\n        /* \"contracts/ERC721A.sol\":5279:5281  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":5279:5290  to != owner */\n      and\n      sub\n        /* \"contracts/ERC721A.sol\":5271:5329  require(to != owner, 'ERC721A: approval to current owner') */\n      tag_220\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6656:6658   */\n      0x20\n        /* \"contracts/ERC721A.sol\":5271:5329  require(to != owner, 'ERC721A: approval to current owner') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6638:6659   */\n      mstore\n        /* \"#utility.yul\":6695:6697   */\n      0x22\n        /* \"#utility.yul\":6675:6693   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6668:6698   */\n      mstore\n        /* \"#utility.yul\":6734:6768   */\n      0x455243373231413a20617070726f76616c20746f2063757272656e74206f776e\n        /* \"#utility.yul\":6714:6732   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6707:6769   */\n      mstore\n      shl(0xf1, 0x32b9)\n        /* \"#utility.yul\":6785:6803   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6778:6810   */\n      mstore\n        /* \"#utility.yul\":6827:6846   */\n      0x84\n      add\n        /* \"contracts/ERC721A.sol\":5271:5329  require(to != owner, 'ERC721A: approval to current owner') */\n      tag_216\n        /* \"#utility.yul\":6454:6852   */\n      jump\n        /* \"contracts/ERC721A.sol\":5271:5329  require(to != owner, 'ERC721A: approval to current owner') */\n    tag_220:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":5364:5385  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"contracts/ERC721A.sol\":5364:5426  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_226\n      jumpi\n      pop\n        /* \"contracts/ERC721A.sol\":5389:5426  isApprovedForAll(owner, _msgSender()) */\n      tag_226\n        /* \"contracts/ERC721A.sol\":5406:5411  owner */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":6271:6435  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_190\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":5389:5426  isApprovedForAll(owner, _msgSender()) */\n    tag_226:\n        /* \"contracts/ERC721A.sol\":5342:5511  require(... */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7059:7061   */\n      0x20\n        /* \"contracts/ERC721A.sol\":5342:5511  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7041:7062   */\n      mstore\n        /* \"#utility.yul\":7098:7100   */\n      0x39\n        /* \"#utility.yul\":7078:7096   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7071:7101   */\n      mstore\n        /* \"#utility.yul\":7137:7171   */\n      0x455243373231413a20617070726f76652063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":7117:7135   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7110:7172   */\n      mstore\n        /* \"#utility.yul\":7208:7235   */\n      0x776e6572206e6f7220617070726f76656420666f7220616c6c00000000000000\n        /* \"#utility.yul\":7188:7206   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7181:7236   */\n      mstore\n        /* \"#utility.yul\":7253:7272   */\n      0x84\n      add\n        /* \"contracts/ERC721A.sol\":5342:5511  require(... */\n      tag_216\n        /* \"#utility.yul\":6857:7278   */\n      jump\n        /* \"contracts/ERC721A.sol\":5342:5511  require(... */\n    tag_228:\n        /* \"contracts/ERC721A.sol\":5524:5552  _approve(to, tokenId, owner) */\n      tag_231\n        /* \"contracts/ERC721A.sol\":5533:5535  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":5537:5544  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":5546:5551  owner */\n      dup4\n        /* \"contracts/ERC721A.sol\":5524:5532  _approve */\n      tag_232\n        /* \"contracts/ERC721A.sol\":5524:5552  _approve(to, tokenId, owner) */\n      jump\t// in\n    tag_231:\n        /* \"contracts/ERC721A.sol\":5209:5560  {... */\n      pop\n        /* \"contracts/ERC721A.sol\":5147:5560  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":6502:6664  function transferFrom(... */\n    tag_85:\n        /* \"contracts/ERC721A.sol\":6628:6656  _transfer(from, to, tokenId) */\n      tag_231\n        /* \"contracts/ERC721A.sol\":6638:6642  from */\n      dup4\n        /* \"contracts/ERC721A.sol\":6644:6646  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":6648:6655  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":6628:6637  _transfer */\n      tag_236\n        /* \"contracts/ERC721A.sol\":6628:6656  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"contracts/Gluttony.sol\":4154:4325  function withdraw() public onlyOwner nonReentrant {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_238\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x08)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7485:7487   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7467:7488   */\n      mstore\n        /* \"#utility.yul\":7524:7526   */\n      0x1f\n        /* \"#utility.yul\":7504:7522   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7497:7527   */\n      mstore\n        /* \"#utility.yul\":7563:7596   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7543:7561   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7536:7597   */\n      mstore\n        /* \"#utility.yul\":7614:7632   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_216\n        /* \"#utility.yul\":7283:7638   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_241:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x08\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      sstore\n        /* \"contracts/Gluttony.sol\":4233:4254  address(this).balance */\n      selfbalance\n        /* \"contracts/Gluttony.sol\":4267:4317  Address.sendValue(payable(payoutAddress), balance) */\n      tag_245\n        /* \"contracts/Gluttony.sol\":4103:4145  0xc919cE1b37Fc4e0405885a3350CC153B27dd06e0 */\n      0xc919ce1b37fc4e0405885a3350cc153b27dd06e0\n        /* \"contracts/Gluttony.sol\":4233:4254  address(this).balance */\n      dup3\n        /* \"contracts/Gluttony.sol\":4267:4284  Address.sendValue */\n      tag_246\n        /* \"contracts/Gluttony.sol\":4267:4317  Address.sendValue(payable(payoutAddress), balance) */\n      jump\t// in\n    tag_245:\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x08\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      sstore\n        /* \"contracts/Gluttony.sol\":4154:4325  function withdraw() public onlyOwner nonReentrant {... */\n      jump\t// out\n        /* \"contracts/Gluttony.sol\":3883:4027  function mintOwner(address _to, uint256 _mintAmount) public mintCompliance(_mintAmount) onlyOwner {... */\n    tag_100:\n        /* \"contracts/Gluttony.sol\":3958:3969  _mintAmount */\n      dup1\n        /* \"contracts/Gluttony.sol\":2817:2818  0 */\n      0x00\n        /* \"contracts/Gluttony.sol\":2803:2814  _mintAmount */\n      dup2\n        /* \"contracts/Gluttony.sol\":2803:2818  _mintAmount > 0 */\n      gt\n        /* \"contracts/Gluttony.sol\":2803:2859  _mintAmount > 0 && _mintAmount <= MAX_MINT_AMOUNT_PER_TX */\n      dup1\n      iszero\n      tag_248\n      jumpi\n      pop\n        /* \"contracts/Gluttony.sol\":2837:2859  MAX_MINT_AMOUNT_PER_TX */\n      sload(0x0d)\n        /* \"contracts/Gluttony.sol\":2822:2833  _mintAmount */\n      dup2\n        /* \"contracts/Gluttony.sol\":2822:2859  _mintAmount <= MAX_MINT_AMOUNT_PER_TX */\n      gt\n      iszero\n        /* \"contracts/Gluttony.sol\":2803:2859  _mintAmount > 0 && _mintAmount <= MAX_MINT_AMOUNT_PER_TX */\n    tag_248:\n        /* \"contracts/Gluttony.sol\":2795:2884  require(_mintAmount > 0 && _mintAmount <= MAX_MINT_AMOUNT_PER_TX, \"Invalid mint amount!\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7845:7847   */\n      0x20\n        /* \"contracts/Gluttony.sol\":2795:2884  require(_mintAmount > 0 && _mintAmount <= MAX_MINT_AMOUNT_PER_TX, \"Invalid mint amount!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7827:7848   */\n      mstore\n        /* \"#utility.yul\":7884:7886   */\n      0x14\n        /* \"#utility.yul\":7864:7882   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7857:7887   */\n      mstore\n      shl(0x60, 0x496e76616c6964206d696e7420616d6f756e7421)\n        /* \"#utility.yul\":7903:7921   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7896:7946   */\n      mstore\n        /* \"#utility.yul\":7963:7981   */\n      0x64\n      add\n        /* \"contracts/Gluttony.sol\":2795:2884  require(_mintAmount > 0 && _mintAmount <= MAX_MINT_AMOUNT_PER_TX, \"Invalid mint amount!\") */\n      tag_216\n        /* \"#utility.yul\":7643:7987   */\n      jump\n        /* \"contracts/Gluttony.sol\":2795:2884  require(_mintAmount > 0 && _mintAmount <= MAX_MINT_AMOUNT_PER_TX, \"Invalid mint amount!\") */\n    tag_249:\n        /* \"contracts/Gluttony.sol\":2933:2943  MAX_SUPPLY */\n      sload(0x0a)\n        /* \"contracts/Gluttony.sol\":2918:2929  _mintAmount */\n      dup2\n        /* \"contracts/Gluttony.sol\":2903:2915  currentIndex */\n      sload(0x00)\n        /* \"contracts/Gluttony.sol\":2903:2929  currentIndex + _mintAmount */\n      tag_252\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n        /* \"contracts/Gluttony.sol\":2903:2943  currentIndex + _mintAmount <= MAX_SUPPLY */\n      gt\n      iszero\n        /* \"contracts/Gluttony.sol\":2895:2968  require(currentIndex + _mintAmount <= MAX_SUPPLY, \"Max supply exceeded!\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8456:8458   */\n      0x20\n        /* \"contracts/Gluttony.sol\":2895:2968  require(currentIndex + _mintAmount <= MAX_SUPPLY, \"Max supply exceeded!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8438:8459   */\n      mstore\n        /* \"#utility.yul\":8495:8497   */\n      0x14\n        /* \"#utility.yul\":8475:8493   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8468:8498   */\n      mstore\n      shl(0x60, 0x4d617820737570706c7920657863656564656421)\n        /* \"#utility.yul\":8514:8532   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8507:8557   */\n      mstore\n        /* \"#utility.yul\":8574:8592   */\n      0x64\n      add\n        /* \"contracts/Gluttony.sol\":2895:2968  require(currentIndex + _mintAmount <= MAX_SUPPLY, \"Max supply exceeded!\") */\n      tag_216\n        /* \"#utility.yul\":8254:8598   */\n      jump\n        /* \"contracts/Gluttony.sol\":2895:2968  require(currentIndex + _mintAmount <= MAX_SUPPLY, \"Max supply exceeded!\") */\n    tag_254:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_258\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_258:\n        /* \"contracts/Gluttony.sol\":3992:4019  _safeMint(_to, _mintAmount) */\n      tag_231\n        /* \"contracts/Gluttony.sol\":4002:4005  _to */\n      dup4\n        /* \"contracts/Gluttony.sol\":4007:4018  _mintAmount */\n      dup4\n        /* \"contracts/Gluttony.sol\":3992:4001  _safeMint */\n      tag_261\n        /* \"contracts/Gluttony.sol\":3992:4019  _safeMint(_to, _mintAmount) */\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":6735:6912  function safeTransferFrom(... */\n    tag_104:\n        /* \"contracts/ERC721A.sol\":6865:6904  safeTransferFrom(from, to, tokenId, '') */\n      tag_231\n        /* \"contracts/ERC721A.sol\":6882:6886  from */\n      dup4\n        /* \"contracts/ERC721A.sol\":6888:6890  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":6892:6899  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":6865:6904  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC721A.sol\":6865:6881  safeTransferFrom */\n      tag_173\n        /* \"contracts/ERC721A.sol\":6865:6904  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n        /* \"contracts/Gluttony.sol\":1890:2059  function setBaseURI(string memory customBaseURI_) external onlyOwner {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_265\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_265:\n        /* \"contracts/Gluttony.sol\":1979:1994  METADATA_FROZEN */\n      and(0xff, sload(0x10))\n        /* \"contracts/Gluttony.sol\":1978:1994  !METADATA_FROZEN */\n      iszero\n        /* \"contracts/Gluttony.sol\":1970:2015  require(!METADATA_FROZEN, \"Metadata frozen!\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8805:8807   */\n      0x20\n        /* \"contracts/Gluttony.sol\":1970:2015  require(!METADATA_FROZEN, \"Metadata frozen!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8787:8808   */\n      mstore\n        /* \"#utility.yul\":8844:8846   */\n      0x10\n        /* \"#utility.yul\":8824:8842   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8817:8847   */\n      mstore\n      shl(0x80, 0x4d657461646174612066726f7a656e21)\n        /* \"#utility.yul\":8863:8881   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8856:8902   */\n      mstore\n        /* \"#utility.yul\":8919:8937   */\n      0x64\n      add\n        /* \"contracts/Gluttony.sol\":1970:2015  require(!METADATA_FROZEN, \"Metadata frozen!\") */\n      tag_216\n        /* \"#utility.yul\":8603:8943   */\n      jump\n        /* \"contracts/Gluttony.sol\":1970:2015  require(!METADATA_FROZEN, \"Metadata frozen!\") */\n    tag_267:\n        /* \"contracts/Gluttony.sol\":2026:2034  BASE_URI */\n      0x0b\n        /* \"contracts/Gluttony.sol\":2026:2051  BASE_URI = customBaseURI_ */\n      tag_270\n        /* \"contracts/Gluttony.sol\":2037:2051  customBaseURI_ */\n      dup3\n        /* \"contracts/Gluttony.sol\":2026:2034  BASE_URI */\n      dup3\n        /* \"contracts/Gluttony.sol\":2026:2051  BASE_URI = customBaseURI_ */\n      tag_271\n      jump\t// in\n    tag_270:\n      pop\n        /* \"contracts/Gluttony.sol\":1890:2059  function setBaseURI(string memory customBaseURI_) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Gluttony.sol\":2216:2338  function setMaxMintPerTx(uint256 maxMintPerTx) external onlyOwner {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_273\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_273:\n        /* \"contracts/Gluttony.sol\":2293:2315  MAX_MINT_AMOUNT_PER_TX */\n      0x0d\n        /* \"contracts/Gluttony.sol\":2293:2330  MAX_MINT_AMOUNT_PER_TX = maxMintPerTx */\n      sstore\n        /* \"contracts/Gluttony.sol\":2216:2338  function setMaxMintPerTx(uint256 maxMintPerTx) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":3873:3997  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_117:\n        /* \"contracts/ERC721A.sol\":3937:3944  address */\n      0x00\n        /* \"contracts/ERC721A.sol\":3964:3984  ownershipOf(tokenId) */\n      tag_276\n        /* \"contracts/ERC721A.sol\":3976:3983  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":3964:3975  ownershipOf */\n      tag_277\n        /* \"contracts/ERC721A.sol\":3964:3984  ownershipOf(tokenId) */\n      jump\t// in\n    tag_276:\n        /* \"contracts/ERC721A.sol\":3964:3989  ownershipOf(tokenId).addr */\n      mload\n      swap3\n        /* \"contracts/ERC721A.sol\":3873:3997  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":2646:2867  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_123:\n        /* \"contracts/ERC721A.sol\":2710:2717  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":2738:2757  owner != address(0) */\n      dup3\n      and\n        /* \"contracts/ERC721A.sol\":2730:2805  require(owner != address(0), 'ERC721A: balance query for the zero address') */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11354:11356   */\n      0x20\n        /* \"contracts/ERC721A.sol\":2730:2805  require(owner != address(0), 'ERC721A: balance query for the zero address') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11336:11357   */\n      mstore\n        /* \"#utility.yul\":11393:11395   */\n      0x2b\n        /* \"#utility.yul\":11373:11391   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11366:11396   */\n      mstore\n        /* \"#utility.yul\":11432:11466   */\n      0x455243373231413a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":11412:11430   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11405:11467   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":11483:11501   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11476:11517   */\n      mstore\n        /* \"#utility.yul\":11534:11553   */\n      0x84\n      add\n        /* \"contracts/ERC721A.sol\":2730:2805  require(owner != address(0), 'ERC721A: balance query for the zero address') */\n      tag_216\n        /* \"#utility.yul\":11152:11559   */\n      jump\n        /* \"contracts/ERC721A.sol\":2730:2805  require(owner != address(0), 'ERC721A: balance query for the zero address') */\n    tag_279:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":2831:2850  _addressData[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":2831:2843  _addressData */\n      0x04\n        /* \"contracts/ERC721A.sol\":2831:2850  _addressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":2831:2858  _addressData[owner].balance */\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":2646:2867  function balanceOf(address owner) public view override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_283\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_285\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_286\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Gluttony.sol\":2346:2455  function setSaleActive(bool saleIsActive) external onlyOwner {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_288\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_288:\n        /* \"contracts/Gluttony.sol\":2418:2432  IS_SALE_ACTIVE */\n      0x0e\n        /* \"contracts/Gluttony.sol\":2418:2447  IS_SALE_ACTIVE = saleIsActive */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Gluttony.sol\":2346:2455  function setSaleActive(bool saleIsActive) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Gluttony.sol\":2463:2617  function setFreeMintAllowedUntil(uint256 freeMintIsAllowedUntil) external onlyOwner {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_291\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_291:\n        /* \"contracts/Gluttony.sol\":2558:2584  FREE_MINT_IS_ALLOWED_UNTIL */\n      0x0f\n        /* \"contracts/Gluttony.sol\":2558:2609  FREE_MINT_IS_ALLOWED_UNTIL = freeMintIsAllowedUntil */\n      sstore\n        /* \"contracts/Gluttony.sol\":2463:2617  function setFreeMintAllowedUntil(uint256 freeMintIsAllowedUntil) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Gluttony.sol\":1524:1620  function setPrice(uint256 customPrice) external onlyOwner {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_295\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_295:\n        /* \"contracts/Gluttony.sol\":1593:1598  PRICE */\n      0x09\n        /* \"contracts/Gluttony.sol\":1593:1612  PRICE = customPrice */\n      sstore\n        /* \"contracts/Gluttony.sol\":1524:1620  function setPrice(uint256 customPrice) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":4233:4337  function symbol() public view virtual override returns (string memory) {... */\n    tag_155:\n        /* \"contracts/ERC721A.sol\":4289:4302  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":4322:4329  _symbol */\n      0x02\n        /* \"contracts/ERC721A.sol\":4315:4329  return _symbol */\n      dup1\n      sload\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n        /* \"contracts/Gluttony.sol\":2996:3875  function mint(uint256 _mintAmount) public payable mintCompliance(_mintAmount) {... */\n    tag_159:\n        /* \"contracts/Gluttony.sol\":3061:3072  _mintAmount */\n      dup1\n        /* \"contracts/Gluttony.sol\":2817:2818  0 */\n      0x00\n        /* \"contracts/Gluttony.sol\":2803:2814  _mintAmount */\n      dup2\n        /* \"contracts/Gluttony.sol\":2803:2818  _mintAmount > 0 */\n      gt\n        /* \"contracts/Gluttony.sol\":2803:2859  _mintAmount > 0 && _mintAmount <= MAX_MINT_AMOUNT_PER_TX */\n      dup1\n      iszero\n      tag_304\n      jumpi\n      pop\n        /* \"contracts/Gluttony.sol\":2837:2859  MAX_MINT_AMOUNT_PER_TX */\n      sload(0x0d)\n        /* \"contracts/Gluttony.sol\":2822:2833  _mintAmount */\n      dup2\n        /* \"contracts/Gluttony.sol\":2822:2859  _mintAmount <= MAX_MINT_AMOUNT_PER_TX */\n      gt\n      iszero\n        /* \"contracts/Gluttony.sol\":2803:2859  _mintAmount > 0 && _mintAmount <= MAX_MINT_AMOUNT_PER_TX */\n    tag_304:\n        /* \"contracts/Gluttony.sol\":2795:2884  require(_mintAmount > 0 && _mintAmount <= MAX_MINT_AMOUNT_PER_TX, \"Invalid mint amount!\") */\n      tag_305\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7845:7847   */\n      0x20\n        /* \"contracts/Gluttony.sol\":2795:2884  require(_mintAmount > 0 && _mintAmount <= MAX_MINT_AMOUNT_PER_TX, \"Invalid mint amount!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7827:7848   */\n      mstore\n        /* \"#utility.yul\":7884:7886   */\n      0x14\n        /* \"#utility.yul\":7864:7882   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7857:7887   */\n      mstore\n      shl(0x60, 0x496e76616c6964206d696e7420616d6f756e7421)\n        /* \"#utility.yul\":7903:7921   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7896:7946   */\n      mstore\n        /* \"#utility.yul\":7963:7981   */\n      0x64\n      add\n        /* \"contracts/Gluttony.sol\":2795:2884  require(_mintAmount > 0 && _mintAmount <= MAX_MINT_AMOUNT_PER_TX, \"Invalid mint amount!\") */\n      tag_216\n        /* \"#utility.yul\":7643:7987   */\n      jump\n        /* \"contracts/Gluttony.sol\":2795:2884  require(_mintAmount > 0 && _mintAmount <= MAX_MINT_AMOUNT_PER_TX, \"Invalid mint amount!\") */\n    tag_305:\n        /* \"contracts/Gluttony.sol\":2933:2943  MAX_SUPPLY */\n      sload(0x0a)\n        /* \"contracts/Gluttony.sol\":2918:2929  _mintAmount */\n      dup2\n        /* \"contracts/Gluttony.sol\":2903:2915  currentIndex */\n      sload(0x00)\n        /* \"contracts/Gluttony.sol\":2903:2929  currentIndex + _mintAmount */\n      tag_307\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_307:\n        /* \"contracts/Gluttony.sol\":2903:2943  currentIndex + _mintAmount <= MAX_SUPPLY */\n      gt\n      iszero\n        /* \"contracts/Gluttony.sol\":2895:2968  require(currentIndex + _mintAmount <= MAX_SUPPLY, \"Max supply exceeded!\") */\n      tag_308\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8456:8458   */\n      0x20\n        /* \"contracts/Gluttony.sol\":2895:2968  require(currentIndex + _mintAmount <= MAX_SUPPLY, \"Max supply exceeded!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8438:8459   */\n      mstore\n        /* \"#utility.yul\":8495:8497   */\n      0x14\n        /* \"#utility.yul\":8475:8493   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8468:8498   */\n      mstore\n      shl(0x60, 0x4d617820737570706c7920657863656564656421)\n        /* \"#utility.yul\":8514:8532   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8507:8557   */\n      mstore\n        /* \"#utility.yul\":8574:8592   */\n      0x64\n      add\n        /* \"contracts/Gluttony.sol\":2895:2968  require(currentIndex + _mintAmount <= MAX_SUPPLY, \"Max supply exceeded!\") */\n      tag_216\n        /* \"#utility.yul\":8254:8598   */\n      jump\n        /* \"contracts/Gluttony.sol\":2895:2968  require(currentIndex + _mintAmount <= MAX_SUPPLY, \"Max supply exceeded!\") */\n    tag_308:\n        /* \"contracts/Gluttony.sol\":3093:3107  IS_SALE_ACTIVE */\n      and(0xff, sload(0x0e))\n        /* \"contracts/Gluttony.sol\":3085:3131  require(IS_SALE_ACTIVE, \"Sale is not active!\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11766:11768   */\n      0x20\n        /* \"contracts/Gluttony.sol\":3085:3131  require(IS_SALE_ACTIVE, \"Sale is not active!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11748:11769   */\n      mstore\n        /* \"#utility.yul\":11805:11807   */\n      0x13\n        /* \"#utility.yul\":11785:11803   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11778:11808   */\n      mstore\n      shl(0x68, 0x53616c65206973206e6f742061637469766521)\n        /* \"#utility.yul\":11824:11842   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11817:11866   */\n      mstore\n        /* \"#utility.yul\":11883:11901   */\n      0x64\n      add\n        /* \"contracts/Gluttony.sol\":3085:3131  require(IS_SALE_ACTIVE, \"Sale is not active!\") */\n      tag_216\n        /* \"#utility.yul\":11564:11907   */\n      jump\n        /* \"contracts/Gluttony.sol\":3085:3131  require(IS_SALE_ACTIVE, \"Sale is not active!\") */\n    tag_311:\n        /* \"contracts/Gluttony.sol\":3144:3157  uint256 price */\n      0x00\n        /* \"contracts/Gluttony.sol\":3168:3179  _mintAmount */\n      dup3\n        /* \"contracts/Gluttony.sol\":3160:3165  PRICE */\n      sload(0x09)\n        /* \"contracts/Gluttony.sol\":3160:3179  PRICE * _mintAmount */\n      tag_314\n      swap2\n      swap1\n      tag_315\n      jump\t// in\n    tag_314:\n        /* \"contracts/Gluttony.sol\":3144:3179  uint256 price = PRICE * _mintAmount */\n      swap1\n      pop\n        /* \"contracts/Gluttony.sol\":3211:3237  FREE_MINT_IS_ALLOWED_UNTIL */\n      sload(0x0f)\n        /* \"contracts/Gluttony.sol\":3196:3208  currentIndex */\n      sload(0x00)\n        /* \"contracts/Gluttony.sol\":3196:3237  currentIndex < FREE_MINT_IS_ALLOWED_UNTIL */\n      lt\n        /* \"contracts/Gluttony.sol\":3192:3758  if (currentIndex < FREE_MINT_IS_ALLOWED_UNTIL) {... */\n      iszero\n      tag_316\n      jumpi\n        /* \"contracts/Gluttony.sol\":3328:3338  msg.sender */\n      caller\n        /* \"contracts/Gluttony.sol\":3254:3279  uint256 remainingFreeMint */\n      0x00\n        /* \"contracts/Gluttony.sol\":3311:3339  freeMintCountMap[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Gluttony.sol\":3311:3327  freeMintCountMap */\n      0x11\n        /* \"contracts/Gluttony.sol\":3311:3339  freeMintCountMap[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Gluttony.sol\":3282:3308  FREE_MINT_LIMIT_PER_WALLET */\n      sload(0x0c)\n        /* \"contracts/Gluttony.sol\":3282:3339  FREE_MINT_LIMIT_PER_WALLET - freeMintCountMap[msg.sender] */\n      tag_317\n      swap2\n        /* \"contracts/Gluttony.sol\":3311:3339  freeMintCountMap[msg.sender] */\n      swap1\n        /* \"contracts/Gluttony.sol\":3282:3339  FREE_MINT_LIMIT_PER_WALLET - freeMintCountMap[msg.sender] */\n      tag_318\n      jump\t// in\n    tag_317:\n        /* \"contracts/Gluttony.sol\":3254:3339  uint256 remainingFreeMint = FREE_MINT_LIMIT_PER_WALLET - freeMintCountMap[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Gluttony.sol\":3358:3379  remainingFreeMint > 0 */\n      dup1\n      iszero\n        /* \"contracts/Gluttony.sol\":3354:3747  if (remainingFreeMint > 0) {... */\n      tag_328\n      jumpi\n        /* \"contracts/Gluttony.sol\":3419:3436  remainingFreeMint */\n      dup1\n        /* \"contracts/Gluttony.sol\":3404:3415  _mintAmount */\n      dup5\n        /* \"contracts/Gluttony.sol\":3404:3436  _mintAmount >= remainingFreeMint */\n      lt\n        /* \"contracts/Gluttony.sol\":3400:3732  if (_mintAmount >= remainingFreeMint) {... */\n      tag_320\n      jumpi\n        /* \"contracts/Gluttony.sol\":3490:3495  PRICE */\n      sload(0x09)\n        /* \"contracts/Gluttony.sol\":3470:3495  remainingFreeMint * PRICE */\n      tag_321\n      swap1\n        /* \"contracts/Gluttony.sol\":3470:3487  remainingFreeMint */\n      dup3\n        /* \"contracts/Gluttony.sol\":3470:3495  remainingFreeMint * PRICE */\n      tag_315\n      jump\t// in\n    tag_321:\n        /* \"contracts/Gluttony.sol\":3461:3495  price -= remainingFreeMint * PRICE */\n      tag_322\n      swap1\n      dup4\n      tag_318\n      jump\t// in\n    tag_322:\n      swap2\n      pop\n        /* \"contracts/Gluttony.sol\":3518:3568  updateFreeMintCount(msg.sender, remainingFreeMint) */\n      tag_323\n        /* \"contracts/Gluttony.sol\":3538:3548  msg.sender */\n      caller\n        /* \"contracts/Gluttony.sol\":3550:3567  remainingFreeMint */\n      dup3\n        /* \"contracts/Gluttony.sol\":3518:3537  updateFreeMintCount */\n      tag_324\n        /* \"contracts/Gluttony.sol\":3518:3568  updateFreeMintCount(msg.sender, remainingFreeMint) */\n      jump\t// in\n    tag_323:\n        /* \"contracts/Gluttony.sol\":3400:3732  if (_mintAmount >= remainingFreeMint) {... */\n      jump(tag_328)\n    tag_320:\n        /* \"contracts/Gluttony.sol\":3640:3645  PRICE */\n      sload(0x09)\n        /* \"contracts/Gluttony.sol\":3626:3645  _mintAmount * PRICE */\n      tag_326\n      swap1\n        /* \"contracts/Gluttony.sol\":3626:3637  _mintAmount */\n      dup6\n        /* \"contracts/Gluttony.sol\":3626:3645  _mintAmount * PRICE */\n      tag_315\n      jump\t// in\n    tag_326:\n        /* \"contracts/Gluttony.sol\":3617:3645  price -= _mintAmount * PRICE */\n      tag_327\n      swap1\n      dup4\n      tag_318\n      jump\t// in\n    tag_327:\n      swap2\n      pop\n        /* \"contracts/Gluttony.sol\":3668:3712  updateFreeMintCount(msg.sender, _mintAmount) */\n      tag_328\n        /* \"contracts/Gluttony.sol\":3688:3698  msg.sender */\n      caller\n        /* \"contracts/Gluttony.sol\":3700:3711  _mintAmount */\n      dup6\n        /* \"contracts/Gluttony.sol\":3668:3687  updateFreeMintCount */\n      tag_324\n        /* \"contracts/Gluttony.sol\":3668:3712  updateFreeMintCount(msg.sender, _mintAmount) */\n      jump\t// in\n    tag_328:\n        /* \"contracts/Gluttony.sol\":3239:3758  {... */\n      pop\n        /* \"contracts/Gluttony.sol\":3192:3758  if (currentIndex < FREE_MINT_IS_ALLOWED_UNTIL) {... */\n    tag_316:\n        /* \"contracts/Gluttony.sol\":3791:3796  price */\n      dup1\n        /* \"contracts/Gluttony.sol\":3778:3787  msg.value */\n      callvalue\n        /* \"contracts/Gluttony.sol\":3778:3796  msg.value >= price */\n      lt\n      iszero\n        /* \"contracts/Gluttony.sol\":3770:3820  require(msg.value >= price, \"Insufficient funds!\") */\n      tag_329\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12420:12422   */\n      0x20\n        /* \"contracts/Gluttony.sol\":3770:3820  require(msg.value >= price, \"Insufficient funds!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12402:12423   */\n      mstore\n        /* \"#utility.yul\":12459:12461   */\n      0x13\n        /* \"#utility.yul\":12439:12457   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12432:12462   */\n      mstore\n      shl(0x68, 0x496e73756666696369656e742066756e647321)\n        /* \"#utility.yul\":12478:12496   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12471:12520   */\n      mstore\n        /* \"#utility.yul\":12537:12555   */\n      0x64\n      add\n        /* \"contracts/Gluttony.sol\":3770:3820  require(msg.value >= price, \"Insufficient funds!\") */\n      tag_216\n        /* \"#utility.yul\":12218:12561   */\n      jump\n        /* \"contracts/Gluttony.sol\":3770:3820  require(msg.value >= price, \"Insufficient funds!\") */\n    tag_329:\n        /* \"contracts/Gluttony.sol\":3833:3867  _safeMint(msg.sender, _mintAmount) */\n      tag_231\n        /* \"contracts/Gluttony.sol\":3843:3853  msg.sender */\n      caller\n        /* \"contracts/Gluttony.sol\":3855:3866  _mintAmount */\n      dup5\n        /* \"contracts/Gluttony.sol\":3833:3842  _safeMint */\n      tag_261\n        /* \"contracts/Gluttony.sol\":3833:3867  _safeMint(msg.sender, _mintAmount) */\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":5912:6200  function setApprovalForAll(address operator, bool approved) public override {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":6007:6031  operator != _msgSender() */\n      dup4\n      and\n      sub\n        /* \"contracts/ERC721A.sol\":5999:6062  require(operator != _msgSender(), 'ERC721A: approve to caller') */\n      tag_335\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12768:12770   */\n      0x20\n        /* \"contracts/ERC721A.sol\":5999:6062  require(operator != _msgSender(), 'ERC721A: approve to caller') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12750:12771   */\n      mstore\n        /* \"#utility.yul\":12807:12809   */\n      0x1a\n        /* \"#utility.yul\":12787:12805   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12780:12810   */\n      mstore\n        /* \"#utility.yul\":12846:12874   */\n      0x455243373231413a20617070726f766520746f2063616c6c6572000000000000\n        /* \"#utility.yul\":12826:12844   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12819:12875   */\n      mstore\n        /* \"#utility.yul\":12892:12910   */\n      0x64\n      add\n        /* \"contracts/ERC721A.sol\":5999:6062  require(operator != _msgSender(), 'ERC721A: approve to caller') */\n      tag_216\n        /* \"#utility.yul\":12566:12916   */\n      jump\n        /* \"contracts/ERC721A.sol\":5999:6062  require(operator != _msgSender(), 'ERC721A: approve to caller') */\n    tag_335:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":6075:6107  _operatorApprovals[_msgSender()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":6075:6093  _operatorApprovals */\n      0x06\n        /* \"contracts/ERC721A.sol\":6075:6107  _operatorApprovals[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":6075:6117  _operatorApprovals[_msgSender()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":6075:6128  _operatorApprovals[_msgSender()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ERC721A.sol\":6144:6192  ApprovalForAll(_msgSender(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":6075:6117  _operatorApprovals[_msgSender()][operator] */\n      swap2\n      swap3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      swap2\n        /* \"contracts/ERC721A.sol\":6144:6192  ApprovalForAll(_msgSender(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"contracts/ERC721A.sol\":6144:6192  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC721A.sol\":5912:6200  function setApprovalForAll(address operator, bool approved) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Gluttony.sol\":2067:2208  function setFreeMintAllowance(uint256 freeMintAllowance) external onlyOwner {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_342\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_342:\n        /* \"contracts/Gluttony.sol\":2154:2180  FREE_MINT_LIMIT_PER_WALLET */\n      0x0c\n        /* \"contracts/Gluttony.sol\":2154:2200  FREE_MINT_LIMIT_PER_WALLET = freeMintAllowance */\n      sstore\n        /* \"contracts/Gluttony.sol\":2067:2208  function setFreeMintAllowance(uint256 freeMintAllowance) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":6983:7338  function safeTransferFrom(... */\n    tag_173:\n        /* \"contracts/ERC721A.sol\":7142:7170  _transfer(from, to, tokenId) */\n      tag_345\n        /* \"contracts/ERC721A.sol\":7152:7156  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":7158:7160  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":7162:7169  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":7142:7151  _transfer */\n      tag_236\n        /* \"contracts/ERC721A.sol\":7142:7170  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_345:\n        /* \"contracts/ERC721A.sol\":7203:7251  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_346\n        /* \"contracts/ERC721A.sol\":7226:7230  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":7232:7234  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":7236:7243  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":7245:7250  _data */\n      dup5\n        /* \"contracts/ERC721A.sol\":7203:7225  _checkOnERC721Received */\n      tag_347\n        /* \"contracts/ERC721A.sol\":7203:7251  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_346:\n        /* \"contracts/ERC721A.sol\":7181:7330  require(... */\n      tag_348\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_350\n      jump\t// in\n    tag_348:\n        /* \"contracts/ERC721A.sol\":6983:7338  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Gluttony.sol\":1628:1882  function lowerMaxSupply(uint256 newMaxSupply) external onlyOwner {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_352\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_352:\n        /* \"contracts/Gluttony.sol\":1727:1737  MAX_SUPPLY */\n      sload(0x0a)\n        /* \"contracts/Gluttony.sol\":1712:1724  newMaxSupply */\n      dup2\n        /* \"contracts/Gluttony.sol\":1712:1737  newMaxSupply < MAX_SUPPLY */\n      lt\n        /* \"contracts/Gluttony.sol\":1704:1764  require(newMaxSupply < MAX_SUPPLY, \"Invalid new max supply\") */\n      tag_354\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13543:13545   */\n      0x20\n        /* \"contracts/Gluttony.sol\":1704:1764  require(newMaxSupply < MAX_SUPPLY, \"Invalid new max supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13525:13546   */\n      mstore\n        /* \"#utility.yul\":13582:13584   */\n      0x16\n        /* \"#utility.yul\":13562:13580   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13555:13585   */\n      mstore\n      shl(0x50, 0x496e76616c6964206e6577206d617820737570706c79)\n        /* \"#utility.yul\":13601:13619   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13594:13646   */\n      mstore\n        /* \"#utility.yul\":13663:13681   */\n      0x64\n      add\n        /* \"contracts/Gluttony.sol\":1704:1764  require(newMaxSupply < MAX_SUPPLY, \"Invalid new max supply\") */\n      tag_216\n        /* \"#utility.yul\":13341:13687   */\n      jump\n        /* \"contracts/Gluttony.sol\":1704:1764  require(newMaxSupply < MAX_SUPPLY, \"Invalid new max supply\") */\n    tag_354:\n        /* \"contracts/Gluttony.sol\":1799:1811  currentIndex */\n      sload(0x00)\n        /* \"contracts/Gluttony.sol\":1783:1795  newMaxSupply */\n      dup2\n        /* \"contracts/Gluttony.sol\":1783:1811  newMaxSupply >= currentIndex */\n      lt\n      iszero\n        /* \"contracts/Gluttony.sol\":1775:1838  require(newMaxSupply >= currentIndex, \"Invalid new max supply\") */\n      tag_357\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13543:13545   */\n      0x20\n        /* \"contracts/Gluttony.sol\":1775:1838  require(newMaxSupply >= currentIndex, \"Invalid new max supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13525:13546   */\n      mstore\n        /* \"#utility.yul\":13582:13584   */\n      0x16\n        /* \"#utility.yul\":13562:13580   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13555:13585   */\n      mstore\n      shl(0x50, 0x496e76616c6964206e6577206d617820737570706c79)\n        /* \"#utility.yul\":13601:13619   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13594:13646   */\n      mstore\n        /* \"#utility.yul\":13663:13681   */\n      0x64\n      add\n        /* \"contracts/Gluttony.sol\":1775:1838  require(newMaxSupply >= currentIndex, \"Invalid new max supply\") */\n      tag_216\n        /* \"#utility.yul\":13341:13687   */\n      jump\n        /* \"contracts/Gluttony.sol\":1775:1838  require(newMaxSupply >= currentIndex, \"Invalid new max supply\") */\n    tag_357:\n        /* \"contracts/Gluttony.sol\":1849:1859  MAX_SUPPLY */\n      0x0a\n        /* \"contracts/Gluttony.sol\":1849:1874  MAX_SUPPLY = newMaxSupply */\n      sstore\n        /* \"contracts/Gluttony.sol\":1628:1882  function lowerMaxSupply(uint256 newMaxSupply) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":4408:4743  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_181:\n        /* \"contracts/ERC721A.sol\":4481:4494  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":4515:4531  _exists(tokenId) */\n      tag_360\n        /* \"contracts/ERC721A.sol\":4523:4530  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":7650:7654  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":7684:7696  currentIndex */\n      sload\n      gt\n        /* \"contracts/ERC721A.sol\":7674:7696  tokenId < currentIndex */\n      swap1\n        /* \"contracts/ERC721A.sol\":7593:7704  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      jump\n        /* \"contracts/ERC721A.sol\":4515:4531  _exists(tokenId) */\n    tag_360:\n        /* \"contracts/ERC721A.sol\":4507:4583  require(_exists(tokenId), 'ERC721Metadata: URI query for nonexistent token') */\n      tag_361\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13894:13896   */\n      0x20\n        /* \"contracts/ERC721A.sol\":4507:4583  require(_exists(tokenId), 'ERC721Metadata: URI query for nonexistent token') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13876:13897   */\n      mstore\n        /* \"#utility.yul\":13933:13935   */\n      0x2f\n        /* \"#utility.yul\":13913:13931   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13906:13936   */\n      mstore\n        /* \"#utility.yul\":13972:14006   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":13952:13970   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13945:14007   */\n      mstore\n      shl(0x89, 0x3732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":14023:14041   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14016:14061   */\n      mstore\n        /* \"#utility.yul\":14078:14097   */\n      0x84\n      add\n        /* \"contracts/ERC721A.sol\":4507:4583  require(_exists(tokenId), 'ERC721Metadata: URI query for nonexistent token') */\n      tag_216\n        /* \"#utility.yul\":13692:14103   */\n      jump\n        /* \"contracts/ERC721A.sol\":4507:4583  require(_exists(tokenId), 'ERC721Metadata: URI query for nonexistent token') */\n    tag_361:\n        /* \"contracts/ERC721A.sol\":4596:4617  string memory baseURI */\n      0x00\n        /* \"contracts/ERC721A.sol\":4620:4630  _baseURI() */\n      tag_364\n        /* \"contracts/ERC721A.sol\":4620:4628  _baseURI */\n      tag_365\n        /* \"contracts/ERC721A.sol\":4620:4630  _baseURI() */\n      jump\t// in\n    tag_364:\n        /* \"contracts/ERC721A.sol\":4596:4630  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":4654:4661  baseURI */\n      dup1\n        /* \"contracts/ERC721A.sol\":4648:4669  bytes(baseURI).length */\n      mload\n        /* \"contracts/ERC721A.sol\":4673:4674  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":4648:4674  bytes(baseURI).length != 0 */\n      sub\n        /* \"contracts/ERC721A.sol\":4648:4735  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n      tag_366\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_367)\n    tag_366:\n        /* \"contracts/ERC721A.sol\":4701:4708  baseURI */\n      dup1\n        /* \"contracts/ERC721A.sol\":4710:4728  tokenId.toString() */\n      tag_368\n        /* \"contracts/ERC721A.sol\":4710:4717  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":4710:4726  tokenId.toString */\n      tag_369\n        /* \"contracts/ERC721A.sol\":4710:4728  tokenId.toString() */\n      jump\t// in\n    tag_368:\n        /* \"contracts/ERC721A.sol\":4684:4729  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_370\n      swap3\n      swap2\n      swap1\n      tag_371\n      jump\t// in\n    tag_370:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ERC721A.sol\":4648:4735  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n    tag_367:\n        /* \"contracts/ERC721A.sol\":4641:4735  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n      swap4\n        /* \"contracts/ERC721A.sol\":4408:4743  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Gluttony.sol\":2625:2711  function freezeMetadata() external onlyOwner {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_373\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_373:\n        /* \"contracts/Gluttony.sol\":2681:2696  METADATA_FROZEN */\n      0x10\n        /* \"contracts/Gluttony.sol\":2681:2703  METADATA_FROZEN = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Gluttony.sol\":2699:2703  true */\n      0x01\n        /* \"contracts/Gluttony.sol\":2681:2703  METADATA_FROZEN = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/Gluttony.sol\":2625:2711  function freezeMetadata() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":6271:6435  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":6392:6417  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/ERC721A.sol\":6368:6372  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":6392:6417  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":6392:6410  _operatorApprovals */\n      0x06\n        /* \"contracts/ERC721A.sol\":6392:6417  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC721A.sol\":6392:6427  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":6271:6435  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_377\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_377:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_379\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14811:14813   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14793:14814   */\n      mstore\n        /* \"#utility.yul\":14850:14852   */\n      0x26\n        /* \"#utility.yul\":14830:14848   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14823:14853   */\n      mstore\n        /* \"#utility.yul\":14889:14923   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":14869:14887   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14862:14924   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":14940:14958   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14933:14969   */\n      mstore\n        /* \"#utility.yul\":14986:15005   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_216\n        /* \"#utility.yul\":14609:15011   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_379:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_382\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_286\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_382:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":12373:12569  function _approve(... */\n    tag_232:\n        /* \"contracts/ERC721A.sol\":12488:12512  _tokenApprovals[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":12488:12503  _tokenApprovals */\n      0x05\n        /* \"contracts/ERC721A.sol\":12488:12512  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ERC721A.sol\":12488:12517  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ERC721A.sol\":12533:12561  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"contracts/ERC721A.sol\":12488:12512  _tokenApprovals[tokenId] */\n      dup6\n      swap4\n        /* \"contracts/ERC721A.sol\":12533:12561  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"contracts/ERC721A.sol\":12373:12569  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":10321:12255  function _transfer(... */\n    tag_236:\n        /* \"contracts/ERC721A.sol\":10436:10471  TokenOwnership memory prevOwnership */\n      0x00\n        /* \"contracts/ERC721A.sol\":10474:10494  ownershipOf(tokenId) */\n      tag_388\n        /* \"contracts/ERC721A.sol\":10486:10493  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":10474:10485  ownershipOf */\n      tag_277\n        /* \"contracts/ERC721A.sol\":10474:10494  ownershipOf(tokenId) */\n      jump\t// in\n    tag_388:\n        /* \"contracts/ERC721A.sol\":10549:10567  prevOwnership.addr */\n      dup1\n      mload\n        /* \"contracts/ERC721A.sol\":10436:10494  TokenOwnership memory prevOwnership = ownershipOf(tokenId) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/ERC721A.sol\":10507:10529  bool isApprovedOrOwner */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":10533:10567  _msgSender() == prevOwnership.addr */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":10533:10567  _msgSender() == prevOwnership.addr */\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":10533:10616  _msgSender() == prevOwnership.addr ||... */\n      dup1\n      tag_390\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":10580:10600  getApproved(tokenId) */\n      tag_392\n        /* \"contracts/ERC721A.sol\":10592:10599  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":10580:10591  getApproved */\n      tag_60\n        /* \"contracts/ERC721A.sol\":10580:10600  getApproved(tokenId) */\n      jump\t// in\n    tag_392:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":10580:10616  getApproved(tokenId) == _msgSender() */\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":10533:10616  _msgSender() == prevOwnership.addr ||... */\n    tag_390:\n        /* \"contracts/ERC721A.sol\":10533:10679  _msgSender() == prevOwnership.addr ||... */\n      dup1\n      tag_394\n      jumpi\n      pop\n        /* \"contracts/ERC721A.sol\":10646:10664  prevOwnership.addr */\n      dup2\n      mload\n        /* \"contracts/ERC721A.sol\":10629:10679  isApprovedForAll(prevOwnership.addr, _msgSender()) */\n      tag_394\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":6271:6435  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_190\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":10629:10679  isApprovedForAll(prevOwnership.addr, _msgSender()) */\n    tag_394:\n        /* \"contracts/ERC721A.sol\":10507:10680  bool isApprovedOrOwner = (_msgSender() == prevOwnership.addr ||... */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":10701:10718  isApprovedOrOwner */\n      dup1\n        /* \"contracts/ERC721A.sol\":10693:10773  require(isApprovedOrOwner, 'ERC721A: transfer caller is not owner nor approved') */\n      tag_396\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15218:15220   */\n      0x20\n        /* \"contracts/ERC721A.sol\":10693:10773  require(isApprovedOrOwner, 'ERC721A: transfer caller is not owner nor approved') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15200:15221   */\n      mstore\n        /* \"#utility.yul\":15257:15259   */\n      0x32\n        /* \"#utility.yul\":15237:15255   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15230:15260   */\n      mstore\n        /* \"#utility.yul\":15296:15330   */\n      0x455243373231413a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":15276:15294   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15269:15331   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":15347:15365   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15340:15388   */\n      mstore\n        /* \"#utility.yul\":15405:15424   */\n      0x84\n      add\n        /* \"contracts/ERC721A.sol\":10693:10773  require(isApprovedOrOwner, 'ERC721A: transfer caller is not owner nor approved') */\n      tag_216\n        /* \"#utility.yul\":15016:15430   */\n      jump\n        /* \"contracts/ERC721A.sol\":10693:10773  require(isApprovedOrOwner, 'ERC721A: transfer caller is not owner nor approved') */\n    tag_396:\n        /* \"contracts/ERC721A.sol\":10816:10820  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":10794:10820  prevOwnership.addr == from */\n      and\n        /* \"contracts/ERC721A.sol\":10794:10807  prevOwnership */\n      dup3\n        /* \"contracts/ERC721A.sol\":10794:10812  prevOwnership.addr */\n      0x00\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":10794:10820  prevOwnership.addr == from */\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":10786:10863  require(prevOwnership.addr == from, 'ERC721A: transfer from incorrect owner') */\n      tag_399\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15637:15639   */\n      0x20\n        /* \"contracts/ERC721A.sol\":10786:10863  require(prevOwnership.addr == from, 'ERC721A: transfer from incorrect owner') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15619:15640   */\n      mstore\n        /* \"#utility.yul\":15676:15678   */\n      0x26\n        /* \"#utility.yul\":15656:15674   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15649:15679   */\n      mstore\n        /* \"#utility.yul\":15715:15749   */\n      0x455243373231413a207472616e736665722066726f6d20696e636f7272656374\n        /* \"#utility.yul\":15695:15713   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15688:15750   */\n      mstore\n      shl(0xd1, 0x1037bbb732b9)\n        /* \"#utility.yul\":15766:15784   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15759:15795   */\n      mstore\n        /* \"#utility.yul\":15812:15831   */\n      0x84\n      add\n        /* \"contracts/ERC721A.sol\":10786:10863  require(prevOwnership.addr == from, 'ERC721A: transfer from incorrect owner') */\n      tag_216\n        /* \"#utility.yul\":15435:15837   */\n      jump\n        /* \"contracts/ERC721A.sol\":10786:10863  require(prevOwnership.addr == from, 'ERC721A: transfer from incorrect owner') */\n    tag_399:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":10882:10898  to != address(0) */\n      dup5\n      and\n        /* \"contracts/ERC721A.sol\":10874:10940  require(to != address(0), 'ERC721A: transfer to the zero address') */\n      tag_402\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16044:16046   */\n      0x20\n        /* \"contracts/ERC721A.sol\":10874:10940  require(to != address(0), 'ERC721A: transfer to the zero address') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16026:16047   */\n      mstore\n        /* \"#utility.yul\":16083:16085   */\n      0x25\n        /* \"#utility.yul\":16063:16081   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16056:16086   */\n      mstore\n        /* \"#utility.yul\":16122:16156   */\n      0x455243373231413a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":16102:16120   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16095:16157   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":16173:16191   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16166:16201   */\n      mstore\n        /* \"#utility.yul\":16218:16237   */\n      0x84\n      add\n        /* \"contracts/ERC721A.sol\":10874:10940  require(to != address(0), 'ERC721A: transfer to the zero address') */\n      tag_216\n        /* \"#utility.yul\":15842:16243   */\n      jump\n        /* \"contracts/ERC721A.sol\":10874:10940  require(to != address(0), 'ERC721A: transfer to the zero address') */\n    tag_402:\n        /* \"contracts/ERC721A.sol\":11061:11110  _approve(address(0), tokenId, prevOwnership.addr) */\n      tag_407\n        /* \"contracts/ERC721A.sol\":11078:11079  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":11082:11089  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":11091:11104  prevOwnership */\n      dup5\n        /* \"contracts/ERC721A.sol\":11091:11109  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":11061:11069  _approve */\n      tag_232\n        /* \"contracts/ERC721A.sol\":11061:11110  _approve(address(0), tokenId, prevOwnership.addr) */\n      jump\t// in\n    tag_407:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":11398:11416  _addressData[from] */\n      dup6\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":11398:11410  _addressData */\n      0x04\n        /* \"contracts/ERC721A.sol\":11398:11416  _addressData[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC721A.sol\":11398:11429  _addressData[from].balance -= 1 */\n      dup1\n      sload\n      not(sub(shl(0x80, 0x01), 0x01))\n      dup1\n      dup3\n      and\n      sub(shl(0x80, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      not(0x00)\n      add\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ERC721A.sol\":11440:11456  _addressData[to] */\n      dup10\n      dup7\n      and\n      dup1\n      dup7\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"contracts/ERC721A.sol\":11440:11469  _addressData[to].balance += 1 */\n      dup1\n      sload\n      swap4\n      dup5\n      and\n      swap4\n      dup4\n      and\n      0x01\n      swap1\n      dup2\n      add\n      swap1\n      swap4\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ERC721A.sol\":11482:11502  _ownerships[tokenId] */\n      dup9\n      dup6\n      mstore\n        /* \"contracts/ERC721A.sol\":11482:11493  _ownerships */\n      0x03\n        /* \"contracts/ERC721A.sol\":11482:11502  _ownerships[tokenId] */\n      swap1\n      swap4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/ERC721A.sol\":11482:11512  _ownerships[tokenId].addr = to */\n      dup1\n      sload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":11523:11584  _ownerships[tokenId].startTimestamp = uint64(block.timestamp) */\n      and\n      swap1\n      swap2\n      or\n      shl(0xa0, 0x01)\n        /* \"contracts/ERC721A.sol\":11568:11583  block.timestamp */\n      timestamp\n        /* \"contracts/ERC721A.sol\":11523:11584  _ownerships[tokenId].startTimestamp = uint64(block.timestamp) */\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":11846:11857  tokenId + 1 */\n      swap1\n      dup7\n      add\n        /* \"contracts/ERC721A.sol\":11872:11896  _ownerships[nextTokenId] */\n      dup1\n      dup4\n      mstore\n      swap2\n      keccak256\n        /* \"contracts/ERC721A.sol\":11872:11901  _ownerships[nextTokenId].addr */\n      sload\n        /* \"contracts/ERC721A.sol\":11846:11857  tokenId + 1 */\n      swap1\n      swap2\n        /* \"contracts/ERC721A.sol\":11872:11901  _ownerships[nextTokenId].addr */\n      and\n        /* \"contracts/ERC721A.sol\":11868:12143  if (_ownerships[nextTokenId].addr == address(0)) {... */\n      tag_410\n      jumpi\n        /* \"contracts/ERC721A.sol\":11936:11956  _exists(nextTokenId) */\n      tag_409\n        /* \"contracts/ERC721A.sol\":11944:11955  nextTokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":7650:7654  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":7684:7696  currentIndex */\n      sload\n      gt\n        /* \"contracts/ERC721A.sol\":7674:7696  tokenId < currentIndex */\n      swap1\n        /* \"contracts/ERC721A.sol\":7593:7704  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      jump\n        /* \"contracts/ERC721A.sol\":11936:11956  _exists(nextTokenId) */\n    tag_409:\n        /* \"contracts/ERC721A.sol\":11932:12132  if (_exists(nextTokenId)) {... */\n      iszero\n      tag_410\n      jumpi\n        /* \"contracts/ERC721A.sol\":12009:12027  prevOwnership.addr */\n      dup3\n      mload\n      0x00\n        /* \"contracts/ERC721A.sol\":11977:12001  _ownerships[nextTokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":11977:11988  _ownerships */\n      0x03\n        /* \"contracts/ERC721A.sol\":11977:12001  _ownerships[nextTokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/ERC721A.sol\":11977:12027  _ownerships[nextTokenId].addr = prevOwnership.addr */\n      dup1\n      sload\n        /* \"contracts/ERC721A.sol\":12088:12116  prevOwnership.startTimestamp */\n      swap2\n      dup7\n      add\n      mload\n        /* \"contracts/ERC721A.sol\":12046:12116  _ownerships[nextTokenId].startTimestamp = prevOwnership.startTimestamp */\n      0xffffffffffffffff\n      and\n      shl(0xa0, 0x01)\n      mul\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap3\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":11977:12027  _ownerships[nextTokenId].addr = prevOwnership.addr */\n      swap1\n      swap4\n      and\n        /* \"contracts/ERC721A.sol\":12046:12116  _ownerships[nextTokenId].startTimestamp = prevOwnership.startTimestamp */\n      swap3\n      swap1\n      swap3\n      or\n      or\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":11932:12132  if (_exists(nextTokenId)) {... */\n    tag_410:\n        /* \"contracts/ERC721A.sol\":11377:12150  unchecked {... */\n      pop\n        /* \"contracts/ERC721A.sol\":12186:12193  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":12182:12184  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":12167:12194  Transfer(from, to, tokenId) */\n      and\n        /* \"contracts/ERC721A.sol\":12176:12180  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":12167:12194  Transfer(from, to, tokenId) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC721A.sol\":12205:12247  _afterTokenTransfers(from, to, tokenId, 1) */\n    tag_411:\n        /* \"contracts/ERC721A.sol\":10425:12255  {... */\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":10321:12255  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16450:16452   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16432:16453   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":16469:16487   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16462:16492   */\n      mstore\n        /* \"#utility.yul\":16528:16562   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":16508:16526   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16501:16563   */\n      mstore\n        /* \"#utility.yul\":16580:16598   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_216\n        /* \"#utility.yul\":16248:16604   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2412:2724  function sendValue(address payable recipient, uint256 amount) internal {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2526:2532  amount */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2501:2522  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2501:2532  address(this).balance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2493:2566  require(address(this).balance >= amount, \"Address: insufficient balance\") */\n      tag_420\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16811:16813   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2493:2566  require(address(this).balance >= amount, \"Address: insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16793:16814   */\n      mstore\n        /* \"#utility.yul\":16850:16852   */\n      0x1d\n        /* \"#utility.yul\":16830:16848   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16823:16853   */\n      mstore\n        /* \"#utility.yul\":16889:16920   */\n      0x416464726573733a20696e73756666696369656e742062616c616e6365000000\n        /* \"#utility.yul\":16869:16887   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16862:16921   */\n      mstore\n        /* \"#utility.yul\":16938:16956   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2493:2566  require(address(this).balance >= amount, \"Address: insufficient balance\") */\n      tag_216\n        /* \"#utility.yul\":16609:16962   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2493:2566  require(address(this).balance >= amount, \"Address: insufficient balance\") */\n    tag_420:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2578:2590  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2596:2605  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2596:2610  recipient.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2618:2624  amount */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2596:2629  recipient.call{value: amount}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_427\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_426)\n    tag_427:\n      0x60\n      swap2\n      pop\n    tag_426:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2577:2629  (bool success, ) = recipient.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2647:2654  success */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2639:2717  require(success, \"Address: unable to send value, recipient may have reverted\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17379:17381   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2639:2717  require(success, \"Address: unable to send value, recipient may have reverted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17361:17382   */\n      mstore\n        /* \"#utility.yul\":17418:17420   */\n      0x3a\n        /* \"#utility.yul\":17398:17416   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17391:17421   */\n      mstore\n        /* \"#utility.yul\":17457:17491   */\n      0x416464726573733a20756e61626c6520746f2073656e642076616c75652c2072\n        /* \"#utility.yul\":17437:17455   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17430:17492   */\n      mstore\n        /* \"#utility.yul\":17528:17556   */\n      0x6563697069656e74206d61792068617665207265766572746564000000000000\n        /* \"#utility.yul\":17508:17526   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17501:17557   */\n      mstore\n        /* \"#utility.yul\":17574:17593   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2639:2717  require(success, \"Address: unable to send value, recipient may have reverted\") */\n      tag_216\n        /* \"#utility.yul\":17177:17599   */\n      jump\n        /* \"contracts/ERC721A.sol\":7712:7816  function _safeMint(address to, uint256 quantity) internal {... */\n    tag_261:\n        /* \"contracts/ERC721A.sol\":7781:7808  _safeMint(to, quantity, '') */\n      tag_270\n        /* \"contracts/ERC721A.sol\":7791:7793  to */\n      dup3\n        /* \"contracts/ERC721A.sol\":7795:7803  quantity */\n      dup3\n        /* \"contracts/ERC721A.sol\":7781:7808  _safeMint(to, quantity, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC721A.sol\":7781:7790  _safeMint */\n      tag_433\n        /* \"contracts/ERC721A.sol\":7781:7808  _safeMint(to, quantity, '') */\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":3306:3811  function ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_277:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/ERC721A.sol\":3409:3425  _exists(tokenId) */\n      tag_437\n        /* \"contracts/ERC721A.sol\":3417:3424  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":7650:7654  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":7684:7696  currentIndex */\n      sload\n      gt\n        /* \"contracts/ERC721A.sol\":7674:7696  tokenId < currentIndex */\n      swap1\n        /* \"contracts/ERC721A.sol\":7593:7704  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      jump\n        /* \"contracts/ERC721A.sol\":3409:3425  _exists(tokenId) */\n    tag_437:\n        /* \"contracts/ERC721A.sol\":3401:3472  require(_exists(tokenId), 'ERC721A: owner query for nonexistent token') */\n      tag_438\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17806:17808   */\n      0x20\n        /* \"contracts/ERC721A.sol\":3401:3472  require(_exists(tokenId), 'ERC721A: owner query for nonexistent token') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17788:17809   */\n      mstore\n        /* \"#utility.yul\":17845:17847   */\n      0x2a\n        /* \"#utility.yul\":17825:17843   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17818:17848   */\n      mstore\n        /* \"#utility.yul\":17884:17918   */\n      0x455243373231413a206f776e657220717565727920666f72206e6f6e65786973\n        /* \"#utility.yul\":17864:17882   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17857:17919   */\n      mstore\n      shl(0xb1, 0x3a32b73a103a37b5b2b7)\n        /* \"#utility.yul\":17935:17953   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17928:17968   */\n      mstore\n        /* \"#utility.yul\":17985:18004   */\n      0x84\n      add\n        /* \"contracts/ERC721A.sol\":3401:3472  require(_exists(tokenId), 'ERC721A: owner query for nonexistent token') */\n      tag_216\n        /* \"#utility.yul\":17604:18010   */\n      jump\n        /* \"contracts/ERC721A.sol\":3401:3472  require(_exists(tokenId), 'ERC721A: owner query for nonexistent token') */\n    tag_438:\n        /* \"contracts/ERC721A.sol\":3522:3529  tokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":3502:3727  for (uint256 curr = tokenId; curr >= 0; curr--) {... */\n    tag_441:\n        /* \"contracts/ERC721A.sol\":3565:3596  TokenOwnership memory ownership */\n      0x00\n        /* \"contracts/ERC721A.sol\":3599:3616  _ownerships[curr] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":3599:3610  _ownerships */\n      0x03\n        /* \"contracts/ERC721A.sol\":3599:3616  _ownerships[curr] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":3565:3616  TokenOwnership memory ownership = _ownerships[curr] */\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      swap1\n      swap4\n      mstore\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup1\n      dup5\n      mstore\n      shl(0xa0, 0x01)\n      swap1\n      swap2\n      div\n      0xffffffffffffffff\n      and\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/ERC721A.sol\":3635:3663  ownership.addr != address(0) */\n      iszero\n        /* \"contracts/ERC721A.sol\":3631:3716  if (ownership.addr != address(0)) {... */\n      tag_444\n      jumpi\n        /* \"contracts/ERC721A.sol\":3691:3700  ownership */\n      swap4\n        /* \"contracts/ERC721A.sol\":3306:3811  function ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":3631:3716  if (ownership.addr != address(0)) {... */\n    tag_444:\n      pop\n      not(0x00)\n        /* \"contracts/ERC721A.sol\":3542:3548  curr-- */\n      add\n        /* \"contracts/ERC721A.sol\":3502:3727  for (uint256 curr = tokenId; curr >= 0; curr--) {... */\n      jump(tag_441)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      0x07\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/Gluttony.sol\":1233:1353  function updateFreeMintCount(address minter, uint256 count) private {... */\n    tag_324:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gluttony.sol\":1312:1336  freeMintCountMap[minter] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Gluttony.sol\":1312:1328  freeMintCountMap */\n      0x11\n        /* \"contracts/Gluttony.sol\":1312:1336  freeMintCountMap[minter] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Gluttony.sol\":1312:1345  freeMintCountMap[minter] += count */\n      dup1\n      sload\n        /* \"contracts/Gluttony.sol\":1340:1345  count */\n      dup4\n      swap3\n        /* \"contracts/Gluttony.sol\":1312:1336  freeMintCountMap[minter] */\n      swap1\n        /* \"contracts/Gluttony.sol\":1312:1345  freeMintCountMap[minter] += count */\n      tag_449\n      swap1\n        /* \"contracts/Gluttony.sol\":1340:1345  count */\n      dup5\n      swap1\n        /* \"contracts/Gluttony.sol\":1312:1345  freeMintCountMap[minter] += count */\n      tag_253\n      jump\t// in\n    tag_449:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Gluttony.sol\":1233:1353  function updateFreeMintCount(address minter, uint256 count) private {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":13134:13938  function _checkOnERC721Received(... */\n    tag_347:\n        /* \"contracts/ERC721A.sol\":13289:13293  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":13310:13323  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"contracts/ERC721A.sol\":13306:13931  if (to.isContract()) {... */\n      tag_453\n      jumpi\n        /* \"contracts/ERC721A.sol\":13346:13418  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":13346:13382  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"contracts/ERC721A.sol\":13346:13418  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      tag_455\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"contracts/ERC721A.sol\":13397:13401  from */\n      dup10\n      swap1\n        /* \"contracts/ERC721A.sol\":13403:13410  tokenId */\n      dup9\n      swap1\n        /* \"contracts/ERC721A.sol\":13412:13417  _data */\n      dup9\n      swap1\n        /* \"contracts/ERC721A.sol\":13346:13418  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      0x04\n      add\n      tag_456\n      jump\t// in\n    tag_455:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_457\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_458\n      swap2\n      dup2\n      add\n      swap1\n      tag_459\n      jump\t// in\n    tag_458:\n      0x01\n    tag_457:\n        /* \"contracts/ERC721A.sol\":13342:13876  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_460\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_465\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_464)\n    tag_465:\n      0x60\n      swap2\n      pop\n    tag_464:\n      pop\n        /* \"contracts/ERC721A.sol\":13592:13598  reason */\n      dup1\n        /* \"contracts/ERC721A.sol\":13592:13605  reason.length */\n      mload\n        /* \"contracts/ERC721A.sol\":13609:13610  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":13592:13610  reason.length == 0 */\n      sub\n        /* \"contracts/ERC721A.sol\":13588:13861  if (reason.length == 0) {... */\n      tag_466\n      jumpi\n        /* \"contracts/ERC721A.sol\":13635:13696  revert('ERC721A: transfer to non ERC721Receiver implementer') */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_350\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":13588:13861  if (reason.length == 0) {... */\n    tag_466:\n        /* \"contracts/ERC721A.sol\":13811:13817  reason */\n      dup1\n        /* \"contracts/ERC721A.sol\":13805:13818  mload(reason) */\n      mload\n        /* \"contracts/ERC721A.sol\":13796:13802  reason */\n      dup2\n        /* \"contracts/ERC721A.sol\":13792:13794  32 */\n      0x20\n        /* \"contracts/ERC721A.sol\":13788:13803  add(32, reason) */\n      add\n        /* \"contracts/ERC721A.sol\":13781:13819  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/ERC721A.sol\":13342:13876  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_460:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":13469:13524  retval == IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":13462:13524  return retval == IERC721Receiver(to).onERC721Received.selector */\n      jump(tag_470)\n        /* \"contracts/ERC721A.sol\":13306:13931  if (to.isContract()) {... */\n    tag_453:\n      pop\n        /* \"contracts/ERC721A.sol\":13915:13919  true */\n      0x01\n        /* \"contracts/ERC721A.sol\":13306:13931  if (to.isContract()) {... */\n    tag_470:\n        /* \"contracts/ERC721A.sol\":13134:13938  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Gluttony.sol\":1384:1493  function _baseURI() internal view virtual override returns (string memory) {... */\n    tag_365:\n        /* \"contracts/Gluttony.sol\":1444:1457  string memory */\n      0x60\n        /* \"contracts/Gluttony.sol\":1477:1485  BASE_URI */\n      0x0b\n        /* \"contracts/Gluttony.sol\":1470:1485  return BASE_URI */\n      dup1\n      sload\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":392:1095  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_369:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":448:461  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":665:670  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":674:675  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":665:675  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":661:712  if (value == 0) {... */\n      tag_478\n      jumpi\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":691:701  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":392:1095  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":661:712  if (value == 0) {... */\n    tag_478:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":736:741  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":721:733  uint256 temp */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n    tag_479:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":782:791  temp != 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n      tag_480\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":807:815  digits++ */\n      dup1\n      tag_481\n      dup2\n      tag_482\n      jump\t// in\n    tag_481:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":829:839  temp /= 10 */\n      tag_483\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":837:839  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":829:839  temp /= 10 */\n      dup4\n      tag_484\n      jump\t// in\n    tag_483:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n      jump(tag_479)\n    tag_480:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":859:878  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":891:897  digits */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":881:898  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_486\n      jumpi\n      tag_486\n      tag_487\n      jump\t// in\n    tag_486:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_488\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_488:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":859:898  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n    tag_489:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":915:925  value != 0 */\n      dup5\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n      tag_470\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":941:952  digits -= 1 */\n      tag_491\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":951:952  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":941:952  digits -= 1 */\n      dup4\n      tag_318\n      jump\t// in\n    tag_491:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1019  value % 10 */\n      tag_492\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1019  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1014  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1019  value % 10 */\n      tag_493\n      jump\t// in\n    tag_492:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":996:1020  48 + uint256(value % 10) */\n      tag_494\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":996:998  48 */\n      0x30\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":996:1020  48 + uint256(value % 10) */\n      tag_253\n      jump\t// in\n    tag_494:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":983:1022  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:972  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":973:979  digits */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:980  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_496\n      jumpi\n      tag_496\n      tag_497\n      jump\t// in\n    tag_496:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:1022  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1036:1047  value /= 10 */\n      tag_498\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1045:1047  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1036:1047  value /= 10 */\n      dup7\n      tag_484\n      jump\t// in\n    tag_498:\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n      jump(tag_489)\n        /* \"contracts/ERC721A.sol\":8179:8342  function _safeMint(... */\n    tag_433:\n        /* \"contracts/ERC721A.sol\":8302:8334  _mint(to, quantity, _data, true) */\n      tag_231\n        /* \"contracts/ERC721A.sol\":8308:8310  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":8312:8320  quantity */\n      dup4\n        /* \"contracts/ERC721A.sol\":8322:8327  _data */\n      dup4\n        /* \"contracts/ERC721A.sol\":8329:8333  true */\n      0x01\n        /* \"contracts/ERC721A.sol\":8740:8760  uint256 startTokenId */\n      0x00\n        /* \"contracts/ERC721A.sol\":8763:8775  currentIndex */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":8794:8810  to != address(0) */\n      dup6\n      and\n        /* \"contracts/ERC721A.sol\":8786:8848  require(to != address(0), 'ERC721A: mint to the zero address') */\n      tag_506\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20027:20029   */\n      0x20\n        /* \"contracts/ERC721A.sol\":8786:8848  require(to != address(0), 'ERC721A: mint to the zero address') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20009:20030   */\n      mstore\n        /* \"#utility.yul\":20066:20068   */\n      0x21\n        /* \"#utility.yul\":20046:20064   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20039:20069   */\n      mstore\n        /* \"#utility.yul\":20105:20139   */\n      0x455243373231413a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":20085:20103   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20078:20140   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":20156:20174   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":20149:20180   */\n      mstore\n        /* \"#utility.yul\":20197:20216   */\n      0x84\n      add\n        /* \"contracts/ERC721A.sol\":8786:8848  require(to != address(0), 'ERC721A: mint to the zero address') */\n      tag_216\n        /* \"#utility.yul\":19825:20222   */\n      jump\n        /* \"contracts/ERC721A.sol\":8786:8848  require(to != address(0), 'ERC721A: mint to the zero address') */\n    tag_506:\n        /* \"contracts/ERC721A.sol\":8867:8875  quantity */\n      dup4\n        /* \"contracts/ERC721A.sol\":8879:8880  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":8867:8880  quantity != 0 */\n      sub\n        /* \"contracts/ERC721A.sol\":8859:8925  require(quantity != 0, 'ERC721A: quantity must be greater than 0') */\n      tag_509\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20429:20431   */\n      0x20\n        /* \"contracts/ERC721A.sol\":8859:8925  require(quantity != 0, 'ERC721A: quantity must be greater than 0') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20411:20432   */\n      mstore\n        /* \"#utility.yul\":20468:20470   */\n      0x28\n        /* \"#utility.yul\":20448:20466   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20441:20471   */\n      mstore\n        /* \"#utility.yul\":20507:20541   */\n      0x455243373231413a207175616e74697479206d75737420626520677265617465\n        /* \"#utility.yul\":20487:20505   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20480:20542   */\n      mstore\n      shl(0xc4, 0x072207468616e203)\n        /* \"#utility.yul\":20558:20576   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":20551:20589   */\n      mstore\n        /* \"#utility.yul\":20606:20625   */\n      0x84\n      add\n        /* \"contracts/ERC721A.sol\":8859:8925  require(quantity != 0, 'ERC721A: quantity must be greater than 0') */\n      tag_216\n        /* \"#utility.yul\":20227:20631   */\n      jump\n        /* \"contracts/ERC721A.sol\":8859:8925  require(quantity != 0, 'ERC721A: quantity must be greater than 0') */\n    tag_509:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":9269:9285  _addressData[to] */\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":9269:9281  _addressData */\n      0x04\n        /* \"contracts/ERC721A.sol\":9269:9285  _addressData[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC721A.sol\":9269:9314  _addressData[to].balance += uint128(quantity) */\n      dup1\n      sload\n      shl(0x80, 0x01)\n      not(sub(shl(0x80, 0x01), 0x01))\n      dup3\n      and\n      sub(shl(0x80, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      dup13\n      add\n      dup4\n      and\n      swap1\n      dup2\n      or\n        /* \"contracts/ERC721A.sol\":9325:9375  _addressData[to].numberMinted += uint128(quantity) */\n      dup3\n      swap1\n      div\n      dup4\n      and\n      dup13\n      add\n      swap1\n      swap3\n      and\n      mul\n      or\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":9388:9413  _ownerships[startTokenId] */\n      dup5\n      dup4\n      mstore\n        /* \"contracts/ERC721A.sol\":9388:9399  _ownerships */\n      0x03\n        /* \"contracts/ERC721A.sol\":9388:9413  _ownerships[startTokenId] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/ERC721A.sol\":9388:9423  _ownerships[startTokenId].addr = to */\n      dup1\n      sload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":9434:9500  _ownerships[startTokenId].startTimestamp = uint64(block.timestamp) */\n      and\n      swap1\n      swap3\n      or\n      shl(0xa0, 0x01)\n        /* \"contracts/ERC721A.sol\":9484:9499  block.timestamp */\n      timestamp\n        /* \"contracts/ERC721A.sol\":9434:9500  _ownerships[startTokenId].startTimestamp = uint64(block.timestamp) */\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ERC721A.sol\":9388:9413  _ownerships[startTokenId] */\n      dup2\n      swap1\n        /* \"contracts/ERC721A.sol\":9561:9940  for (uint256 i; i < quantity; i++) {... */\n    tag_513:\n        /* \"contracts/ERC721A.sol\":9581:9589  quantity */\n      dup6\n        /* \"contracts/ERC721A.sol\":9577:9578  i */\n      dup2\n        /* \"contracts/ERC721A.sol\":9577:9589  i < quantity */\n      lt\n        /* \"contracts/ERC721A.sol\":9561:9940  for (uint256 i; i < quantity; i++) {... */\n      iszero\n      tag_514\n      jumpi\n        /* \"contracts/ERC721A.sol\":9616:9654  Transfer(address(0), to, updatedIndex) */\n      mload(0x40)\n        /* \"contracts/ERC721A.sol\":9641:9653  updatedIndex */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":9616:9654  Transfer(address(0), to, updatedIndex) */\n      dup10\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":9633:9634  0 */\n      0x00\n      swap1\n        /* \"contracts/ERC721A.sol\":9616:9654  Transfer(address(0), to, updatedIndex) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"contracts/ERC721A.sol\":9633:9634  0 */\n      dup3\n      swap1\n        /* \"contracts/ERC721A.sol\":9616:9654  Transfer(address(0), to, updatedIndex) */\n      log4\n        /* \"contracts/ERC721A.sol\":9673:9677  safe */\n      dup4\n        /* \"contracts/ERC721A.sol\":9669:9898  if (safe) {... */\n      iszero\n      tag_518\n      jumpi\n        /* \"contracts/ERC721A.sol\":9728:9787  _checkOnERC721Received(address(0), to, updatedIndex, _data) */\n      tag_517\n        /* \"contracts/ERC721A.sol\":9759:9760  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":9763:9765  to */\n      dup9\n        /* \"contracts/ERC721A.sol\":9767:9779  updatedIndex */\n      dup5\n        /* \"contracts/ERC721A.sol\":9781:9786  _data */\n      dup9\n        /* \"contracts/ERC721A.sol\":9728:9750  _checkOnERC721Received */\n      tag_347\n        /* \"contracts/ERC721A.sol\":9728:9787  _checkOnERC721Received(address(0), to, updatedIndex, _data) */\n      jump\t// in\n    tag_517:\n        /* \"contracts/ERC721A.sol\":9698:9882  require(... */\n      tag_518\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_350\n      jump\t// in\n    tag_518:\n        /* \"contracts/ERC721A.sol\":9914:9928  updatedIndex++ */\n      0x01\n      swap2\n      dup3\n      add\n      swap2\n        /* \"contracts/ERC721A.sol\":9591:9594  i++ */\n      add\n        /* \"contracts/ERC721A.sol\":9561:9940  for (uint256 i; i < quantity; i++) {... */\n      jump(tag_513)\n    tag_514:\n      pop\n        /* \"contracts/ERC721A.sol\":9952:9964  currentIndex */\n      0x00\n        /* \"contracts/ERC721A.sol\":9952:9979  currentIndex = updatedIndex */\n      sstore\n        /* \"contracts/ERC721A.sol\":9999:10059  _afterTokenTransfers(address(0), to, startTokenId, quantity) */\n      tag_411\n        /* \"contracts/ERC721A.sol\":6983:7338  function safeTransferFrom(... */\n      jump\n        /* \"#utility.yul\":14:145   */\n    tag_521:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_47:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_536:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_367\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_521\n      jump\t// in\n        /* \"#utility.yul\":592:842   */\n    tag_522:\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":687:800   */\n    tag_540:\n        /* \"#utility.yul\":701:707   */\n      dup4\n        /* \"#utility.yul\":698:699   */\n      dup2\n        /* \"#utility.yul\":695:708   */\n      lt\n        /* \"#utility.yul\":687:800   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":777:788   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":771:789   */\n      mload\n        /* \"#utility.yul\":758:769   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":751:790   */\n      mstore\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":716:726   */\n      add\n        /* \"#utility.yul\":687:800   */\n      jump(tag_540)\n    tag_542:\n      pop\n      pop\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":816:832   */\n      swap2\n      add\n        /* \"#utility.yul\":809:836   */\n      mstore\n        /* \"#utility.yul\":592:842   */\n      jump\t// out\n        /* \"#utility.yul\":847:1118   */\n    tag_523:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":921:933   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:952   */\n      dup5\n        /* \"#utility.yul\":942:961   */\n      mstore\n        /* \"#utility.yul\":970:1046   */\n      tag_544\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1032:1036   */\n      0x20\n        /* \"#utility.yul\":1027:1030   */\n      dup7\n        /* \"#utility.yul\":1023:1037   */\n      add\n        /* \"#utility.yul\":1016:1020   */\n      0x20\n        /* \"#utility.yul\":1009:1014   */\n      dup7\n        /* \"#utility.yul\":1005:1021   */\n      add\n        /* \"#utility.yul\":970:1046   */\n      tag_522\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1107:1111   */\n      0x20\n        /* \"#utility.yul\":1062:1112   */\n      add\n      swap3\n        /* \"#utility.yul\":847:1118   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1343   */\n    tag_55:\n        /* \"#utility.yul\":1272:1274   */\n      0x20\n        /* \"#utility.yul\":1261:1270   */\n      dup2\n        /* \"#utility.yul\":1254:1275   */\n      mstore\n        /* \"#utility.yul\":1235:1239   */\n      0x00\n        /* \"#utility.yul\":1292:1337   */\n      tag_367\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"#utility.yul\":1310:1316   */\n      dup5\n        /* \"#utility.yul\":1292:1337   */\n      tag_523\n      jump\t// in\n        /* \"#utility.yul\":1348:1528   */\n    tag_59:\n        /* \"#utility.yul\":1407:1413   */\n      0x00\n        /* \"#utility.yul\":1460:1462   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1439:1446   */\n      dup5\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_548:\n      pop\n        /* \"#utility.yul\":1499:1522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1348:1528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1914   */\n    tag_524:\n        /* \"#utility.yul\":1809:1829   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1889   */\n      dup2\n      and\n        /* \"#utility.yul\":1848:1890   */\n      dup2\n      eq\n        /* \"#utility.yul\":1838:1908   */\n      tag_551\n      jumpi\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1838:1908   */\n    tag_551:\n        /* \"#utility.yul\":1741:1914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1919:2173   */\n    tag_66:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      dup1\n        /* \"#utility.yul\":2048:2050   */\n      0x40\n        /* \"#utility.yul\":2036:2045   */\n      dup4\n        /* \"#utility.yul\":2027:2034   */\n      dup6\n        /* \"#utility.yul\":2023:2046   */\n      sub\n        /* \"#utility.yul\":2019:2051   */\n      slt\n        /* \"#utility.yul\":2016:2068   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":2064:2065   */\n      0x00\n        /* \"#utility.yul\":2061:2062   */\n      dup1\n        /* \"#utility.yul\":2054:2066   */\n      revert\n        /* \"#utility.yul\":2016:2068   */\n    tag_553:\n        /* \"#utility.yul\":2087:2116   */\n      tag_554\n        /* \"#utility.yul\":2106:2115   */\n      dup4\n        /* \"#utility.yul\":2087:2116   */\n      tag_524\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":2077:2116   */\n      swap5\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2148:2166   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2135:2167   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1919:2173   */\n      jump\t// out\n        /* \"#utility.yul\":2360:2688   */\n    tag_84:\n        /* \"#utility.yul\":2437:2443   */\n      0x00\n        /* \"#utility.yul\":2445:2451   */\n      dup1\n        /* \"#utility.yul\":2453:2459   */\n      0x00\n        /* \"#utility.yul\":2506:2508   */\n      0x60\n        /* \"#utility.yul\":2494:2503   */\n      dup5\n        /* \"#utility.yul\":2485:2492   */\n      dup7\n        /* \"#utility.yul\":2481:2504   */\n      sub\n        /* \"#utility.yul\":2477:2509   */\n      slt\n        /* \"#utility.yul\":2474:2526   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":2522:2523   */\n      0x00\n        /* \"#utility.yul\":2519:2520   */\n      dup1\n        /* \"#utility.yul\":2512:2524   */\n      revert\n        /* \"#utility.yul\":2474:2526   */\n    tag_557:\n        /* \"#utility.yul\":2545:2574   */\n      tag_558\n        /* \"#utility.yul\":2564:2573   */\n      dup5\n        /* \"#utility.yul\":2545:2574   */\n      tag_524\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":2535:2574   */\n      swap3\n      pop\n        /* \"#utility.yul\":2593:2631   */\n      tag_559\n        /* \"#utility.yul\":2627:2629   */\n      0x20\n        /* \"#utility.yul\":2616:2625   */\n      dup6\n        /* \"#utility.yul\":2612:2630   */\n      add\n        /* \"#utility.yul\":2593:2631   */\n      tag_524\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":2583:2631   */\n      swap2\n      pop\n        /* \"#utility.yul\":2678:2680   */\n      0x40\n        /* \"#utility.yul\":2667:2676   */\n      dup5\n        /* \"#utility.yul\":2663:2681   */\n      add\n        /* \"#utility.yul\":2650:2682   */\n      calldataload\n        /* \"#utility.yul\":2640:2682   */\n      swap1\n      pop\n        /* \"#utility.yul\":2360:2688   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2693:2820   */\n    tag_487:\n        /* \"#utility.yul\":2754:2764   */\n      0x4e487b71\n        /* \"#utility.yul\":2749:2752   */\n      0xe0\n        /* \"#utility.yul\":2745:2765   */\n      shl\n        /* \"#utility.yul\":2742:2743   */\n      0x00\n        /* \"#utility.yul\":2735:2766   */\n      mstore\n        /* \"#utility.yul\":2785:2789   */\n      0x41\n        /* \"#utility.yul\":2782:2783   */\n      0x04\n        /* \"#utility.yul\":2775:2790   */\n      mstore\n        /* \"#utility.yul\":2809:2813   */\n      0x24\n        /* \"#utility.yul\":2806:2807   */\n      0x00\n        /* \"#utility.yul\":2799:2814   */\n      revert\n        /* \"#utility.yul\":2825:3457   */\n    tag_525:\n        /* \"#utility.yul\":2890:2895   */\n      0x00\n        /* \"#utility.yul\":2920:2938   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2961:2963   */\n      dup1\n        /* \"#utility.yul\":2953:2959   */\n      dup5\n        /* \"#utility.yul\":2950:2964   */\n      gt\n        /* \"#utility.yul\":2947:2987   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":2967:2985   */\n      tag_563\n      tag_487\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":3042:3044   */\n      0x40\n        /* \"#utility.yul\":3036:3045   */\n      mload\n        /* \"#utility.yul\":3010:3012   */\n      0x1f\n        /* \"#utility.yul\":3096:3111   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3092:3116   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3118:3120   */\n      0x3f\n        /* \"#utility.yul\":3088:3121   */\n      add\n        /* \"#utility.yul\":3084:3126   */\n      and\n        /* \"#utility.yul\":3072:3127   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3142:3160   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":3162:3184   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":3139:3185   */\n      or\n        /* \"#utility.yul\":3136:3208   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":3188:3206   */\n      tag_565\n      tag_487\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":3228:3238   */\n      dup2\n        /* \"#utility.yul\":3224:3226   */\n      0x40\n        /* \"#utility.yul\":3217:3239   */\n      mstore\n        /* \"#utility.yul\":3257:3263   */\n      dup1\n        /* \"#utility.yul\":3248:3263   */\n      swap4\n      pop\n        /* \"#utility.yul\":3287:3293   */\n      dup6\n        /* \"#utility.yul\":3279:3285   */\n      dup2\n        /* \"#utility.yul\":3272:3294   */\n      mstore\n        /* \"#utility.yul\":3327:3330   */\n      dup7\n        /* \"#utility.yul\":3318:3324   */\n      dup7\n        /* \"#utility.yul\":3313:3316   */\n      dup7\n        /* \"#utility.yul\":3309:3325   */\n      add\n        /* \"#utility.yul\":3306:3331   */\n      gt\n        /* \"#utility.yul\":3303:3348   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":3344:3345   */\n      0x00\n        /* \"#utility.yul\":3341:3342   */\n      dup1\n        /* \"#utility.yul\":3334:3346   */\n      revert\n        /* \"#utility.yul\":3303:3348   */\n    tag_566:\n        /* \"#utility.yul\":3394:3400   */\n      dup6\n        /* \"#utility.yul\":3389:3392   */\n      dup6\n        /* \"#utility.yul\":3382:3386   */\n      0x20\n        /* \"#utility.yul\":3374:3380   */\n      dup4\n        /* \"#utility.yul\":3370:3387   */\n      add\n        /* \"#utility.yul\":3357:3401   */\n      calldatacopy\n        /* \"#utility.yul\":3449:3450   */\n      0x00\n        /* \"#utility.yul\":3442:3446   */\n      0x20\n        /* \"#utility.yul\":3433:3439   */\n      dup8\n        /* \"#utility.yul\":3425:3431   */\n      dup4\n        /* \"#utility.yul\":3421:3440   */\n      add\n        /* \"#utility.yul\":3417:3447   */\n      add\n        /* \"#utility.yul\":3410:3451   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2825:3457   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3462:3913   */\n    tag_108:\n        /* \"#utility.yul\":3531:3537   */\n      0x00\n        /* \"#utility.yul\":3584:3586   */\n      0x20\n        /* \"#utility.yul\":3572:3581   */\n      dup3\n        /* \"#utility.yul\":3563:3570   */\n      dup5\n        /* \"#utility.yul\":3559:3582   */\n      sub\n        /* \"#utility.yul\":3555:3587   */\n      slt\n        /* \"#utility.yul\":3552:3604   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":3600:3601   */\n      0x00\n        /* \"#utility.yul\":3597:3598   */\n      dup1\n        /* \"#utility.yul\":3590:3602   */\n      revert\n        /* \"#utility.yul\":3552:3604   */\n    tag_568:\n        /* \"#utility.yul\":3640:3649   */\n      dup2\n        /* \"#utility.yul\":3627:3650   */\n      calldataload\n        /* \"#utility.yul\":3673:3691   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3665:3671   */\n      dup2\n        /* \"#utility.yul\":3662:3692   */\n      gt\n        /* \"#utility.yul\":3659:3709   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":3705:3706   */\n      0x00\n        /* \"#utility.yul\":3702:3703   */\n      dup1\n        /* \"#utility.yul\":3695:3707   */\n      revert\n        /* \"#utility.yul\":3659:3709   */\n    tag_569:\n        /* \"#utility.yul\":3728:3750   */\n      dup3\n      add\n        /* \"#utility.yul\":3781:3785   */\n      0x1f\n        /* \"#utility.yul\":3773:3786   */\n      dup2\n      add\n        /* \"#utility.yul\":3769:3796   */\n      dup5\n      sgt\n        /* \"#utility.yul\":3759:3814   */\n      tag_570\n      jumpi\n        /* \"#utility.yul\":3810:3811   */\n      0x00\n        /* \"#utility.yul\":3807:3808   */\n      dup1\n        /* \"#utility.yul\":3800:3812   */\n      revert\n        /* \"#utility.yul\":3759:3814   */\n    tag_570:\n        /* \"#utility.yul\":3833:3907   */\n      tag_470\n        /* \"#utility.yul\":3899:3906   */\n      dup5\n        /* \"#utility.yul\":3894:3896   */\n      dup3\n        /* \"#utility.yul\":3881:3897   */\n      calldataload\n        /* \"#utility.yul\":3876:3878   */\n      0x20\n        /* \"#utility.yul\":3872:3874   */\n      dup5\n        /* \"#utility.yul\":3868:3879   */\n      add\n        /* \"#utility.yul\":3833:3907   */\n      tag_525\n      jump\t// in\n        /* \"#utility.yul\":3918:4104   */\n    tag_122:\n        /* \"#utility.yul\":3977:3983   */\n      0x00\n        /* \"#utility.yul\":4030:4032   */\n      0x20\n        /* \"#utility.yul\":4018:4027   */\n      dup3\n        /* \"#utility.yul\":4009:4016   */\n      dup5\n        /* \"#utility.yul\":4005:4028   */\n      sub\n        /* \"#utility.yul\":4001:4033   */\n      slt\n        /* \"#utility.yul\":3998:4050   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":4046:4047   */\n      0x00\n        /* \"#utility.yul\":4043:4044   */\n      dup1\n        /* \"#utility.yul\":4036:4048   */\n      revert\n        /* \"#utility.yul\":3998:4050   */\n    tag_573:\n        /* \"#utility.yul\":4069:4098   */\n      tag_367\n        /* \"#utility.yul\":4088:4097   */\n      dup3\n        /* \"#utility.yul\":4069:4098   */\n      tag_524\n      jump\t// in\n        /* \"#utility.yul\":4109:4269   */\n    tag_526:\n        /* \"#utility.yul\":4174:4194   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":4230:4243   */\n      dup1\n      iszero\n        /* \"#utility.yul\":4223:4244   */\n      iszero\n        /* \"#utility.yul\":4213:4245   */\n      dup2\n      eq\n        /* \"#utility.yul\":4203:4263   */\n      tag_551\n      jumpi\n        /* \"#utility.yul\":4259:4260   */\n      0x00\n        /* \"#utility.yul\":4256:4257   */\n      dup1\n        /* \"#utility.yul\":4249:4261   */\n      revert\n        /* \"#utility.yul\":4274:4454   */\n    tag_135:\n        /* \"#utility.yul\":4330:4336   */\n      0x00\n        /* \"#utility.yul\":4383:4385   */\n      0x20\n        /* \"#utility.yul\":4371:4380   */\n      dup3\n        /* \"#utility.yul\":4362:4369   */\n      dup5\n        /* \"#utility.yul\":4358:4381   */\n      sub\n        /* \"#utility.yul\":4354:4386   */\n      slt\n        /* \"#utility.yul\":4351:4403   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":4399:4400   */\n      0x00\n        /* \"#utility.yul\":4396:4397   */\n      dup1\n        /* \"#utility.yul\":4389:4401   */\n      revert\n        /* \"#utility.yul\":4351:4403   */\n    tag_578:\n        /* \"#utility.yul\":4422:4448   */\n      tag_367\n        /* \"#utility.yul\":4438:4447   */\n      dup3\n        /* \"#utility.yul\":4422:4448   */\n      tag_526\n      jump\t// in\n        /* \"#utility.yul\":4459:4713   */\n    tag_163:\n        /* \"#utility.yul\":4524:4530   */\n      0x00\n        /* \"#utility.yul\":4532:4538   */\n      dup1\n        /* \"#utility.yul\":4585:4587   */\n      0x40\n        /* \"#utility.yul\":4573:4582   */\n      dup4\n        /* \"#utility.yul\":4564:4571   */\n      dup6\n        /* \"#utility.yul\":4560:4583   */\n      sub\n        /* \"#utility.yul\":4556:4588   */\n      slt\n        /* \"#utility.yul\":4553:4605   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":4601:4602   */\n      0x00\n        /* \"#utility.yul\":4598:4599   */\n      dup1\n        /* \"#utility.yul\":4591:4603   */\n      revert\n        /* \"#utility.yul\":4553:4605   */\n    tag_581:\n        /* \"#utility.yul\":4624:4653   */\n      tag_582\n        /* \"#utility.yul\":4643:4652   */\n      dup4\n        /* \"#utility.yul\":4624:4653   */\n      tag_524\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":4614:4653   */\n      swap2\n      pop\n        /* \"#utility.yul\":4672:4707   */\n      tag_583\n        /* \"#utility.yul\":4703:4705   */\n      0x20\n        /* \"#utility.yul\":4692:4701   */\n      dup5\n        /* \"#utility.yul\":4688:4706   */\n      add\n        /* \"#utility.yul\":4672:4707   */\n      tag_526\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":4662:4707   */\n      swap1\n      pop\n        /* \"#utility.yul\":4459:4713   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4718:5385   */\n    tag_172:\n        /* \"#utility.yul\":4813:4819   */\n      0x00\n        /* \"#utility.yul\":4821:4827   */\n      dup1\n        /* \"#utility.yul\":4829:4835   */\n      0x00\n        /* \"#utility.yul\":4837:4843   */\n      dup1\n        /* \"#utility.yul\":4890:4893   */\n      0x80\n        /* \"#utility.yul\":4878:4887   */\n      dup6\n        /* \"#utility.yul\":4869:4876   */\n      dup8\n        /* \"#utility.yul\":4865:4888   */\n      sub\n        /* \"#utility.yul\":4861:4894   */\n      slt\n        /* \"#utility.yul\":4858:4911   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":4907:4908   */\n      0x00\n        /* \"#utility.yul\":4904:4905   */\n      dup1\n        /* \"#utility.yul\":4897:4909   */\n      revert\n        /* \"#utility.yul\":4858:4911   */\n    tag_585:\n        /* \"#utility.yul\":4930:4959   */\n      tag_586\n        /* \"#utility.yul\":4949:4958   */\n      dup6\n        /* \"#utility.yul\":4930:4959   */\n      tag_524\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":4920:4959   */\n      swap4\n      pop\n        /* \"#utility.yul\":4978:5016   */\n      tag_587\n        /* \"#utility.yul\":5012:5014   */\n      0x20\n        /* \"#utility.yul\":5001:5010   */\n      dup7\n        /* \"#utility.yul\":4997:5015   */\n      add\n        /* \"#utility.yul\":4978:5016   */\n      tag_524\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":4968:5016   */\n      swap3\n      pop\n        /* \"#utility.yul\":5063:5065   */\n      0x40\n        /* \"#utility.yul\":5052:5061   */\n      dup6\n        /* \"#utility.yul\":5048:5066   */\n      add\n        /* \"#utility.yul\":5035:5067   */\n      calldataload\n        /* \"#utility.yul\":5025:5067   */\n      swap2\n      pop\n        /* \"#utility.yul\":5118:5120   */\n      0x60\n        /* \"#utility.yul\":5107:5116   */\n      dup6\n        /* \"#utility.yul\":5103:5121   */\n      add\n        /* \"#utility.yul\":5090:5122   */\n      calldataload\n        /* \"#utility.yul\":5145:5163   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5137:5143   */\n      dup2\n        /* \"#utility.yul\":5134:5164   */\n      gt\n        /* \"#utility.yul\":5131:5181   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":5177:5178   */\n      0x00\n        /* \"#utility.yul\":5174:5175   */\n      dup1\n        /* \"#utility.yul\":5167:5179   */\n      revert\n        /* \"#utility.yul\":5131:5181   */\n    tag_588:\n        /* \"#utility.yul\":5200:5222   */\n      dup6\n      add\n        /* \"#utility.yul\":5253:5257   */\n      0x1f\n        /* \"#utility.yul\":5245:5258   */\n      dup2\n      add\n        /* \"#utility.yul\":5241:5268   */\n      dup8\n      sgt\n        /* \"#utility.yul\":5231:5286   */\n      tag_589\n      jumpi\n        /* \"#utility.yul\":5282:5283   */\n      0x00\n        /* \"#utility.yul\":5279:5280   */\n      dup1\n        /* \"#utility.yul\":5272:5284   */\n      revert\n        /* \"#utility.yul\":5231:5286   */\n    tag_589:\n        /* \"#utility.yul\":5305:5379   */\n      tag_590\n        /* \"#utility.yul\":5371:5378   */\n      dup8\n        /* \"#utility.yul\":5366:5368   */\n      dup3\n        /* \"#utility.yul\":5353:5369   */\n      calldataload\n        /* \"#utility.yul\":5348:5350   */\n      0x20\n        /* \"#utility.yul\":5344:5346   */\n      dup5\n        /* \"#utility.yul\":5340:5351   */\n      add\n        /* \"#utility.yul\":5305:5379   */\n      tag_525\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":5295:5379   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4718:5385   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5390:5650   */\n    tag_189:\n        /* \"#utility.yul\":5458:5464   */\n      0x00\n        /* \"#utility.yul\":5466:5472   */\n      dup1\n        /* \"#utility.yul\":5519:5521   */\n      0x40\n        /* \"#utility.yul\":5507:5516   */\n      dup4\n        /* \"#utility.yul\":5498:5505   */\n      dup6\n        /* \"#utility.yul\":5494:5517   */\n      sub\n        /* \"#utility.yul\":5490:5522   */\n      slt\n        /* \"#utility.yul\":5487:5539   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":5535:5536   */\n      0x00\n        /* \"#utility.yul\":5532:5533   */\n      dup1\n        /* \"#utility.yul\":5525:5537   */\n      revert\n        /* \"#utility.yul\":5487:5539   */\n    tag_592:\n        /* \"#utility.yul\":5558:5587   */\n      tag_593\n        /* \"#utility.yul\":5577:5586   */\n      dup4\n        /* \"#utility.yul\":5558:5587   */\n      tag_524\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":5548:5587   */\n      swap2\n      pop\n        /* \"#utility.yul\":5606:5644   */\n      tag_583\n        /* \"#utility.yul\":5640:5642   */\n      0x20\n        /* \"#utility.yul\":5629:5638   */\n      dup5\n        /* \"#utility.yul\":5625:5643   */\n      add\n        /* \"#utility.yul\":5606:5644   */\n      tag_524\n      jump\t// in\n        /* \"#utility.yul\":5655:6035   */\n    tag_207:\n        /* \"#utility.yul\":5734:5735   */\n      0x01\n        /* \"#utility.yul\":5730:5742   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5777:5789   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5798:5859   */\n      tag_596\n      jumpi\n        /* \"#utility.yul\":5852:5856   */\n      0x7f\n        /* \"#utility.yul\":5844:5850   */\n      dup3\n        /* \"#utility.yul\":5840:5857   */\n      and\n        /* \"#utility.yul\":5830:5857   */\n      swap2\n      pop\n        /* \"#utility.yul\":5798:5859   */\n    tag_596:\n        /* \"#utility.yul\":5905:5907   */\n      0x20\n        /* \"#utility.yul\":5897:5903   */\n      dup3\n        /* \"#utility.yul\":5894:5908   */\n      lt\n        /* \"#utility.yul\":5874:5892   */\n      dup2\n        /* \"#utility.yul\":5871:5909   */\n      sub\n        /* \"#utility.yul\":5868:6029   */\n      tag_597\n      jumpi\n        /* \"#utility.yul\":5951:5961   */\n      0x4e487b71\n        /* \"#utility.yul\":5946:5949   */\n      0xe0\n        /* \"#utility.yul\":5942:5962   */\n      shl\n        /* \"#utility.yul\":5939:5940   */\n      0x00\n        /* \"#utility.yul\":5932:5963   */\n      mstore\n        /* \"#utility.yul\":5986:5990   */\n      0x22\n        /* \"#utility.yul\":5983:5984   */\n      0x04\n        /* \"#utility.yul\":5976:5991   */\n      mstore\n        /* \"#utility.yul\":6014:6018   */\n      0x24\n        /* \"#utility.yul\":6011:6012   */\n      0x00\n        /* \"#utility.yul\":6004:6019   */\n      revert\n        /* \"#utility.yul\":5868:6029   */\n    tag_597:\n      pop\n        /* \"#utility.yul\":5655:6035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7992:8119   */\n    tag_527:\n        /* \"#utility.yul\":8053:8063   */\n      0x4e487b71\n        /* \"#utility.yul\":8048:8051   */\n      0xe0\n        /* \"#utility.yul\":8044:8064   */\n      shl\n        /* \"#utility.yul\":8041:8042   */\n      0x00\n        /* \"#utility.yul\":8034:8065   */\n      mstore\n        /* \"#utility.yul\":8084:8088   */\n      0x11\n        /* \"#utility.yul\":8081:8082   */\n      0x04\n        /* \"#utility.yul\":8074:8089   */\n      mstore\n        /* \"#utility.yul\":8108:8112   */\n      0x24\n        /* \"#utility.yul\":8105:8106   */\n      0x00\n        /* \"#utility.yul\":8098:8113   */\n      revert\n        /* \"#utility.yul\":8124:8249   */\n    tag_253:\n        /* \"#utility.yul\":8189:8198   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8210:8220   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":8207:8243   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":8223:8241   */\n      tag_203\n      tag_527\n      jump\t// in\n        /* \"#utility.yul\":9074:9619   */\n    tag_529:\n        /* \"#utility.yul\":9176:9178   */\n      0x1f\n        /* \"#utility.yul\":9171:9174   */\n      dup3\n        /* \"#utility.yul\":9168:9179   */\n      gt\n        /* \"#utility.yul\":9165:9613   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":9212:9213   */\n      0x00\n        /* \"#utility.yul\":9237:9242   */\n      dup2\n        /* \"#utility.yul\":9233:9235   */\n      dup2\n        /* \"#utility.yul\":9226:9243   */\n      mstore\n        /* \"#utility.yul\":9282:9286   */\n      0x20\n        /* \"#utility.yul\":9278:9280   */\n      dup2\n        /* \"#utility.yul\":9268:9287   */\n      keccak256\n        /* \"#utility.yul\":9352:9354   */\n      0x1f\n        /* \"#utility.yul\":9340:9350   */\n      dup6\n        /* \"#utility.yul\":9336:9355   */\n      add\n        /* \"#utility.yul\":9333:9334   */\n      0x05\n        /* \"#utility.yul\":9329:9356   */\n      shr\n        /* \"#utility.yul\":9323:9327   */\n      dup2\n        /* \"#utility.yul\":9319:9357   */\n      add\n        /* \"#utility.yul\":9388:9392   */\n      0x20\n        /* \"#utility.yul\":9376:9386   */\n      dup7\n        /* \"#utility.yul\":9373:9393   */\n      lt\n        /* \"#utility.yul\":9370:9417   */\n      iszero\n      tag_612\n      jumpi\n      pop\n        /* \"#utility.yul\":9411:9415   */\n      dup1\n        /* \"#utility.yul\":9370:9417   */\n    tag_612:\n        /* \"#utility.yul\":9466:9468   */\n      0x1f\n        /* \"#utility.yul\":9461:9464   */\n      dup6\n        /* \"#utility.yul\":9457:9469   */\n      add\n        /* \"#utility.yul\":9454:9455   */\n      0x05\n        /* \"#utility.yul\":9450:9470   */\n      shr\n        /* \"#utility.yul\":9444:9448   */\n      dup3\n        /* \"#utility.yul\":9440:9471   */\n      add\n        /* \"#utility.yul\":9430:9471   */\n      swap2\n      pop\n        /* \"#utility.yul\":9521:9603   */\n    tag_613:\n        /* \"#utility.yul\":9539:9541   */\n      dup2\n        /* \"#utility.yul\":9532:9537   */\n      dup2\n        /* \"#utility.yul\":9529:9542   */\n      lt\n        /* \"#utility.yul\":9521:9603   */\n      iszero\n      tag_615\n      jumpi\n        /* \"#utility.yul\":9584:9601   */\n      dup3\n      dup2\n      sstore\n        /* \"#utility.yul\":9565:9566   */\n      0x01\n        /* \"#utility.yul\":9554:9567   */\n      add\n        /* \"#utility.yul\":9521:9603   */\n      jump(tag_613)\n    tag_615:\n        /* \"#utility.yul\":9525:9528   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9074:9619   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9795:11147   */\n    tag_271:\n        /* \"#utility.yul\":9921:9924   */\n      dup2\n        /* \"#utility.yul\":9915:9925   */\n      mload\n        /* \"#utility.yul\":9948:9966   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9940:9946   */\n      dup2\n        /* \"#utility.yul\":9937:9967   */\n      gt\n        /* \"#utility.yul\":9934:9990   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":9970:9988   */\n      tag_619\n      tag_487\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":9999:10096   */\n      tag_620\n        /* \"#utility.yul\":10089:10095   */\n      dup2\n        /* \"#utility.yul\":10049:10087   */\n      tag_621\n        /* \"#utility.yul\":10081:10085   */\n      dup5\n        /* \"#utility.yul\":10075:10086   */\n      sload\n        /* \"#utility.yul\":10049:10087   */\n      tag_207\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":10043:10047   */\n      dup5\n        /* \"#utility.yul\":9999:10096   */\n      tag_529\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":10151:10155   */\n      0x20\n      dup1\n        /* \"#utility.yul\":10215:10217   */\n      0x1f\n        /* \"#utility.yul\":10204:10218   */\n      dup4\n      gt\n        /* \"#utility.yul\":10232:10233   */\n      0x01\n        /* \"#utility.yul\":10227:10890   */\n      dup2\n      eq\n      tag_623\n      jumpi\n        /* \"#utility.yul\":10934:10935   */\n      0x00\n        /* \"#utility.yul\":10951:10957   */\n      dup5\n        /* \"#utility.yul\":10948:11037   */\n      iszero\n      tag_624\n      jumpi\n      pop\n        /* \"#utility.yul\":11003:11022   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":10997:11023   */\n      mload\n        /* \"#utility.yul\":10948:11037   */\n    tag_624:\n      not(0x00)\n        /* \"#utility.yul\":9752:9753   */\n      0x03\n        /* \"#utility.yul\":9748:9759   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":9744:9768   */\n      shr\n        /* \"#utility.yul\":9740:9769   */\n      not\n        /* \"#utility.yul\":9730:9770   */\n      and\n        /* \"#utility.yul\":9776:9777   */\n      0x01\n        /* \"#utility.yul\":9772:9783   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":9727:9784   */\n      or\n        /* \"#utility.yul\":11050:11131   */\n      dup6\n      sstore\n        /* \"#utility.yul\":10197:11141   */\n      jump(tag_615)\n        /* \"#utility.yul\":10227:10890   */\n    tag_623:\n        /* \"#utility.yul\":9021:9022   */\n      0x00\n        /* \"#utility.yul\":9014:9028   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":9058:9062   */\n      0x20\n        /* \"#utility.yul\":9045:9063   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":10263:10283   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":10381:10617   */\n    tag_627:\n        /* \"#utility.yul\":10395:10402   */\n      dup3\n        /* \"#utility.yul\":10392:10393   */\n      dup2\n        /* \"#utility.yul\":10389:10403   */\n      lt\n        /* \"#utility.yul\":10381:10617   */\n      iszero\n      tag_629\n      jumpi\n        /* \"#utility.yul\":10484:10503   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":10478:10504   */\n      mload\n        /* \"#utility.yul\":10463:10505   */\n      dup3\n      sstore\n        /* \"#utility.yul\":10576:10603   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":10544:10545   */\n      0x01\n        /* \"#utility.yul\":10532:10546   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":10411:10430   */\n      dup5\n      add\n        /* \"#utility.yul\":10381:10617   */\n      jump(tag_627)\n    tag_629:\n        /* \"#utility.yul\":10385:10388   */\n      pop\n        /* \"#utility.yul\":10645:10651   */\n      dup6\n        /* \"#utility.yul\":10636:10643   */\n      dup3\n        /* \"#utility.yul\":10633:10652   */\n      lt\n        /* \"#utility.yul\":10630:10831   */\n      iszero\n      tag_630\n      jumpi\n        /* \"#utility.yul\":10706:10725   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":10700:10726   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":10789:10790   */\n      0x03\n        /* \"#utility.yul\":10785:10799   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":10801:10804   */\n      0xf8\n        /* \"#utility.yul\":10781:10805   */\n      and\n        /* \"#utility.yul\":10777:10814   */\n      shr\n        /* \"#utility.yul\":10773:10815   */\n      not\n        /* \"#utility.yul\":10758:10816   */\n      and\n        /* \"#utility.yul\":10743:10817   */\n      dup2\n      sstore\n        /* \"#utility.yul\":10630:10831   */\n    tag_630:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10877:10878   */\n      0x01\n        /* \"#utility.yul\":10861:10875   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":10857:10879   */\n      add\n        /* \"#utility.yul\":10844:10880   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":9795:11147   */\n      jump\t// out\n        /* \"#utility.yul\":11912:12080   */\n    tag_315:\n        /* \"#utility.yul\":11985:11994   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":12016:12025   */\n      dup2\n      iszero\n        /* \"#utility.yul\":12033:12048   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":12027:12049   */\n      dup5\n      eq\n        /* \"#utility.yul\":12013:12050   */\n      or\n        /* \"#utility.yul\":12003:12074   */\n      tag_203\n      jumpi\n        /* \"#utility.yul\":12054:12072   */\n      tag_203\n      tag_527\n      jump\t// in\n        /* \"#utility.yul\":12085:12213   */\n    tag_318:\n        /* \"#utility.yul\":12152:12161   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":12173:12184   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":12170:12207   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":12187:12205   */\n      tag_203\n      tag_527\n      jump\t// in\n        /* \"#utility.yul\":12921:13336   */\n    tag_350:\n        /* \"#utility.yul\":13123:13125   */\n      0x20\n        /* \"#utility.yul\":13105:13126   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13162:13164   */\n      0x33\n        /* \"#utility.yul\":13142:13160   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13135:13165   */\n      mstore\n        /* \"#utility.yul\":13201:13235   */\n      0x455243373231413a207472616e7366657220746f206e6f6e2045524337323152\n        /* \"#utility.yul\":13196:13198   */\n      0x40\n        /* \"#utility.yul\":13181:13199   */\n      dup3\n      add\n        /* \"#utility.yul\":13174:13236   */\n      mstore\n      shl(0x69, 0x32b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":13267:13269   */\n      0x60\n        /* \"#utility.yul\":13252:13270   */\n      dup3\n      add\n        /* \"#utility.yul\":13245:13294   */\n      mstore\n        /* \"#utility.yul\":13326:13329   */\n      0x80\n        /* \"#utility.yul\":13311:13330   */\n      add\n      swap1\n        /* \"#utility.yul\":12921:13336   */\n      jump\t// out\n        /* \"#utility.yul\":14108:14604   */\n    tag_371:\n        /* \"#utility.yul\":14287:14290   */\n      0x00\n        /* \"#utility.yul\":14325:14331   */\n      dup4\n        /* \"#utility.yul\":14319:14332   */\n      mload\n        /* \"#utility.yul\":14341:14407   */\n      tag_645\n        /* \"#utility.yul\":14400:14406   */\n      dup2\n        /* \"#utility.yul\":14395:14398   */\n      dup5\n        /* \"#utility.yul\":14388:14392   */\n      0x20\n        /* \"#utility.yul\":14380:14386   */\n      dup9\n        /* \"#utility.yul\":14376:14393   */\n      add\n        /* \"#utility.yul\":14341:14407   */\n      tag_522\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":14470:14483   */\n      dup4\n      mload\n        /* \"#utility.yul\":14429:14445   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":14492:14562   */\n      tag_646\n        /* \"#utility.yul\":14470:14483   */\n      dup2\n        /* \"#utility.yul\":14429:14445   */\n      dup4\n        /* \"#utility.yul\":14539:14543   */\n      0x20\n        /* \"#utility.yul\":14527:14544   */\n      dup9\n      add\n        /* \"#utility.yul\":14492:14562   */\n      tag_522\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":14578:14598   */\n      add\n      swap5\n        /* \"#utility.yul\":14108:14604   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18431:18920   */\n    tag_456:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":18700:18715   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":18682:18716   */\n      dup3\n      mstore\n        /* \"#utility.yul\":18752:18767   */\n      dup5\n      and\n        /* \"#utility.yul\":18747:18749   */\n      0x20\n        /* \"#utility.yul\":18732:18750   */\n      dup3\n      add\n        /* \"#utility.yul\":18725:18768   */\n      mstore\n        /* \"#utility.yul\":18799:18801   */\n      0x40\n        /* \"#utility.yul\":18784:18802   */\n      dup2\n      add\n        /* \"#utility.yul\":18777:18811   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":18847:18850   */\n      0x80\n        /* \"#utility.yul\":18842:18844   */\n      0x60\n        /* \"#utility.yul\":18827:18845   */\n      dup3\n      add\n        /* \"#utility.yul\":18820:18851   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":18625:18629   */\n      0x00\n      swap1\n        /* \"#utility.yul\":18868:18914   */\n      tag_658\n      swap1\n        /* \"#utility.yul\":18894:18913   */\n      dup4\n      add\n        /* \"#utility.yul\":18886:18892   */\n      dup5\n        /* \"#utility.yul\":18868:18914   */\n      tag_523\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":18860:18914   */\n      swap7\n        /* \"#utility.yul\":18431:18920   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18925:19174   */\n    tag_459:\n        /* \"#utility.yul\":18994:19000   */\n      0x00\n        /* \"#utility.yul\":19047:19049   */\n      0x20\n        /* \"#utility.yul\":19035:19044   */\n      dup3\n        /* \"#utility.yul\":19026:19033   */\n      dup5\n        /* \"#utility.yul\":19022:19045   */\n      sub\n        /* \"#utility.yul\":19018:19050   */\n      slt\n        /* \"#utility.yul\":19015:19067   */\n      iszero\n      tag_660\n      jumpi\n        /* \"#utility.yul\":19063:19064   */\n      0x00\n        /* \"#utility.yul\":19060:19061   */\n      dup1\n        /* \"#utility.yul\":19053:19065   */\n      revert\n        /* \"#utility.yul\":19015:19067   */\n    tag_660:\n        /* \"#utility.yul\":19095:19104   */\n      dup2\n        /* \"#utility.yul\":19089:19105   */\n      mload\n        /* \"#utility.yul\":19114:19144   */\n      tag_367\n        /* \"#utility.yul\":19138:19143   */\n      dup2\n        /* \"#utility.yul\":19114:19144   */\n      tag_521\n      jump\t// in\n        /* \"#utility.yul\":19179:19314   */\n    tag_482:\n        /* \"#utility.yul\":19218:19221   */\n      0x00\n        /* \"#utility.yul\":19239:19256   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":19236:19279   */\n      tag_664\n      jumpi\n        /* \"#utility.yul\":19259:19277   */\n      tag_664\n      tag_527\n      jump\t// in\n    tag_664:\n      pop\n        /* \"#utility.yul\":19306:19307   */\n      0x01\n        /* \"#utility.yul\":19295:19308   */\n      add\n      swap1\n        /* \"#utility.yul\":19179:19314   */\n      jump\t// out\n        /* \"#utility.yul\":19319:19446   */\n    tag_531:\n        /* \"#utility.yul\":19380:19390   */\n      0x4e487b71\n        /* \"#utility.yul\":19375:19378   */\n      0xe0\n        /* \"#utility.yul\":19371:19391   */\n      shl\n        /* \"#utility.yul\":19368:19369   */\n      0x00\n        /* \"#utility.yul\":19361:19392   */\n      mstore\n        /* \"#utility.yul\":19411:19415   */\n      0x12\n        /* \"#utility.yul\":19408:19409   */\n      0x04\n        /* \"#utility.yul\":19401:19416   */\n      mstore\n        /* \"#utility.yul\":19435:19439   */\n      0x24\n        /* \"#utility.yul\":19432:19433   */\n      0x00\n        /* \"#utility.yul\":19425:19440   */\n      revert\n        /* \"#utility.yul\":19451:19571   */\n    tag_484:\n        /* \"#utility.yul\":19491:19492   */\n      0x00\n        /* \"#utility.yul\":19517:19518   */\n      dup3\n        /* \"#utility.yul\":19507:19542   */\n      tag_668\n      jumpi\n        /* \"#utility.yul\":19522:19540   */\n      tag_668\n      tag_531\n      jump\t// in\n    tag_668:\n      pop\n        /* \"#utility.yul\":19556:19565   */\n      div\n      swap1\n        /* \"#utility.yul\":19451:19571   */\n      jump\t// out\n        /* \"#utility.yul\":19576:19688   */\n    tag_493:\n        /* \"#utility.yul\":19608:19609   */\n      0x00\n        /* \"#utility.yul\":19634:19635   */\n      dup3\n        /* \"#utility.yul\":19624:19659   */\n      tag_671\n      jumpi\n        /* \"#utility.yul\":19639:19657   */\n      tag_671\n      tag_531\n      jump\t// in\n    tag_671:\n      pop\n        /* \"#utility.yul\":19673:19682   */\n      mod\n      swap1\n        /* \"#utility.yul\":19576:19688   */\n      jump\t// out\n        /* \"#utility.yul\":19693:19820   */\n    tag_497:\n        /* \"#utility.yul\":19754:19764   */\n      0x4e487b71\n        /* \"#utility.yul\":19749:19752   */\n      0xe0\n        /* \"#utility.yul\":19745:19765   */\n      shl\n        /* \"#utility.yul\":19742:19743   */\n      0x00\n        /* \"#utility.yul\":19735:19766   */\n      mstore\n        /* \"#utility.yul\":19785:19789   */\n      0x32\n        /* \"#utility.yul\":19782:19783   */\n      0x04\n        /* \"#utility.yul\":19775:19790   */\n      mstore\n        /* \"#utility.yul\":19809:19813   */\n      0x24\n        /* \"#utility.yul\":19806:19807   */\n      0x00\n        /* \"#utility.yul\":19799:19814   */\n      revert\n\n    auxdata: 0xa26469706673582212201c479dc284b44daf432fcb7e3fe228ba3c11e83b7ab1b774284a872d032c095564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1931": {
									"entryPoint": null,
									"id": 1931,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_968": {
									"entryPoint": null,
									"id": 968,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_620": {
									"entryPoint": 250,
									"id": 620,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 254,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptrt_uint256t_uint256t_boolt_uint256_fromMemory": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 336,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4336:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "203:107:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "213:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "228:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "222:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "213:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "288:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "297:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "300:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "290:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "290:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "290:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "257:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "278:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "271:6:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "271:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "264:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "264:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "254:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "254:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:40:12"
															},
															"nodeType": "YulIf",
															"src": "244:60:12"
														}
													]
												},
												"name": "abi_decode_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "193:5:12",
														"type": ""
													}
												],
												"src": "146:164:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "505:1240:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "552:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "561:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "564:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "554:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "554:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "554:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "526:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "535:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "522:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "522:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "547:3:12",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "518:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "518:33:12"
															},
															"nodeType": "YulIf",
															"src": "515:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "577:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "587:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "587:16:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "577:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "612:12:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "622:2:12",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "616:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "633:35:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "653:9:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "664:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "649:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "649:18:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "643:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "643:25:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "633:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "677:39:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "701:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "712:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "697:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:18:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "691:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "691:25:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "681:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "725:28:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "743:2:12",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "747:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "739:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "739:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "751:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "735:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "735:18:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "729:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "780:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "789:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "792:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "782:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "782:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "782:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "768:6:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "776:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "765:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:14:12"
															},
															"nodeType": "YulIf",
															"src": "762:34:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "805:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "819:9:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "830:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "815:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "815:22:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "809:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "885:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "894:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "897:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "887:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "887:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "887:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "864:2:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "868:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "860:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "860:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "875:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "856:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "856:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "849:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "849:35:12"
															},
															"nodeType": "YulIf",
															"src": "846:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "910:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "926:2:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "920:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:9:12"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "914:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "952:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "954:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "954:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "954:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "944:2:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "948:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "941:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "941:10:12"
															},
															"nodeType": "YulIf",
															"src": "938:36:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "983:17:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "997:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "993:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "993:7:12"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "987:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1009:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1029:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1023:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1023:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1013:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1041:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1063:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "1087:2:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1091:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1083:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1083:13:12"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "1098:2:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1079:22:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1103:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1075:31:12"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "1108:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1071:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1071:40:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:53:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1045:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1171:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1173:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1173:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1173:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1130:10:12"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1142:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1127:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1127:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1150:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1162:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1147:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1147:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1124:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1124:46:12"
															},
															"nodeType": "YulIf",
															"src": "1121:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1209:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1213:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1202:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1202:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1240:6:12"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1248:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1233:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1233:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1233:18:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1297:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1306:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1309:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1299:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1299:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1299:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1274:2:12"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "1278:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1270:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1270:11:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1283:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1266:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1266:20:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1288:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1263:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1263:33:12"
															},
															"nodeType": "YulIf",
															"src": "1260:53:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1322:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1331:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1326:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1416:6:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1424:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1412:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1412:14:12"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1428:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1408:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1408:23:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1447:2:12"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1451:1:12"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1443:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1443:10:12"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1455:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1439:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1439:19:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1433:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1433:26:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1401:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1401:59:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1401:59:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1352:1:12"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1355:2:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1349:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1349:9:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1359:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1361:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1370:1:12"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1373:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1366:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1366:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1361:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1345:3:12",
																"statements": []
															},
															"src": "1341:129:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1494:6:12"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "1502:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1490:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1490:15:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1507:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1486:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1486:24:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1512:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1479:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1479:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1479:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1523:16:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1533:6:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1523:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1548:35:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1568:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1579:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1564:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1564:18:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1558:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1558:25:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1548:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1592:36:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1612:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1623:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1608:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1608:19:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1602:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1602:26:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "1592:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1637:57:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1678:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1689:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1674:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1647:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:47:12"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "1637:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1703:36:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1723:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1734:3:12",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1719:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1719:19:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1713:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1713:26:12"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "1703:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_string_memory_ptrt_uint256t_uint256t_boolt_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "423:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "434:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "446:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "454:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "462:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "470:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "478:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "486:6:12",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "494:6:12",
														"type": ""
													}
												],
												"src": "315:1430:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1805:325:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1815:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1829:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1832:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1825:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1825:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1846:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1876:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1882:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1872:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1872:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1850:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1923:31:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1925:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1939:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1947:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1935:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1935:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1925:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1903:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1896:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1896:26:12"
															},
															"nodeType": "YulIf",
															"src": "1893:61:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2013:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2034:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2041:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2046:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2037:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2037:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2027:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2027:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2078:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2081:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2071:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2071:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2071:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2106:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2109:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2099:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2099:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2099:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1969:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1992:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2000:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1989:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1989:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1966:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:38:12"
															},
															"nodeType": "YulIf",
															"src": "1963:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1785:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1794:6:12",
														"type": ""
													}
												],
												"src": "1750:380:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2191:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2208:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2211:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2201:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2201:14:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2201:14:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2224:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2242:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2245:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2232:9:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2232:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2224:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2174:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2182:4:12",
														"type": ""
													}
												],
												"src": "2135:121:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2342:464:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2375:425:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2389:11:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2399:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2393:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2420:2:12"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2424:5:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2413:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2413:17:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2413:17:12"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2443:31:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2465:2:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2469:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2455:9:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2455:19:12"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2447:4:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2487:57:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2510:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2520:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2527:10:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2539:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2523:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2523:19:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2516:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2516:27:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2506:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2506:38:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2491:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2581:23:12",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2583:19:12",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2598:4:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2583:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2563:10:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2575:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2560:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2560:20:12"
																		},
																		"nodeType": "YulIf",
																		"src": "2557:47:12"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2617:41:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2631:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2641:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2648:3:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2653:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2644:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2644:12:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2637:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2637:20:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2627:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2627:31:12"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2621:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2671:24:12",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2684:11:12"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2675:5:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2769:21:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2778:5:12"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2785:2:12"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2771:6:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2771:17:12"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2771:17:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2719:5:12"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2726:2:12"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2716:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2716:13:12"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2730:26:12",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2732:22:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2745:5:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2752:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2741:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2741:13:12"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2732:5:12"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2712:3:12",
																			"statements": []
																		},
																		"src": "2708:82:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2358:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2363:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2355:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2355:11:12"
															},
															"nodeType": "YulIf",
															"src": "2352:448:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2314:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2321:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2326:10:12",
														"type": ""
													}
												],
												"src": "2261:545:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2896:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2906:65:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2921:4:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2939:1:12",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2942:3:12"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2935:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2935:11:12"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2952:1:12",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2948:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2948:6:12"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2931:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2931:24:12"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2927:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2927:29:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2917:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2917:40:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2963:1:12",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2966:3:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2959:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2914:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2914:57:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2906:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2873:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2879:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2887:4:12",
														"type": ""
													}
												],
												"src": "2811:166:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3078:1256:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3088:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3108:3:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3102:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3102:10:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3092:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3155:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3157:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3157:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3157:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3127:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3143:2:12",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3147:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3139:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3139:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3151:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3135:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3135:18:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3124:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3124:30:12"
															},
															"nodeType": "YulIf",
															"src": "3121:56:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3230:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3268:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3262:5:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3262:11:12"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3236:25:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3236:38:12"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3276:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "3186:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3186:97:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3186:97:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3292:18:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3309:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3296:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3319:23:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3338:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3323:11:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3351:24:12",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3364:11:12"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3351:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3421:656:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3435:35:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3454:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3466:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3462:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3462:7:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3450:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3450:20:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3439:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3483:49:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3527:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3497:29:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3497:35:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3487:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3545:10:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3554:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3549:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3632:172:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3657:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3675:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3680:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3671:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3671:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3665:5:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3665:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3650:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3650:42:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3650:42:12"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3709:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3723:6:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3731:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3719:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3719:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3709:6:12"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3750:40:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3767:9:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3778:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3763:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3763:27:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3750:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3579:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3582:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3576:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3576:14:12"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3591:28:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3593:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3602:1:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3605:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3598:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3598:19:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3593:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3572:3:12",
																					"statements": []
																				},
																				"src": "3568:236:12"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3852:166:12",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3870:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3897:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3902:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3893:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3893:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3887:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3887:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3874:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3937:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3949:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3976:1:12",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3979:6:12"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3972:3:12"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3972:14:12"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3988:3:12",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3968:3:12"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3968:24:12"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3998:1:12",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3994:3:12"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3994:6:12"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3964:3:12"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3964:37:12"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3960:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3960:42:12"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3945:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3945:58:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3930:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3930:74:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3930:74:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3823:7:12"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3832:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3820:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3820:19:12"
																				},
																				"nodeType": "YulIf",
																				"src": "3817:201:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4038:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4052:1:12",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4055:6:12"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "4048:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4048:14:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4064:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4044:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4044:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4031:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4031:36:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4031:36:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3414:663:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3419:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4094:234:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4108:14:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4121:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "4112:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4157:67:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4175:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4194:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4199:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4190:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4190:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4184:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4184:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4175:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "4138:6:12"
																				},
																				"nodeType": "YulIf",
																				"src": "4135:89:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4244:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4303:5:12"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4310:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4250:52:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4250:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4237:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4237:81:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4237:81:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4086:242:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3394:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3402:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3391:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3391:14:12"
															},
															"nodeType": "YulSwitch",
															"src": "3384:944:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3063:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3069:3:12",
														"type": ""
													}
												],
												"src": "2982:1352:12"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_string_memory_ptrt_uint256t_uint256t_boolt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := mload(headStart)\n        let _1 := 32\n        value1 := mload(add(headStart, _1))\n        let offset := mload(add(headStart, 64))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        mstore(add(add(memPtr, _4), _1), 0)\n        value2 := memPtr\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n        value5 := abi_decode_bool_fromMemory(add(headStart, 160))\n        value6 := mload(add(headStart, 192))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620024d8380380620024d883398101604081905262000034916200017c565b60405180604001604052806008815260200167476c7574746f6e7960c01b81525060405180604001604052806007815260200166474c542d37445360c81b815250816001908162000086919062000324565b50600262000095828262000324565b505050620000b2620000ac620000fa60201b60201c565b620000fe565b60016008556009879055600a869055600b620000cf868262000324565b50600c93909355600d91909155600e805460ff1916911515919091179055600f5550620003f0915050565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b805180151581146200017757600080fd5b919050565b600080600080600080600060e0888a0312156200019857600080fd5b87516020808a015160408b01519299509750906001600160401b0380821115620001c157600080fd5b818b0191508b601f830112620001d657600080fd5b815181811115620001eb57620001eb62000150565b604051601f8201601f19908116603f0116810190838211818310171562000216576200021662000150565b816040528281528e868487010111156200022f57600080fd5b600093505b8284101562000253578484018601518185018701529285019262000234565b6000868483010152809a5050505050505060608801519350608088015192506200028060a0890162000166565b915060c0880151905092959891949750929550565b600181811c90821680620002aa57607f821691505b602082108103620002cb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200031f57600081815260208120601f850160051c81016020861015620002fa5750805b601f850160051c820191505b818110156200031b5782815560010162000306565b5050505b505050565b81516001600160401b0381111562000340576200034062000150565b620003588162000351845462000295565b84620002d1565b602080601f831160018114620003905760008415620003775750858301515b600019600386901b1c1916600185901b1785556200031b565b600085815260208120601f198616915b82811015620003c157888601518255948401946001909101908401620003a0565b5085821015620003e05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6120d880620004006000396000f3fe6080604052600436106102045760003560e01c8063715018a611610118578063a22cb465116100a0578063c87b56dd1161006f578063c87b56dd14610595578063d111515d146105b5578063e985e9c5146105ca578063f2fde38b146105ea578063fdb4953a1461060a57600080fd5b8063a22cb46514610515578063b0551ac414610535578063b88d4fde14610555578063c4e9374d1461057557600080fd5b80638d859f3e116100e75780638d859f3e146104995780638da5cb5b146104af57806391b7f5ed146104cd57806395d89b41146104ed578063a0712d681461050257600080fd5b8063715018a61461042a57806376d02b711461043f578063841718a6146104595780638b85e43d1461047957600080fd5b806332cb6b0c1161019b57806342842e0e1161016a57806342842e0e1461038a57806355f804b3146103aa578063616cdb1e146103ca5780636352211e146103ea57806370a082311461040a57600080fd5b806332cb6b0c146103295780633ccfd60b1461033f5780634065b85f14610354578063408cbf941461036a57600080fd5b806309ef6527116101d757806309ef6527146102ba57806310b0c052146102de57806318160ddd146102f457806323b872dd1461030957600080fd5b806301ffc9a71461020957806306fdde031461023e578063081812fc14610260578063095ea7b314610298575b600080fd5b34801561021557600080fd5b50610229610224366004611aaf565b610624565b60405190151581526020015b60405180910390f35b34801561024a57600080fd5b50610253610676565b6040516102359190611b1c565b34801561026c57600080fd5b5061028061027b366004611b2f565b610708565b6040516001600160a01b039091168152602001610235565b3480156102a457600080fd5b506102b86102b3366004611b64565b610798565b005b3480156102c657600080fd5b506102d0600d5481565b604051908152602001610235565b3480156102ea57600080fd5b506102d0600c5481565b34801561030057600080fd5b506000546102d0565b34801561031557600080fd5b506102b8610324366004611b8e565b6108af565b34801561033557600080fd5b506102d0600a5481565b34801561034b57600080fd5b506102b86108ba565b34801561036057600080fd5b506102d0600f5481565b34801561037657600080fd5b506102b8610385366004611b64565b610940565b34801561039657600080fd5b506102b86103a5366004611b8e565b6109fe565b3480156103b657600080fd5b506102b86103c5366004611c56565b610a19565b3480156103d657600080fd5b506102b86103e5366004611b2f565b610a77565b3480156103f657600080fd5b50610280610405366004611b2f565b610a84565b34801561041657600080fd5b506102d0610425366004611c9f565b610a96565b34801561043657600080fd5b506102b8610b27565b34801561044b57600080fd5b50600e546102299060ff1681565b34801561046557600080fd5b506102b8610474366004611cca565b610b3b565b34801561048557600080fd5b506102b8610494366004611b2f565b610b56565b3480156104a557600080fd5b506102d060095481565b3480156104bb57600080fd5b506007546001600160a01b0316610280565b3480156104d957600080fd5b506102b86104e8366004611b2f565b610b63565b3480156104f957600080fd5b50610253610b70565b6102b8610510366004611b2f565b610b7f565b34801561052157600080fd5b506102b8610530366004611ce5565b610d5a565b34801561054157600080fd5b506102b8610550366004611b2f565b610e1e565b34801561056157600080fd5b506102b8610570366004611d18565b610e2b565b34801561058157600080fd5b506102b8610590366004611b2f565b610e64565b3480156105a157600080fd5b506102536105b0366004611b2f565b610f06565b3480156105c157600080fd5b506102b8610fd3565b3480156105d657600080fd5b506102296105e5366004611d94565b610fea565b3480156105f657600080fd5b506102b8610605366004611c9f565b611018565b34801561061657600080fd5b506010546102299060ff1681565b60006001600160e01b031982166380ac58cd60e01b148061065557506001600160e01b03198216635b5e139f60e01b145b8061067057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606001805461068590611dbe565b80601f01602080910402602001604051908101604052809291908181526020018280546106b190611dbe565b80156106fe5780601f106106d3576101008083540402835291602001916106fe565b820191906000526020600020905b8154815290600101906020018083116106e157829003601f168201915b5050505050905090565b6000610715826000541190565b61077c5760405162461bcd60e51b815260206004820152602d60248201527f455243373231413a20617070726f76656420717565727920666f72206e6f6e6560448201526c3c34b9ba32b73a103a37b5b2b760991b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b60006107a382610a84565b9050806001600160a01b0316836001600160a01b0316036108115760405162461bcd60e51b815260206004820152602260248201527f455243373231413a20617070726f76616c20746f2063757272656e74206f776e60448201526132b960f11b6064820152608401610773565b336001600160a01b038216148061082d575061082d8133610fea565b61089f5760405162461bcd60e51b815260206004820152603960248201527f455243373231413a20617070726f76652063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656420666f7220616c6c000000000000006064820152608401610773565b6108aa838383611091565b505050565b6108aa8383836110ed565b6108c26113d2565b6002600854036109145760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610773565b60026008554761093873c919ce1b37fc4e0405885a3350cc153b27dd06e08261142c565b506001600855565b806000811180156109535750600d548111155b6109965760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964206d696e7420616d6f756e742160601b6044820152606401610773565b600a54816000546109a79190611e0e565b11156109ec5760405162461bcd60e51b81526020600482015260146024820152734d617820737570706c792065786365656465642160601b6044820152606401610773565b6109f46113d2565b6108aa8383611545565b6108aa83838360405180602001604052806000815250610e2b565b610a216113d2565b60105460ff1615610a675760405162461bcd60e51b815260206004820152601060248201526f4d657461646174612066726f7a656e2160801b6044820152606401610773565b600b610a738282611e6f565b5050565b610a7f6113d2565b600d55565b6000610a8f8261155f565b5192915050565b60006001600160a01b038216610b025760405162461bcd60e51b815260206004820152602b60248201527f455243373231413a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b6064820152608401610773565b506001600160a01b03166000908152600460205260409020546001600160801b031690565b610b2f6113d2565b610b396000611636565b565b610b436113d2565b600e805460ff1916911515919091179055565b610b5e6113d2565b600f55565b610b6b6113d2565b600955565b60606002805461068590611dbe565b80600081118015610b925750600d548111155b610bd55760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964206d696e7420616d6f756e742160601b6044820152606401610773565b600a5481600054610be69190611e0e565b1115610c2b5760405162461bcd60e51b81526020600482015260146024820152734d617820737570706c792065786365656465642160601b6044820152606401610773565b600e5460ff16610c735760405162461bcd60e51b815260206004820152601360248201527253616c65206973206e6f74206163746976652160681b6044820152606401610773565b600082600954610c839190611f2f565b9050600f546000541015610d0a5733600090815260116020526040812054600c54610cae9190611f46565b90508015610d0857808410610ce557600954610cca9082611f2f565b610cd49083611f46565b9150610ce03382611688565b610d08565b600954610cf29085611f2f565b610cfc9083611f46565b9150610d083385611688565b505b80341015610d505760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742066756e64732160681b6044820152606401610773565b6108aa3384611545565b336001600160a01b03831603610db25760405162461bcd60e51b815260206004820152601a60248201527f455243373231413a20617070726f766520746f2063616c6c65720000000000006044820152606401610773565b3360008181526006602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610e266113d2565b600c55565b610e368484846110ed565b610e42848484846116b9565b610e5e5760405162461bcd60e51b815260040161077390611f59565b50505050565b610e6c6113d2565b600a548110610eb65760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206e6577206d617820737570706c7960501b6044820152606401610773565b600054811015610f015760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206e6577206d617820737570706c7960501b6044820152606401610773565b600a55565b6060610f13826000541190565b610f775760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610773565b6000610f816117bb565b90508051600003610fa15760405180602001604052806000815250610fcc565b80610fab846117ca565b604051602001610fbc929190611fac565b6040516020818303038152906040525b9392505050565b610fdb6113d2565b6010805460ff19166001179055565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b6110206113d2565b6001600160a01b0381166110855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610773565b61108e81611636565b50565b60008281526005602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006110f88261155f565b80519091506000906001600160a01b0316336001600160a01b0316148061112f57503361112484610708565b6001600160a01b0316145b80611141575081516111419033610fea565b9050806111ab5760405162461bcd60e51b815260206004820152603260248201527f455243373231413a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610773565b846001600160a01b031682600001516001600160a01b03161461121f5760405162461bcd60e51b815260206004820152602660248201527f455243373231413a207472616e736665722066726f6d20696e636f72726563746044820152651037bbb732b960d11b6064820152608401610773565b6001600160a01b0384166112835760405162461bcd60e51b815260206004820152602560248201527f455243373231413a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610773565b6112936000848460000151611091565b6001600160a01b03858116600090815260046020908152604080832080546001600160801b03198082166001600160801b03928316600019018316179092558986168086528386208054938416938316600190810190931693909317909255888552600390935281842080546001600160e01b031916909117600160a01b4267ffffffffffffffff16021790559086018083529120549091166113885761133b816000541190565b15611388578251600082815260036020908152604090912080549186015167ffffffffffffffff16600160a01b026001600160e01b03199092166001600160a01b03909316929092171790555b5082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b5050505050565b6007546001600160a01b03163314610b395760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610773565b8047101561147c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610773565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146114c9576040519150601f19603f3d011682016040523d82523d6000602084013e6114ce565b606091505b50509050806108aa5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610773565b610a738282604051806020016040528060008152506118cb565b604080518082019091526000808252602082015261157e826000541190565b6115dd5760405162461bcd60e51b815260206004820152602a60248201527f455243373231413a206f776e657220717565727920666f72206e6f6e657869736044820152693a32b73a103a37b5b2b760b11b6064820152608401610773565b815b6000818152600360209081526040918290208251808401909352546001600160a01b038116808452600160a01b90910467ffffffffffffffff16918301919091521561162c579392505050565b50600019016115df565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216600090815260116020526040812080548392906116b0908490611e0e565b90915550505050565b60006001600160a01b0384163b156117af57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906116fd903390899088908890600401611fdb565b6020604051808303816000875af1925050508015611738575060408051601f3d908101601f1916820190925261173591810190612018565b60015b611795573d808015611766576040519150601f19603f3d011682016040523d82523d6000602084013e61176b565b606091505b50805160000361178d5760405162461bcd60e51b815260040161077390611f59565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506117b3565b5060015b949350505050565b6060600b805461068590611dbe565b6060816000036117f15750506040805180820190915260018152600360fc1b602082015290565b8160005b811561181b578061180581612035565b91506118149050600a83612064565b91506117f5565b60008167ffffffffffffffff81111561183657611836611bca565b6040519080825280601f01601f191660200182016040528015611860576020820181803683370190505b5090505b84156117b357611875600183611f46565b9150611882600a86612078565b61188d906030611e0e565b60f81b8183815181106118a2576118a261208c565b60200101906001600160f81b031916908160001a9053506118c4600a86612064565b9450611864565b6108aa83838360016000546001600160a01b0385166119365760405162461bcd60e51b815260206004820152602160248201527f455243373231413a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610773565b836000036119975760405162461bcd60e51b815260206004820152602860248201527f455243373231413a207175616e74697479206d75737420626520677265617465604482015267072207468616e20360c41b6064820152608401610773565b6001600160a01b03851660008181526004602090815260408083208054600160801b6001600160801b031982166001600160801b039283168c01831690811782900483168c01909216021790558483526003909152812080546001600160e01b031916909217600160a01b4267ffffffffffffffff16021790915581905b85811015611a905760405182906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a48315611a8457611a6860008884886116b9565b611a845760405162461bcd60e51b815260040161077390611f59565b60019182019101611a15565b506000556113cb565b6001600160e01b03198116811461108e57600080fd5b600060208284031215611ac157600080fd5b8135610fcc81611a99565b60005b83811015611ae7578181015183820152602001611acf565b50506000910152565b60008151808452611b08816020860160208601611acc565b601f01601f19169290920160200192915050565b602081526000610fcc6020830184611af0565b600060208284031215611b4157600080fd5b5035919050565b80356001600160a01b0381168114611b5f57600080fd5b919050565b60008060408385031215611b7757600080fd5b611b8083611b48565b946020939093013593505050565b600080600060608486031215611ba357600080fd5b611bac84611b48565b9250611bba60208501611b48565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611bfb57611bfb611bca565b604051601f8501601f19908116603f01168101908282118183101715611c2357611c23611bca565b81604052809350858152868686011115611c3c57600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611c6857600080fd5b813567ffffffffffffffff811115611c7f57600080fd5b8201601f81018413611c9057600080fd5b6117b384823560208401611be0565b600060208284031215611cb157600080fd5b610fcc82611b48565b80358015158114611b5f57600080fd5b600060208284031215611cdc57600080fd5b610fcc82611cba565b60008060408385031215611cf857600080fd5b611d0183611b48565b9150611d0f60208401611cba565b90509250929050565b60008060008060808587031215611d2e57600080fd5b611d3785611b48565b9350611d4560208601611b48565b925060408501359150606085013567ffffffffffffffff811115611d6857600080fd5b8501601f81018713611d7957600080fd5b611d8887823560208401611be0565b91505092959194509250565b60008060408385031215611da757600080fd5b611db083611b48565b9150611d0f60208401611b48565b600181811c90821680611dd257607f821691505b602082108103611df257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561067057610670611df8565b601f8211156108aa57600081815260208120601f850160051c81016020861015611e485750805b601f850160051c820191505b81811015611e6757828155600101611e54565b505050505050565b815167ffffffffffffffff811115611e8957611e89611bca565b611e9d81611e978454611dbe565b84611e21565b602080601f831160018114611ed25760008415611eba5750858301515b600019600386901b1c1916600185901b178555611e67565b600085815260208120601f198616915b82811015611f0157888601518255948401946001909101908401611ee2565b5085821015611f1f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808202811582820484141761067057610670611df8565b8181038181111561067057610670611df8565b60208082526033908201527f455243373231413a207472616e7366657220746f206e6f6e204552433732315260408201527232b1b2b4bb32b91034b6b83632b6b2b73a32b960691b606082015260800190565b60008351611fbe818460208801611acc565b835190830190611fd2818360208801611acc565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061200e90830184611af0565b9695505050505050565b60006020828403121561202a57600080fd5b8151610fcc81611a99565b60006001820161204757612047611df8565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826120735761207361204e565b500490565b6000826120875761208761204e565b500690565b634e487b7160e01b600052603260045260246000fdfea26469706673582212201c479dc284b44daf432fcb7e3fe228ba3c11e83b7ab1b774284a872d032c095564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x24D8 CODESIZE SUB DUP1 PUSH3 0x24D8 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x17C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x476C7574746F6E79 PUSH1 0xC0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x474C542D374453 PUSH1 0xC8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x86 SWAP2 SWAP1 PUSH3 0x324 JUMP JUMPDEST POP PUSH1 0x2 PUSH3 0x95 DUP3 DUP3 PUSH3 0x324 JUMP JUMPDEST POP POP POP PUSH3 0xB2 PUSH3 0xAC PUSH3 0xFA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 SSTORE PUSH1 0x9 DUP8 SWAP1 SSTORE PUSH1 0xA DUP7 SWAP1 SSTORE PUSH1 0xB PUSH3 0xCF DUP7 DUP3 PUSH3 0x324 JUMP JUMPDEST POP PUSH1 0xC SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xF SSTORE POP PUSH3 0x3F0 SWAP2 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 MLOAD PUSH1 0x20 DUP1 DUP11 ADD MLOAD PUSH1 0x40 DUP12 ADD MLOAD SWAP3 SWAP10 POP SWAP8 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x1EB JUMPI PUSH3 0x1EB PUSH3 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x216 JUMPI PUSH3 0x216 PUSH3 0x150 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP15 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x253 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x234 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP11 POP POP POP POP POP POP POP PUSH1 0x60 DUP9 ADD MLOAD SWAP4 POP PUSH1 0x80 DUP9 ADD MLOAD SWAP3 POP PUSH3 0x280 PUSH1 0xA0 DUP10 ADD PUSH3 0x166 JUMP JUMPDEST SWAP2 POP PUSH1 0xC0 DUP9 ADD MLOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2AA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x31F JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x2FA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x31B JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x306 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x340 JUMPI PUSH3 0x340 PUSH3 0x150 JUMP JUMPDEST PUSH3 0x358 DUP2 PUSH3 0x351 DUP5 SLOAD PUSH3 0x295 JUMP JUMPDEST DUP5 PUSH3 0x2D1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x390 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x377 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x31B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3C1 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x3A0 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x3E0 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x20D8 DUP1 PUSH3 0x400 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x595 JUMPI DUP1 PUSH4 0xD111515D EQ PUSH2 0x5B5 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0xFDB4953A EQ PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xB0551AC4 EQ PUSH2 0x535 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0xC4E9374D EQ PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8D859F3E GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x8D859F3E EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0x91B7F5ED EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x76D02B71 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x841718A6 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0x8B85E43D EQ PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32CB6B0C GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x616CDB1E EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x4065B85F EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x408CBF94 EQ PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9EF6527 GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x9EF6527 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x10B0C052 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x298 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAF JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x2D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x324 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8E JUMP JUMPDEST PUSH2 0x8AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x8BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x385 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x940 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8E JUMP JUMPDEST PUSH2 0x9FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C56 JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x3E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0xA77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0xA84 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C9F JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0xB27 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x229 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0xB3B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x494 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0xB56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x280 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x4E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0xB63 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0xB70 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x510 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0xB7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x530 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0xD5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x550 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x570 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D18 JUMP JUMPDEST PUSH2 0xE2B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x590 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0xE64 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x5B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0xF06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0xFD3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x5E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D94 JUMP JUMPDEST PUSH2 0xFEA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x605 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C9F JUMP JUMPDEST PUSH2 0x1018 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x229 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x655 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x670 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x685 SWAP1 PUSH2 0x1DBE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6B1 SWAP1 PUSH2 0x1DBE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x715 DUP3 PUSH1 0x0 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20617070726F76656420717565727920666F72206E6F6E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x3C34B9BA32B73A103A37B5B2B7 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A3 DUP3 PUSH2 0xA84 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20617070726F76616C20746F2063757272656E74206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x82D JUMPI POP PUSH2 0x82D DUP2 CALLER PUSH2 0xFEA JUMP JUMPDEST PUSH2 0x89F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20617070726F76652063616C6C6572206973206E6F74206F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F76656420666F7220616C6C00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST PUSH2 0x8AA DUP4 DUP4 DUP4 PUSH2 0x1091 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8AA DUP4 DUP4 DUP4 PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x8C2 PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x8 SLOAD SUB PUSH2 0x914 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x8 SSTORE SELFBALANCE PUSH2 0x938 PUSH20 0xC919CE1B37FC4E0405885A3350CC153B27DD06E0 DUP3 PUSH2 0x142C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x8 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x953 JUMPI POP PUSH1 0xD SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x996 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C6964206D696E7420616D6F756E7421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 PUSH1 0x0 SLOAD PUSH2 0x9A7 SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST GT ISZERO PUSH2 0x9EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4D617820737570706C7920657863656564656421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH2 0x9F4 PUSH2 0x13D2 JUMP JUMPDEST PUSH2 0x8AA DUP4 DUP4 PUSH2 0x1545 JUMP JUMPDEST PUSH2 0x8AA DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xE2B JUMP JUMPDEST PUSH2 0xA21 PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4D657461646174612066726F7A656E21 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0xB PUSH2 0xA73 DUP3 DUP3 PUSH2 0x1E6F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA7F PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8F DUP3 PUSH2 0x155F JUMP JUMPDEST MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xB2F PUSH2 0x13D2 JUMP JUMPDEST PUSH2 0xB39 PUSH1 0x0 PUSH2 0x1636 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB43 PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB5E PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0xF SSTORE JUMP JUMPDEST PUSH2 0xB6B PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x685 SWAP1 PUSH2 0x1DBE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0xB92 JUMPI POP PUSH1 0xD SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0xBD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C6964206D696E7420616D6F756E7421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 PUSH1 0x0 SLOAD PUSH2 0xBE6 SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST GT ISZERO PUSH2 0xC2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4D617820737570706C7920657863656564656421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x53616C65206973206E6F742061637469766521 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x9 SLOAD PUSH2 0xC83 SWAP2 SWAP1 PUSH2 0x1F2F JUMP JUMPDEST SWAP1 POP PUSH1 0xF SLOAD PUSH1 0x0 SLOAD LT ISZERO PUSH2 0xD0A JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xC SLOAD PUSH2 0xCAE SWAP2 SWAP1 PUSH2 0x1F46 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xD08 JUMPI DUP1 DUP5 LT PUSH2 0xCE5 JUMPI PUSH1 0x9 SLOAD PUSH2 0xCCA SWAP1 DUP3 PUSH2 0x1F2F JUMP JUMPDEST PUSH2 0xCD4 SWAP1 DUP4 PUSH2 0x1F46 JUMP JUMPDEST SWAP2 POP PUSH2 0xCE0 CALLER DUP3 PUSH2 0x1688 JUMP JUMPDEST PUSH2 0xD08 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0xCF2 SWAP1 DUP6 PUSH2 0x1F2F JUMP JUMPDEST PUSH2 0xCFC SWAP1 DUP4 PUSH2 0x1F46 JUMP JUMPDEST SWAP2 POP PUSH2 0xD08 CALLER DUP6 PUSH2 0x1688 JUMP JUMPDEST POP JUMPDEST DUP1 CALLVALUE LT ISZERO PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E73756666696369656E742066756E647321 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH2 0x8AA CALLER DUP5 PUSH2 0x1545 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0xDB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20617070726F766520746F2063616C6C6572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xE26 PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0xC SSTORE JUMP JUMPDEST PUSH2 0xE36 DUP5 DUP5 DUP5 PUSH2 0x10ED JUMP JUMPDEST PUSH2 0xE42 DUP5 DUP5 DUP5 DUP5 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0xE5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x773 SWAP1 PUSH2 0x1F59 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xE6C PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 LT PUSH2 0xEB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206E6577206D617820737570706C79 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xF01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206E6577206D617820737570706C79 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF13 DUP3 PUSH1 0x0 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0xF77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF81 PUSH2 0x17BB JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xFA1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xFCC JUMP JUMPDEST DUP1 PUSH2 0xFAB DUP5 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFBC SWAP3 SWAP2 SWAP1 PUSH2 0x1FAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFDB PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1020 PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1085 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST PUSH2 0x108E DUP2 PUSH2 0x1636 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F8 DUP3 PUSH2 0x155F JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x112F JUMPI POP CALLER PUSH2 0x1124 DUP5 PUSH2 0x708 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x1141 JUMPI POP DUP2 MLOAD PUSH2 0x1141 SWAP1 CALLER PUSH2 0xFEA JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x11AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x121F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A207472616E736665722066726F6D20696E636F7272656374 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1037BBB732B9 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1283 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST PUSH2 0x1293 PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP1 DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 NOT ADD DUP4 AND OR SWAP1 SWAP3 SSTORE DUP10 DUP7 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD SWAP4 DUP5 AND SWAP4 DUP4 AND PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP4 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP9 DUP6 MSTORE PUSH1 0x3 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xA0 SHL TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE SWAP1 DUP7 ADD DUP1 DUP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 AND PUSH2 0x1388 JUMPI PUSH2 0x133B DUP2 PUSH1 0x0 SLOAD GT SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1388 JUMPI DUP3 MLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE JUMPDEST POP DUP3 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x147C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14C9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x8AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST PUSH2 0xA73 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x157E DUP3 PUSH1 0x0 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x15DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A206F776E657220717565727920666F72206E6F6E65786973 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x3A32B73A103A37B5B2B7 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP5 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO PUSH2 0x162C JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x0 NOT ADD PUSH2 0x15DF JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x16B0 SWAP1 DUP5 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x17AF JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x16FD SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1FDB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1738 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1735 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2018 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1795 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1766 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x176B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x178D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x773 SWAP1 PUSH2 0x1F59 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x17B3 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD PUSH2 0x685 SWAP1 PUSH2 0x1DBE JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x17F1 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x181B JUMPI DUP1 PUSH2 0x1805 DUP2 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1814 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x2064 JUMP JUMPDEST SWAP2 POP PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1836 JUMPI PUSH2 0x1836 PUSH2 0x1BCA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1860 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x17B3 JUMPI PUSH2 0x1875 PUSH1 0x1 DUP4 PUSH2 0x1F46 JUMP JUMPDEST SWAP2 POP PUSH2 0x1882 PUSH1 0xA DUP7 PUSH2 0x2078 JUMP JUMPDEST PUSH2 0x188D SWAP1 PUSH1 0x30 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x18A2 JUMPI PUSH2 0x18A2 PUSH2 0x208C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x18C4 PUSH1 0xA DUP7 PUSH2 0x2064 JUMP JUMPDEST SWAP5 POP PUSH2 0x1864 JUMP JUMPDEST PUSH2 0x8AA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1936 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST DUP4 PUSH1 0x0 SUB PUSH2 0x1997 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A207175616E74697479206D75737420626520677265617465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x72207468616E203 PUSH1 0xC4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 DUP4 AND DUP13 ADD DUP4 AND SWAP1 DUP2 OR DUP3 SWAP1 DIV DUP4 AND DUP13 ADD SWAP1 SWAP3 AND MUL OR SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0xA0 SHL TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1A90 JUMPI PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 DUP4 ISZERO PUSH2 0x1A84 JUMPI PUSH2 0x1A68 PUSH1 0x0 DUP9 DUP5 DUP9 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x1A84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x773 SWAP1 PUSH2 0x1F59 JUMP JUMPDEST PUSH1 0x1 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1A15 JUMP JUMPDEST POP PUSH1 0x0 SSTORE PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x108E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFCC DUP2 PUSH2 0x1A99 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AE7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1ACF JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1B08 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xFCC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B80 DUP4 PUSH2 0x1B48 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BAC DUP5 PUSH2 0x1B48 JUMP JUMPDEST SWAP3 POP PUSH2 0x1BBA PUSH1 0x20 DUP6 ADD PUSH2 0x1B48 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1BFB JUMPI PUSH2 0x1BFB PUSH2 0x1BCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1C23 JUMPI PUSH2 0x1C23 PUSH2 0x1BCA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1C3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1C90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17B3 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1BE0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFCC DUP3 PUSH2 0x1B48 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFCC DUP3 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D01 DUP4 PUSH2 0x1B48 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D0F PUSH1 0x20 DUP5 ADD PUSH2 0x1CBA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D37 DUP6 PUSH2 0x1B48 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D45 PUSH1 0x20 DUP7 ADD PUSH2 0x1B48 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1D79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D88 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1BE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DB0 DUP4 PUSH2 0x1B48 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D0F PUSH1 0x20 DUP5 ADD PUSH2 0x1B48 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1DD2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DF2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x670 JUMPI PUSH2 0x670 PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x8AA JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1E48 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E67 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E54 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E89 JUMPI PUSH2 0x1E89 PUSH2 0x1BCA JUMP JUMPDEST PUSH2 0x1E9D DUP2 PUSH2 0x1E97 DUP5 SLOAD PUSH2 0x1DBE JUMP JUMPDEST DUP5 PUSH2 0x1E21 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1ED2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1EBA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1E67 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1F01 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1EE2 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1F1F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x670 JUMPI PUSH2 0x670 PUSH2 0x1DF8 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x670 JUMPI PUSH2 0x670 PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x33 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243373231413A207472616E7366657220746F206E6F6E2045524337323152 PUSH1 0x40 DUP3 ADD MSTORE PUSH19 0x32B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x69 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1FBE DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1ACC JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1FD2 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1ACC JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x200E SWAP1 DUP4 ADD DUP5 PUSH2 0x1AF0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x202A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xFCC DUP2 PUSH2 0x1A99 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2047 JUMPI PUSH2 0x2047 PUSH2 0x1DF8 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2073 JUMPI PUSH2 0x2073 PUSH2 0x204E JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2087 JUMPI PUSH2 0x2087 PUSH2 0x204E JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SELFBALANCE SWAP14 0xC2 DUP5 0xB4 0x4D 0xAF NUMBER 0x2F 0xCB PUSH31 0x3FE228BA3C11E83B7AB1B774284A872D032C095564736F6C63430008110033 ",
							"sourceMap": "207:4121:11:-:0;;;699:501;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2002:116:10;;;;;;;;;;;;;-1:-1:-1;;;2002:116:10;;;;;;;;;;;;;;;;-1:-1:-1;;;2002:116:10;;;2077:5;2069;:13;;;;;;:::i;:::-;-1:-1:-1;2093:7:10;:17;2103:7;2093;:17;:::i;:::-;;2002:116;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;1701:1:1;1806:7;:22;910:5:11::1;:13:::0;;;934:10:::1;:22:::0;;;967:8:::1;:18;978:7:::0;967:8;:18:::1;:::i;:::-;-1:-1:-1::0;996:26:11::1;:46:::0;;;;1053:22:::1;:37:::0;;;;1101:14:::1;:29:::0;;-1:-1:-1;;1101:29:11::1;::::0;::::1;;::::0;;;::::1;::::0;;1141:26:::1;:51:::0;-1:-1:-1;207:4121:11;;-1:-1:-1;;207:4121:11;640:96:6;719:10;;640:96::o;2433:187:0:-;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:12:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:164;222:13;;271;;264:21;254:32;;244:60;;300:1;297;290:12;244:60;146:164;;;:::o;315:1430::-;446:6;454;462;470;478;486;494;547:3;535:9;526:7;522:23;518:33;515:53;;;564:1;561;554:12;515:53;587:16;;622:2;649:18;;;643:25;712:2;697:18;;691:25;587:16;;-1:-1:-1;643:25:12;-1:-1:-1;622:2:12;-1:-1:-1;;;;;765:14:12;;;762:34;;;792:1;789;782:12;762:34;830:6;819:9;815:22;805:32;;875:7;868:4;864:2;860:13;856:27;846:55;;897:1;894;887:12;846:55;926:2;920:9;948:2;944;941:10;938:36;;;954:18;;:::i;:::-;1029:2;1023:9;997:2;1083:13;;-1:-1:-1;;1079:22:12;;;1103:2;1075:31;1071:40;1059:53;;;1127:18;;;1147:22;;;1124:46;1121:72;;;1173:18;;:::i;:::-;1213:10;1209:2;1202:22;1248:2;1240:6;1233:18;1288:7;1283:2;1278;1274;1270:11;1266:20;1263:33;1260:53;;;1309:1;1306;1299:12;1260:53;1331:1;1322:10;;1341:129;1355:2;1352:1;1349:9;1341:129;;;1443:10;;;1439:19;;1433:26;1412:14;;;1408:23;;1401:59;1366:10;;;;1341:129;;;1512:1;1507:2;1502;1494:6;1490:15;1486:24;1479:35;1533:6;1523:16;;;;;;;;1579:2;1568:9;1564:18;1558:25;1548:35;;1623:3;1612:9;1608:19;1602:26;1592:36;;1647:47;1689:3;1678:9;1674:19;1647:47;:::i;:::-;1637:57;;1734:3;1723:9;1719:19;1713:26;1703:36;;315:1430;;;;;;;;;;:::o;1750:380::-;1829:1;1825:12;;;;1872;;;1893:61;;1947:4;1939:6;1935:17;1925:27;;1893:61;2000:2;1992:6;1989:14;1969:18;1966:38;1963:161;;2046:10;2041:3;2037:20;2034:1;2027:31;2081:4;2078:1;2071:15;2109:4;2106:1;2099:15;1963:161;;1750:380;;;:::o;2261:545::-;2363:2;2358:3;2355:11;2352:448;;;2399:1;2424:5;2420:2;2413:17;2469:4;2465:2;2455:19;2539:2;2527:10;2523:19;2520:1;2516:27;2510:4;2506:38;2575:4;2563:10;2560:20;2557:47;;;-1:-1:-1;2598:4:12;2557:47;2653:2;2648:3;2644:12;2641:1;2637:20;2631:4;2627:31;2617:41;;2708:82;2726:2;2719:5;2716:13;2708:82;;;2771:17;;;2752:1;2741:13;2708:82;;;2712:3;;;2352:448;2261:545;;;:::o;2982:1352::-;3102:10;;-1:-1:-1;;;;;3124:30:12;;3121:56;;;3157:18;;:::i;:::-;3186:97;3276:6;3236:38;3268:4;3262:11;3236:38;:::i;:::-;3230:4;3186:97;:::i;:::-;3338:4;;3402:2;3391:14;;3419:1;3414:663;;;;4121:1;4138:6;4135:89;;;-1:-1:-1;4190:19:12;;;4184:26;4135:89;-1:-1:-1;;2939:1:12;2935:11;;;2931:24;2927:29;2917:40;2963:1;2959:11;;;2914:57;4237:81;;3384:944;;3414:663;2208:1;2201:14;;;2245:4;2232:18;;-1:-1:-1;;3450:20:12;;;3568:236;3582:7;3579:1;3576:14;3568:236;;;3671:19;;;3665:26;3650:42;;3763:27;;;;3731:1;3719:14;;;;3598:19;;3568:236;;;3572:3;3832:6;3823:7;3820:19;3817:201;;;3893:19;;;3887:26;-1:-1:-1;;3976:1:12;3972:14;;;3988:3;3968:24;3964:37;3960:42;3945:58;3930:74;;3817:201;-1:-1:-1;;;;;4064:1:12;4048:14;;;4044:22;4031:36;;-1:-1:-1;2982:1352:12:o;:::-;207:4121:11;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@FREE_MINT_IS_ALLOWED_UNTIL_1875": {
									"entryPoint": null,
									"id": 1875,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@FREE_MINT_LIMIT_PER_WALLET_1869": {
									"entryPoint": null,
									"id": 1869,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@IS_SALE_ACTIVE_1873": {
									"entryPoint": null,
									"id": 1873,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_MINT_AMOUNT_PER_TX_1871": {
									"entryPoint": null,
									"id": 1871,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_SUPPLY_1865": {
									"entryPoint": null,
									"id": 1865,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@METADATA_FROZEN_1877": {
									"entryPoint": null,
									"id": 1877,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PRICE_1863": {
									"entryPoint": null,
									"id": 1863,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfers_1846": {
									"entryPoint": null,
									"id": 1846,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_1756": {
									"entryPoint": 4241,
									"id": 1756,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_1956": {
									"entryPoint": 6075,
									"id": 1956,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1833": {
									"entryPoint": null,
									"id": 1833,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1820": {
									"entryPoint": 5817,
									"id": 1820,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_checkOwner_54": {
									"entryPoint": 5074,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_exists_1396": {
									"entryPoint": null,
									"id": 1396,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_mint_1568": {
									"entryPoint": null,
									"id": 1568,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_620": {
									"entryPoint": null,
									"id": 620,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeMint_1410": {
									"entryPoint": 5445,
									"id": 1410,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_1428": {
									"entryPoint": 6347,
									"id": 1428,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 5686,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1733": {
									"entryPoint": 4333,
									"id": 1733,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_1243": {
									"entryPoint": 1944,
									"id": 1243,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1035": {
									"entryPoint": 2710,
									"id": 1035,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@freezeMetadata_2071": {
									"entryPoint": 4051,
									"id": 2071,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getApproved_1264": {
									"entryPoint": 1800,
									"id": 1264,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1316": {
									"entryPoint": 4074,
									"id": 1316,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_331": {
									"entryPoint": null,
									"id": 331,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lowerMaxSupply_1995": {
									"entryPoint": 3684,
									"id": 1995,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mintOwner_2199": {
									"entryPoint": 2368,
									"id": 2199,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mint_2181": {
									"entryPoint": 2943,
									"id": 2181,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_1138": {
									"entryPoint": 1654,
									"id": 1138,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1128": {
									"entryPoint": 2692,
									"id": 1128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownershipOf_1113": {
									"entryPoint": 5471,
									"id": 1113,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 2855,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_1353": {
									"entryPoint": 2558,
									"id": 1353,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1383": {
									"entryPoint": 3627,
									"id": 1383,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@sendValue_365": {
									"entryPoint": 5164,
									"id": 365,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setApprovalForAll_1298": {
									"entryPoint": 3418,
									"id": 1298,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBaseURI_2013": {
									"entryPoint": 2585,
									"id": 2013,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFreeMintAllowance_2025": {
									"entryPoint": 3614,
									"id": 2025,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFreeMintAllowedUntil_2061": {
									"entryPoint": 2902,
									"id": 2061,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMaxMintPerTx_2037": {
									"entryPoint": 2679,
									"id": 2037,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPrice_1969": {
									"entryPoint": 2915,
									"id": 1969,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSaleActive_2049": {
									"entryPoint": 2875,
									"id": 2049,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1007": {
									"entryPoint": 1572,
									"id": 1007,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_879": {
									"entryPoint": null,
									"id": 879,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1148": {
									"entryPoint": 2928,
									"id": 1148,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_718": {
									"entryPoint": 6090,
									"id": 718,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1190": {
									"entryPoint": 3846,
									"id": 1190,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_976": {
									"entryPoint": null,
									"id": 976,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1334": {
									"entryPoint": 2223,
									"id": 1334,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 4120,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateFreeMintCount_1946": {
									"entryPoint": 5768,
									"id": 1946,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdraw_2229": {
									"entryPoint": 2234,
									"id": 2229,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 6984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_string": {
									"entryPoint": 7136,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bool": {
									"entryPoint": 7354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 7370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 7254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 6896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8108,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8155,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2afc881382e53668af85e40886889fd546013099ff9b53bdd0e598bbbfa87bda__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b2e2dcfc27254beaa6bfe8a568c90788b9920eb389c662813e1427b0b2225259__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b72e8ae0edd5a513ad336746f164deb3f6e417f35e767bb8deba9958034035ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c155652365f31b560217ab6dcf4c24f3e9bd67eb9c1aab565a9269af9210eeb7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c61dd4df19bfedc67e9e65903122dd2df745b4c85f6abbd7f899090fbd4396a3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d44a4129b83bd8f726e10653f1f05aa5a9f14d8c9c066d6e6701839279ddce3b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dc1f9fb0e603971836d588a8edc31ad1917393079ad1425796c0e460d6033de1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f996caab982251e084504d5fd2ef64388ceaab43bf427eb5c8324e92803cd686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 7713,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 7791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6860,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7672,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8332,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 6809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:20633:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:12",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:12",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:12"
															},
															"nodeType": "YulIf",
															"src": "68:71:12"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:12",
														"type": ""
													}
												],
												"src": "14:131:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:12"
															},
															"nodeType": "YulIf",
															"src": "229:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:12",
														"type": ""
													}
												],
												"src": "150:245:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:12",
														"type": ""
													}
												],
												"src": "400:187:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "658:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "668:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "677:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "672:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "737:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "762:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "767:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "758:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "781:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "786:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "777:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "777:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "771:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "751:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "751:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "698:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "701:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "709:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "711:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "720:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "723:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "711:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "691:3:12",
																"statements": []
															},
															"src": "687:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "816:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "834:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "809:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "809:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "636:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "641:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "646:6:12",
														"type": ""
													}
												],
												"src": "592:250:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:221:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "907:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "921:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "911:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "942:19:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1009:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1016:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1005:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1005:16:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1032:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "970:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:76:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "970:76:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1055:57:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1062:50:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "874:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "881:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "889:3:12",
														"type": ""
													}
												],
												"src": "847:271:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1244:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1261:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1254:21:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1284:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1318:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1292:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:45:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1284:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1213:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1224:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1235:4:12",
														"type": ""
													}
												],
												"src": "1123:220:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1418:110:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1464:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:32:12"
															},
															"nodeType": "YulIf",
															"src": "1428:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1489:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1499:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1384:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1395:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1407:6:12",
														"type": ""
													}
												],
												"src": "1348:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1634:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1644:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1644:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1701:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1722:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1713:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1713:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1726:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1709:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1709:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1679:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1679:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1603:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1614:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1625:4:12",
														"type": ""
													}
												],
												"src": "1533:203:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1800:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1892:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1901:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1904:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1894:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1862:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1882:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1873:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1873:11:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1886:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1869:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1869:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1858:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1848:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1848:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:50:12"
															},
															"nodeType": "YulIf",
															"src": "1838:70:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1780:5:12",
														"type": ""
													}
												],
												"src": "1741:173:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:167:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2052:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2054:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2054:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2054:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2027:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2023:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:32:12"
															},
															"nodeType": "YulIf",
															"src": "2016:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2077:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2087:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2125:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2135:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1964:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1975:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1987:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1995:6:12",
														"type": ""
													}
												],
												"src": "1919:254:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2279:76:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2289:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2301:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2312:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2297:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2297:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2289:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2331:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2342:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2324:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2248:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2259:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2270:4:12",
														"type": ""
													}
												],
												"src": "2178:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2464:224:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2510:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2519:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2522:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2512:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2512:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2512:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2485:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2494:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2481:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2506:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2477:32:12"
															},
															"nodeType": "YulIf",
															"src": "2474:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2535:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2564:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2545:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2545:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2535:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2583:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2616:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2627:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2612:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2612:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2593:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2593:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2583:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2640:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2667:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2678:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2663:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2663:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2650:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2650:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2640:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2414:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2425:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2437:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2445:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2453:6:12",
														"type": ""
													}
												],
												"src": "2360:328:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2725:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2742:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2749:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2754:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2745:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2745:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2735:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2735:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2735:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2782:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2785:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2775:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2775:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2775:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2806:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2809:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2799:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2799:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2799:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2693:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2900:557:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2910:28:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2920:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2914:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2965:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2967:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2967:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2967:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2953:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2961:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2950:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2950:14:12"
															},
															"nodeType": "YulIf",
															"src": "2947:40:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2996:17:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3010:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3006:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3006:7:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3000:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3022:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3042:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3036:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3036:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3026:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3054:73:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3076:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nodeType": "YulIdentifier",
																										"src": "3100:6:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3108:2:12",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3096:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3096:15:12"
																							},
																							{
																								"name": "_2",
																								"nodeType": "YulIdentifier",
																								"src": "3113:2:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "3092:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3092:24:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3118:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3088:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3088:33:12"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "3123:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3084:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3084:42:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3072:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3072:55:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3058:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3186:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3188:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3188:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3188:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3145:10:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3157:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3142:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3142:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3165:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3177:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3162:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3162:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3139:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:46:12"
															},
															"nodeType": "YulIf",
															"src": "3136:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3224:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3228:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3217:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3217:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3217:22:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3248:15:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3257:6:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3248:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3279:6:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3287:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3272:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3272:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3272:22:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3332:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3341:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3344:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3334:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3334:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3334:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3313:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3318:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3309:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3309:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3327:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3306:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3306:25:12"
															},
															"nodeType": "YulIf",
															"src": "3303:45:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3374:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3382:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3370:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3370:17:12"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3389:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3394:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3357:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3357:44:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3357:44:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3425:6:12"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "3433:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3421:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3421:19:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3442:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3417:30:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3449:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3410:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3410:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3410:41:12"
														}
													]
												},
												"name": "abi_decode_available_length_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2869:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2874:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2882:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2890:5:12",
														"type": ""
													}
												],
												"src": "2825:632:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3542:371:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3588:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3597:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3600:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3590:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3590:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3590:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3563:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3572:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3559:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3559:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3584:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3555:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3555:32:12"
															},
															"nodeType": "YulIf",
															"src": "3552:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3613:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3640:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3627:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:23:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3617:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3693:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3702:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3705:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3695:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3695:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3695:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3665:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3673:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3662:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3662:30:12"
															},
															"nodeType": "YulIf",
															"src": "3659:50:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3718:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3732:9:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3743:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3728:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3728:22:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3722:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3798:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3807:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3810:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3800:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3800:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3800:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3777:2:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3781:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3773:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3773:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3788:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3769:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3769:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3762:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3762:35:12"
															},
															"nodeType": "YulIf",
															"src": "3759:55:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3823:84:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3872:2:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3876:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3868:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3868:11:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3894:2:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3881:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3881:16:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3899:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nodeType": "YulIdentifier",
																	"src": "3833:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3833:74:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3823:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3508:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3519:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3531:6:12",
														"type": ""
													}
												],
												"src": "3462:451:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3988:116:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4034:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4043:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4046:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4036:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4036:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4036:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4009:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4018:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4005:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4005:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4030:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4001:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4001:32:12"
															},
															"nodeType": "YulIf",
															"src": "3998:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4059:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4088:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4069:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4069:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4059:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3954:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3965:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3977:6:12",
														"type": ""
													}
												],
												"src": "3918:186:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4155:114:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4165:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4187:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4174:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4174:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4165:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4247:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4256:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4259:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4249:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4249:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4249:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4216:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4237:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4230:6:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4230:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4223:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4223:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4213:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4213:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4206:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4206:40:12"
															},
															"nodeType": "YulIf",
															"src": "4203:60:12"
														}
													]
												},
												"name": "abi_decode_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4134:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4145:5:12",
														"type": ""
													}
												],
												"src": "4109:160:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4341:113:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4387:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4396:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4399:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4389:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4389:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4389:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4362:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4371:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4358:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4358:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4383:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4354:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4354:32:12"
															},
															"nodeType": "YulIf",
															"src": "4351:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4412:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4438:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4422:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4422:26:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4412:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4307:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4318:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4330:6:12",
														"type": ""
													}
												],
												"src": "4274:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4543:170:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4589:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4598:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4601:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4591:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4591:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4591:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4564:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4573:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4560:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4560:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4585:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4556:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4556:32:12"
															},
															"nodeType": "YulIf",
															"src": "4553:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4614:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4643:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4624:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4624:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4614:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4662:45:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4692:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4703:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4688:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4688:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4672:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4672:35:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4662:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4501:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4512:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4524:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4532:6:12",
														"type": ""
													}
												],
												"src": "4459:254:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4848:537:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4895:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4904:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4907:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4897:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4897:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4897:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4869:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4878:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4865:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4865:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4890:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4861:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4861:33:12"
															},
															"nodeType": "YulIf",
															"src": "4858:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4920:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4949:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4930:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4930:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4920:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4968:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5001:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5012:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4997:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4997:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4978:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4978:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4968:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5025:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5052:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5063:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5048:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5048:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5035:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5035:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5025:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5076:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5107:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5118:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5103:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5103:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5090:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5090:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5080:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5165:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5174:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5177:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5167:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5167:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5167:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5137:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5145:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5134:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5134:30:12"
															},
															"nodeType": "YulIf",
															"src": "5131:50:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5190:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5204:9:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5215:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5200:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5200:22:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5194:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5270:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5279:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5282:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5272:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5272:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5272:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "5249:2:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5253:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5245:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5245:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5260:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5241:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5241:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5234:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5234:35:12"
															},
															"nodeType": "YulIf",
															"src": "5231:55:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5295:84:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5344:2:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5348:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5340:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5340:11:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5366:2:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5353:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5353:16:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5371:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nodeType": "YulIdentifier",
																	"src": "5305:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5305:74:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5295:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4790:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4801:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4813:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4821:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4829:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4837:6:12",
														"type": ""
													}
												],
												"src": "4718:667:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5477:173:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5523:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5532:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5535:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5525:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5525:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5525:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5498:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5507:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5494:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5494:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5519:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5490:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5490:32:12"
															},
															"nodeType": "YulIf",
															"src": "5487:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5548:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5577:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5558:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5558:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5548:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5596:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5629:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5640:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5625:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5625:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5606:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5606:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5596:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5435:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5446:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5458:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5466:6:12",
														"type": ""
													}
												],
												"src": "5390:260:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5710:325:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5720:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5734:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5737:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5730:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5730:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5720:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5751:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5781:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5787:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5777:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5777:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5755:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5828:31:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5830:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5844:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5852:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5840:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5840:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5830:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5808:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5801:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5801:26:12"
															},
															"nodeType": "YulIf",
															"src": "5798:61:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5918:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5939:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5946:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5951:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5942:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5942:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5932:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5932:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5932:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5983:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5986:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5976:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5976:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5976:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6011:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6014:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6004:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6004:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6004:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5874:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5897:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5905:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5894:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5894:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5871:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5871:38:12"
															},
															"nodeType": "YulIf",
															"src": "5868:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5690:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5699:6:12",
														"type": ""
													}
												],
												"src": "5655:380:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6214:235:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6231:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6242:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6224:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6224:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6224:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6265:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6276:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6261:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6261:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6281:2:12",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6254:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6254:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6254:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6304:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6315:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6300:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6300:18:12"
																	},
																	{
																		"hexValue": "455243373231413a20617070726f76656420717565727920666f72206e6f6e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6320:34:12",
																		"type": "",
																		"value": "ERC721A: approved query for none"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6293:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6293:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6293:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6375:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6386:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6371:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6371:18:12"
																	},
																	{
																		"hexValue": "78697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6391:15:12",
																		"type": "",
																		"value": "xistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6364:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6364:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6364:43:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6416:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6428:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6439:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6424:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6424:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6416:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6191:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6205:4:12",
														"type": ""
													}
												],
												"src": "6040:409:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6628:224:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6645:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6656:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6638:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6638:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6638:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6679:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6690:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6675:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6675:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6695:2:12",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6668:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6668:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6668:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6718:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6729:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6714:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6714:18:12"
																	},
																	{
																		"hexValue": "455243373231413a20617070726f76616c20746f2063757272656e74206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6734:34:12",
																		"type": "",
																		"value": "ERC721A: approval to current own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6707:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6707:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6707:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6789:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6800:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6785:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6785:18:12"
																	},
																	{
																		"hexValue": "6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6805:4:12",
																		"type": "",
																		"value": "er"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6778:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6778:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6778:32:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6819:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6831:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6842:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6827:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6827:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6819:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6605:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6619:4:12",
														"type": ""
													}
												],
												"src": "6454:398:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7031:247:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7048:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7059:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7041:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7041:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7041:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7082:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7093:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7078:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7078:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7098:2:12",
																		"type": "",
																		"value": "57"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7071:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7071:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7071:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7121:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7132:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7117:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7117:18:12"
																	},
																	{
																		"hexValue": "455243373231413a20617070726f76652063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7137:34:12",
																		"type": "",
																		"value": "ERC721A: approve caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7110:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7110:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7110:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7192:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7203:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7188:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7188:18:12"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7208:27:12",
																		"type": "",
																		"value": "wner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7181:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7181:55:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7181:55:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7245:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7257:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7268:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7253:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7253:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7245:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7008:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7022:4:12",
														"type": ""
													}
												],
												"src": "6857:421:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7457:181:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7474:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7485:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7467:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7467:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7467:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7508:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7519:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7504:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7504:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7524:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7497:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7497:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7497:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7547:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7558:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7543:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7543:18:12"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7563:33:12",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7536:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7536:61:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7536:61:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7606:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7618:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7614:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7614:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7606:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7434:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7448:4:12",
														"type": ""
													}
												],
												"src": "7283:355:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7817:170:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7834:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7845:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7827:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7827:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7827:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7868:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7879:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7864:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7864:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7884:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7857:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7857:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7857:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7907:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7918:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7903:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7903:18:12"
																	},
																	{
																		"hexValue": "496e76616c6964206d696e7420616d6f756e7421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7923:22:12",
																		"type": "",
																		"value": "Invalid mint amount!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7896:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7896:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7896:50:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7955:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7967:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7978:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7963:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7963:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7955:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2afc881382e53668af85e40886889fd546013099ff9b53bdd0e598bbbfa87bda__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7794:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7808:4:12",
														"type": ""
													}
												],
												"src": "7643:344:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8024:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8041:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8048:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8053:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8044:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8044:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8034:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8034:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8081:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8084:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8074:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8074:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8074:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8105:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8108:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8098:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8098:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8098:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7992:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8172:77:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8182:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8193:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8196:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8189:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8189:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8182:3:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8221:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8223:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8223:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8223:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8213:1:12"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "8216:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8210:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8210:10:12"
															},
															"nodeType": "YulIf",
															"src": "8207:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8155:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8158:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8164:3:12",
														"type": ""
													}
												],
												"src": "8124:125:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8428:170:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8445:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8456:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8438:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8438:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8438:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8479:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8490:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8475:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8475:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8495:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8468:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8468:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8468:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8518:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8529:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8514:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8514:18:12"
																	},
																	{
																		"hexValue": "4d617820737570706c7920657863656564656421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8534:22:12",
																		"type": "",
																		"value": "Max supply exceeded!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8507:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8507:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8507:50:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8566:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8578:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8589:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8574:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8574:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8566:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c61dd4df19bfedc67e9e65903122dd2df745b4c85f6abbd7f899090fbd4396a3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8405:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8419:4:12",
														"type": ""
													}
												],
												"src": "8254:344:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8777:166:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8794:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8805:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8787:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8787:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8787:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8828:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8839:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8824:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8824:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8844:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8817:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8817:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8817:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8867:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8878:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8863:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8863:18:12"
																	},
																	{
																		"hexValue": "4d657461646174612066726f7a656e21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8883:18:12",
																		"type": "",
																		"value": "Metadata frozen!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8856:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8856:46:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8856:46:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8911:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8923:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8934:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8919:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8919:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8911:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c155652365f31b560217ab6dcf4c24f3e9bd67eb9c1aab565a9269af9210eeb7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8754:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8768:4:12",
														"type": ""
													}
												],
												"src": "8603:340:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9004:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9021:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "9024:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9014:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9014:14:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9014:14:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9037:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9055:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9058:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "9045:9:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9045:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "9037:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "8987:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8995:4:12",
														"type": ""
													}
												],
												"src": "8948:121:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9155:464:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9188:425:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9202:11:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "9212:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "9206:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "9233:2:12"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "9237:5:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9226:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9226:17:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9226:17:12"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9256:31:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "9278:2:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9282:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "9268:9:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9268:19:12"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "9260:4:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9300:57:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "9323:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9333:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "9340:10:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "9352:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9336:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9336:19:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "9329:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9329:27:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9319:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9319:38:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "9304:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "9394:23:12",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "9396:19:12",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "9411:4:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "9396:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "9376:10:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9388:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "9373:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9373:20:12"
																		},
																		"nodeType": "YulIf",
																		"src": "9370:47:12"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9430:41:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "9444:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9454:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "9461:3:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "9466:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9457:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9457:12:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "9450:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9450:20:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9440:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9440:31:12"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "9434:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9484:24:12",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "9497:11:12"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "9488:5:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "9582:21:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "9591:5:12"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "9598:2:12"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "9584:6:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9584:17:12"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "9584:17:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "9532:5:12"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "9539:2:12"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "9529:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9529:13:12"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "9543:26:12",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "9545:22:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "9558:5:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9565:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "9554:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9554:13:12"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "9545:5:12"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "9525:3:12",
																			"statements": []
																		},
																		"src": "9521:82:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "9171:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9176:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9168:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9168:11:12"
															},
															"nodeType": "YulIf",
															"src": "9165:448:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "9127:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "9134:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "9139:10:12",
														"type": ""
													}
												],
												"src": "9074:545:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9709:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9719:65:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9734:4:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "9752:1:12",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "9755:3:12"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "9748:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9748:11:12"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "9765:1:12",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "9761:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9761:6:12"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "9744:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9744:24:12"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "9740:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9740:29:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9730:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9730:40:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9776:1:12",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "9779:3:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9772:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9772:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "9727:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9727:57:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "9719:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9686:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "9692:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "9700:4:12",
														"type": ""
													}
												],
												"src": "9624:166:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9891:1256:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9901:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "9921:3:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9915:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9915:10:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "9905:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9968:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9970:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9970:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9970:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "9940:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9948:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9937:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9937:30:12"
															},
															"nodeType": "YulIf",
															"src": "9934:56:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "10043:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "10081:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "10075:5:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10075:11:12"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "10049:25:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10049:38:12"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "10089:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "9999:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9999:97:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9999:97:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10105:18:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10122:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "10109:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10132:23:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10151:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "10136:11:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10164:24:12",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "10177:11:12"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "10164:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10234:656:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10248:35:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "10267:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "10279:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "10275:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10275:7:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "10263:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10263:20:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "10252:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10296:49:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "10340:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "10310:29:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10310:35:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "10300:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10358:10:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10367:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "10362:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10445:172:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "10470:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "10488:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "10493:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "10484:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "10484:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "10478:5:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10478:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "10463:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10463:42:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "10463:42:12"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "10522:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "10536:6:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "10544:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10532:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10532:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "10522:6:12"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "10563:40:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "10580:9:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "10591:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10576:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10576:27:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "10563:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10392:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "10395:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "10389:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10389:14:12"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "10404:28:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "10406:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "10415:1:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "10418:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10411:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10411:19:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10406:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "10385:3:12",
																					"statements": []
																				},
																				"src": "10381:236:12"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10665:166:12",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "10683:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "10710:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "10715:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "10706:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10706:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "10700:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10700:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "10687:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "10750:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "10762:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "10789:1:12",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "10792:6:12"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "10785:3:12"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "10785:14:12"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "10801:3:12",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "10781:3:12"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "10781:24:12"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "10811:1:12",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "10807:3:12"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "10807:6:12"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "10777:3:12"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "10777:37:12"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "10773:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "10773:42:12"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "10758:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10758:58:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "10743:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10743:74:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "10743:74:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "10636:7:12"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "10645:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "10633:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10633:19:12"
																				},
																				"nodeType": "YulIf",
																				"src": "10630:201:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "10851:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "10865:1:12",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "10868:6:12"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "10861:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "10861:14:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "10877:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10857:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10857:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "10844:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10844:36:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10844:36:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "10227:663:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10232:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10907:234:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10921:14:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10934:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "10925:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10970:67:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "10988:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "11007:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "11012:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "11003:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "11003:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "10997:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10997:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "10988:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "10951:6:12"
																				},
																				"nodeType": "YulIf",
																				"src": "10948:89:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "11057:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "11116:5:12"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "11123:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "11063:52:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11063:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "11050:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11050:81:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11050:81:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "10899:242:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "10207:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10215:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10204:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10204:14:12"
															},
															"nodeType": "YulSwitch",
															"src": "10197:944:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "9876:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9882:3:12",
														"type": ""
													}
												],
												"src": "9795:1352:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11326:233:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11343:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11354:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11336:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11336:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11336:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11377:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11388:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11373:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11373:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11393:2:12",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11366:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11366:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11366:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11416:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11427:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11412:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11412:18:12"
																	},
																	{
																		"hexValue": "455243373231413a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11432:34:12",
																		"type": "",
																		"value": "ERC721A: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11405:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11405:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11405:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11487:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11498:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11483:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11483:18:12"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11503:13:12",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11476:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11476:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11476:41:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11526:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11538:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11549:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11534:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11534:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11526:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11303:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11317:4:12",
														"type": ""
													}
												],
												"src": "11152:407:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11738:169:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11755:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11766:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11748:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11748:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11748:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11789:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11800:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11785:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11785:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11805:2:12",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11778:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11778:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11778:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11828:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11839:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11824:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11824:18:12"
																	},
																	{
																		"hexValue": "53616c65206973206e6f742061637469766521",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11844:21:12",
																		"type": "",
																		"value": "Sale is not active!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11817:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11817:49:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11817:49:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11875:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11887:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11898:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11883:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11883:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11875:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b2e2dcfc27254beaa6bfe8a568c90788b9920eb389c662813e1427b0b2225259__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11715:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11729:4:12",
														"type": ""
													}
												],
												"src": "11564:343:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11964:116:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11974:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11989:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11992:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11985:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11985:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11974:7:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12052:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12054:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12054:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12054:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12023:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12016:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12016:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "12030:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "12037:7:12"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "12046:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "12033:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12033:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "12027:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12027:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "12013:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12013:37:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12006:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12006:45:12"
															},
															"nodeType": "YulIf",
															"src": "12003:71:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11943:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11946:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11952:7:12",
														"type": ""
													}
												],
												"src": "11912:168:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12134:79:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12144:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12156:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12159:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12152:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12152:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12144:4:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12185:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12187:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12187:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12187:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "12176:4:12"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12182:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12173:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12173:11:12"
															},
															"nodeType": "YulIf",
															"src": "12170:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12116:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12119:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12125:4:12",
														"type": ""
													}
												],
												"src": "12085:128:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12392:169:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12409:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12420:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12402:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12402:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12402:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12443:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12454:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12439:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12439:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12459:2:12",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12432:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12432:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12432:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12482:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12493:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12478:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12478:18:12"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e647321",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12498:21:12",
																		"type": "",
																		"value": "Insufficient funds!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12471:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12471:49:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12471:49:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12529:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12541:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12552:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12537:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12537:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12529:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f996caab982251e084504d5fd2ef64388ceaab43bf427eb5c8324e92803cd686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12369:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12383:4:12",
														"type": ""
													}
												],
												"src": "12218:343:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12740:176:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12757:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12768:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12750:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12750:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12750:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12791:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12802:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12787:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12787:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12807:2:12",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12780:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12780:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12780:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12830:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12841:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12826:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12826:18:12"
																	},
																	{
																		"hexValue": "455243373231413a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12846:28:12",
																		"type": "",
																		"value": "ERC721A: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12819:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12819:56:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12819:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12884:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12896:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12907:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12892:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12892:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12884:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12717:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12731:4:12",
														"type": ""
													}
												],
												"src": "12566:350:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13095:241:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13112:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13123:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13105:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13105:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13105:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13146:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13157:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13142:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13142:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13162:2:12",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13135:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13135:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13135:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13185:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13196:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13181:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13181:18:12"
																	},
																	{
																		"hexValue": "455243373231413a207472616e7366657220746f206e6f6e2045524337323152",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13201:34:12",
																		"type": "",
																		"value": "ERC721A: transfer to non ERC721R"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13174:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13174:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13174:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13256:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13267:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13252:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13252:18:12"
																	},
																	{
																		"hexValue": "6563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13272:21:12",
																		"type": "",
																		"value": "eceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13245:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13245:49:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13245:49:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13303:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13315:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13326:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13311:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13311:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13303:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13072:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13086:4:12",
														"type": ""
													}
												],
												"src": "12921:415:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13515:172:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13532:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13543:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13525:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13525:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13525:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13566:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13577:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13562:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13562:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13582:2:12",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13555:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13555:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13555:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13605:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13616:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13601:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13601:18:12"
																	},
																	{
																		"hexValue": "496e76616c6964206e6577206d617820737570706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13621:24:12",
																		"type": "",
																		"value": "Invalid new max supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13594:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13594:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13594:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13655:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13667:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13678:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13663:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13663:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13655:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b72e8ae0edd5a513ad336746f164deb3f6e417f35e767bb8deba9958034035ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13492:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13506:4:12",
														"type": ""
													}
												],
												"src": "13341:346:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13866:237:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13883:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13894:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13876:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13876:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13876:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13917:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13928:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13913:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13913:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13933:2:12",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13906:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13906:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13906:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13956:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13967:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13952:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13952:18:12"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13972:34:12",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13945:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13945:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13945:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14027:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14038:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14023:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14023:18:12"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14043:17:12",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14016:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14016:45:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14016:45:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14070:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14082:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14093:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14078:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14078:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14070:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13843:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13857:4:12",
														"type": ""
													}
												],
												"src": "13692:411:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14295:309:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14305:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14325:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14319:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14319:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14309:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14380:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14388:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14376:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14376:17:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14395:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14400:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "14341:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14341:66:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14341:66:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14416:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14433:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14438:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14429:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14429:16:12"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "14420:5:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14454:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14476:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14470:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14470:13:12"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "14458:8:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "14531:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14539:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14527:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14527:17:12"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "14546:5:12"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "14553:8:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "14492:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14492:70:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14492:70:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14571:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "14582:5:12"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "14589:8:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14578:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14578:20:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14571:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14263:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14268:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14276:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14287:3:12",
														"type": ""
													}
												],
												"src": "14108:496:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14783:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14800:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14811:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14793:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14793:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14793:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14834:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14845:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14830:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14830:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14850:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14823:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14823:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14823:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14873:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14884:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14869:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14869:18:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14889:34:12",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14862:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14862:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14862:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14944:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14955:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14940:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14940:18:12"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14960:8:12",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14933:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14933:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14933:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14978:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14990:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15001:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14986:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14986:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14978:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14760:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14774:4:12",
														"type": ""
													}
												],
												"src": "14609:402:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15190:240:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15207:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15218:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15200:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15200:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15200:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15241:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15252:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15237:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15237:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15257:2:12",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15230:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15230:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15230:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15280:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15291:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15276:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15276:18:12"
																	},
																	{
																		"hexValue": "455243373231413a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15296:34:12",
																		"type": "",
																		"value": "ERC721A: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15269:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15269:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15269:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15351:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15362:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15347:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15347:18:12"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15367:20:12",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15340:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15340:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15340:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15397:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15409:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15420:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15405:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15405:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15397:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15167:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15181:4:12",
														"type": ""
													}
												],
												"src": "15016:414:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15609:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15626:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15637:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15619:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15619:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15619:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15660:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15671:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15656:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15656:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15676:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15649:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15649:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15649:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15699:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15710:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15695:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15695:18:12"
																	},
																	{
																		"hexValue": "455243373231413a207472616e736665722066726f6d20696e636f7272656374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15715:34:12",
																		"type": "",
																		"value": "ERC721A: transfer from incorrect"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15688:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15688:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15688:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15770:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15781:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15766:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15766:18:12"
																	},
																	{
																		"hexValue": "206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15786:8:12",
																		"type": "",
																		"value": " owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15759:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15759:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15759:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15804:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15816:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15827:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15812:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15812:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15804:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15586:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15600:4:12",
														"type": ""
													}
												],
												"src": "15435:402:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16016:227:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16033:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16044:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16026:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16026:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16026:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16067:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16078:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16063:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16063:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16083:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16056:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16056:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16056:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16106:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16117:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16102:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16102:18:12"
																	},
																	{
																		"hexValue": "455243373231413a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16122:34:12",
																		"type": "",
																		"value": "ERC721A: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16095:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16095:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16095:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16177:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16188:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16173:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16173:18:12"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16193:7:12",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16166:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16166:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16166:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16210:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16222:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16233:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16218:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16218:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16210:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15993:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16007:4:12",
														"type": ""
													}
												],
												"src": "15842:401:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16422:182:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16439:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16450:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16432:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16432:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16432:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16473:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16484:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16469:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16469:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16489:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16462:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16462:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16462:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16512:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16523:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16508:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16508:18:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16528:34:12",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16501:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16501:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16501:62:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16572:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16584:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16595:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16580:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16580:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16572:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16399:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16413:4:12",
														"type": ""
													}
												],
												"src": "16248:356:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16783:179:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16800:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16811:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16793:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16793:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16793:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16834:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16845:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16830:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16830:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16850:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16823:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16823:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16823:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16873:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16884:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16869:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16869:18:12"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16889:31:12",
																		"type": "",
																		"value": "Address: insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16862:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16862:59:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16862:59:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16930:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16942:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16953:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16938:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16938:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16930:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16760:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16774:4:12",
														"type": ""
													}
												],
												"src": "16609:353:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17158:14:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17160:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "17167:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17160:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17142:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17150:3:12",
														"type": ""
													}
												],
												"src": "16967:205:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17351:248:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17368:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17379:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17361:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17361:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17361:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17402:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17413:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17398:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17398:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17418:2:12",
																		"type": "",
																		"value": "58"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17391:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17391:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17391:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17441:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17452:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17437:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17437:18:12"
																	},
																	{
																		"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c2072",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17457:34:12",
																		"type": "",
																		"value": "Address: unable to send value, r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17430:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17430:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17430:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17512:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17523:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17508:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17508:18:12"
																	},
																	{
																		"hexValue": "6563697069656e74206d61792068617665207265766572746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17528:28:12",
																		"type": "",
																		"value": "ecipient may have reverted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17501:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17501:56:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17501:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17566:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17578:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17589:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17574:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17574:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17566:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17328:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17342:4:12",
														"type": ""
													}
												],
												"src": "17177:422:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17778:232:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17795:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17806:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17788:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17788:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17788:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17829:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17840:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17825:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17825:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17845:2:12",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17818:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17818:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17818:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17868:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17879:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17864:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17864:18:12"
																	},
																	{
																		"hexValue": "455243373231413a206f776e657220717565727920666f72206e6f6e65786973",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17884:34:12",
																		"type": "",
																		"value": "ERC721A: owner query for nonexis"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17857:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17857:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17857:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17939:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17950:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17935:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17935:18:12"
																	},
																	{
																		"hexValue": "74656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17955:12:12",
																		"type": "",
																		"value": "tent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17928:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17928:40:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17928:40:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17977:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17989:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18000:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17985:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17985:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17977:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17755:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17769:4:12",
														"type": ""
													}
												],
												"src": "17604:406:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18189:237:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18206:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18217:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18199:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18199:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18199:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18240:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18251:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18236:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18236:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18256:2:12",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18229:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18229:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18229:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18279:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18290:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18275:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18275:18:12"
																	},
																	{
																		"hexValue": "455243373231413a20756e61626c6520746f2064657465726d696e6520746865",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18295:34:12",
																		"type": "",
																		"value": "ERC721A: unable to determine the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18268:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18268:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18268:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18350:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18361:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18346:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18346:18:12"
																	},
																	{
																		"hexValue": "206f776e6572206f6620746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18366:17:12",
																		"type": "",
																		"value": " owner of token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18339:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18339:45:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18339:45:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18393:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18405:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18416:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18401:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18401:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18393:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18166:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18180:4:12",
														"type": ""
													}
												],
												"src": "18015:411:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18634:286:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18644:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18662:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18667:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "18658:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18658:11:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18671:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "18654:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18654:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "18648:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18689:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "18704:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "18712:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18700:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18700:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18682:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18682:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18682:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18736:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18747:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18732:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18732:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "18756:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "18764:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18752:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18752:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18725:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18725:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18725:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18788:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18799:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18784:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18784:18:12"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "18804:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18777:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18777:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18777:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18831:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18842:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18827:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18827:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18847:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18820:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18820:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18820:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18860:54:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "18886:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18898:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18909:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18894:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18894:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "18868:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18868:46:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18860:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18579:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "18590:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18598:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18606:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18614:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18625:4:12",
														"type": ""
													}
												],
												"src": "18431:489:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19005:169:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19051:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19060:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19063:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19053:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19053:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19053:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19026:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19035:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19022:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19022:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19047:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19018:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19018:32:12"
															},
															"nodeType": "YulIf",
															"src": "19015:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19076:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19095:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19089:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19089:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "19080:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19138:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "19114:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19114:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19114:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19153:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "19163:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "19153:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18971:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "18982:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18994:6:12",
														"type": ""
													}
												],
												"src": "18925:249:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19226:88:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19257:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19259:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19259:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19259:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19242:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19253:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "19249:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19249:6:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "19239:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19239:17:12"
															},
															"nodeType": "YulIf",
															"src": "19236:43:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19288:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19299:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19306:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19295:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19295:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "19288:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19208:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "19218:3:12",
														"type": ""
													}
												],
												"src": "19179:135:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19351:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19368:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19375:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19380:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "19371:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19371:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19361:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19361:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19361:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19408:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19411:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19401:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19401:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19401:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19432:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19435:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19425:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19425:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19425:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "19319:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19497:74:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19520:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "19522:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19522:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19522:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19517:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19510:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19510:9:12"
															},
															"nodeType": "YulIf",
															"src": "19507:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19551:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19560:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19563:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "19556:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19556:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "19551:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19482:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19485:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "19491:1:12",
														"type": ""
													}
												],
												"src": "19451:120:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19614:74:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19637:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "19639:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19639:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19639:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19634:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19627:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19627:9:12"
															},
															"nodeType": "YulIf",
															"src": "19624:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19668:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19677:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19680:1:12"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "19673:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19673:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "19668:1:12"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19599:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19602:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "19608:1:12",
														"type": ""
													}
												],
												"src": "19576:112:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19725:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19742:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19749:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19754:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "19745:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19745:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19735:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19735:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19735:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19782:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19785:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19775:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19775:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19775:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19806:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19809:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19799:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19799:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19799:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "19693:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19999:223:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20016:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20027:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20009:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20009:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20009:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20050:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20061:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20046:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20046:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20066:2:12",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20039:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20039:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20039:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20089:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20100:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20085:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20085:18:12"
																	},
																	{
																		"hexValue": "455243373231413a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20105:34:12",
																		"type": "",
																		"value": "ERC721A: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20078:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20078:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20078:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20160:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20171:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20156:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20156:18:12"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20176:3:12",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20149:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20149:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20149:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20189:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20201:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20212:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20197:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20197:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20189:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d44a4129b83bd8f726e10653f1f05aa5a9f14d8c9c066d6e6701839279ddce3b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19976:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19990:4:12",
														"type": ""
													}
												],
												"src": "19825:397:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20401:230:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20418:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20429:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20411:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20411:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20411:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20452:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20463:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20448:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20448:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20468:2:12",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20441:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20441:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20441:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20491:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20502:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20487:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20487:18:12"
																	},
																	{
																		"hexValue": "455243373231413a207175616e74697479206d75737420626520677265617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20507:34:12",
																		"type": "",
																		"value": "ERC721A: quantity must be greate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20480:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20480:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20480:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20562:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20573:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20558:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20558:18:12"
																	},
																	{
																		"hexValue": "72207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20578:10:12",
																		"type": "",
																		"value": "r than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20551:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20551:38:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20551:38:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20598:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20610:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20621:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20606:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20606:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20598:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dc1f9fb0e603971836d588a8edc31ad1917393079ad1425796c0e460d6033de1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20378:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20392:4:12",
														"type": ""
													}
												],
												"src": "20227:404:12"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721A: approved query for none\")\n        mstore(add(headStart, 96), \"xistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC721A: approval to current own\")\n        mstore(add(headStart, 96), \"er\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"ERC721A: approve caller is not o\")\n        mstore(add(headStart, 96), \"wner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2afc881382e53668af85e40886889fd546013099ff9b53bdd0e598bbbfa87bda__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid mint amount!\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_c61dd4df19bfedc67e9e65903122dd2df745b4c85f6abbd7f899090fbd4396a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Max supply exceeded!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c155652365f31b560217ab6dcf4c24f3e9bd67eb9c1aab565a9269af9210eeb7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Metadata frozen!\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC721A: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b2e2dcfc27254beaa6bfe8a568c90788b9920eb389c662813e1427b0b2225259__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Sale is not active!\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f996caab982251e084504d5fd2ef64388ceaab43bf427eb5c8324e92803cd686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Insufficient funds!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"ERC721A: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"ERC721A: transfer to non ERC721R\")\n        mstore(add(headStart, 96), \"eceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b72e8ae0edd5a513ad336746f164deb3f6e417f35e767bb8deba9958034035ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid new max supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721Metadata: URI query for no\")\n        mstore(add(headStart, 96), \"nexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721A: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC721A: transfer from incorrect\")\n        mstore(add(headStart, 96), \" owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721A: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"Address: unable to send value, r\")\n        mstore(add(headStart, 96), \"ecipient may have reverted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC721A: owner query for nonexis\")\n        mstore(add(headStart, 96), \"tent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721A: unable to determine the\")\n        mstore(add(headStart, 96), \" owner of token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_d44a4129b83bd8f726e10653f1f05aa5a9f14d8c9c066d6e6701839279ddce3b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721A: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dc1f9fb0e603971836d588a8edc31ad1917393079ad1425796c0e460d6033de1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC721A: quantity must be greate\")\n        mstore(add(headStart, 96), \"r than 0\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106102045760003560e01c8063715018a611610118578063a22cb465116100a0578063c87b56dd1161006f578063c87b56dd14610595578063d111515d146105b5578063e985e9c5146105ca578063f2fde38b146105ea578063fdb4953a1461060a57600080fd5b8063a22cb46514610515578063b0551ac414610535578063b88d4fde14610555578063c4e9374d1461057557600080fd5b80638d859f3e116100e75780638d859f3e146104995780638da5cb5b146104af57806391b7f5ed146104cd57806395d89b41146104ed578063a0712d681461050257600080fd5b8063715018a61461042a57806376d02b711461043f578063841718a6146104595780638b85e43d1461047957600080fd5b806332cb6b0c1161019b57806342842e0e1161016a57806342842e0e1461038a57806355f804b3146103aa578063616cdb1e146103ca5780636352211e146103ea57806370a082311461040a57600080fd5b806332cb6b0c146103295780633ccfd60b1461033f5780634065b85f14610354578063408cbf941461036a57600080fd5b806309ef6527116101d757806309ef6527146102ba57806310b0c052146102de57806318160ddd146102f457806323b872dd1461030957600080fd5b806301ffc9a71461020957806306fdde031461023e578063081812fc14610260578063095ea7b314610298575b600080fd5b34801561021557600080fd5b50610229610224366004611aaf565b610624565b60405190151581526020015b60405180910390f35b34801561024a57600080fd5b50610253610676565b6040516102359190611b1c565b34801561026c57600080fd5b5061028061027b366004611b2f565b610708565b6040516001600160a01b039091168152602001610235565b3480156102a457600080fd5b506102b86102b3366004611b64565b610798565b005b3480156102c657600080fd5b506102d0600d5481565b604051908152602001610235565b3480156102ea57600080fd5b506102d0600c5481565b34801561030057600080fd5b506000546102d0565b34801561031557600080fd5b506102b8610324366004611b8e565b6108af565b34801561033557600080fd5b506102d0600a5481565b34801561034b57600080fd5b506102b86108ba565b34801561036057600080fd5b506102d0600f5481565b34801561037657600080fd5b506102b8610385366004611b64565b610940565b34801561039657600080fd5b506102b86103a5366004611b8e565b6109fe565b3480156103b657600080fd5b506102b86103c5366004611c56565b610a19565b3480156103d657600080fd5b506102b86103e5366004611b2f565b610a77565b3480156103f657600080fd5b50610280610405366004611b2f565b610a84565b34801561041657600080fd5b506102d0610425366004611c9f565b610a96565b34801561043657600080fd5b506102b8610b27565b34801561044b57600080fd5b50600e546102299060ff1681565b34801561046557600080fd5b506102b8610474366004611cca565b610b3b565b34801561048557600080fd5b506102b8610494366004611b2f565b610b56565b3480156104a557600080fd5b506102d060095481565b3480156104bb57600080fd5b506007546001600160a01b0316610280565b3480156104d957600080fd5b506102b86104e8366004611b2f565b610b63565b3480156104f957600080fd5b50610253610b70565b6102b8610510366004611b2f565b610b7f565b34801561052157600080fd5b506102b8610530366004611ce5565b610d5a565b34801561054157600080fd5b506102b8610550366004611b2f565b610e1e565b34801561056157600080fd5b506102b8610570366004611d18565b610e2b565b34801561058157600080fd5b506102b8610590366004611b2f565b610e64565b3480156105a157600080fd5b506102536105b0366004611b2f565b610f06565b3480156105c157600080fd5b506102b8610fd3565b3480156105d657600080fd5b506102296105e5366004611d94565b610fea565b3480156105f657600080fd5b506102b8610605366004611c9f565b611018565b34801561061657600080fd5b506010546102299060ff1681565b60006001600160e01b031982166380ac58cd60e01b148061065557506001600160e01b03198216635b5e139f60e01b145b8061067057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606001805461068590611dbe565b80601f01602080910402602001604051908101604052809291908181526020018280546106b190611dbe565b80156106fe5780601f106106d3576101008083540402835291602001916106fe565b820191906000526020600020905b8154815290600101906020018083116106e157829003601f168201915b5050505050905090565b6000610715826000541190565b61077c5760405162461bcd60e51b815260206004820152602d60248201527f455243373231413a20617070726f76656420717565727920666f72206e6f6e6560448201526c3c34b9ba32b73a103a37b5b2b760991b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b60006107a382610a84565b9050806001600160a01b0316836001600160a01b0316036108115760405162461bcd60e51b815260206004820152602260248201527f455243373231413a20617070726f76616c20746f2063757272656e74206f776e60448201526132b960f11b6064820152608401610773565b336001600160a01b038216148061082d575061082d8133610fea565b61089f5760405162461bcd60e51b815260206004820152603960248201527f455243373231413a20617070726f76652063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656420666f7220616c6c000000000000006064820152608401610773565b6108aa838383611091565b505050565b6108aa8383836110ed565b6108c26113d2565b6002600854036109145760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610773565b60026008554761093873c919ce1b37fc4e0405885a3350cc153b27dd06e08261142c565b506001600855565b806000811180156109535750600d548111155b6109965760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964206d696e7420616d6f756e742160601b6044820152606401610773565b600a54816000546109a79190611e0e565b11156109ec5760405162461bcd60e51b81526020600482015260146024820152734d617820737570706c792065786365656465642160601b6044820152606401610773565b6109f46113d2565b6108aa8383611545565b6108aa83838360405180602001604052806000815250610e2b565b610a216113d2565b60105460ff1615610a675760405162461bcd60e51b815260206004820152601060248201526f4d657461646174612066726f7a656e2160801b6044820152606401610773565b600b610a738282611e6f565b5050565b610a7f6113d2565b600d55565b6000610a8f8261155f565b5192915050565b60006001600160a01b038216610b025760405162461bcd60e51b815260206004820152602b60248201527f455243373231413a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b6064820152608401610773565b506001600160a01b03166000908152600460205260409020546001600160801b031690565b610b2f6113d2565b610b396000611636565b565b610b436113d2565b600e805460ff1916911515919091179055565b610b5e6113d2565b600f55565b610b6b6113d2565b600955565b60606002805461068590611dbe565b80600081118015610b925750600d548111155b610bd55760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964206d696e7420616d6f756e742160601b6044820152606401610773565b600a5481600054610be69190611e0e565b1115610c2b5760405162461bcd60e51b81526020600482015260146024820152734d617820737570706c792065786365656465642160601b6044820152606401610773565b600e5460ff16610c735760405162461bcd60e51b815260206004820152601360248201527253616c65206973206e6f74206163746976652160681b6044820152606401610773565b600082600954610c839190611f2f565b9050600f546000541015610d0a5733600090815260116020526040812054600c54610cae9190611f46565b90508015610d0857808410610ce557600954610cca9082611f2f565b610cd49083611f46565b9150610ce03382611688565b610d08565b600954610cf29085611f2f565b610cfc9083611f46565b9150610d083385611688565b505b80341015610d505760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742066756e64732160681b6044820152606401610773565b6108aa3384611545565b336001600160a01b03831603610db25760405162461bcd60e51b815260206004820152601a60248201527f455243373231413a20617070726f766520746f2063616c6c65720000000000006044820152606401610773565b3360008181526006602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610e266113d2565b600c55565b610e368484846110ed565b610e42848484846116b9565b610e5e5760405162461bcd60e51b815260040161077390611f59565b50505050565b610e6c6113d2565b600a548110610eb65760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206e6577206d617820737570706c7960501b6044820152606401610773565b600054811015610f015760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206e6577206d617820737570706c7960501b6044820152606401610773565b600a55565b6060610f13826000541190565b610f775760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610773565b6000610f816117bb565b90508051600003610fa15760405180602001604052806000815250610fcc565b80610fab846117ca565b604051602001610fbc929190611fac565b6040516020818303038152906040525b9392505050565b610fdb6113d2565b6010805460ff19166001179055565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b6110206113d2565b6001600160a01b0381166110855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610773565b61108e81611636565b50565b60008281526005602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006110f88261155f565b80519091506000906001600160a01b0316336001600160a01b0316148061112f57503361112484610708565b6001600160a01b0316145b80611141575081516111419033610fea565b9050806111ab5760405162461bcd60e51b815260206004820152603260248201527f455243373231413a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610773565b846001600160a01b031682600001516001600160a01b03161461121f5760405162461bcd60e51b815260206004820152602660248201527f455243373231413a207472616e736665722066726f6d20696e636f72726563746044820152651037bbb732b960d11b6064820152608401610773565b6001600160a01b0384166112835760405162461bcd60e51b815260206004820152602560248201527f455243373231413a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610773565b6112936000848460000151611091565b6001600160a01b03858116600090815260046020908152604080832080546001600160801b03198082166001600160801b03928316600019018316179092558986168086528386208054938416938316600190810190931693909317909255888552600390935281842080546001600160e01b031916909117600160a01b4267ffffffffffffffff16021790559086018083529120549091166113885761133b816000541190565b15611388578251600082815260036020908152604090912080549186015167ffffffffffffffff16600160a01b026001600160e01b03199092166001600160a01b03909316929092171790555b5082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b5050505050565b6007546001600160a01b03163314610b395760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610773565b8047101561147c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610773565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146114c9576040519150601f19603f3d011682016040523d82523d6000602084013e6114ce565b606091505b50509050806108aa5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610773565b610a738282604051806020016040528060008152506118cb565b604080518082019091526000808252602082015261157e826000541190565b6115dd5760405162461bcd60e51b815260206004820152602a60248201527f455243373231413a206f776e657220717565727920666f72206e6f6e657869736044820152693a32b73a103a37b5b2b760b11b6064820152608401610773565b815b6000818152600360209081526040918290208251808401909352546001600160a01b038116808452600160a01b90910467ffffffffffffffff16918301919091521561162c579392505050565b50600019016115df565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216600090815260116020526040812080548392906116b0908490611e0e565b90915550505050565b60006001600160a01b0384163b156117af57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906116fd903390899088908890600401611fdb565b6020604051808303816000875af1925050508015611738575060408051601f3d908101601f1916820190925261173591810190612018565b60015b611795573d808015611766576040519150601f19603f3d011682016040523d82523d6000602084013e61176b565b606091505b50805160000361178d5760405162461bcd60e51b815260040161077390611f59565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506117b3565b5060015b949350505050565b6060600b805461068590611dbe565b6060816000036117f15750506040805180820190915260018152600360fc1b602082015290565b8160005b811561181b578061180581612035565b91506118149050600a83612064565b91506117f5565b60008167ffffffffffffffff81111561183657611836611bca565b6040519080825280601f01601f191660200182016040528015611860576020820181803683370190505b5090505b84156117b357611875600183611f46565b9150611882600a86612078565b61188d906030611e0e565b60f81b8183815181106118a2576118a261208c565b60200101906001600160f81b031916908160001a9053506118c4600a86612064565b9450611864565b6108aa83838360016000546001600160a01b0385166119365760405162461bcd60e51b815260206004820152602160248201527f455243373231413a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610773565b836000036119975760405162461bcd60e51b815260206004820152602860248201527f455243373231413a207175616e74697479206d75737420626520677265617465604482015267072207468616e20360c41b6064820152608401610773565b6001600160a01b03851660008181526004602090815260408083208054600160801b6001600160801b031982166001600160801b039283168c01831690811782900483168c01909216021790558483526003909152812080546001600160e01b031916909217600160a01b4267ffffffffffffffff16021790915581905b85811015611a905760405182906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a48315611a8457611a6860008884886116b9565b611a845760405162461bcd60e51b815260040161077390611f59565b60019182019101611a15565b506000556113cb565b6001600160e01b03198116811461108e57600080fd5b600060208284031215611ac157600080fd5b8135610fcc81611a99565b60005b83811015611ae7578181015183820152602001611acf565b50506000910152565b60008151808452611b08816020860160208601611acc565b601f01601f19169290920160200192915050565b602081526000610fcc6020830184611af0565b600060208284031215611b4157600080fd5b5035919050565b80356001600160a01b0381168114611b5f57600080fd5b919050565b60008060408385031215611b7757600080fd5b611b8083611b48565b946020939093013593505050565b600080600060608486031215611ba357600080fd5b611bac84611b48565b9250611bba60208501611b48565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611bfb57611bfb611bca565b604051601f8501601f19908116603f01168101908282118183101715611c2357611c23611bca565b81604052809350858152868686011115611c3c57600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611c6857600080fd5b813567ffffffffffffffff811115611c7f57600080fd5b8201601f81018413611c9057600080fd5b6117b384823560208401611be0565b600060208284031215611cb157600080fd5b610fcc82611b48565b80358015158114611b5f57600080fd5b600060208284031215611cdc57600080fd5b610fcc82611cba565b60008060408385031215611cf857600080fd5b611d0183611b48565b9150611d0f60208401611cba565b90509250929050565b60008060008060808587031215611d2e57600080fd5b611d3785611b48565b9350611d4560208601611b48565b925060408501359150606085013567ffffffffffffffff811115611d6857600080fd5b8501601f81018713611d7957600080fd5b611d8887823560208401611be0565b91505092959194509250565b60008060408385031215611da757600080fd5b611db083611b48565b9150611d0f60208401611b48565b600181811c90821680611dd257607f821691505b602082108103611df257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561067057610670611df8565b601f8211156108aa57600081815260208120601f850160051c81016020861015611e485750805b601f850160051c820191505b81811015611e6757828155600101611e54565b505050505050565b815167ffffffffffffffff811115611e8957611e89611bca565b611e9d81611e978454611dbe565b84611e21565b602080601f831160018114611ed25760008415611eba5750858301515b600019600386901b1c1916600185901b178555611e67565b600085815260208120601f198616915b82811015611f0157888601518255948401946001909101908401611ee2565b5085821015611f1f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808202811582820484141761067057610670611df8565b8181038181111561067057610670611df8565b60208082526033908201527f455243373231413a207472616e7366657220746f206e6f6e204552433732315260408201527232b1b2b4bb32b91034b6b83632b6b2b73a32b960691b606082015260800190565b60008351611fbe818460208801611acc565b835190830190611fd2818360208801611acc565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061200e90830184611af0565b9695505050505050565b60006020828403121561202a57600080fd5b8151610fcc81611a99565b60006001820161204757612047611df8565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826120735761207361204e565b500490565b6000826120875761208761204e565b500690565b634e487b7160e01b600052603260045260246000fdfea26469706673582212201c479dc284b44daf432fcb7e3fe228ba3c11e83b7ab1b774284a872d032c095564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x595 JUMPI DUP1 PUSH4 0xD111515D EQ PUSH2 0x5B5 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0xFDB4953A EQ PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xB0551AC4 EQ PUSH2 0x535 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0xC4E9374D EQ PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8D859F3E GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x8D859F3E EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0x91B7F5ED EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x76D02B71 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x841718A6 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0x8B85E43D EQ PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32CB6B0C GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x616CDB1E EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x4065B85F EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x408CBF94 EQ PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9EF6527 GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x9EF6527 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x10B0C052 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x298 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAF JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x2D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x324 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8E JUMP JUMPDEST PUSH2 0x8AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x8BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x385 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x940 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8E JUMP JUMPDEST PUSH2 0x9FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C56 JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x3E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0xA77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0xA84 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C9F JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0xB27 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x229 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0xB3B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x494 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0xB56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x280 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x4E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0xB63 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0xB70 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x510 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0xB7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x530 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0xD5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x550 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x570 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D18 JUMP JUMPDEST PUSH2 0xE2B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x590 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0xE64 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x5B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0xF06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0xFD3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x5E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D94 JUMP JUMPDEST PUSH2 0xFEA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x605 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C9F JUMP JUMPDEST PUSH2 0x1018 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x229 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x655 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x670 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x685 SWAP1 PUSH2 0x1DBE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6B1 SWAP1 PUSH2 0x1DBE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x715 DUP3 PUSH1 0x0 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20617070726F76656420717565727920666F72206E6F6E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x3C34B9BA32B73A103A37B5B2B7 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A3 DUP3 PUSH2 0xA84 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20617070726F76616C20746F2063757272656E74206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x82D JUMPI POP PUSH2 0x82D DUP2 CALLER PUSH2 0xFEA JUMP JUMPDEST PUSH2 0x89F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20617070726F76652063616C6C6572206973206E6F74206F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F76656420666F7220616C6C00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST PUSH2 0x8AA DUP4 DUP4 DUP4 PUSH2 0x1091 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8AA DUP4 DUP4 DUP4 PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x8C2 PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x8 SLOAD SUB PUSH2 0x914 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x8 SSTORE SELFBALANCE PUSH2 0x938 PUSH20 0xC919CE1B37FC4E0405885A3350CC153B27DD06E0 DUP3 PUSH2 0x142C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x8 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x953 JUMPI POP PUSH1 0xD SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x996 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C6964206D696E7420616D6F756E7421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 PUSH1 0x0 SLOAD PUSH2 0x9A7 SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST GT ISZERO PUSH2 0x9EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4D617820737570706C7920657863656564656421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH2 0x9F4 PUSH2 0x13D2 JUMP JUMPDEST PUSH2 0x8AA DUP4 DUP4 PUSH2 0x1545 JUMP JUMPDEST PUSH2 0x8AA DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xE2B JUMP JUMPDEST PUSH2 0xA21 PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4D657461646174612066726F7A656E21 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0xB PUSH2 0xA73 DUP3 DUP3 PUSH2 0x1E6F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA7F PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8F DUP3 PUSH2 0x155F JUMP JUMPDEST MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xB2F PUSH2 0x13D2 JUMP JUMPDEST PUSH2 0xB39 PUSH1 0x0 PUSH2 0x1636 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB43 PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB5E PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0xF SSTORE JUMP JUMPDEST PUSH2 0xB6B PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x685 SWAP1 PUSH2 0x1DBE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0xB92 JUMPI POP PUSH1 0xD SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0xBD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C6964206D696E7420616D6F756E7421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 PUSH1 0x0 SLOAD PUSH2 0xBE6 SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST GT ISZERO PUSH2 0xC2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4D617820737570706C7920657863656564656421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x53616C65206973206E6F742061637469766521 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x9 SLOAD PUSH2 0xC83 SWAP2 SWAP1 PUSH2 0x1F2F JUMP JUMPDEST SWAP1 POP PUSH1 0xF SLOAD PUSH1 0x0 SLOAD LT ISZERO PUSH2 0xD0A JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xC SLOAD PUSH2 0xCAE SWAP2 SWAP1 PUSH2 0x1F46 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xD08 JUMPI DUP1 DUP5 LT PUSH2 0xCE5 JUMPI PUSH1 0x9 SLOAD PUSH2 0xCCA SWAP1 DUP3 PUSH2 0x1F2F JUMP JUMPDEST PUSH2 0xCD4 SWAP1 DUP4 PUSH2 0x1F46 JUMP JUMPDEST SWAP2 POP PUSH2 0xCE0 CALLER DUP3 PUSH2 0x1688 JUMP JUMPDEST PUSH2 0xD08 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0xCF2 SWAP1 DUP6 PUSH2 0x1F2F JUMP JUMPDEST PUSH2 0xCFC SWAP1 DUP4 PUSH2 0x1F46 JUMP JUMPDEST SWAP2 POP PUSH2 0xD08 CALLER DUP6 PUSH2 0x1688 JUMP JUMPDEST POP JUMPDEST DUP1 CALLVALUE LT ISZERO PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E73756666696369656E742066756E647321 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH2 0x8AA CALLER DUP5 PUSH2 0x1545 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0xDB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20617070726F766520746F2063616C6C6572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xE26 PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0xC SSTORE JUMP JUMPDEST PUSH2 0xE36 DUP5 DUP5 DUP5 PUSH2 0x10ED JUMP JUMPDEST PUSH2 0xE42 DUP5 DUP5 DUP5 DUP5 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0xE5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x773 SWAP1 PUSH2 0x1F59 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xE6C PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 LT PUSH2 0xEB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206E6577206D617820737570706C79 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xF01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206E6577206D617820737570706C79 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF13 DUP3 PUSH1 0x0 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0xF77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF81 PUSH2 0x17BB JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xFA1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xFCC JUMP JUMPDEST DUP1 PUSH2 0xFAB DUP5 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFBC SWAP3 SWAP2 SWAP1 PUSH2 0x1FAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFDB PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1020 PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1085 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST PUSH2 0x108E DUP2 PUSH2 0x1636 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F8 DUP3 PUSH2 0x155F JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x112F JUMPI POP CALLER PUSH2 0x1124 DUP5 PUSH2 0x708 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x1141 JUMPI POP DUP2 MLOAD PUSH2 0x1141 SWAP1 CALLER PUSH2 0xFEA JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x11AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x121F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A207472616E736665722066726F6D20696E636F7272656374 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1037BBB732B9 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1283 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST PUSH2 0x1293 PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP1 DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 NOT ADD DUP4 AND OR SWAP1 SWAP3 SSTORE DUP10 DUP7 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD SWAP4 DUP5 AND SWAP4 DUP4 AND PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP4 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP9 DUP6 MSTORE PUSH1 0x3 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xA0 SHL TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE SWAP1 DUP7 ADD DUP1 DUP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 AND PUSH2 0x1388 JUMPI PUSH2 0x133B DUP2 PUSH1 0x0 SLOAD GT SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1388 JUMPI DUP3 MLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE JUMPDEST POP DUP3 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x147C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14C9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x8AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST PUSH2 0xA73 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x157E DUP3 PUSH1 0x0 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x15DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A206F776E657220717565727920666F72206E6F6E65786973 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x3A32B73A103A37B5B2B7 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP5 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO PUSH2 0x162C JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x0 NOT ADD PUSH2 0x15DF JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x16B0 SWAP1 DUP5 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x17AF JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x16FD SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1FDB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1738 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1735 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2018 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1795 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1766 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x176B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x178D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x773 SWAP1 PUSH2 0x1F59 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x17B3 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD PUSH2 0x685 SWAP1 PUSH2 0x1DBE JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x17F1 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x181B JUMPI DUP1 PUSH2 0x1805 DUP2 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1814 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x2064 JUMP JUMPDEST SWAP2 POP PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1836 JUMPI PUSH2 0x1836 PUSH2 0x1BCA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1860 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x17B3 JUMPI PUSH2 0x1875 PUSH1 0x1 DUP4 PUSH2 0x1F46 JUMP JUMPDEST SWAP2 POP PUSH2 0x1882 PUSH1 0xA DUP7 PUSH2 0x2078 JUMP JUMPDEST PUSH2 0x188D SWAP1 PUSH1 0x30 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x18A2 JUMPI PUSH2 0x18A2 PUSH2 0x208C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x18C4 PUSH1 0xA DUP7 PUSH2 0x2064 JUMP JUMPDEST SWAP5 POP PUSH2 0x1864 JUMP JUMPDEST PUSH2 0x8AA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1936 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST DUP4 PUSH1 0x0 SUB PUSH2 0x1997 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A207175616E74697479206D75737420626520677265617465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x72207468616E203 PUSH1 0xC4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x773 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 DUP4 AND DUP13 ADD DUP4 AND SWAP1 DUP2 OR DUP3 SWAP1 DIV DUP4 AND DUP13 ADD SWAP1 SWAP3 AND MUL OR SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0xA0 SHL TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1A90 JUMPI PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 DUP4 ISZERO PUSH2 0x1A84 JUMPI PUSH2 0x1A68 PUSH1 0x0 DUP9 DUP5 DUP9 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x1A84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x773 SWAP1 PUSH2 0x1F59 JUMP JUMPDEST PUSH1 0x1 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1A15 JUMP JUMPDEST POP PUSH1 0x0 SSTORE PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x108E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFCC DUP2 PUSH2 0x1A99 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AE7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1ACF JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1B08 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xFCC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B80 DUP4 PUSH2 0x1B48 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BAC DUP5 PUSH2 0x1B48 JUMP JUMPDEST SWAP3 POP PUSH2 0x1BBA PUSH1 0x20 DUP6 ADD PUSH2 0x1B48 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1BFB JUMPI PUSH2 0x1BFB PUSH2 0x1BCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1C23 JUMPI PUSH2 0x1C23 PUSH2 0x1BCA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1C3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1C90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17B3 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1BE0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFCC DUP3 PUSH2 0x1B48 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFCC DUP3 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D01 DUP4 PUSH2 0x1B48 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D0F PUSH1 0x20 DUP5 ADD PUSH2 0x1CBA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D37 DUP6 PUSH2 0x1B48 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D45 PUSH1 0x20 DUP7 ADD PUSH2 0x1B48 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1D79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D88 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1BE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DB0 DUP4 PUSH2 0x1B48 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D0F PUSH1 0x20 DUP5 ADD PUSH2 0x1B48 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1DD2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DF2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x670 JUMPI PUSH2 0x670 PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x8AA JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1E48 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E67 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E54 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E89 JUMPI PUSH2 0x1E89 PUSH2 0x1BCA JUMP JUMPDEST PUSH2 0x1E9D DUP2 PUSH2 0x1E97 DUP5 SLOAD PUSH2 0x1DBE JUMP JUMPDEST DUP5 PUSH2 0x1E21 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1ED2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1EBA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1E67 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1F01 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1EE2 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1F1F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x670 JUMPI PUSH2 0x670 PUSH2 0x1DF8 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x670 JUMPI PUSH2 0x670 PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x33 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243373231413A207472616E7366657220746F206E6F6E2045524337323152 PUSH1 0x40 DUP3 ADD MSTORE PUSH19 0x32B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x69 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1FBE DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1ACC JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1FD2 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1ACC JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x200E SWAP1 DUP4 ADD DUP5 PUSH2 0x1AF0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x202A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xFCC DUP2 PUSH2 0x1A99 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2047 JUMPI PUSH2 0x2047 PUSH2 0x1DF8 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2073 JUMPI PUSH2 0x2073 PUSH2 0x204E JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2087 JUMPI PUSH2 0x2087 PUSH2 0x204E JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SELFBALANCE SWAP14 0xC2 DUP5 0xB4 0x4D 0xAF NUMBER 0x2F 0xCB PUSH31 0x3FE228BA3C11E83B7AB1B774284A872D032C095564736F6C63430008110033 ",
							"sourceMap": "207:4121:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2289:293:10;;;;;;;;;;-1:-1:-1;2289:293:10;;;;;:::i;:::-;;:::i;:::-;;;565:14:12;;558:22;540:41;;528:2;513:18;2289:293:10;;;;;;;;4064:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;5626:214::-;;;;;;;;;;-1:-1:-1;5626:214:10;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:12;;;1679:51;;1667:2;1652:18;5626:214:10;1533:203:12;5147:413:10;;;;;;;;;;-1:-1:-1;5147:413:10;;;;;:::i;:::-;;:::i;:::-;;440:37:11;;;;;;;;;;;;;;;;;;;2324:25:12;;;2312:2;2297:18;440:37:11;2178:177:12;392:41:11;;;;;;;;;;;;;;;;2126:91:10;;;;;;;;;;-1:-1:-1;2170:7:10;2197:12;2126:91;;6502:162;;;;;;;;;;-1:-1:-1;6502:162:10;;;;;:::i;:::-;;:::i;330:25:11:-;;;;;;;;;;;;;;;;4154:171;;;;;;;;;;;;;:::i;517:41::-;;;;;;;;;;;;;;;;3883:144;;;;;;;;;;-1:-1:-1;3883:144:11;;;;;:::i;:::-;;:::i;6735:177:10:-;;;;;;;;;;-1:-1:-1;6735:177:10;;;;;:::i;:::-;;:::i;1890:169:11:-;;;;;;;;;;-1:-1:-1;1890:169:11;;;;;:::i;:::-;;:::i;2216:122::-;;;;;;;;;;-1:-1:-1;2216:122:11;;;;;:::i;:::-;;:::i;3873:124:10:-;;;;;;;;;;-1:-1:-1;3873:124:10;;;;;:::i;:::-;;:::i;2646:221::-;;;;;;;;;;-1:-1:-1;2646:221:10;;;;;:::i;:::-;;:::i;1831:101:0:-;;;;;;;;;;;;;:::i;484:26:11:-;;;;;;;;;;-1:-1:-1;484:26:11;;;;;;;;2346:109;;;;;;;;;;-1:-1:-1;2346:109:11;;;;;:::i;:::-;;:::i;2463:154::-;;;;;;;;;;-1:-1:-1;2463:154:11;;;;;:::i;:::-;;:::i;303:20::-;;;;;;;;;;;;;;;;1201:85:0;;;;;;;;;;-1:-1:-1;1273:6:0;;-1:-1:-1;;;;;1273:6:0;1201:85;;1524:96:11;;;;;;;;;;-1:-1:-1;1524:96:11;;;;;:::i;:::-;;:::i;4233:104:10:-;;;;;;;;;;;;;:::i;2996:879:11:-;;;;;;:::i;:::-;;:::i;5912:288:10:-;;;;;;;;;;-1:-1:-1;5912:288:10;;;;;:::i;:::-;;:::i;2067:141:11:-;;;;;;;;;;-1:-1:-1;2067:141:11;;;;;:::i;:::-;;:::i;6983:355:10:-;;;;;;;;;;-1:-1:-1;6983:355:10;;;;;:::i;:::-;;:::i;1628:254:11:-;;;;;;;;;;-1:-1:-1;1628:254:11;;;;;:::i;:::-;;:::i;4408:335:10:-;;;;;;;;;;-1:-1:-1;4408:335:10;;;;;:::i;:::-;;:::i;2625:86:11:-;;;;;;;;;;;;;:::i;6271:164:10:-;;;;;;;;;;-1:-1:-1;6271:164:10;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;602:27:11:-;;;;;;;;;;-1:-1:-1;602:27:11;;;;;;;;2289:293:10;2391:4;-1:-1:-1;;;;;;2424:40:10;;-1:-1:-1;;;2424:40:10;;:101;;-1:-1:-1;;;;;;;2477:48:10;;-1:-1:-1;;;2477:48:10;2424:101;:150;;;-1:-1:-1;;;;;;;;;;937:40:8;;;2538:36:10;2408:166;2289:293;-1:-1:-1;;2289:293:10:o;4064:100::-;4118:13;4151:5;4144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4064:100;:::o;5626:214::-;5694:7;5722:16;5730:7;7650:4;7684:12;-1:-1:-1;7674:22:10;7593:111;5722:16;5714:74;;;;-1:-1:-1;;;5714:74:10;;6242:2:12;5714:74:10;;;6224:21:12;6281:2;6261:18;;;6254:30;6320:34;6300:18;;;6293:62;-1:-1:-1;;;6371:18:12;;;6364:43;6424:19;;5714:74:10;;;;;;;;;-1:-1:-1;5808:24:10;;;;:15;:24;;;;;;-1:-1:-1;;;;;5808:24:10;;5626:214::o;5147:413::-;5220:13;5236:24;5252:7;5236:15;:24::i;:::-;5220:40;;5285:5;-1:-1:-1;;;;;5279:11:10;:2;-1:-1:-1;;;;;5279:11:10;;5271:58;;;;-1:-1:-1;;;5271:58:10;;6656:2:12;5271:58:10;;;6638:21:12;6695:2;6675:18;;;6668:30;6734:34;6714:18;;;6707:62;-1:-1:-1;;;6785:18:12;;;6778:32;6827:19;;5271:58:10;6454:398:12;5271:58:10;719:10:6;-1:-1:-1;;;;;5364:21:10;;;;:62;;-1:-1:-1;5389:37:10;5406:5;719:10:6;6271:164:10;:::i;5389:37::-;5342:169;;;;-1:-1:-1;;;5342:169:10;;7059:2:12;5342:169:10;;;7041:21:12;7098:2;7078:18;;;7071:30;7137:34;7117:18;;;7110:62;7208:27;7188:18;;;7181:55;7253:19;;5342:169:10;6857:421:12;5342:169:10;5524:28;5533:2;5537:7;5546:5;5524:8;:28::i;:::-;5209:351;5147:413;;:::o;6502:162::-;6628:28;6638:4;6644:2;6648:7;6628:9;:28::i;4154:171:11:-;1094:13:0;:11;:13::i;:::-;1744:1:1::1;2325:7;;:19:::0;2317:63:::1;;;::::0;-1:-1:-1;;;2317:63:1;;7485:2:12;2317:63:1::1;::::0;::::1;7467:21:12::0;7524:2;7504:18;;;7497:30;7563:33;7543:18;;;7536:61;7614:18;;2317:63:1::1;7283:355:12::0;2317:63:1::1;1744:1;2455:7;:18:::0;4233:21:11::2;4267:50;4103:42;4233:21:::0;4267:17:::2;:50::i;:::-;-1:-1:-1::0;1701:1:1::1;2628:7;:22:::0;4154:171:11:o;3883:144::-;3958:11;2817:1;2803:11;:15;:56;;;;;2837:22;;2822:11;:37;;2803:56;2795:89;;;;-1:-1:-1;;;2795:89:11;;7845:2:12;2795:89:11;;;7827:21:12;7884:2;7864:18;;;7857:30;-1:-1:-1;;;7903:18:12;;;7896:50;7963:18;;2795:89:11;7643:344:12;2795:89:11;2933:10;;2918:11;2903:12;;:26;;;;:::i;:::-;:40;;2895:73;;;;-1:-1:-1;;;2895:73:11;;8456:2:12;2895:73:11;;;8438:21:12;8495:2;8475:18;;;8468:30;-1:-1:-1;;;8514:18:12;;;8507:50;8574:18;;2895:73:11;8254:344:12;2895:73:11;1094:13:0::1;:11;:13::i;:::-;3992:27:11::2;4002:3;4007:11;3992:9;:27::i;6735:177:10:-:0;6865:39;6882:4;6888:2;6892:7;6865:39;;;;;;;;;;;;:16;:39::i;1890:169:11:-;1094:13:0;:11;:13::i;:::-;1979:15:11::1;::::0;::::1;;1978:16;1970:45;;;::::0;-1:-1:-1;;;1970:45:11;;8805:2:12;1970:45:11::1;::::0;::::1;8787:21:12::0;8844:2;8824:18;;;8817:30;-1:-1:-1;;;8863:18:12;;;8856:46;8919:18;;1970:45:11::1;8603:340:12::0;1970:45:11::1;2026:8;:25;2037:14:::0;2026:8;:25:::1;:::i;:::-;;1890:169:::0;:::o;2216:122::-;1094:13:0;:11;:13::i;:::-;2293:22:11::1;:37:::0;2216:122::o;3873:124:10:-;3937:7;3964:20;3976:7;3964:11;:20::i;:::-;:25;;3873:124;-1:-1:-1;;3873:124:10:o;2646:221::-;2710:7;-1:-1:-1;;;;;2738:19:10;;2730:75;;;;-1:-1:-1;;;2730:75:10;;11354:2:12;2730:75:10;;;11336:21:12;11393:2;11373:18;;;11366:30;11432:34;11412:18;;;11405:62;-1:-1:-1;;;11483:18:12;;;11476:41;11534:19;;2730:75:10;11152:407:12;2730:75:10;-1:-1:-1;;;;;;2831:19:10;;;;;:12;:19;;;;;:27;-1:-1:-1;;;;;2831:27:10;;2646:221::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2346:109:11:-;1094:13:0;:11;:13::i;:::-;2418:14:11::1;:29:::0;;-1:-1:-1;;2418:29:11::1;::::0;::::1;;::::0;;;::::1;::::0;;2346:109::o;2463:154::-;1094:13:0;:11;:13::i;:::-;2558:26:11::1;:51:::0;2463:154::o;1524:96::-;1094:13:0;:11;:13::i;:::-;1593:5:11::1;:19:::0;1524:96::o;4233:104:10:-;4289:13;4322:7;4315:14;;;;;:::i;2996:879:11:-;3061:11;2817:1;2803:11;:15;:56;;;;;2837:22;;2822:11;:37;;2803:56;2795:89;;;;-1:-1:-1;;;2795:89:11;;7845:2:12;2795:89:11;;;7827:21:12;7884:2;7864:18;;;7857:30;-1:-1:-1;;;7903:18:12;;;7896:50;7963:18;;2795:89:11;7643:344:12;2795:89:11;2933:10;;2918:11;2903:12;;:26;;;;:::i;:::-;:40;;2895:73;;;;-1:-1:-1;;;2895:73:11;;8456:2:12;2895:73:11;;;8438:21:12;8495:2;8475:18;;;8468:30;-1:-1:-1;;;8514:18:12;;;8507:50;8574:18;;2895:73:11;8254:344:12;2895:73:11;3093:14:::1;::::0;::::1;;3085:46;;;::::0;-1:-1:-1;;;3085:46:11;;11766:2:12;3085:46:11::1;::::0;::::1;11748:21:12::0;11805:2;11785:18;;;11778:30;-1:-1:-1;;;11824:18:12;;;11817:49;11883:18;;3085:46:11::1;11564:343:12::0;3085:46:11::1;3144:13;3168:11;3160:5;;:19;;;;:::i;:::-;3144:35;;3211:26;;3196:12;;:41;3192:566;;;3328:10;3254:25;3311:28:::0;;;:16:::1;:28;::::0;;;;;3282:26:::1;::::0;:57:::1;::::0;3311:28;3282:57:::1;:::i;:::-;3254:85:::0;-1:-1:-1;3358:21:11;;3354:393:::1;;3419:17;3404:11;:32;3400:332;;3490:5;::::0;3470:25:::1;::::0;:17;:25:::1;:::i;:::-;3461:34;::::0;;::::1;:::i;:::-;;;3518:50;3538:10;3550:17;3518:19;:50::i;:::-;3400:332;;;3640:5;::::0;3626:19:::1;::::0;:11;:19:::1;:::i;:::-;3617:28;::::0;;::::1;:::i;:::-;;;3668:44;3688:10;3700:11;3668:19;:44::i;:::-;3239:519;3192:566;3791:5;3778:9;:18;;3770:50;;;::::0;-1:-1:-1;;;3770:50:11;;12420:2:12;3770:50:11::1;::::0;::::1;12402:21:12::0;12459:2;12439:18;;;12432:30;-1:-1:-1;;;12478:18:12;;;12471:49;12537:18;;3770:50:11::1;12218:343:12::0;3770:50:11::1;3833:34;3843:10;3855:11;3833:9;:34::i;5912:288:10:-:0;719:10:6;-1:-1:-1;;;;;6007:24:10;;;5999:63;;;;-1:-1:-1;;;5999:63:10;;12768:2:12;5999:63:10;;;12750:21:12;12807:2;12787:18;;;12780:30;12846:28;12826:18;;;12819:56;12892:18;;5999:63:10;12566:350:12;5999:63:10;719:10:6;6075:32:10;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;6075:42:10;;;;;;;;;;;;:53;;-1:-1:-1;;6075:53:10;;;;;;;;;;6144:48;;540:41:12;;;6075:42:10;;719:10:6;6144:48:10;;513:18:12;6144:48:10;;;;;;;5912:288;;:::o;2067:141:11:-;1094:13:0;:11;:13::i;:::-;2154:26:11::1;:46:::0;2067:141::o;6983:355:10:-;7142:28;7152:4;7158:2;7162:7;7142:9;:28::i;:::-;7203:48;7226:4;7232:2;7236:7;7245:5;7203:22;:48::i;:::-;7181:149;;;;-1:-1:-1;;;7181:149:10;;;;;;;:::i;:::-;6983:355;;;;:::o;1628:254:11:-;1094:13:0;:11;:13::i;:::-;1727:10:11::1;;1712:12;:25;1704:60;;;::::0;-1:-1:-1;;;1704:60:11;;13543:2:12;1704:60:11::1;::::0;::::1;13525:21:12::0;13582:2;13562:18;;;13555:30;-1:-1:-1;;;13601:18:12;;;13594:52;13663:18;;1704:60:11::1;13341:346:12::0;1704:60:11::1;1799:12;;1783;:28;;1775:63;;;::::0;-1:-1:-1;;;1775:63:11;;13543:2:12;1775:63:11::1;::::0;::::1;13525:21:12::0;13582:2;13562:18;;;13555:30;-1:-1:-1;;;13601:18:12;;;13594:52;13663:18;;1775:63:11::1;13341:346:12::0;1775:63:11::1;1849:10;:25:::0;1628:254::o;4408:335:10:-;4481:13;4515:16;4523:7;7650:4;7684:12;-1:-1:-1;7674:22:10;7593:111;4515:16;4507:76;;;;-1:-1:-1;;;4507:76:10;;13894:2:12;4507:76:10;;;13876:21:12;13933:2;13913:18;;;13906:30;13972:34;13952:18;;;13945:62;-1:-1:-1;;;14023:18:12;;;14016:45;14078:19;;4507:76:10;13692:411:12;4507:76:10;4596:21;4620:10;:8;:10::i;:::-;4596:34;;4654:7;4648:21;4673:1;4648:26;:87;;;;;;;;;;;;;;;;;4701:7;4710:18;:7;:16;:18::i;:::-;4684:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4648:87;4641:94;4408:335;-1:-1:-1;;;4408:335:10:o;2625:86:11:-;1094:13:0;:11;:13::i;:::-;2681:15:11::1;:22:::0;;-1:-1:-1;;2681:22:11::1;2699:4;2681:22;::::0;;2625:86::o;6271:164:10:-;-1:-1:-1;;;;;6392:25:10;;;6368:4;6392:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;6271:164::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;14811:2:12;2161:73:0::1;::::0;::::1;14793:21:12::0;14850:2;14830:18;;;14823:30;14889:34;14869:18;;;14862:62;-1:-1:-1;;;14940:18:12;;;14933:36;14986:19;;2161:73:0::1;14609:402:12::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;12373:196:10:-;12488:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;12488:29:10;-1:-1:-1;;;;;12488:29:10;;;;;;;;;12533:28;;12488:24;;12533:28;;;;;;;12373:196;;;:::o;10321:1934::-;10436:35;10474:20;10486:7;10474:11;:20::i;:::-;10549:18;;10436:58;;-1:-1:-1;10507:22:10;;-1:-1:-1;;;;;10533:34:10;719:10:6;-1:-1:-1;;;;;10533:34:10;;:83;;;-1:-1:-1;719:10:6;10580:20:10;10592:7;10580:11;:20::i;:::-;-1:-1:-1;;;;;10580:36:10;;10533:83;:146;;;-1:-1:-1;10646:18:10;;10629:50;;719:10:6;6271:164:10;:::i;10629:50::-;10507:173;;10701:17;10693:80;;;;-1:-1:-1;;;10693:80:10;;15218:2:12;10693:80:10;;;15200:21:12;15257:2;15237:18;;;15230:30;15296:34;15276:18;;;15269:62;-1:-1:-1;;;15347:18:12;;;15340:48;15405:19;;10693:80:10;15016:414:12;10693:80:10;10816:4;-1:-1:-1;;;;;10794:26:10;:13;:18;;;-1:-1:-1;;;;;10794:26:10;;10786:77;;;;-1:-1:-1;;;10786:77:10;;15637:2:12;10786:77:10;;;15619:21:12;15676:2;15656:18;;;15649:30;15715:34;15695:18;;;15688:62;-1:-1:-1;;;15766:18:12;;;15759:36;15812:19;;10786:77:10;15435:402:12;10786:77:10;-1:-1:-1;;;;;10882:16:10;;10874:66;;;;-1:-1:-1;;;10874:66:10;;16044:2:12;10874:66:10;;;16026:21:12;16083:2;16063:18;;;16056:30;16122:34;16102:18;;;16095:62;-1:-1:-1;;;16173:18:12;;;16166:35;16218:19;;10874:66:10;15842:401:12;10874:66:10;11061:49;11078:1;11082:7;11091:13;:18;;;11061:8;:49::i;:::-;-1:-1:-1;;;;;11398:18:10;;;;;;;:12;:18;;;;;;;;:31;;-1:-1:-1;;;;;;11398:31:10;;;-1:-1:-1;;;;;11398:31:10;;;-1:-1:-1;;11398:31:10;;;;;;;11440:16;;;;;;;;;:29;;;;;;;;-1:-1:-1;11440:29:10;;;;;;;;;;;;;11482:20;;;:11;:20;;;;;;:30;;-1:-1:-1;;;;;;11523:61:10;;;;-1:-1:-1;;;11568:15:10;11523:61;;;;;;11846:11;;;11872:24;;;;;:29;11846:11;;11872:29;11868:275;;11936:20;11944:11;7650:4;7684:12;-1:-1:-1;7674:22:10;7593:111;11936:20;11932:200;;;12009:18;;;11977:24;;;:11;:24;;;;;;;;:50;;12088:28;;;;12046:70;;-1:-1:-1;;;12046:70:10;-1:-1:-1;;;;;;12046:70:10;;;-1:-1:-1;;;;;11977:50:10;;;12046:70;;;;;;;11932:200;11377:773;12186:7;12182:2;-1:-1:-1;;;;;12167:27:10;12176:4;-1:-1:-1;;;;;12167:27:10;;;;;;;;;;;12205:42;10425:1830;;10321:1934;;;:::o;1359:130:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:6;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;16450:2:12;1414:68:0;;;16432:21:12;;;16469:18;;;16462:30;16528:34;16508:18;;;16501:62;16580:18;;1414:68:0;16248:356:12;2412:312:5;2526:6;2501:21;:31;;2493:73;;;;-1:-1:-1;;;2493:73:5;;16811:2:12;2493:73:5;;;16793:21:12;16850:2;16830:18;;;16823:30;16889:31;16869:18;;;16862:59;16938:18;;2493:73:5;16609:353:12;2493:73:5;2578:12;2596:9;-1:-1:-1;;;;;2596:14:5;2618:6;2596:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:52;;;2647:7;2639:78;;;;-1:-1:-1;;;2639:78:5;;17379:2:12;2639:78:5;;;17361:21:12;17418:2;17398:18;;;17391:30;17457:34;17437:18;;;17430:62;17528:28;17508:18;;;17501:56;17574:19;;2639:78:5;17177:422:12;7712:104:10;7781:27;7791:2;7795:8;7781:27;;;;;;;;;;;;:9;:27::i;3306:505::-;-1:-1:-1;;;;;;;;;;;;;;;;;3409:16:10;3417:7;7650:4;7684:12;-1:-1:-1;7674:22:10;7593:111;3409:16;3401:71;;;;-1:-1:-1;;;3401:71:10;;17806:2:12;3401:71:10;;;17788:21:12;17845:2;17825:18;;;17818:30;17884:34;17864:18;;;17857:62;-1:-1:-1;;;17935:18:12;;;17928:40;17985:19;;3401:71:10;17604:406:12;3401:71:10;3522:7;3502:225;3565:31;3599:17;;;:11;:17;;;;;;;;;3565:51;;;;;;;;;-1:-1:-1;;;;;3565:51:10;;;;;-1:-1:-1;;;3565:51:10;;;;;;;;;;;;3635:28;3631:85;;3691:9;3306:505;-1:-1:-1;;;3306:505:10:o;3631:85::-;-1:-1:-1;;;3542:6:10;3502:225;;2433:187:0;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;1233:120:11:-;-1:-1:-1;;;;;1312:24:11;;;;;;:16;:24;;;;;:33;;1340:5;;1312:24;:33;;1340:5;;1312:33;:::i;:::-;;;;-1:-1:-1;;;;1233:120:11:o;13134:804:10:-;13289:4;-1:-1:-1;;;;;13310:13:10;;1465:19:5;:23;13306:625:10;;13346:72;;-1:-1:-1;;;13346:72:10;;-1:-1:-1;;;;;13346:36:10;;;;;:72;;719:10:6;;13397:4:10;;13403:7;;13412:5;;13346:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13346:72:10;;;;;;;;-1:-1:-1;;13346:72:10;;;;;;;;;;;;:::i;:::-;;;13342:534;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13592:6;:13;13609:1;13592:18;13588:273;;13635:61;;-1:-1:-1;;;13635:61:10;;;;;;;:::i;13588:273::-;13811:6;13805:13;13796:6;13792:2;13788:15;13781:38;13342:534;-1:-1:-1;;;;;;13469:55:10;-1:-1:-1;;;13469:55:10;;-1:-1:-1;13462:62:10;;13306:625;-1:-1:-1;13915:4:10;13306:625;13134:804;;;;;;:::o;1384:109:11:-;1444:13;1477:8;1470:15;;;;;:::i;392:703:7:-;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:7;;;;;;;;;;;;-1:-1:-1;;;691:10:7;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:7;;-1:-1:-1;837:2:7;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:7;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:7;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;966:56:7;;;;;;;;-1:-1:-1;1036:11:7;1045:2;1036:11;;:::i;:::-;;;908:150;;8179:163:10;8302:32;8308:2;8312:8;8322:5;8329:4;8740:20;8763:12;-1:-1:-1;;;;;8794:16:10;;8786:62;;;;-1:-1:-1;;;8786:62:10;;20027:2:12;8786:62:10;;;20009:21:12;20066:2;20046:18;;;20039:30;20105:34;20085:18;;;20078:62;-1:-1:-1;;;20156:18:12;;;20149:31;20197:19;;8786:62:10;19825:397:12;8786:62:10;8867:8;8879:1;8867:13;8859:66;;;;-1:-1:-1;;;8859:66:10;;20429:2:12;8859:66:10;;;20411:21:12;20468:2;20448:18;;;20441:30;20507:34;20487:18;;;20480:62;-1:-1:-1;;;20558:18:12;;;20551:38;20606:19;;8859:66:10;20227:404:12;8859:66:10;-1:-1:-1;;;;;9269:16:10;;;;;;:12;:16;;;;;;;;:45;;-1:-1:-1;;;;;;;;;9269:45:10;;-1:-1:-1;;;;;9269:45:10;;;;;;;;;;9325:50;;;;;;;;;;;;;;9388:25;;;:11;:25;;;;;:35;;-1:-1:-1;;;;;;9434:66:10;;;;-1:-1:-1;;;9484:15:10;9434:66;;;;;;;9388:25;;9561:379;9581:8;9577:1;:12;9561:379;;;9616:38;;9641:12;;-1:-1:-1;;;;;9616:38:10;;;9633:1;;9616:38;;9633:1;;9616:38;9673:4;9669:229;;;9728:59;9759:1;9763:2;9767:12;9781:5;9728:22;:59::i;:::-;9698:184;;;;-1:-1:-1;;;9698:184:10;;;;;;;:::i;:::-;9914:14;;;;;9591:3;9561:379;;;-1:-1:-1;9952:12:10;:27;9999:60;6983:355;14:131:12;-1:-1:-1;;;;;;88:32:12;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:12;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:12;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:12:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:12;;1348:180;-1:-1:-1;1348:180:12:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:12;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:12:o;2360:328::-;2437:6;2445;2453;2506:2;2494:9;2485:7;2481:23;2477:32;2474:52;;;2522:1;2519;2512:12;2474:52;2545:29;2564:9;2545:29;:::i;:::-;2535:39;;2593:38;2627:2;2616:9;2612:18;2593:38;:::i;:::-;2583:48;;2678:2;2667:9;2663:18;2650:32;2640:42;;2360:328;;;;;:::o;2693:127::-;2754:10;2749:3;2745:20;2742:1;2735:31;2785:4;2782:1;2775:15;2809:4;2806:1;2799:15;2825:632;2890:5;2920:18;2961:2;2953:6;2950:14;2947:40;;;2967:18;;:::i;:::-;3042:2;3036:9;3010:2;3096:15;;-1:-1:-1;;3092:24:12;;;3118:2;3088:33;3084:42;3072:55;;;3142:18;;;3162:22;;;3139:46;3136:72;;;3188:18;;:::i;:::-;3228:10;3224:2;3217:22;3257:6;3248:15;;3287:6;3279;3272:22;3327:3;3318:6;3313:3;3309:16;3306:25;3303:45;;;3344:1;3341;3334:12;3303:45;3394:6;3389:3;3382:4;3374:6;3370:17;3357:44;3449:1;3442:4;3433:6;3425;3421:19;3417:30;3410:41;;;;2825:632;;;;;:::o;3462:451::-;3531:6;3584:2;3572:9;3563:7;3559:23;3555:32;3552:52;;;3600:1;3597;3590:12;3552:52;3640:9;3627:23;3673:18;3665:6;3662:30;3659:50;;;3705:1;3702;3695:12;3659:50;3728:22;;3781:4;3773:13;;3769:27;-1:-1:-1;3759:55:12;;3810:1;3807;3800:12;3759:55;3833:74;3899:7;3894:2;3881:16;3876:2;3872;3868:11;3833:74;:::i;3918:186::-;3977:6;4030:2;4018:9;4009:7;4005:23;4001:32;3998:52;;;4046:1;4043;4036:12;3998:52;4069:29;4088:9;4069:29;:::i;4109:160::-;4174:20;;4230:13;;4223:21;4213:32;;4203:60;;4259:1;4256;4249:12;4274:180;4330:6;4383:2;4371:9;4362:7;4358:23;4354:32;4351:52;;;4399:1;4396;4389:12;4351:52;4422:26;4438:9;4422:26;:::i;4459:254::-;4524:6;4532;4585:2;4573:9;4564:7;4560:23;4556:32;4553:52;;;4601:1;4598;4591:12;4553:52;4624:29;4643:9;4624:29;:::i;:::-;4614:39;;4672:35;4703:2;4692:9;4688:18;4672:35;:::i;:::-;4662:45;;4459:254;;;;;:::o;4718:667::-;4813:6;4821;4829;4837;4890:3;4878:9;4869:7;4865:23;4861:33;4858:53;;;4907:1;4904;4897:12;4858:53;4930:29;4949:9;4930:29;:::i;:::-;4920:39;;4978:38;5012:2;5001:9;4997:18;4978:38;:::i;:::-;4968:48;;5063:2;5052:9;5048:18;5035:32;5025:42;;5118:2;5107:9;5103:18;5090:32;5145:18;5137:6;5134:30;5131:50;;;5177:1;5174;5167:12;5131:50;5200:22;;5253:4;5245:13;;5241:27;-1:-1:-1;5231:55:12;;5282:1;5279;5272:12;5231:55;5305:74;5371:7;5366:2;5353:16;5348:2;5344;5340:11;5305:74;:::i;:::-;5295:84;;;4718:667;;;;;;;:::o;5390:260::-;5458:6;5466;5519:2;5507:9;5498:7;5494:23;5490:32;5487:52;;;5535:1;5532;5525:12;5487:52;5558:29;5577:9;5558:29;:::i;:::-;5548:39;;5606:38;5640:2;5629:9;5625:18;5606:38;:::i;5655:380::-;5734:1;5730:12;;;;5777;;;5798:61;;5852:4;5844:6;5840:17;5830:27;;5798:61;5905:2;5897:6;5894:14;5874:18;5871:38;5868:161;;5951:10;5946:3;5942:20;5939:1;5932:31;5986:4;5983:1;5976:15;6014:4;6011:1;6004:15;5868:161;;5655:380;;;:::o;7992:127::-;8053:10;8048:3;8044:20;8041:1;8034:31;8084:4;8081:1;8074:15;8108:4;8105:1;8098:15;8124:125;8189:9;;;8210:10;;;8207:36;;;8223:18;;:::i;9074:545::-;9176:2;9171:3;9168:11;9165:448;;;9212:1;9237:5;9233:2;9226:17;9282:4;9278:2;9268:19;9352:2;9340:10;9336:19;9333:1;9329:27;9323:4;9319:38;9388:4;9376:10;9373:20;9370:47;;;-1:-1:-1;9411:4:12;9370:47;9466:2;9461:3;9457:12;9454:1;9450:20;9444:4;9440:31;9430:41;;9521:82;9539:2;9532:5;9529:13;9521:82;;;9584:17;;;9565:1;9554:13;9521:82;;;9525:3;;;9074:545;;;:::o;9795:1352::-;9921:3;9915:10;9948:18;9940:6;9937:30;9934:56;;;9970:18;;:::i;:::-;9999:97;10089:6;10049:38;10081:4;10075:11;10049:38;:::i;:::-;10043:4;9999:97;:::i;:::-;10151:4;;10215:2;10204:14;;10232:1;10227:663;;;;10934:1;10951:6;10948:89;;;-1:-1:-1;11003:19:12;;;10997:26;10948:89;-1:-1:-1;;9752:1:12;9748:11;;;9744:24;9740:29;9730:40;9776:1;9772:11;;;9727:57;11050:81;;10197:944;;10227:663;9021:1;9014:14;;;9058:4;9045:18;;-1:-1:-1;;10263:20:12;;;10381:236;10395:7;10392:1;10389:14;10381:236;;;10484:19;;;10478:26;10463:42;;10576:27;;;;10544:1;10532:14;;;;10411:19;;10381:236;;;10385:3;10645:6;10636:7;10633:19;10630:201;;;10706:19;;;10700:26;-1:-1:-1;;10789:1:12;10785:14;;;10801:3;10781:24;10777:37;10773:42;10758:58;10743:74;;10630:201;-1:-1:-1;;;;;10877:1:12;10861:14;;;10857:22;10844:36;;-1:-1:-1;9795:1352:12:o;11912:168::-;11985:9;;;12016;;12033:15;;;12027:22;;12013:37;12003:71;;12054:18;;:::i;12085:128::-;12152:9;;;12173:11;;;12170:37;;;12187:18;;:::i;12921:415::-;13123:2;13105:21;;;13162:2;13142:18;;;13135:30;13201:34;13196:2;13181:18;;13174:62;-1:-1:-1;;;13267:2:12;13252:18;;13245:49;13326:3;13311:19;;12921:415::o;14108:496::-;14287:3;14325:6;14319:13;14341:66;14400:6;14395:3;14388:4;14380:6;14376:17;14341:66;:::i;:::-;14470:13;;14429:16;;;;14492:70;14470:13;14429:16;14539:4;14527:17;;14492:70;:::i;:::-;14578:20;;14108:496;-1:-1:-1;;;;14108:496:12:o;18431:489::-;-1:-1:-1;;;;;18700:15:12;;;18682:34;;18752:15;;18747:2;18732:18;;18725:43;18799:2;18784:18;;18777:34;;;18847:3;18842:2;18827:18;;18820:31;;;18625:4;;18868:46;;18894:19;;18886:6;18868:46;:::i;:::-;18860:54;18431:489;-1:-1:-1;;;;;;18431:489:12:o;18925:249::-;18994:6;19047:2;19035:9;19026:7;19022:23;19018:32;19015:52;;;19063:1;19060;19053:12;19015:52;19095:9;19089:16;19114:30;19138:5;19114:30;:::i;19179:135::-;19218:3;19239:17;;;19236:43;;19259:18;;:::i;:::-;-1:-1:-1;19306:1:12;19295:13;;19179:135::o;19319:127::-;19380:10;19375:3;19371:20;19368:1;19361:31;19411:4;19408:1;19401:15;19435:4;19432:1;19425:15;19451:120;19491:1;19517;19507:35;;19522:18;;:::i;:::-;-1:-1:-1;19556:9:12;;19451:120::o;19576:112::-;19608:1;19634;19624:35;;19639:18;;:::i;:::-;-1:-1:-1;19673:9:12;;19576:112::o;19693:127::-;19754:10;19749:3;19745:20;19742:1;19735:31;19785:4;19782:1;19775:15;19809:4;19806:1;19799:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1681600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"FREE_MINT_IS_ALLOWED_UNTIL()": "2385",
								"FREE_MINT_LIMIT_PER_WALLET()": "2363",
								"IS_SALE_ACTIVE()": "2367",
								"MAX_MINT_AMOUNT_PER_TX()": "2341",
								"MAX_SUPPLY()": "2341",
								"METADATA_FROZEN()": "2431",
								"PRICE()": "2340",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2740",
								"freezeMetadata()": "26598",
								"getApproved(uint256)": "4723",
								"isApprovedForAll(address,address)": "infinite",
								"lowerMaxSupply(uint256)": "28848",
								"mint(uint256)": "infinite",
								"mintOwner(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2398",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setBaseURI(string)": "infinite",
								"setFreeMintAllowance(uint256)": "24555",
								"setFreeMintAllowedUntil(uint256)": "24600",
								"setMaxMintPerTx(uint256)": "24577",
								"setPrice(uint256)": "24577",
								"setSaleActive(bool)": "26783",
								"supportsInterface(bytes4)": "557",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "2382",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28446",
								"withdraw()": "infinite"
							},
							"internal": {
								"_baseURI()": "infinite",
								"updateFreeMintCount(address,uint256)": "24409"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 207,
									"end": 4328,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 207,
									"end": 4328,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 207,
									"end": 4328,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 699,
									"end": 1200,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 699,
									"end": 1200,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "476C7574746F6E79"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "474C542D374453"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2077,
									"end": 2082,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2074,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 2069,
									"end": 2082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2093,
									"end": 2100,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 2103,
									"end": 2110,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2093,
									"end": 2100,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 2093,
									"end": 2110,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 910,
									"end": 915,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 910,
									"end": 923,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 910,
									"end": 923,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 910,
									"end": 923,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 934,
									"end": 944,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "A"
								},
								{
									"begin": 934,
									"end": 956,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 934,
									"end": 956,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 934,
									"end": 956,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 967,
									"end": 975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 978,
									"end": 985,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 967,
									"end": 975,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 967,
									"end": 985,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1022,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "C"
								},
								{
									"begin": 996,
									"end": 1042,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 996,
									"end": 1042,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 996,
									"end": 1042,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 996,
									"end": 1042,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1053,
									"end": 1075,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "D"
								},
								{
									"begin": 1053,
									"end": 1090,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1053,
									"end": 1090,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1053,
									"end": 1090,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1053,
									"end": 1090,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1101,
									"end": 1115,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "E"
								},
								{
									"begin": 1101,
									"end": 1130,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1101,
									"end": 1130,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1101,
									"end": 1130,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1101,
									"end": 1130,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1101,
									"end": 1130,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1101,
									"end": 1130,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1101,
									"end": 1130,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1101,
									"end": 1130,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1101,
									"end": 1130,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1101,
									"end": 1130,
									"modifierDepth": 1,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1101,
									"end": 1130,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1101,
									"end": 1130,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1141,
									"end": 1167,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "F"
								},
								{
									"begin": 1141,
									"end": 1192,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 207,
									"end": 4328,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 207,
									"end": 4328,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 207,
									"end": 4328,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 146,
									"end": 310,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 310,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 222,
									"end": 235,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 222,
									"end": 235,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 271,
									"end": 284,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 271,
									"end": 284,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 264,
									"end": 285,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 254,
									"end": 286,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 254,
									"end": 286,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 244,
									"end": 304,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 244,
									"end": 304,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 300,
									"end": 301,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 298,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 290,
									"end": 302,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 244,
									"end": 304,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 244,
									"end": 304,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 146,
									"end": 310,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 146,
									"end": 310,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 146,
									"end": 310,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 146,
									"end": 310,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 315,
									"end": 1745,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 315,
									"end": 1745,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 446,
									"end": 452,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 460,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 462,
									"end": 468,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 470,
									"end": 476,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 478,
									"end": 484,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 486,
									"end": 492,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 494,
									"end": 500,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 547,
									"end": 550,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 535,
									"end": 544,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 526,
									"end": 533,
									"name": "DUP11",
									"source": 12
								},
								{
									"begin": 522,
									"end": 545,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 518,
									"end": 551,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 515,
									"end": 568,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 515,
									"end": 568,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 515,
									"end": 568,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 564,
									"end": 565,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 561,
									"end": 562,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 554,
									"end": 566,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 515,
									"end": 568,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 515,
									"end": 568,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 587,
									"end": 603,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 587,
									"end": 603,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 622,
									"end": 624,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 649,
									"end": 667,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 649,
									"end": 667,
									"name": "DUP11",
									"source": 12
								},
								{
									"begin": 649,
									"end": 667,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 643,
									"end": 668,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 712,
									"end": 714,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 697,
									"end": 715,
									"name": "DUP12",
									"source": 12
								},
								{
									"begin": 697,
									"end": 715,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 691,
									"end": 716,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 587,
									"end": 603,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 587,
									"end": 603,
									"name": "SWAP10",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 643,
									"end": 668,
									"name": "SWAP8",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 622,
									"end": 624,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 765,
									"end": 779,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 765,
									"end": 779,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 765,
									"end": 779,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 762,
									"end": 796,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 762,
									"end": 796,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 762,
									"end": 796,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 789,
									"end": 790,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 782,
									"end": 794,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 762,
									"end": 796,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 762,
									"end": 796,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 830,
									"end": 836,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 819,
									"end": 828,
									"name": "DUP12",
									"source": 12
								},
								{
									"begin": 815,
									"end": 837,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 805,
									"end": 837,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 805,
									"end": 837,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 875,
									"end": 882,
									"name": "DUP12",
									"source": 12
								},
								{
									"begin": 868,
									"end": 872,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 864,
									"end": 866,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 860,
									"end": 873,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 856,
									"end": 883,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 846,
									"end": 901,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 846,
									"end": 901,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 897,
									"end": 898,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 894,
									"end": 895,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 887,
									"end": 899,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 846,
									"end": 901,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 846,
									"end": 901,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 926,
									"end": 928,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 920,
									"end": 929,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 948,
									"end": 950,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 944,
									"end": 946,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 941,
									"end": 951,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 938,
									"end": 974,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 938,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 938,
									"end": 974,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 954,
									"end": 972,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 954,
									"end": 972,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 954,
									"end": 972,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 954,
									"end": 972,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 954,
									"end": 972,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1029,
									"end": 1031,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1023,
									"end": 1032,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 997,
									"end": 999,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1083,
									"end": 1096,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1083,
									"end": 1096,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1079,
									"end": 1101,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1079,
									"end": 1101,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1079,
									"end": 1101,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1103,
									"end": 1105,
									"name": "PUSH",
									"source": 12,
									"value": "3F"
								},
								{
									"begin": 1075,
									"end": 1106,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1071,
									"end": 1111,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1059,
									"end": 1112,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1059,
									"end": 1112,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1059,
									"end": 1112,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1127,
									"end": 1145,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1127,
									"end": 1145,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1127,
									"end": 1145,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1124,
									"end": 1170,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1121,
									"end": 1193,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1121,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1121,
									"end": 1193,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1173,
									"end": 1191,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1173,
									"end": 1191,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1173,
									"end": 1191,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1173,
									"end": 1191,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1173,
									"end": 1191,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1223,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1209,
									"end": 1211,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1202,
									"end": 1224,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1248,
									"end": 1250,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1240,
									"end": 1246,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1233,
									"end": 1251,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1288,
									"end": 1295,
									"name": "DUP15",
									"source": 12
								},
								{
									"begin": 1283,
									"end": 1285,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1278,
									"end": 1280,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1274,
									"end": 1276,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1270,
									"end": 1281,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1266,
									"end": 1286,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1263,
									"end": 1296,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1260,
									"end": 1313,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1260,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1260,
									"end": 1313,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1309,
									"end": 1310,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1299,
									"end": 1311,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1260,
									"end": 1313,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1260,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1332,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1332,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1341,
									"end": 1470,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1341,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1355,
									"end": 1357,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1349,
									"end": 1358,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1341,
									"end": 1470,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1341,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 1341,
									"end": 1470,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1443,
									"end": 1453,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1443,
									"end": 1453,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1443,
									"end": 1453,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1439,
									"end": 1458,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1439,
									"end": 1458,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1433,
									"end": 1459,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1412,
									"end": 1426,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1412,
									"end": 1426,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1412,
									"end": 1426,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1408,
									"end": 1431,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1408,
									"end": 1431,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1401,
									"end": 1460,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1366,
									"end": 1376,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1366,
									"end": 1376,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1366,
									"end": 1376,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1366,
									"end": 1376,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1341,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1341,
									"end": 1470,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1341,
									"end": 1470,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 1341,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1512,
									"end": 1513,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1507,
									"end": 1509,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1502,
									"end": 1504,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1494,
									"end": 1500,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1490,
									"end": 1505,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1486,
									"end": 1510,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1479,
									"end": 1514,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1533,
									"end": 1539,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1523,
									"end": 1539,
									"name": "SWAP11",
									"source": 12
								},
								{
									"begin": 1523,
									"end": 1539,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1523,
									"end": 1539,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1523,
									"end": 1539,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1523,
									"end": 1539,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1523,
									"end": 1539,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1523,
									"end": 1539,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1523,
									"end": 1539,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1579,
									"end": 1581,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1568,
									"end": 1577,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 1564,
									"end": 1582,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1558,
									"end": 1583,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1548,
									"end": 1583,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1548,
									"end": 1583,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1623,
									"end": 1626,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1612,
									"end": 1621,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 1608,
									"end": 1627,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1602,
									"end": 1628,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1592,
									"end": 1628,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1592,
									"end": 1628,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1647,
									"end": 1694,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 1678,
									"end": 1687,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 1674,
									"end": 1693,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1647,
									"end": 1694,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1647,
									"end": 1694,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1647,
									"end": 1694,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 1647,
									"end": 1694,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1637,
									"end": 1694,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1637,
									"end": 1694,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1734,
									"end": 1737,
									"name": "PUSH",
									"source": 12,
									"value": "C0"
								},
								{
									"begin": 1723,
									"end": 1732,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 1719,
									"end": 1738,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1713,
									"end": 1739,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1703,
									"end": 1739,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1703,
									"end": 1739,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 315,
									"end": 1745,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 315,
									"end": 1745,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 315,
									"end": 1745,
									"name": "SWAP9",
									"source": 12
								},
								{
									"begin": 315,
									"end": 1745,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 315,
									"end": 1745,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 315,
									"end": 1745,
									"name": "SWAP8",
									"source": 12
								},
								{
									"begin": 315,
									"end": 1745,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 315,
									"end": 1745,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 315,
									"end": 1745,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 315,
									"end": 1745,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 315,
									"end": 1745,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1750,
									"end": 2130,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 1750,
									"end": 2130,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1829,
									"end": 1830,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1825,
									"end": 1837,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1825,
									"end": 1837,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1825,
									"end": 1837,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1825,
									"end": 1837,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1872,
									"end": 1884,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1872,
									"end": 1884,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1872,
									"end": 1884,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1893,
									"end": 1954,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 1893,
									"end": 1954,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1947,
									"end": 1951,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 1939,
									"end": 1945,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1935,
									"end": 1952,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1925,
									"end": 1952,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1925,
									"end": 1952,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1893,
									"end": 1954,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 1893,
									"end": 1954,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2000,
									"end": 2002,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1992,
									"end": 1998,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1989,
									"end": 2003,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1969,
									"end": 1987,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1966,
									"end": 2004,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1963,
									"end": 2124,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 1963,
									"end": 2124,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2046,
									"end": 2056,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 2041,
									"end": 2044,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 2037,
									"end": 2057,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2034,
									"end": 2035,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2027,
									"end": 2058,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2081,
									"end": 2085,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 2078,
									"end": 2079,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 2071,
									"end": 2086,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2109,
									"end": 2113,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2106,
									"end": 2107,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2099,
									"end": 2114,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1963,
									"end": 2124,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 1963,
									"end": 2124,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1963,
									"end": 2124,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1750,
									"end": 2130,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1750,
									"end": 2130,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1750,
									"end": 2130,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1750,
									"end": 2130,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2261,
									"end": 2806,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 2261,
									"end": 2806,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2363,
									"end": 2365,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2358,
									"end": 2361,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2355,
									"end": 2366,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2352,
									"end": 2800,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2352,
									"end": 2800,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 2352,
									"end": 2800,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2400,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2424,
									"end": 2429,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2420,
									"end": 2422,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2469,
									"end": 2473,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2465,
									"end": 2467,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2455,
									"end": 2474,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 2539,
									"end": 2541,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2527,
									"end": 2537,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2523,
									"end": 2542,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2520,
									"end": 2521,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 2516,
									"end": 2543,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2510,
									"end": 2514,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2506,
									"end": 2544,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2579,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2563,
									"end": 2573,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2560,
									"end": 2580,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2604,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2604,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 2557,
									"end": 2604,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2598,
									"end": 2602,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2604,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 2557,
									"end": 2604,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2653,
									"end": 2655,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2648,
									"end": 2651,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2644,
									"end": 2656,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2641,
									"end": 2642,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 2637,
									"end": 2657,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2631,
									"end": 2635,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2627,
									"end": 2658,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2617,
									"end": 2658,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2617,
									"end": 2658,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2708,
									"end": 2790,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 2708,
									"end": 2790,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2726,
									"end": 2728,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2719,
									"end": 2724,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2716,
									"end": 2729,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2708,
									"end": 2790,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2708,
									"end": 2790,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 2708,
									"end": 2790,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2771,
									"end": 2788,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2771,
									"end": 2788,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2771,
									"end": 2788,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2752,
									"end": 2753,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2741,
									"end": 2754,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2708,
									"end": 2790,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 2708,
									"end": 2790,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2708,
									"end": 2790,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 2708,
									"end": 2790,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2712,
									"end": 2715,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2712,
									"end": 2715,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2712,
									"end": 2715,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2352,
									"end": 2800,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 2352,
									"end": 2800,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2261,
									"end": 2806,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2261,
									"end": 2806,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2261,
									"end": 2806,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2261,
									"end": 2806,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2982,
									"end": 4334,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 2982,
									"end": 4334,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3102,
									"end": 3112,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3102,
									"end": 3112,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3124,
									"end": 3154,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3124,
									"end": 3154,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3121,
									"end": 3177,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3121,
									"end": 3177,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 3121,
									"end": 3177,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3157,
									"end": 3175,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 3157,
									"end": 3175,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 3157,
									"end": 3175,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3157,
									"end": 3175,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 3157,
									"end": 3175,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3186,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 3276,
									"end": 3282,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3274,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 3268,
									"end": 3272,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3262,
									"end": 3273,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3274,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 3236,
									"end": 3274,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3274,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 3236,
									"end": 3274,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3230,
									"end": 3234,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3186,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 3186,
									"end": 3283,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3186,
									"end": 3283,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 3186,
									"end": 3283,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3338,
									"end": 3342,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3338,
									"end": 3342,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3402,
									"end": 3404,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 3391,
									"end": 3405,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3391,
									"end": 3405,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3419,
									"end": 3420,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3414,
									"end": 4077,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3414,
									"end": 4077,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 3414,
									"end": 4077,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 3414,
									"end": 4077,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4121,
									"end": 4122,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4138,
									"end": 4144,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4135,
									"end": 4224,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4135,
									"end": 4224,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 4135,
									"end": 4224,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4190,
									"end": 4209,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4190,
									"end": 4209,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4190,
									"end": 4209,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4184,
									"end": 4210,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4135,
									"end": 4224,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 4135,
									"end": 4224,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2939,
									"end": 2940,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2935,
									"end": 2946,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2935,
									"end": 2946,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2935,
									"end": 2946,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2931,
									"end": 2955,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2927,
									"end": 2956,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 2917,
									"end": 2957,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2963,
									"end": 2964,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2959,
									"end": 2970,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2959,
									"end": 2970,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2959,
									"end": 2970,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2914,
									"end": 2971,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 4237,
									"end": 4318,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4237,
									"end": 4318,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3384,
									"end": 4328,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 3384,
									"end": 4328,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3414,
									"end": 4077,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 3414,
									"end": 4077,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2208,
									"end": 2209,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2201,
									"end": 2215,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2201,
									"end": 2215,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2201,
									"end": 2215,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2245,
									"end": 2249,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2232,
									"end": 2250,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2232,
									"end": 2250,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3450,
									"end": 3470,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3450,
									"end": 3470,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3450,
									"end": 3470,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3568,
									"end": 3804,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 3568,
									"end": 3804,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3582,
									"end": 3589,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3579,
									"end": 3580,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3576,
									"end": 3590,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3568,
									"end": 3804,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3568,
									"end": 3804,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 3568,
									"end": 3804,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3665,
									"end": 3691,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3650,
									"end": 3692,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3650,
									"end": 3692,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3763,
									"end": 3790,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 3763,
									"end": 3790,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3763,
									"end": 3790,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3763,
									"end": 3790,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 3731,
									"end": 3732,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3719,
									"end": 3733,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3719,
									"end": 3733,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3719,
									"end": 3733,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3719,
									"end": 3733,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3598,
									"end": 3617,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3598,
									"end": 3617,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3568,
									"end": 3804,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 3568,
									"end": 3804,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3568,
									"end": 3804,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 3568,
									"end": 3804,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3572,
									"end": 3575,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3832,
									"end": 3838,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3823,
									"end": 3830,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3820,
									"end": 3839,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3817,
									"end": 4018,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3817,
									"end": 4018,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 3817,
									"end": 4018,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3893,
									"end": 3912,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3893,
									"end": 3912,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3893,
									"end": 3912,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3887,
									"end": 3913,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3976,
									"end": 3977,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 3972,
									"end": 3986,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3972,
									"end": 3986,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3972,
									"end": 3986,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 3988,
									"end": 3991,
									"name": "PUSH",
									"source": 12,
									"value": "F8"
								},
								{
									"begin": 3968,
									"end": 3992,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3964,
									"end": 4001,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3960,
									"end": 4002,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3945,
									"end": 4003,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3930,
									"end": 4004,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3930,
									"end": 4004,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3817,
									"end": 4018,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 3817,
									"end": 4018,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4064,
									"end": 4065,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4048,
									"end": 4062,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4048,
									"end": 4062,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4048,
									"end": 4062,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 4044,
									"end": 4066,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4031,
									"end": 4067,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4031,
									"end": 4067,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2982,
									"end": 4334,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2982,
									"end": 4334,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 2982,
									"end": 4334,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 207,
									"end": 4328,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 207,
									"end": 4328,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 207,
									"end": 4328,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 207,
									"end": 4328,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 207,
									"end": 4328,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 207,
									"end": 4328,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 207,
									"end": 4328,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c479dc284b44daf432fcb7e3fe228ba3c11e83b7ab1b774284a872d032c095564736f6c63430008110033",
									".code": [
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "A22CB465"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "C87B56DD"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "C87B56DD"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "D111515D"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "E985E9C5"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "FDB4953A"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "A22CB465"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "B0551AC4"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "B88D4FDE"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "C4E9374D"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "8D859F3E"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "8D859F3E"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "91B7F5ED"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "A0712D68"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "76D02B71"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "841718A6"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "8B85E43D"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "32CB6B0C"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "42842E0E"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "42842E0E"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "55F804B3"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "616CDB1E"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "6352211E"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "32CB6B0C"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "3CCFD60B"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "4065B85F"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "408CBF94"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "9EF6527"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "9EF6527"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "10B0C052"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "81812FC"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 207,
											"end": 4328,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 2289,
											"end": 2582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2289,
											"end": 2582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 4064,
											"end": 4164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 4064,
											"end": 4164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 5626,
											"end": 5840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5626,
											"end": 5840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 5147,
											"end": 5560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 5147,
											"end": 5560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 440,
											"end": 477,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 440,
											"end": 477,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 440,
											"end": 477,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 440,
											"end": 477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 440,
											"end": 477,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 440,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 440,
											"end": 477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 440,
											"end": 477,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 440,
											"end": 477,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 440,
											"end": 477,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 440,
											"end": 477,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 440,
											"end": 477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 440,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 440,
											"end": 477,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 440,
											"end": 477,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 440,
											"end": 477,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 440,
											"end": 477,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 440,
											"end": 477,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 440,
											"end": 477,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 440,
											"end": 477,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 477,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 440,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 2178,
											"end": 2355,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 392,
											"end": 433,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 392,
											"end": 433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 392,
											"end": 433,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 392,
											"end": 433,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 392,
											"end": 433,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 392,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 392,
											"end": 433,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 392,
											"end": 433,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 392,
											"end": 433,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 392,
											"end": 433,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 392,
											"end": 433,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 392,
											"end": 433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 392,
											"end": 433,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 392,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 392,
											"end": 433,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 392,
											"end": 433,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 392,
											"end": 433,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 392,
											"end": 433,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2170,
											"end": 2177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 2126,
											"end": 2217,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 6502,
											"end": 6664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 6502,
											"end": 6664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 330,
											"end": 355,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 330,
											"end": 355,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 355,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 330,
											"end": 355,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 330,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 330,
											"end": 355,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 330,
											"end": 355,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 330,
											"end": 355,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 330,
											"end": 355,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 330,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 330,
											"end": 355,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 330,
											"end": 355,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4154,
											"end": 4325,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 4154,
											"end": 4325,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4154,
											"end": 4325,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 4154,
											"end": 4325,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4154,
											"end": 4325,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4154,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 4154,
											"end": 4325,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4154,
											"end": 4325,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4325,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4154,
											"end": 4325,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4154,
											"end": 4325,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 4154,
											"end": 4325,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4154,
											"end": 4325,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4154,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4154,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 4154,
											"end": 4325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 517,
											"end": 558,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 517,
											"end": 558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 517,
											"end": 558,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 517,
											"end": 558,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 517,
											"end": 558,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 517,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 517,
											"end": 558,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 517,
											"end": 558,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 558,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 517,
											"end": 558,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 517,
											"end": 558,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 517,
											"end": 558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 517,
											"end": 558,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 517,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 517,
											"end": 558,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 517,
											"end": 558,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 517,
											"end": 558,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 517,
											"end": 558,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3883,
											"end": 4027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3883,
											"end": 4027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 6735,
											"end": 6912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 6735,
											"end": 6912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 1890,
											"end": 2059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1890,
											"end": 2059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2216,
											"end": 2338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 2216,
											"end": 2338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 3873,
											"end": 3997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 3873,
											"end": 3997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2646,
											"end": 2867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 2646,
											"end": 2867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 510,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 484,
											"end": 510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 484,
											"end": 510,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 484,
											"end": 510,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 484,
											"end": 510,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 484,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 484,
											"end": 510,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 484,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 510,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 484,
											"end": 510,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 484,
											"end": 510,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 484,
											"end": 510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 484,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 484,
											"end": 510,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 484,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 484,
											"end": 510,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 484,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 484,
											"end": 510,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 484,
											"end": 510,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 484,
											"end": 510,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 2346,
											"end": 2455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 2346,
											"end": 2455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2463,
											"end": 2617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 2463,
											"end": 2617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 303,
											"end": 323,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 303,
											"end": 323,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 303,
											"end": 323,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 303,
											"end": 323,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 303,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 303,
											"end": 323,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 303,
											"end": 323,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 303,
											"end": 323,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 303,
											"end": 323,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 303,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 303,
											"end": 323,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 303,
											"end": 323,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1524,
											"end": 1620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 1524,
											"end": 1620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 4233,
											"end": 4337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3875,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 2996,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2996,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2996,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 2996,
											"end": 3875,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2996,
											"end": 3875,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2996,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2996,
											"end": 3875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2996,
											"end": 3875,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 2996,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2996,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 2996,
											"end": 3875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 5912,
											"end": 6200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 5912,
											"end": 6200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2067,
											"end": 2208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 2067,
											"end": 2208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 6983,
											"end": 7338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 6983,
											"end": 7338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1628,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 1628,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 4408,
											"end": 4743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 4408,
											"end": 4743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2625,
											"end": 2711,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 2625,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2711,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2711,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2711,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 2625,
											"end": 2711,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2711,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2625,
											"end": 2711,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2711,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2711,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 2625,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2711,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2625,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 2625,
											"end": 2711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 6271,
											"end": 6435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 6271,
											"end": 6435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 602,
											"end": 629,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 602,
											"end": 629,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 602,
											"end": 629,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 602,
											"end": 629,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 602,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 602,
											"end": 629,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 602,
											"end": 629,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 602,
											"end": 629,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 602,
											"end": 629,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 602,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 602,
											"end": 629,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 602,
											"end": 629,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 602,
											"end": 629,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2391,
											"end": 2395,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2424,
											"end": 2464,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2464,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2424,
											"end": 2464,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2464,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2424,
											"end": 2525,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2477,
											"end": 2525,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2525,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2477,
											"end": 2525,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2525,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2424,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2574,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 2424,
											"end": 2574,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2538,
											"end": 2574,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 2538,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2408,
											"end": 2574,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2582,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2289,
											"end": 2582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4118,
											"end": 4131,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4151,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 4144,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 4144,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5626,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5694,
											"end": 5701,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5722,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 5730,
											"end": 5737,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7650,
											"end": 7654,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 7674,
											"end": 7696,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7593,
											"end": 7704,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5722,
											"end": 5738,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 5722,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6242,
											"end": 6244,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6224,
											"end": 6245,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6281,
											"end": 6283,
											"name": "PUSH",
											"source": 12,
											"value": "2D"
										},
										{
											"begin": 6261,
											"end": 6279,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6261,
											"end": 6279,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6261,
											"end": 6279,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6254,
											"end": 6284,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6320,
											"end": 6354,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A20617070726F76656420717565727920666F72206E6F6E65"
										},
										{
											"begin": 6300,
											"end": 6318,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6300,
											"end": 6318,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6300,
											"end": 6318,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6293,
											"end": 6355,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3C34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6371,
											"end": 6389,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6371,
											"end": 6389,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6371,
											"end": 6389,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6364,
											"end": 6407,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6424,
											"end": 6443,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 6424,
											"end": 6443,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 5714,
											"end": 5788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5808,
											"end": 5823,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5233,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5236,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 5252,
											"end": 5259,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5236,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 5236,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5236,
											"end": 5260,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 5236,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5260,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5285,
											"end": 5290,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5279,
											"end": 5290,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5279,
											"end": 5281,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5279,
											"end": 5290,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5279,
											"end": 5290,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6656,
											"end": 6658,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6638,
											"end": 6659,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6695,
											"end": 6697,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 6675,
											"end": 6693,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6675,
											"end": 6693,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6675,
											"end": 6693,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6668,
											"end": 6698,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6734,
											"end": 6768,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A20617070726F76616C20746F2063757272656E74206F776E"
										},
										{
											"begin": 6714,
											"end": 6732,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6714,
											"end": 6732,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6714,
											"end": 6732,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6707,
											"end": 6769,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6785,
											"end": 6803,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6785,
											"end": 6803,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6785,
											"end": 6803,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6778,
											"end": 6810,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6827,
											"end": 6846,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 6827,
											"end": 6846,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 6454,
											"end": 6852,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 5271,
											"end": 5329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5364,
											"end": 5385,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5364,
											"end": 5385,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5364,
											"end": 5385,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5364,
											"end": 5385,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5364,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 5364,
											"end": 5426,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 5406,
											"end": 5411,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 6271,
											"end": 6435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7059,
											"end": 7061,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7041,
											"end": 7062,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "PUSH",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 7078,
											"end": 7096,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7078,
											"end": 7096,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7096,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7071,
											"end": 7101,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7137,
											"end": 7171,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A20617070726F76652063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 7117,
											"end": 7135,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7117,
											"end": 7135,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7117,
											"end": 7135,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7110,
											"end": 7172,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7208,
											"end": 7235,
											"name": "PUSH",
											"source": 12,
											"value": "776E6572206E6F7220617070726F76656420666F7220616C6C00000000000000"
										},
										{
											"begin": 7188,
											"end": 7206,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7188,
											"end": 7206,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7188,
											"end": 7206,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7181,
											"end": 7236,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7253,
											"end": 7272,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 7253,
											"end": 7272,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 6857,
											"end": 7278,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 5342,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5524,
											"end": 5552,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 5533,
											"end": 5535,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5546,
											"end": 5551,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5524,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 5524,
											"end": 5552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5524,
											"end": 5552,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 5524,
											"end": 5552,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5209,
											"end": 5560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 6502,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6628,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 6638,
											"end": 6642,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6648,
											"end": 6655,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6628,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 6628,
											"end": 6656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4154,
											"end": 4325,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 4154,
											"end": 4325,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2325,
											"end": 2332,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2317,
											"end": 2380,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7485,
											"end": 7487,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7488,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7524,
											"end": 7526,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 7504,
											"end": 7522,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7504,
											"end": 7522,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7504,
											"end": 7522,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7497,
											"end": 7527,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7563,
											"end": 7596,
											"name": "PUSH",
											"source": 12,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7543,
											"end": 7561,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7543,
											"end": 7561,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7543,
											"end": 7561,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7536,
											"end": 7597,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7614,
											"end": 7632,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7614,
											"end": 7632,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 7283,
											"end": 7638,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2317,
											"end": 2380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4254,
											"modifierDepth": 2,
											"name": "SELFBALANCE",
											"source": 11
										},
										{
											"begin": 4267,
											"end": 4317,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 4103,
											"end": 4145,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "C919CE1B37FC4E0405885A3350CC153B27DD06E0"
										},
										{
											"begin": 4233,
											"end": 4254,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4267,
											"end": 4284,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 4267,
											"end": 4317,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4267,
											"end": 4317,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 4267,
											"end": 4317,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3883,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3958,
											"end": 3969,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2817,
											"end": 2818,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2814,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2818,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2837,
											"end": 2859,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 2837,
											"end": 2859,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2833,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 7847,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7827,
											"end": 7848,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7884,
											"end": 7886,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 7864,
											"end": 7882,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7864,
											"end": 7882,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7864,
											"end": 7882,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7857,
											"end": 7887,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964206D696E7420616D6F756E7421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7903,
											"end": 7921,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7903,
											"end": 7921,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7903,
											"end": 7921,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7896,
											"end": 7946,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7963,
											"end": 7981,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7963,
											"end": 7981,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 7643,
											"end": 7987,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2933,
											"end": 2943,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 2933,
											"end": 2943,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2918,
											"end": 2929,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 2903,
											"end": 2929,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2929,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 2903,
											"end": 2929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2929,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 2903,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8456,
											"end": 8458,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8438,
											"end": 8459,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8495,
											"end": 8497,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 8475,
											"end": 8493,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8475,
											"end": 8493,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8475,
											"end": 8493,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8468,
											"end": 8498,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D617820737570706C7920657863656564656421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8514,
											"end": 8532,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8514,
											"end": 8532,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8514,
											"end": 8532,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8507,
											"end": 8557,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8574,
											"end": 8592,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8574,
											"end": 8592,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 8254,
											"end": 8598,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1094,
											"end": 1105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1094,
											"end": 1107,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4019,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 4002,
											"end": 4005,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4018,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3992,
											"end": 4001,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 3992,
											"end": 4019,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 6882,
											"end": 6886,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6888,
											"end": 6890,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6892,
											"end": 6899,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 6865,
											"end": 6904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 1994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 1979,
											"end": 1994,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 1994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1979,
											"end": 1994,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 1994,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1970,
											"end": 2015,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 1970,
											"end": 2015,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1970,
											"end": 2015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1970,
											"end": 2015,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1970,
											"end": 2015,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1970,
											"end": 2015,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8805,
											"end": 8807,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 2015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1970,
											"end": 2015,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1970,
											"end": 2015,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8787,
											"end": 8808,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8844,
											"end": 8846,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8817,
											"end": 8847,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D657461646174612066726F7A656E21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8863,
											"end": 8881,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8863,
											"end": 8881,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8863,
											"end": 8881,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8856,
											"end": 8902,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8919,
											"end": 8937,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8919,
											"end": 8937,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1970,
											"end": 2015,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 8603,
											"end": 8943,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1970,
											"end": 2015,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 1970,
											"end": 2015,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 2026,
											"end": 2051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 2037,
											"end": 2051,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2034,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 2026,
											"end": 2051,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2051,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 2026,
											"end": 2051,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2051,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1890,
											"end": 2059,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1890,
											"end": 2059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 2216,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 2293,
											"end": 2330,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 3976,
											"end": 3983,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 3964,
											"end": 3984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 3989,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 3989,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3997,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3873,
											"end": 3997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 2646,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2717,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2738,
											"end": 2757,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2738,
											"end": 2757,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11354,
											"end": 11356,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11336,
											"end": 11357,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11393,
											"end": 11395,
											"name": "PUSH",
											"source": 12,
											"value": "2B"
										},
										{
											"begin": 11373,
											"end": 11391,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11373,
											"end": 11391,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11373,
											"end": 11391,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11366,
											"end": 11396,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11432,
											"end": 11466,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 11412,
											"end": 11430,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11412,
											"end": 11430,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11412,
											"end": 11430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11405,
											"end": 11467,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11483,
											"end": 11501,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11483,
											"end": 11501,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11483,
											"end": 11501,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11476,
											"end": 11517,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11534,
											"end": 11553,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 11534,
											"end": 11553,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 11152,
											"end": 11559,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 2730,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2843,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2858,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2831,
											"end": 2858,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 2346,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2418,
											"end": 2432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 2418,
											"end": 2447,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2418,
											"end": 2447,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2418,
											"end": 2447,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2418,
											"end": 2447,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2418,
											"end": 2447,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2418,
											"end": 2447,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2418,
											"end": 2447,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2418,
											"end": 2447,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2418,
											"end": 2447,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2418,
											"end": 2447,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2418,
											"end": 2447,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2418,
											"end": 2447,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2346,
											"end": 2455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 2463,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 2558,
											"end": 2609,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2463,
											"end": 2617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 1524,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1593,
											"end": 1612,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 4233,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4289,
											"end": 4302,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4322,
											"end": 4329,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4315,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 4315,
											"end": 4329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3875,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 2996,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3061,
											"end": 3072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2817,
											"end": 2818,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2814,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2818,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2837,
											"end": 2859,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 2837,
											"end": 2859,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2833,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 7847,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7827,
											"end": 7848,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7884,
											"end": 7886,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 7864,
											"end": 7882,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7864,
											"end": 7882,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7864,
											"end": 7882,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7857,
											"end": 7887,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964206D696E7420616D6F756E7421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7903,
											"end": 7921,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7903,
											"end": 7921,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7903,
											"end": 7921,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7896,
											"end": 7946,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7963,
											"end": 7981,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7963,
											"end": 7981,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 7643,
											"end": 7987,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 2795,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2933,
											"end": 2943,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 2933,
											"end": 2943,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2918,
											"end": 2929,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 2903,
											"end": 2929,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2929,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 2903,
											"end": 2929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2929,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 2903,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8456,
											"end": 8458,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8438,
											"end": 8459,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8495,
											"end": 8497,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 8475,
											"end": 8493,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8475,
											"end": 8493,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8475,
											"end": 8493,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8468,
											"end": 8498,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D617820737570706C7920657863656564656421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8514,
											"end": 8532,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8514,
											"end": 8532,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8514,
											"end": 8532,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8507,
											"end": 8557,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8574,
											"end": 8592,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8574,
											"end": 8592,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 8254,
											"end": 8598,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 2895,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3093,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 3093,
											"end": 3107,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3093,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3093,
											"end": 3107,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 3085,
											"end": 3131,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3131,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3085,
											"end": 3131,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3131,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11766,
											"end": 11768,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3085,
											"end": 3131,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3131,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11748,
											"end": 11769,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11805,
											"end": 11807,
											"name": "PUSH",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 11785,
											"end": 11803,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11785,
											"end": 11803,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11785,
											"end": 11803,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11778,
											"end": 11808,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53616C65206973206E6F742061637469766521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11824,
											"end": 11842,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11824,
											"end": 11842,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11824,
											"end": 11842,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11817,
											"end": 11866,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11883,
											"end": 11901,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11883,
											"end": 11901,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3085,
											"end": 3131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 11564,
											"end": 11907,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3085,
											"end": 3131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 3085,
											"end": 3131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3144,
											"end": 3157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3168,
											"end": 3179,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3160,
											"end": 3165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 3160,
											"end": 3165,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3160,
											"end": 3179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 3160,
											"end": 3179,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3160,
											"end": 3179,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3160,
											"end": 3179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 3160,
											"end": 3179,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3160,
											"end": 3179,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 3160,
											"end": 3179,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3144,
											"end": 3179,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3144,
											"end": 3179,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3211,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 3211,
											"end": 3237,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3208,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3237,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3758,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 3192,
											"end": 3758,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3328,
											"end": 3338,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3254,
											"end": 3279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3339,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3339,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3339,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 3311,
											"end": 3339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3311,
											"end": 3339,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3339,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3339,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3339,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3339,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3282,
											"end": 3308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 3282,
											"end": 3308,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3282,
											"end": 3339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 3282,
											"end": 3339,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3339,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3282,
											"end": 3339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 3282,
											"end": 3339,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3282,
											"end": 3339,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 3282,
											"end": 3339,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3254,
											"end": 3339,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3358,
											"end": 3379,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3358,
											"end": 3379,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3354,
											"end": 3747,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 3354,
											"end": 3747,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3419,
											"end": 3436,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3404,
											"end": 3415,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3404,
											"end": 3436,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3400,
											"end": 3732,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 3400,
											"end": 3732,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3490,
											"end": 3495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 3490,
											"end": 3495,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3470,
											"end": 3495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 3470,
											"end": 3495,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3470,
											"end": 3495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 3470,
											"end": 3495,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3470,
											"end": 3495,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 3470,
											"end": 3495,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3461,
											"end": 3495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 3461,
											"end": 3495,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3461,
											"end": 3495,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3461,
											"end": 3495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 3461,
											"end": 3495,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3461,
											"end": 3495,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 3461,
											"end": 3495,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3461,
											"end": 3495,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3461,
											"end": 3495,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 3538,
											"end": 3548,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3567,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 3518,
											"end": 3568,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3400,
											"end": 3732,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 3400,
											"end": 3732,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3400,
											"end": 3732,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 3400,
											"end": 3732,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3640,
											"end": 3645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 3640,
											"end": 3645,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3626,
											"end": 3645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 3626,
											"end": 3645,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3626,
											"end": 3637,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3626,
											"end": 3645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 3626,
											"end": 3645,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3626,
											"end": 3645,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 3626,
											"end": 3645,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 3617,
											"end": 3645,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3645,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 3617,
											"end": 3645,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3645,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 3617,
											"end": 3645,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3645,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3645,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3668,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 3688,
											"end": 3698,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3700,
											"end": 3711,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3668,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 3668,
											"end": 3712,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3668,
											"end": 3712,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 3668,
											"end": 3712,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3239,
											"end": 3758,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3758,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 3192,
											"end": 3758,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3791,
											"end": 3796,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3787,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3796,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3796,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 3770,
											"end": 3820,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3770,
											"end": 3820,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3770,
											"end": 3820,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3820,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12420,
											"end": 12422,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3770,
											"end": 3820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3770,
											"end": 3820,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12402,
											"end": 12423,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12459,
											"end": 12461,
											"name": "PUSH",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 12439,
											"end": 12457,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12439,
											"end": 12457,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12439,
											"end": 12457,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12432,
											"end": 12462,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742066756E647321"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12478,
											"end": 12496,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 12478,
											"end": 12496,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12478,
											"end": 12496,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12471,
											"end": 12520,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12537,
											"end": 12555,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12537,
											"end": 12555,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3770,
											"end": 3820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 12218,
											"end": 12561,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3770,
											"end": 3820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 3770,
											"end": 3820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3833,
											"end": 3867,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 3843,
											"end": 3853,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3855,
											"end": 3866,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3833,
											"end": 3842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 3833,
											"end": 3867,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12768,
											"end": 12770,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12750,
											"end": 12771,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12807,
											"end": 12809,
											"name": "PUSH",
											"source": 12,
											"value": "1A"
										},
										{
											"begin": 12787,
											"end": 12805,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12787,
											"end": 12805,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12787,
											"end": 12805,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12780,
											"end": 12810,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12846,
											"end": 12874,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A20617070726F766520746F2063616C6C6572000000000000"
										},
										{
											"begin": 12826,
											"end": 12844,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 12826,
											"end": 12844,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12826,
											"end": 12844,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12819,
											"end": 12875,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12892,
											"end": 12910,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12892,
											"end": 12910,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 12566,
											"end": 12916,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6093,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6128,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "PUSH",
											"source": 10,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6192,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 6200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 2067,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 2154,
											"end": 2200,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2067,
											"end": 2208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7142,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 7152,
											"end": 7156,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7158,
											"end": 7160,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7162,
											"end": 7169,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7142,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 7142,
											"end": 7170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7142,
											"end": 7170,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 7142,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7203,
											"end": 7251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 7226,
											"end": 7230,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7232,
											"end": 7234,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7236,
											"end": 7243,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7245,
											"end": 7250,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7203,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 7203,
											"end": 7251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7203,
											"end": 7251,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 7203,
											"end": 7251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 7181,
											"end": 7330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 7181,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 1628,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1727,
											"end": 1737,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1712,
											"end": 1724,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1712,
											"end": 1737,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1764,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 1704,
											"end": 1764,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1764,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1704,
											"end": 1764,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1764,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13543,
											"end": 13545,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1704,
											"end": 1764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1704,
											"end": 1764,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1764,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13525,
											"end": 13546,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13582,
											"end": 13584,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 13562,
											"end": 13580,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13562,
											"end": 13580,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13562,
											"end": 13580,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13555,
											"end": 13585,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964206E6577206D617820737570706C79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13601,
											"end": 13619,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 13601,
											"end": 13619,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13601,
											"end": 13619,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13594,
											"end": 13646,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13663,
											"end": 13681,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 13663,
											"end": 13681,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1704,
											"end": 1764,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 13341,
											"end": 13687,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1704,
											"end": 1764,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 1704,
											"end": 1764,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1799,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1811,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1783,
											"end": 1795,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1783,
											"end": 1811,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1783,
											"end": 1811,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1775,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 1775,
											"end": 1838,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1775,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1775,
											"end": 1838,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1775,
											"end": 1838,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1775,
											"end": 1838,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13543,
											"end": 13545,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1775,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1775,
											"end": 1838,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1775,
											"end": 1838,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13525,
											"end": 13546,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13582,
											"end": 13584,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 13562,
											"end": 13580,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13562,
											"end": 13580,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13562,
											"end": 13580,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13555,
											"end": 13585,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964206E6577206D617820737570706C79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13601,
											"end": 13619,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 13601,
											"end": 13619,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13601,
											"end": 13619,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13594,
											"end": 13646,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13663,
											"end": 13681,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 13663,
											"end": 13681,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 13341,
											"end": 13687,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 1775,
											"end": 1838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1849,
											"end": 1859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1849,
											"end": 1874,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1628,
											"end": 1882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4494,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4515,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 4523,
											"end": 4530,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7650,
											"end": 7654,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 7674,
											"end": 7696,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7593,
											"end": 7704,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4515,
											"end": 4531,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 4515,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13894,
											"end": 13896,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13876,
											"end": 13897,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13933,
											"end": 13935,
											"name": "PUSH",
											"source": 12,
											"value": "2F"
										},
										{
											"begin": 13913,
											"end": 13931,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13913,
											"end": 13931,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13913,
											"end": 13931,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13906,
											"end": 13936,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13972,
											"end": 14006,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 13952,
											"end": 13970,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 13952,
											"end": 13970,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13952,
											"end": 13970,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13945,
											"end": 14007,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14023,
											"end": 14041,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 14023,
											"end": 14041,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14023,
											"end": 14041,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14016,
											"end": 14061,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14078,
											"end": 14097,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 14078,
											"end": 14097,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 13692,
											"end": 14103,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 4507,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4596,
											"end": 4617,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 4620,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 4620,
											"end": 4630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4630,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 4620,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4596,
											"end": 4630,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4596,
											"end": 4630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4654,
											"end": 4661,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4669,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4674,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4674,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4708,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 4710,
											"end": 4717,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 4710,
											"end": 4728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4728,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 4710,
											"end": 4728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 4684,
											"end": 4729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 4729,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 4648,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4641,
											"end": 4735,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4743,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4408,
											"end": 4743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2625,
											"end": 2711,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 2625,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2681,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 2681,
											"end": 2703,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2681,
											"end": 2703,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2681,
											"end": 2703,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2681,
											"end": 2703,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2681,
											"end": 2703,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2681,
											"end": 2703,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6368,
											"end": 6372,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6410,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6417,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14811,
											"end": 14813,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14814,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14850,
											"end": 14852,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 14830,
											"end": 14848,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14830,
											"end": 14848,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14830,
											"end": 14848,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14823,
											"end": 14853,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14889,
											"end": 14923,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 14869,
											"end": 14887,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 14869,
											"end": 14887,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14869,
											"end": 14887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14862,
											"end": 14924,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14940,
											"end": 14958,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 14940,
											"end": 14958,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14940,
											"end": 14958,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14933,
											"end": 14969,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14986,
											"end": 15005,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 14986,
											"end": 15005,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 14609,
											"end": 15011,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12373,
											"end": 12569,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 12373,
											"end": 12569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12503,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12517,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12512,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "PUSH",
											"source": 10,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12561,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 12373,
											"end": 12569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12373,
											"end": 12569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12373,
											"end": 12569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12373,
											"end": 12569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10321,
											"end": 12255,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 10321,
											"end": 12255,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10436,
											"end": 10471,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10474,
											"end": 10494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 10486,
											"end": 10493,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10474,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 10474,
											"end": 10494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10474,
											"end": 10494,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 10474,
											"end": 10494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10549,
											"end": 10567,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10549,
											"end": 10567,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10436,
											"end": 10494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10436,
											"end": 10494,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10507,
											"end": 10529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10507,
											"end": 10529,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10533,
											"end": 10567,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10533,
											"end": 10567,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10533,
											"end": 10567,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10533,
											"end": 10616,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10533,
											"end": 10616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 10533,
											"end": 10616,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10580,
											"end": 10600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 10592,
											"end": 10599,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10580,
											"end": 10591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10580,
											"end": 10600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10580,
											"end": 10600,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 10580,
											"end": 10600,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10533,
											"end": 10616,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 10533,
											"end": 10616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10533,
											"end": 10679,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10533,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 10533,
											"end": 10679,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10629,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 10629,
											"end": 10679,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6271,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 6271,
											"end": 6435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10629,
											"end": 10679,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 10629,
											"end": 10679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10507,
											"end": 10680,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10507,
											"end": 10680,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10701,
											"end": 10718,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15218,
											"end": 15220,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15200,
											"end": 15221,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15257,
											"end": 15259,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 15237,
											"end": 15255,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15237,
											"end": 15255,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15237,
											"end": 15255,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15230,
											"end": 15260,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15296,
											"end": 15330,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 15276,
											"end": 15294,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 15276,
											"end": 15294,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15276,
											"end": 15294,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15269,
											"end": 15331,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15347,
											"end": 15365,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 15347,
											"end": 15365,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15347,
											"end": 15365,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15340,
											"end": 15388,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15405,
											"end": 15424,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 15405,
											"end": 15424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 15016,
											"end": 15430,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 10693,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10816,
											"end": 10820,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10794,
											"end": 10820,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10794,
											"end": 10807,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10794,
											"end": 10812,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10794,
											"end": 10812,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10794,
											"end": 10812,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10794,
											"end": 10820,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10794,
											"end": 10820,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15637,
											"end": 15639,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15619,
											"end": 15640,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15676,
											"end": 15678,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 15656,
											"end": 15674,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15656,
											"end": 15674,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15656,
											"end": 15674,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15649,
											"end": 15679,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15715,
											"end": 15749,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A207472616E736665722066726F6D20696E636F7272656374"
										},
										{
											"begin": 15695,
											"end": 15713,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 15695,
											"end": 15713,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15695,
											"end": 15713,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15688,
											"end": 15750,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15766,
											"end": 15784,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 15766,
											"end": 15784,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15766,
											"end": 15784,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15759,
											"end": 15795,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15812,
											"end": 15831,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 15812,
											"end": 15831,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 15435,
											"end": 15837,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 10786,
											"end": 10863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10882,
											"end": 10898,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10882,
											"end": 10898,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16044,
											"end": 16046,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16026,
											"end": 16047,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16083,
											"end": 16085,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 16063,
											"end": 16081,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 16063,
											"end": 16081,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16063,
											"end": 16081,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16056,
											"end": 16086,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16122,
											"end": 16156,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 16102,
											"end": 16120,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 16102,
											"end": 16120,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16102,
											"end": 16120,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16095,
											"end": 16157,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16173,
											"end": 16191,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 16173,
											"end": 16191,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16173,
											"end": 16191,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16166,
											"end": 16201,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16218,
											"end": 16237,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 16218,
											"end": 16237,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 15842,
											"end": 16243,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 10874,
											"end": 10940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11061,
											"end": 11110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 11078,
											"end": 11079,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11082,
											"end": 11089,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11091,
											"end": 11104,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11091,
											"end": 11109,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11091,
											"end": 11109,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11091,
											"end": 11109,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11061,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 11061,
											"end": 11110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11061,
											"end": 11110,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 11061,
											"end": 11110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11410,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11429,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11456,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11469,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11493,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11502,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11512,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "OR",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11568,
											"end": 11583,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11523,
											"end": 11584,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11846,
											"end": 11857,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11846,
											"end": 11857,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11846,
											"end": 11857,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11872,
											"end": 11896,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11872,
											"end": 11901,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11846,
											"end": 11857,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11846,
											"end": 11857,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11872,
											"end": 11901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11868,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 11868,
											"end": 12143,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11936,
											"end": 11956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 11944,
											"end": 11955,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7650,
											"end": 7654,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 7674,
											"end": 7696,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7593,
											"end": 7704,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11936,
											"end": 11956,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 11936,
											"end": 11956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11932,
											"end": 12132,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11932,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 11932,
											"end": 12132,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12009,
											"end": 12027,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12009,
											"end": 12027,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12009,
											"end": 12027,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 11988,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12088,
											"end": 12116,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12088,
											"end": 12116,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12088,
											"end": 12116,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12088,
											"end": 12116,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 12027,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12046,
											"end": 12116,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11932,
											"end": 12132,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 11932,
											"end": 12132,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11377,
											"end": 12150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12186,
											"end": 12193,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12182,
											"end": 12184,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12176,
											"end": 12180,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "PUSH",
											"source": 10,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 12205,
											"end": 12247,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 12205,
											"end": 12247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10425,
											"end": 12255,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10425,
											"end": 12255,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10321,
											"end": 12255,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10321,
											"end": 12255,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10321,
											"end": 12255,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10321,
											"end": 12255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16450,
											"end": 16452,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16432,
											"end": 16453,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16432,
											"end": 16453,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16432,
											"end": 16453,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16469,
											"end": 16487,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 16469,
											"end": 16487,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16469,
											"end": 16487,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16462,
											"end": 16492,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16528,
											"end": 16562,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 16508,
											"end": 16526,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 16508,
											"end": 16526,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16508,
											"end": 16526,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16501,
											"end": 16563,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16580,
											"end": 16598,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 16580,
											"end": 16598,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 16248,
											"end": 16604,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2412,
											"end": 2724,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 2412,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2526,
											"end": 2532,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2501,
											"end": 2522,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 2501,
											"end": 2532,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2501,
											"end": 2532,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16811,
											"end": 16813,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16793,
											"end": 16814,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16850,
											"end": 16852,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 16830,
											"end": 16848,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 16830,
											"end": 16848,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16830,
											"end": 16848,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16823,
											"end": 16853,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16889,
											"end": 16920,
											"name": "PUSH",
											"source": 12,
											"value": "416464726573733A20696E73756666696369656E742062616C616E6365000000"
										},
										{
											"begin": 16869,
											"end": 16887,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 16869,
											"end": 16887,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16869,
											"end": 16887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16862,
											"end": 16921,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16938,
											"end": 16956,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 16938,
											"end": 16956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 16609,
											"end": 16962,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "tag",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2578,
											"end": 2590,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2605,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2596,
											"end": 2610,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2624,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "tag",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "tag",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2577,
											"end": 2629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2577,
											"end": 2629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2577,
											"end": 2629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2647,
											"end": 2654,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17379,
											"end": 17381,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17382,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17418,
											"end": 17420,
											"name": "PUSH",
											"source": 12,
											"value": "3A"
										},
										{
											"begin": 17398,
											"end": 17416,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 17398,
											"end": 17416,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17398,
											"end": 17416,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17391,
											"end": 17421,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17457,
											"end": 17491,
											"name": "PUSH",
											"source": 12,
											"value": "416464726573733A20756E61626C6520746F2073656E642076616C75652C2072"
										},
										{
											"begin": 17437,
											"end": 17455,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 17437,
											"end": 17455,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17437,
											"end": 17455,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17430,
											"end": 17492,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17528,
											"end": 17556,
											"name": "PUSH",
											"source": 12,
											"value": "6563697069656E74206D61792068617665207265766572746564000000000000"
										},
										{
											"begin": 17508,
											"end": 17526,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 17508,
											"end": 17526,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17508,
											"end": 17526,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17501,
											"end": 17557,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17574,
											"end": 17593,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 17574,
											"end": 17593,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 17177,
											"end": 17599,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7712,
											"end": 7816,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 7712,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 7791,
											"end": 7793,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7795,
											"end": 7803,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 7808,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7781,
											"end": 7808,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 7808,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 7808,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7781,
											"end": 7808,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 7808,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7781,
											"end": 7808,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 7808,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 7808,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7781,
											"end": 7808,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 7808,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 7808,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 7790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 7781,
											"end": 7808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3811,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 3306,
											"end": 3811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 3417,
											"end": 3424,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7650,
											"end": 7654,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 7674,
											"end": 7696,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7593,
											"end": 7704,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17806,
											"end": 17808,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17788,
											"end": 17809,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17845,
											"end": 17847,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 17825,
											"end": 17843,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 17825,
											"end": 17843,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17825,
											"end": 17843,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17818,
											"end": 17848,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17884,
											"end": 17918,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A206F776E657220717565727920666F72206E6F6E65786973"
										},
										{
											"begin": 17864,
											"end": 17882,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 17864,
											"end": 17882,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17864,
											"end": 17882,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17857,
											"end": 17919,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17935,
											"end": 17953,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 17935,
											"end": 17953,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17935,
											"end": 17953,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17928,
											"end": 17968,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17985,
											"end": 18004,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 17985,
											"end": 18004,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 17604,
											"end": 18010,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3522,
											"end": 3529,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3502,
											"end": 3727,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 3502,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3610,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3616,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3635,
											"end": 3663,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3631,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 3631,
											"end": 3716,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 3700,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3811,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3306,
											"end": 3811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3631,
											"end": 3716,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 3631,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3542,
											"end": 3548,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3502,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 3502,
											"end": 3727,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1353,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 1233,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1328,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1345,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1345,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1340,
											"end": 1345,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1340,
											"end": 1345,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 1312,
											"end": 1345,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1340,
											"end": 1345,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1340,
											"end": 1345,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 1312,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1345,
											"name": "tag",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 1312,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1345,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1345,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1345,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1233,
											"end": 1353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13289,
											"end": 13293,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13310,
											"end": 13323,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13310,
											"end": 13323,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13306,
											"end": 13931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 13306,
											"end": 13931,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13346,
											"end": 13382,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13382,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13382,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13382,
											"name": "PUSH",
											"source": 10,
											"value": "150B7A02"
										},
										{
											"begin": 13346,
											"end": 13382,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13397,
											"end": 13401,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 13397,
											"end": 13401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13403,
											"end": 13410,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 13403,
											"end": 13410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13412,
											"end": 13417,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 13412,
											"end": 13417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 13346,
											"end": 13418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 13346,
											"end": 13418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13592,
											"end": 13598,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13592,
											"end": 13605,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13609,
											"end": 13610,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13592,
											"end": 13610,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13588,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 13588,
											"end": 13861,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13635,
											"end": 13696,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 13635,
											"end": 13696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13588,
											"end": 13861,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 13588,
											"end": 13861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13811,
											"end": 13817,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13805,
											"end": 13818,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13796,
											"end": 13802,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13792,
											"end": 13794,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13788,
											"end": 13803,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13781,
											"end": 13819,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 13342,
											"end": 13876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13462,
											"end": 13524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 13462,
											"end": 13524,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13306,
											"end": 13931,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 13306,
											"end": 13931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13915,
											"end": 13919,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13306,
											"end": 13931,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 13306,
											"end": 13931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13134,
											"end": 13938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13134,
											"end": 13938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1384,
											"end": 1493,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 1384,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1444,
											"end": 1457,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1477,
											"end": 1485,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 1470,
											"end": 1485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 448,
											"end": 461,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 674,
											"end": 675,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 661,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 691,
											"end": 701,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 392,
											"end": 1095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 661,
											"end": 712,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 736,
											"end": 741,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 721,
											"end": 733,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 782,
											"end": 791,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 775,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 815,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 807,
											"end": 815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 815,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 815,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 837,
											"end": 839,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 829,
											"end": 839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 829,
											"end": 839,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 829,
											"end": 839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 775,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 775,
											"end": 850,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 859,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 897,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 881,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 859,
											"end": 898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 859,
											"end": 898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 915,
											"end": 925,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 915,
											"end": 925,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 941,
											"end": 952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 941,
											"end": 952,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 1017,
											"end": 1019,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 1009,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "tag",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 996,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1022,
											"name": "PUSH",
											"source": 7,
											"value": "F8"
										},
										{
											"begin": 983,
											"end": 1022,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 966,
											"end": 972,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 973,
											"end": 979,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 966,
											"end": 980,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 966,
											"end": 980,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 966,
											"end": 980,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 966,
											"end": 980,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 966,
											"end": 980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 966,
											"end": 980,
											"name": "tag",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 966,
											"end": 980,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 1045,
											"end": 1047,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 1036,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8179,
											"end": 8342,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 8179,
											"end": 8342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8302,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 8308,
											"end": 8310,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8312,
											"end": 8320,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8322,
											"end": 8327,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8329,
											"end": 8333,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8740,
											"end": 8760,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8763,
											"end": 8775,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8794,
											"end": 8810,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8794,
											"end": 8810,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8786,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 8786,
											"end": 8848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8786,
											"end": 8848,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8786,
											"end": 8848,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8786,
											"end": 8848,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8786,
											"end": 8848,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20027,
											"end": 20029,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8786,
											"end": 8848,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8786,
											"end": 8848,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8786,
											"end": 8848,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20009,
											"end": 20030,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20066,
											"end": 20068,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 20046,
											"end": 20064,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 20046,
											"end": 20064,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20046,
											"end": 20064,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20039,
											"end": 20069,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20105,
											"end": 20139,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 20085,
											"end": 20103,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 20085,
											"end": 20103,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20085,
											"end": 20103,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20078,
											"end": 20140,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20156,
											"end": 20174,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 20156,
											"end": 20174,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20156,
											"end": 20174,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20149,
											"end": 20180,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20197,
											"end": 20216,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 20197,
											"end": 20216,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8786,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 19825,
											"end": 20222,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8786,
											"end": 8848,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 8786,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8867,
											"end": 8875,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8879,
											"end": 8880,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8867,
											"end": 8880,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8859,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 8859,
											"end": 8925,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8859,
											"end": 8925,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8859,
											"end": 8925,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8859,
											"end": 8925,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8859,
											"end": 8925,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20429,
											"end": 20431,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8859,
											"end": 8925,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8859,
											"end": 8925,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8859,
											"end": 8925,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20411,
											"end": 20432,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20468,
											"end": 20470,
											"name": "PUSH",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 20448,
											"end": 20466,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 20448,
											"end": 20466,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20448,
											"end": 20466,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20441,
											"end": 20471,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20507,
											"end": 20541,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A207175616E74697479206D75737420626520677265617465"
										},
										{
											"begin": 20487,
											"end": 20505,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 20487,
											"end": 20505,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20487,
											"end": 20505,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20480,
											"end": 20542,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72207468616E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20558,
											"end": 20576,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 20558,
											"end": 20576,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20558,
											"end": 20576,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20551,
											"end": 20589,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20606,
											"end": 20625,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 20606,
											"end": 20625,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8859,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 20227,
											"end": 20631,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8859,
											"end": 8925,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 8859,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9269,
											"end": 9285,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9285,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9285,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9269,
											"end": 9285,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9285,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9285,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9281,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9269,
											"end": 9285,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9269,
											"end": 9285,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9285,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9285,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9285,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9269,
											"end": 9285,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9285,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9285,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9314,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9269,
											"end": 9314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9314,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9269,
											"end": 9314,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9314,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9314,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9314,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9314,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9314,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9314,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9314,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 9325,
											"end": 9375,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9325,
											"end": 9375,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9325,
											"end": 9375,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9325,
											"end": 9375,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9325,
											"end": 9375,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9325,
											"end": 9375,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 9325,
											"end": 9375,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9325,
											"end": 9375,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9325,
											"end": 9375,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9325,
											"end": 9375,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9325,
											"end": 9375,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9325,
											"end": 9375,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 9325,
											"end": 9375,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9325,
											"end": 9375,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9388,
											"end": 9413,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9388,
											"end": 9413,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9388,
											"end": 9413,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9388,
											"end": 9399,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 9388,
											"end": 9413,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9388,
											"end": 9413,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9388,
											"end": 9413,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9388,
											"end": 9413,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9388,
											"end": 9413,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9388,
											"end": 9423,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9388,
											"end": 9423,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9434,
											"end": 9500,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9434,
											"end": 9500,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9434,
											"end": 9500,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9434,
											"end": 9500,
											"name": "OR",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9484,
											"end": 9499,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 9434,
											"end": 9500,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9434,
											"end": 9500,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9434,
											"end": 9500,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9434,
											"end": 9500,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 9434,
											"end": 9500,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9434,
											"end": 9500,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9434,
											"end": 9500,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9388,
											"end": 9413,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9388,
											"end": 9413,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9561,
											"end": 9940,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 9561,
											"end": 9940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9581,
											"end": 9589,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9577,
											"end": 9578,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9577,
											"end": 9589,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 9561,
											"end": 9940,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9561,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 9561,
											"end": 9940,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9616,
											"end": 9654,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9616,
											"end": 9654,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9641,
											"end": 9653,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9641,
											"end": 9653,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9616,
											"end": 9654,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 9616,
											"end": 9654,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9616,
											"end": 9654,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9633,
											"end": 9634,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9633,
											"end": 9634,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9616,
											"end": 9654,
											"name": "PUSH",
											"source": 10,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9616,
											"end": 9654,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9633,
											"end": 9634,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9633,
											"end": 9634,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9616,
											"end": 9654,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 9673,
											"end": 9677,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9669,
											"end": 9898,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9669,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 9669,
											"end": 9898,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9728,
											"end": 9787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 9759,
											"end": 9760,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9763,
											"end": 9765,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9767,
											"end": 9779,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9781,
											"end": 9786,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9728,
											"end": 9750,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 9728,
											"end": 9787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9728,
											"end": 9787,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 9728,
											"end": 9787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9698,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 9698,
											"end": 9882,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9698,
											"end": 9882,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9698,
											"end": 9882,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9698,
											"end": 9882,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9698,
											"end": 9882,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9698,
											"end": 9882,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9698,
											"end": 9882,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9698,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 9698,
											"end": 9882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9698,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 9698,
											"end": 9882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9698,
											"end": 9882,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 9698,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9914,
											"end": 9928,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9914,
											"end": 9928,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9914,
											"end": 9928,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9914,
											"end": 9928,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9914,
											"end": 9928,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9591,
											"end": 9594,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9561,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 9561,
											"end": 9940,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9561,
											"end": 9940,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 9561,
											"end": 9940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9952,
											"end": 9964,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9952,
											"end": 9979,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9999,
											"end": 10059,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 6983,
											"end": 7338,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 592,
											"end": 842,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 592,
											"end": 842,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 701,
											"end": 707,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 695,
											"end": 708,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 687,
											"end": 800,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 788,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 771,
											"end": 789,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 769,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 751,
											"end": 790,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 816,
											"end": 832,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 809,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 592,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 921,
											"end": 933,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 970,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 1292,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2048,
											"end": 2050,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2019,
											"end": 2051,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "tag",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 2087,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "tag",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2451,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2508,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2494,
											"end": 2503,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2481,
											"end": 2504,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2523,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2520,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2524,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 2564,
											"end": 2573,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 2545,
											"end": 2574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "tag",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2535,
											"end": 2574,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2535,
											"end": 2574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 2627,
											"end": 2629,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2616,
											"end": 2625,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2612,
											"end": 2630,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 2593,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "tag",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2583,
											"end": 2631,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2583,
											"end": 2631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2667,
											"end": 2676,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2663,
											"end": 2681,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2650,
											"end": 2682,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2693,
											"end": 2820,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 2693,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2754,
											"end": 2764,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 2749,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2745,
											"end": 2765,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2742,
											"end": 2743,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2735,
											"end": 2766,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2785,
											"end": 2789,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 2782,
											"end": 2783,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2775,
											"end": 2790,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2806,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2799,
											"end": 2814,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2825,
											"end": 3457,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 2825,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2890,
											"end": 2895,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 2938,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2961,
											"end": 2963,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2953,
											"end": 2959,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2950,
											"end": 2964,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2947,
											"end": 2987,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2947,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 2947,
											"end": 2987,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2967,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 2967,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 2967,
											"end": 2985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2967,
											"end": 2985,
											"name": "tag",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 2967,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3042,
											"end": 3044,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3036,
											"end": 3045,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3010,
											"end": 3012,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3096,
											"end": 3111,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3096,
											"end": 3111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3092,
											"end": 3116,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3092,
											"end": 3116,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3092,
											"end": 3116,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3118,
											"end": 3120,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 3088,
											"end": 3121,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3084,
											"end": 3126,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3072,
											"end": 3127,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3072,
											"end": 3127,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3072,
											"end": 3127,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3160,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3160,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3160,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3184,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3184,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3184,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3139,
											"end": 3185,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 3136,
											"end": 3208,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3136,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 3136,
											"end": 3208,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3188,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 3188,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 3188,
											"end": 3206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3188,
											"end": 3206,
											"name": "tag",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 3188,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3228,
											"end": 3238,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3224,
											"end": 3226,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3217,
											"end": 3239,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3257,
											"end": 3263,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3248,
											"end": 3263,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3248,
											"end": 3263,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3287,
											"end": 3293,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3279,
											"end": 3285,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3272,
											"end": 3294,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3330,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3318,
											"end": 3324,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3313,
											"end": 3316,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3309,
											"end": 3325,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3306,
											"end": 3331,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3348,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 3303,
											"end": 3348,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3344,
											"end": 3345,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3342,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3334,
											"end": 3346,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3348,
											"name": "tag",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 3303,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3394,
											"end": 3400,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3389,
											"end": 3392,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3382,
											"end": 3386,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3374,
											"end": 3380,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3370,
											"end": 3387,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3357,
											"end": 3401,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 3449,
											"end": 3450,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3446,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3433,
											"end": 3439,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3425,
											"end": 3431,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3421,
											"end": 3440,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3417,
											"end": 3447,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3451,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3451,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3451,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3451,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2825,
											"end": 3457,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2825,
											"end": 3457,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2825,
											"end": 3457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2825,
											"end": 3457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2825,
											"end": 3457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2825,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3913,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 3462,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3531,
											"end": 3537,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3581,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3563,
											"end": 3570,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3559,
											"end": 3582,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3555,
											"end": 3587,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3552,
											"end": 3604,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3552,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 3552,
											"end": 3604,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3600,
											"end": 3601,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3597,
											"end": 3598,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3590,
											"end": 3602,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3552,
											"end": 3604,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 3552,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3640,
											"end": 3649,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3665,
											"end": 3671,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3662,
											"end": 3692,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3659,
											"end": 3709,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3659,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 3659,
											"end": 3709,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3705,
											"end": 3706,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3702,
											"end": 3703,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3695,
											"end": 3707,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3659,
											"end": 3709,
											"name": "tag",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 3659,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3728,
											"end": 3750,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3728,
											"end": 3750,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3781,
											"end": 3785,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3773,
											"end": 3786,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3773,
											"end": 3786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3769,
											"end": 3796,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 3759,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 3759,
											"end": 3814,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3810,
											"end": 3811,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3808,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3800,
											"end": 3812,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3759,
											"end": 3814,
											"name": "tag",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 3759,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3833,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 3899,
											"end": 3906,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3894,
											"end": 3896,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3881,
											"end": 3897,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3878,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3872,
											"end": 3874,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3879,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3833,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 3833,
											"end": 3907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 4104,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 3918,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3977,
											"end": 3983,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4032,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4018,
											"end": 4027,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4009,
											"end": 4016,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4028,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4001,
											"end": 4033,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3998,
											"end": 4050,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3998,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 3998,
											"end": 4050,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4046,
											"end": 4047,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4044,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4036,
											"end": 4048,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3998,
											"end": 4050,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 3998,
											"end": 4050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 4088,
											"end": 4097,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 4069,
											"end": 4098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4109,
											"end": 4269,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 4109,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4174,
											"end": 4194,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4174,
											"end": 4194,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4230,
											"end": 4243,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4230,
											"end": 4243,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4223,
											"end": 4244,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4213,
											"end": 4245,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4213,
											"end": 4245,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 4203,
											"end": 4263,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4259,
											"end": 4260,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4257,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4249,
											"end": 4261,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4274,
											"end": 4454,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 4274,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4330,
											"end": 4336,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4383,
											"end": 4385,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4371,
											"end": 4380,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4369,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4381,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4354,
											"end": 4386,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4351,
											"end": 4403,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4351,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 4351,
											"end": 4403,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4399,
											"end": 4400,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4396,
											"end": 4397,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4389,
											"end": 4401,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4351,
											"end": 4403,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 4351,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4422,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 4438,
											"end": 4447,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4422,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 4422,
											"end": 4448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4459,
											"end": 4713,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 4459,
											"end": 4713,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4524,
											"end": 4530,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4532,
											"end": 4538,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4585,
											"end": 4587,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4573,
											"end": 4582,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4564,
											"end": 4571,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4560,
											"end": 4583,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4556,
											"end": 4588,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4553,
											"end": 4605,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4553,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 4553,
											"end": 4605,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4601,
											"end": 4602,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4598,
											"end": 4599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4591,
											"end": 4603,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4553,
											"end": 4605,
											"name": "tag",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 4553,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4624,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 4643,
											"end": 4652,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4624,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 4624,
											"end": 4653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4624,
											"end": 4653,
											"name": "tag",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 4624,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4614,
											"end": 4653,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4614,
											"end": 4653,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4672,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 4703,
											"end": 4705,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4692,
											"end": 4701,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4688,
											"end": 4706,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4672,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 4672,
											"end": 4707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4672,
											"end": 4707,
											"name": "tag",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 4672,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4662,
											"end": 4707,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4662,
											"end": 4707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4459,
											"end": 4713,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4459,
											"end": 4713,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4459,
											"end": 4713,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4459,
											"end": 4713,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4459,
											"end": 4713,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4459,
											"end": 4713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 5385,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 4718,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4827,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4829,
											"end": 4835,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4837,
											"end": 4843,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 4893,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 4878,
											"end": 4887,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 4876,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4865,
											"end": 4888,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4861,
											"end": 4894,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4858,
											"end": 4911,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4858,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 4858,
											"end": 4911,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4907,
											"end": 4908,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4905,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4858,
											"end": 4911,
											"name": "tag",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 4858,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 4930,
											"end": 4959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4959,
											"name": "tag",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 4930,
											"end": 4959,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4920,
											"end": 4959,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4920,
											"end": 4959,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4978,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 5012,
											"end": 5014,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5001,
											"end": 5010,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4978,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 4978,
											"end": 5016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4978,
											"end": 5016,
											"name": "tag",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 4978,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4968,
											"end": 5016,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4968,
											"end": 5016,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5063,
											"end": 5065,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5052,
											"end": 5061,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5048,
											"end": 5066,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5067,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5025,
											"end": 5067,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5025,
											"end": 5067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5118,
											"end": 5120,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5107,
											"end": 5116,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5122,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5145,
											"end": 5163,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5137,
											"end": 5143,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5134,
											"end": 5164,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5131,
											"end": 5181,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5131,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 5131,
											"end": 5181,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5177,
											"end": 5178,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5174,
											"end": 5175,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5179,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5131,
											"end": 5181,
											"name": "tag",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 5131,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5200,
											"end": 5222,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5200,
											"end": 5222,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5257,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5245,
											"end": 5258,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5245,
											"end": 5258,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5241,
											"end": 5268,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 5231,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 5231,
											"end": 5286,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5283,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5279,
											"end": 5280,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5272,
											"end": 5284,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5231,
											"end": 5286,
											"name": "tag",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 5231,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5305,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 5371,
											"end": 5378,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5366,
											"end": 5368,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5353,
											"end": 5369,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5348,
											"end": 5350,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5344,
											"end": 5346,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5340,
											"end": 5351,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5305,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 5305,
											"end": 5379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5305,
											"end": 5379,
											"name": "tag",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 5305,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5295,
											"end": 5379,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5295,
											"end": 5379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5295,
											"end": 5379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 5385,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 5385,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 5385,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 5385,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 5385,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 5385,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 5385,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 5385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5390,
											"end": 5650,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 5390,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5458,
											"end": 5464,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5466,
											"end": 5472,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5519,
											"end": 5521,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5507,
											"end": 5516,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5498,
											"end": 5505,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5494,
											"end": 5517,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5490,
											"end": 5522,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5487,
											"end": 5539,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5487,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 5487,
											"end": 5539,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5535,
											"end": 5536,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5533,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5525,
											"end": 5537,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5487,
											"end": 5539,
											"name": "tag",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 5487,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5558,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 5577,
											"end": 5586,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5558,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 5558,
											"end": 5587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5558,
											"end": 5587,
											"name": "tag",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 5558,
											"end": 5587,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5548,
											"end": 5587,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5548,
											"end": 5587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5606,
											"end": 5644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 5640,
											"end": 5642,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5629,
											"end": 5638,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5606,
											"end": 5644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 5606,
											"end": 5644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5655,
											"end": 6035,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 5655,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5734,
											"end": 5735,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5730,
											"end": 5742,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5730,
											"end": 5742,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5730,
											"end": 5742,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 5730,
											"end": 5742,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5777,
											"end": 5789,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5777,
											"end": 5789,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5777,
											"end": 5789,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5852,
											"end": 5856,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5857,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5830,
											"end": 5857,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5830,
											"end": 5857,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "tag",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5905,
											"end": 5907,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5897,
											"end": 5903,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5894,
											"end": 5908,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5874,
											"end": 5892,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5909,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 5868,
											"end": 6029,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5951,
											"end": 5961,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 5946,
											"end": 5949,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 5942,
											"end": 5962,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5939,
											"end": 5940,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5932,
											"end": 5963,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5986,
											"end": 5990,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 5983,
											"end": 5984,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5976,
											"end": 5991,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6014,
											"end": 6018,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6011,
											"end": 6012,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6004,
											"end": 6019,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 6029,
											"name": "tag",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 5868,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 6029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5655,
											"end": 6035,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5655,
											"end": 6035,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5655,
											"end": 6035,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5655,
											"end": 6035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7992,
											"end": 8119,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 7992,
											"end": 8119,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8053,
											"end": 8063,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 8048,
											"end": 8051,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 8044,
											"end": 8064,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 8041,
											"end": 8042,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8034,
											"end": 8065,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8084,
											"end": 8088,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 8081,
											"end": 8082,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8108,
											"end": 8112,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8105,
											"end": 8106,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8113,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8124,
											"end": 8249,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 8124,
											"end": 8249,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8189,
											"end": 8198,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8189,
											"end": 8198,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8189,
											"end": 8198,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8210,
											"end": 8220,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8210,
											"end": 8220,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8210,
											"end": 8220,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8207,
											"end": 8243,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8207,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 8207,
											"end": 8243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8223,
											"end": 8241,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 8223,
											"end": 8241,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 8223,
											"end": 8241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9074,
											"end": 9619,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 9074,
											"end": 9619,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9176,
											"end": 9178,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9171,
											"end": 9174,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9168,
											"end": 9179,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9165,
											"end": 9613,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9165,
											"end": 9613,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 9165,
											"end": 9613,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9212,
											"end": 9213,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9237,
											"end": 9242,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9233,
											"end": 9235,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9226,
											"end": 9243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9282,
											"end": 9286,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9278,
											"end": 9280,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9287,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9352,
											"end": 9354,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9340,
											"end": 9350,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9336,
											"end": 9355,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9333,
											"end": 9334,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 9329,
											"end": 9356,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 9323,
											"end": 9327,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9319,
											"end": 9357,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9388,
											"end": 9392,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9376,
											"end": 9386,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9373,
											"end": 9393,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9370,
											"end": 9417,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9370,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 9370,
											"end": 9417,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9411,
											"end": 9415,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9370,
											"end": 9417,
											"name": "tag",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 9370,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9466,
											"end": 9468,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9461,
											"end": 9464,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9457,
											"end": 9469,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9454,
											"end": 9455,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 9450,
											"end": 9470,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 9444,
											"end": 9448,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9440,
											"end": 9471,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9430,
											"end": 9471,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9430,
											"end": 9471,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9521,
											"end": 9603,
											"name": "tag",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 9521,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9539,
											"end": 9541,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9532,
											"end": 9537,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9529,
											"end": 9542,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9521,
											"end": 9603,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9521,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 9521,
											"end": 9603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9584,
											"end": 9601,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9584,
											"end": 9601,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9584,
											"end": 9601,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 9565,
											"end": 9566,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 9554,
											"end": 9567,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9521,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 9521,
											"end": 9603,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9521,
											"end": 9603,
											"name": "tag",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 9521,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9525,
											"end": 9528,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9525,
											"end": 9528,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9525,
											"end": 9528,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9074,
											"end": 9619,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9074,
											"end": 9619,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9074,
											"end": 9619,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9074,
											"end": 9619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9795,
											"end": 11147,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 9795,
											"end": 11147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9921,
											"end": 9924,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9915,
											"end": 9925,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9948,
											"end": 9966,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9940,
											"end": 9946,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9937,
											"end": 9967,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 9990,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 9990,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 9934,
											"end": 9990,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 9970,
											"end": 9988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "tag",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9999,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "620"
										},
										{
											"begin": 10089,
											"end": 10095,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10049,
											"end": 10087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 10081,
											"end": 10085,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10075,
											"end": 10086,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10049,
											"end": 10087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 10049,
											"end": 10087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10049,
											"end": 10087,
											"name": "tag",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 10049,
											"end": 10087,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10043,
											"end": 10047,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9999,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 9999,
											"end": 10096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9999,
											"end": 10096,
											"name": "tag",
											"source": 12,
											"value": "620"
										},
										{
											"begin": 9999,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10151,
											"end": 10155,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10151,
											"end": 10155,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10215,
											"end": 10217,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 10204,
											"end": 10218,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10204,
											"end": 10218,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10232,
											"end": 10233,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10227,
											"end": 10890,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10227,
											"end": 10890,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 10227,
											"end": 10890,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "623"
										},
										{
											"begin": 10227,
											"end": 10890,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10934,
											"end": 10935,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10951,
											"end": 10957,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10948,
											"end": 11037,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10948,
											"end": 11037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "624"
										},
										{
											"begin": 10948,
											"end": 11037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11003,
											"end": 11022,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11003,
											"end": 11022,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11003,
											"end": 11022,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10997,
											"end": 11023,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10948,
											"end": 11037,
											"name": "tag",
											"source": 12,
											"value": "624"
										},
										{
											"begin": 10948,
											"end": 11037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9752,
											"end": 9753,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 9748,
											"end": 9759,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9748,
											"end": 9759,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9748,
											"end": 9759,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9744,
											"end": 9768,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 9740,
											"end": 9769,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 9730,
											"end": 9770,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9776,
											"end": 9777,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 9772,
											"end": 9783,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9772,
											"end": 9783,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9772,
											"end": 9783,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9727,
											"end": 9784,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 11050,
											"end": 11131,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11050,
											"end": 11131,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 10197,
											"end": 11141,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 10197,
											"end": 11141,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10227,
											"end": 10890,
											"name": "tag",
											"source": 12,
											"value": "623"
										},
										{
											"begin": 10227,
											"end": 10890,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9021,
											"end": 9022,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9014,
											"end": 9028,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9014,
											"end": 9028,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9014,
											"end": 9028,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9058,
											"end": 9062,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9045,
											"end": 9063,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9045,
											"end": 9063,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10263,
											"end": 10283,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10263,
											"end": 10283,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10263,
											"end": 10283,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10381,
											"end": 10617,
											"name": "tag",
											"source": 12,
											"value": "627"
										},
										{
											"begin": 10381,
											"end": 10617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10395,
											"end": 10402,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10392,
											"end": 10393,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10389,
											"end": 10403,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10381,
											"end": 10617,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10381,
											"end": 10617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "629"
										},
										{
											"begin": 10381,
											"end": 10617,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10484,
											"end": 10503,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10484,
											"end": 10503,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10484,
											"end": 10503,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10478,
											"end": 10504,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10463,
											"end": 10505,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10463,
											"end": 10505,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 10576,
											"end": 10603,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 10576,
											"end": 10603,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10576,
											"end": 10603,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10576,
											"end": 10603,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 10544,
											"end": 10545,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10532,
											"end": 10546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10546,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10546,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10411,
											"end": 10430,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10411,
											"end": 10430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10381,
											"end": 10617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "627"
										},
										{
											"begin": 10381,
											"end": 10617,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10381,
											"end": 10617,
											"name": "tag",
											"source": 12,
											"value": "629"
										},
										{
											"begin": 10381,
											"end": 10617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10385,
											"end": 10388,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10645,
											"end": 10651,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10636,
											"end": 10643,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10633,
											"end": 10652,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10630,
											"end": 10831,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10630,
											"end": 10831,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 10630,
											"end": 10831,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10706,
											"end": 10725,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 10706,
											"end": 10725,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10706,
											"end": 10725,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10789,
											"end": 10790,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 10785,
											"end": 10799,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10785,
											"end": 10799,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10785,
											"end": 10799,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 10801,
											"end": 10804,
											"name": "PUSH",
											"source": 12,
											"value": "F8"
										},
										{
											"begin": 10781,
											"end": 10805,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10777,
											"end": 10814,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 10773,
											"end": 10815,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 10758,
											"end": 10816,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10743,
											"end": 10817,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10743,
											"end": 10817,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 10630,
											"end": 10831,
											"name": "tag",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 10630,
											"end": 10831,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10877,
											"end": 10878,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10861,
											"end": 10875,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10861,
											"end": 10875,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10861,
											"end": 10875,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 10857,
											"end": 10879,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10844,
											"end": 10880,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10844,
											"end": 10880,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9795,
											"end": 11147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11912,
											"end": 12080,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 11912,
											"end": 12080,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11985,
											"end": 11994,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11985,
											"end": 11994,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11985,
											"end": 11994,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 12016,
											"end": 12025,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12016,
											"end": 12025,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12033,
											"end": 12048,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12033,
											"end": 12048,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12033,
											"end": 12048,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12027,
											"end": 12049,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12027,
											"end": 12049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12013,
											"end": 12050,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 12003,
											"end": 12074,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 12003,
											"end": 12074,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12054,
											"end": 12072,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 12054,
											"end": 12072,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 12054,
											"end": 12072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12085,
											"end": 12213,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 12085,
											"end": 12213,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12152,
											"end": 12161,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12152,
											"end": 12161,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12152,
											"end": 12161,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12173,
											"end": 12184,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12173,
											"end": 12184,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12173,
											"end": 12184,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12170,
											"end": 12207,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12170,
											"end": 12207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 12170,
											"end": 12207,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12187,
											"end": 12205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 12187,
											"end": 12205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 12187,
											"end": 12205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12921,
											"end": 13336,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 12921,
											"end": 13336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13123,
											"end": 13125,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13126,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13105,
											"end": 13126,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13105,
											"end": 13126,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13162,
											"end": 13164,
											"name": "PUSH",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 13142,
											"end": 13160,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13142,
											"end": 13160,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13142,
											"end": 13160,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13135,
											"end": 13165,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13201,
											"end": 13235,
											"name": "PUSH",
											"source": 12,
											"value": "455243373231413A207472616E7366657220746F206E6F6E2045524337323152"
										},
										{
											"begin": 13196,
											"end": 13198,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13181,
											"end": 13199,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13181,
											"end": 13199,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13174,
											"end": 13236,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13267,
											"end": 13269,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 13252,
											"end": 13270,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13252,
											"end": 13270,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13245,
											"end": 13294,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13326,
											"end": 13329,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 13311,
											"end": 13330,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13311,
											"end": 13330,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12921,
											"end": 13336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14108,
											"end": 14604,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 14108,
											"end": 14604,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14287,
											"end": 14290,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14325,
											"end": 14331,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14319,
											"end": 14332,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14341,
											"end": 14407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 14400,
											"end": 14406,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14395,
											"end": 14398,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14388,
											"end": 14392,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14380,
											"end": 14386,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 14376,
											"end": 14393,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14341,
											"end": 14407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 14341,
											"end": 14407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14341,
											"end": 14407,
											"name": "tag",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 14341,
											"end": 14407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14470,
											"end": 14483,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14470,
											"end": 14483,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14429,
											"end": 14445,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14429,
											"end": 14445,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14429,
											"end": 14445,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14429,
											"end": 14445,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14492,
											"end": 14562,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "646"
										},
										{
											"begin": 14470,
											"end": 14483,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14429,
											"end": 14445,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14539,
											"end": 14543,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14527,
											"end": 14544,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 14527,
											"end": 14544,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14492,
											"end": 14562,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 14492,
											"end": 14562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14492,
											"end": 14562,
											"name": "tag",
											"source": 12,
											"value": "646"
										},
										{
											"begin": 14492,
											"end": 14562,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14578,
											"end": 14598,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14578,
											"end": 14598,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 14108,
											"end": 14604,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14108,
											"end": 14604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18431,
											"end": 18920,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 18431,
											"end": 18920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18700,
											"end": 18715,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18700,
											"end": 18715,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18700,
											"end": 18715,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 18682,
											"end": 18716,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18682,
											"end": 18716,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18752,
											"end": 18767,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18752,
											"end": 18767,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 18747,
											"end": 18749,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18732,
											"end": 18750,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18732,
											"end": 18750,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18725,
											"end": 18768,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18799,
											"end": 18801,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18784,
											"end": 18802,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18784,
											"end": 18802,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18777,
											"end": 18811,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18777,
											"end": 18811,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18777,
											"end": 18811,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18847,
											"end": 18850,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 18842,
											"end": 18844,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 18827,
											"end": 18845,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18827,
											"end": 18845,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18820,
											"end": 18851,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18820,
											"end": 18851,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18820,
											"end": 18851,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18625,
											"end": 18629,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18625,
											"end": 18629,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18868,
											"end": 18914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "658"
										},
										{
											"begin": 18868,
											"end": 18914,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18894,
											"end": 18913,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18894,
											"end": 18913,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18886,
											"end": 18892,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18868,
											"end": 18914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 18868,
											"end": 18914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18868,
											"end": 18914,
											"name": "tag",
											"source": 12,
											"value": "658"
										},
										{
											"begin": 18868,
											"end": 18914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18860,
											"end": 18914,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 18431,
											"end": 18920,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18431,
											"end": 18920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18925,
											"end": 19174,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 18925,
											"end": 19174,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18994,
											"end": 19000,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19047,
											"end": 19049,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19035,
											"end": 19044,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19026,
											"end": 19033,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19022,
											"end": 19045,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19018,
											"end": 19050,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 19015,
											"end": 19067,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19015,
											"end": 19067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 19015,
											"end": 19067,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19063,
											"end": 19064,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19060,
											"end": 19061,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19053,
											"end": 19065,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 19015,
											"end": 19067,
											"name": "tag",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 19015,
											"end": 19067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19095,
											"end": 19104,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19089,
											"end": 19105,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 19114,
											"end": 19144,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 19138,
											"end": 19143,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19114,
											"end": 19144,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 19114,
											"end": 19144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19179,
											"end": 19314,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 19179,
											"end": 19314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19218,
											"end": 19221,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19239,
											"end": 19256,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 19239,
											"end": 19256,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19239,
											"end": 19256,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19236,
											"end": 19279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "664"
										},
										{
											"begin": 19236,
											"end": 19279,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19259,
											"end": 19277,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "664"
										},
										{
											"begin": 19259,
											"end": 19277,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 19259,
											"end": 19277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19259,
											"end": 19277,
											"name": "tag",
											"source": 12,
											"value": "664"
										},
										{
											"begin": 19259,
											"end": 19277,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19306,
											"end": 19307,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 19295,
											"end": 19308,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19295,
											"end": 19308,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19179,
											"end": 19314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19319,
											"end": 19446,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 19319,
											"end": 19446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19380,
											"end": 19390,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 19375,
											"end": 19378,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 19371,
											"end": 19391,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 19368,
											"end": 19369,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19361,
											"end": 19392,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19411,
											"end": 19415,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 19408,
											"end": 19409,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 19401,
											"end": 19416,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19435,
											"end": 19439,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 19432,
											"end": 19433,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19425,
											"end": 19440,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 19451,
											"end": 19571,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 19451,
											"end": 19571,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19491,
											"end": 19492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19517,
											"end": 19518,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19507,
											"end": 19542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "668"
										},
										{
											"begin": 19507,
											"end": 19542,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19522,
											"end": 19540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "668"
										},
										{
											"begin": 19522,
											"end": 19540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 19522,
											"end": 19540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19522,
											"end": 19540,
											"name": "tag",
											"source": 12,
											"value": "668"
										},
										{
											"begin": 19522,
											"end": 19540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19556,
											"end": 19565,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 19556,
											"end": 19565,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19451,
											"end": 19571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19576,
											"end": 19688,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 19576,
											"end": 19688,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19608,
											"end": 19609,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19634,
											"end": 19635,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19624,
											"end": 19659,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "671"
										},
										{
											"begin": 19624,
											"end": 19659,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19639,
											"end": 19657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "671"
										},
										{
											"begin": 19639,
											"end": 19657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 19639,
											"end": 19657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19639,
											"end": 19657,
											"name": "tag",
											"source": 12,
											"value": "671"
										},
										{
											"begin": 19639,
											"end": 19657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19673,
											"end": 19682,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 19673,
											"end": 19682,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19576,
											"end": 19688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19693,
											"end": 19820,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 19693,
											"end": 19820,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19754,
											"end": 19764,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 19749,
											"end": 19752,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 19745,
											"end": 19765,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 19742,
											"end": 19743,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19735,
											"end": 19766,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19785,
											"end": 19789,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 19782,
											"end": 19783,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 19775,
											"end": 19790,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19809,
											"end": 19813,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 19806,
											"end": 19807,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19799,
											"end": 19814,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ERC721A.sol",
								"contracts/Gluttony.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"FREE_MINT_IS_ALLOWED_UNTIL()": "4065b85f",
							"FREE_MINT_LIMIT_PER_WALLET()": "10b0c052",
							"IS_SALE_ACTIVE()": "76d02b71",
							"MAX_MINT_AMOUNT_PER_TX()": "09ef6527",
							"MAX_SUPPLY()": "32cb6b0c",
							"METADATA_FROZEN()": "fdb4953a",
							"PRICE()": "8d859f3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"freezeMetadata()": "d111515d",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"lowerMaxSupply(uint256)": "c4e9374d",
							"mint(uint256)": "a0712d68",
							"mintOwner(address,uint256)": "408cbf94",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setBaseURI(string)": "55f804b3",
							"setFreeMintAllowance(uint256)": "b0551ac4",
							"setFreeMintAllowedUntil(uint256)": "8b85e43d",
							"setMaxMintPerTx(uint256)": "616cdb1e",
							"setPrice(uint256)": "91b7f5ed",
							"setSaleActive(bool)": "841718a6",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseUri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"freeMintAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxMintPerTx\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isSaleActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"freeMintIsAllowedUntil\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FREE_MINT_IS_ALLOWED_UNTIL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FREE_MINT_LIMIT_PER_WALLET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_SALE_ACTIVE\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_MINT_AMOUNT_PER_TX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"METADATA_FROZEN\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freezeMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxSupply\",\"type\":\"uint256\"}],\"name\":\"lowerMaxSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mintAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_mintAmount\",\"type\":\"uint256\"}],\"name\":\"mintOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"customBaseURI_\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"freeMintAllowance\",\"type\":\"uint256\"}],\"name\":\"setFreeMintAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"freeMintIsAllowedUntil\",\"type\":\"uint256\"}],\"name\":\"setFreeMintAllowedUntil\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxMintPerTx\",\"type\":\"uint256\"}],\"name\":\"setMaxMintPerTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"customPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"saleIsActive\",\"type\":\"bool\"}],\"name\":\"setSaleActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setPrice(uint256)\":{\"notice\":\"SETTERS *\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gluttony.sol\":\"Gluttony\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/ERC721A.sol\":{\"keccak256\":\"0x0f9fc0a120947cda735da655f8d0a73911d78f703016cce42d099ad6b83ffac9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100a523948e5700e4f0be9eae3cf2b07bf2c05df1049c50f58e8be8411f152dd\",\"dweb:/ipfs/QmQXTqzskpGNyHRapbeNy6p9Zc4ZLBTR4FZyB9ytPCZMYQ\"]},\"contracts/Gluttony.sol\":{\"keccak256\":\"0xa377543187ac1a6706534d7e8efe77bf069720cc40a90161c8ec0d944984d647\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08d0c144470bd675e29263dd88e692303c934518c988e1b702a7ac4090ad85ae\",\"dweb:/ipfs/QmbkPijdaPPGmPU8Z2kWAhWnrnoMzZEerRSAxT93WF9tDM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 928,
								"contract": "contracts/Gluttony.sol:Gluttony",
								"label": "currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 930,
								"contract": "contracts/Gluttony.sol:Gluttony",
								"label": "_name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 932,
								"contract": "contracts/Gluttony.sol:Gluttony",
								"label": "_symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 937,
								"contract": "contracts/Gluttony.sol:Gluttony",
								"label": "_ownerships",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(TokenOwnership)921_storage)"
							},
							{
								"astId": 942,
								"contract": "contracts/Gluttony.sol:Gluttony",
								"label": "_addressData",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(AddressData)926_storage)"
							},
							{
								"astId": 946,
								"contract": "contracts/Gluttony.sol:Gluttony",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 952,
								"contract": "contracts/Gluttony.sol:Gluttony",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 7,
								"contract": "contracts/Gluttony.sol:Gluttony",
								"label": "_owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 123,
								"contract": "contracts/Gluttony.sol:Gluttony",
								"label": "_status",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1863,
								"contract": "contracts/Gluttony.sol:Gluttony",
								"label": "PRICE",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1865,
								"contract": "contracts/Gluttony.sol:Gluttony",
								"label": "MAX_SUPPLY",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1867,
								"contract": "contracts/Gluttony.sol:Gluttony",
								"label": "BASE_URI",
								"offset": 0,
								"slot": "11",
								"type": "t_string_storage"
							},
							{
								"astId": 1869,
								"contract": "contracts/Gluttony.sol:Gluttony",
								"label": "FREE_MINT_LIMIT_PER_WALLET",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1871,
								"contract": "contracts/Gluttony.sol:Gluttony",
								"label": "MAX_MINT_AMOUNT_PER_TX",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1873,
								"contract": "contracts/Gluttony.sol:Gluttony",
								"label": "IS_SALE_ACTIVE",
								"offset": 0,
								"slot": "14",
								"type": "t_bool"
							},
							{
								"astId": 1875,
								"contract": "contracts/Gluttony.sol:Gluttony",
								"label": "FREE_MINT_IS_ALLOWED_UNTIL",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 1877,
								"contract": "contracts/Gluttony.sol:Gluttony",
								"label": "METADATA_FROZEN",
								"offset": 0,
								"slot": "16",
								"type": "t_bool"
							},
							{
								"astId": 1881,
								"contract": "contracts/Gluttony.sol:Gluttony",
								"label": "freeMintCountMap",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_struct(AddressData)926_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct ERC721A.AddressData)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressData)926_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(TokenOwnership)921_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenOwnership)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenOwnership)921_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressData)926_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.AddressData",
								"members": [
									{
										"astId": 923,
										"contract": "contracts/Gluttony.sol:Gluttony",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint128"
									},
									{
										"astId": 925,
										"contract": "contracts/Gluttony.sol:Gluttony",
										"label": "numberMinted",
										"offset": 16,
										"slot": "0",
										"type": "t_uint128"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(TokenOwnership)921_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenOwnership",
								"members": [
									{
										"astId": 918,
										"contract": "contracts/Gluttony.sol:Gluttony",
										"label": "addr",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 920,
										"contract": "contracts/Gluttony.sol:Gluttony",
										"label": "startTimestamp",
										"offset": 20,
										"slot": "0",
										"type": "t_uint64"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setPrice(uint256)": {
								"notice": "SETTERS *"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							630
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 631,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								630
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							152
						]
					},
					"id": 153,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 152,
							"linearizedBaseContracts": [
								152
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1661:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1708:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1752:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1796:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1816:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:1"
									},
									"scope": 152,
									"src": "1782:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "2236:421:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 135,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 136,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2336:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:1"
											},
											{
												"expression": {
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 141,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2455:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 142,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2465:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:1"
											},
											{
												"id": 145,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:1"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 146,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 147,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2638:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 151,
									"name": "nonReentrant",
									"nameLocation": "2221:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:1"
									},
									"src": "2212:445:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 153,
							"src": "873:1786:1",
							"usedErrors": []
						}
					],
					"src": "97:2563:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							892
						],
						"IERC721": [
							268
						]
					},
					"id": 269,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 154,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 269,
							"sourceUnit": 893,
							"src": "133:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"271:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 892,
										"src": "271:7:2"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 156,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 268,
							"linearizedBaseContracts": [
								268,
								892
							],
							"name": "IERC721",
							"nameLocation": "260:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 167,
									"name": "Transfer",
									"nameLocation": "384:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "393:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "415:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "435:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:2"
									},
									"src": "378:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 176,
									"name": "Approval",
									"nameLocation": "571:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "580:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "603:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "629:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:2"
									},
									"src": "565:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 185,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "803:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "826:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "852:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:2"
									},
									"src": "782:85:2"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1011:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:2"
									},
									"scope": 268,
									"src": "954:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1227:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:2"
									},
									"scope": 268,
									"src": "1170:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1844:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1866:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1911:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:2"
									},
									"scope": 268,
									"src": "1809:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2679:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2701:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2721:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:2"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:2"
									},
									"scope": 268,
									"src": "2644:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "2758:504:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3306:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3298:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3328:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3320:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3348:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3340:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:73:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:2"
									},
									"scope": 268,
									"src": "3267:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "3377:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3843:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3859:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3851:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3871:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3863:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:29:2"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:0:2"
									},
									"scope": 268,
									"src": "3834:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3895:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4218:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4244:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4236:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4259:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4254:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:34:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4278:0:2"
									},
									"scope": 268,
									"src": "4209:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4285:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4438:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4458:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "4450:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:17:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4498:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "4490:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:18:2"
									},
									"scope": 268,
									"src": "4429:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "4514:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4666:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4706:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4698:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:33:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4739:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4739:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4738:6:2"
									},
									"scope": 268,
									"src": "4657:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 269,
							"src": "250:4497:2",
							"usedErrors": []
						}
					],
					"src": "108:4640:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							286
						]
					},
					"id": 287,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 270,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 271,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 286,
							"linearizedBaseContracts": [
								286
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "859:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "885:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "907:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "932:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 279,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:3"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "976:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 282,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:3"
									},
									"scope": 286,
									"src": "824:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 287,
							"src": "294:692:3",
							"usedErrors": []
						}
					],
					"src": "116:871:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							892
						],
						"IERC721": [
							268
						],
						"IERC721Metadata": [
							313
						]
					},
					"id": 314,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 288,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 289,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 314,
							"sourceUnit": 269,
							"src": "137:24:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 291,
										"name": "IERC721",
										"nameLocations": [
											"326:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 268,
										"src": "326:7:4"
									},
									"id": 292,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:4"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 290,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:4",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 313,
							"linearizedBaseContracts": [
								313,
								268,
								892
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:4",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:4"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "442:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:4"
									},
									"scope": 313,
									"src": "403:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:4",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:4"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "569:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 301,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:4"
									},
									"scope": 313,
									"src": "528:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:4",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 312,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "703:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:4"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "743:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 309,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:4"
									},
									"scope": 313,
									"src": "685:73:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 314,
							"src": "297:463:4",
							"usedErrors": []
						}
					],
					"src": "112:649:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							608
						]
					},
					"id": 609,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 315,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 316,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 608,
							"linearizedBaseContracts": [
								608
							],
							"name": "Address",
							"nameLocation": "202:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "1241:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 324,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "1465:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 323,
												"id": 329,
												"nodeType": "Return",
												"src": "1458:30:5"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "1195:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:5"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "1235:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 321,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:5"
									},
									"scope": 608,
									"src": "1175:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "2483:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 342,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$608",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$608",
																				"typeString": "library Address"
																			}
																		],
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 340,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 345,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "2526:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 339,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:5"
											},
											{
												"assignments": [
													351,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 351,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 364,
														"src": "2578:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 350,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 358,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 352,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "2596:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 354,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "2618:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 360,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "2647:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 359,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:5"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "2431:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "2458:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:5"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:5"
									},
									"scope": 608,
									"src": "2412:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "3555:84:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 376,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "3585:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "3593:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 375,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															382,
															402
														],
														"referencedDeclaration": 402,
														"src": "3572:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 374,
												"id": 380,
												"nodeType": "Return",
												"src": "3565:67:5"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "3488:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "3504:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:5"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "3541:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 372,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:5"
									},
									"scope": 608,
									"src": "3466:173:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "4008:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 395,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "4047:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 396,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "4055:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 398,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "4064:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 394,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															422,
															472
														],
														"referencedDeclaration": 472,
														"src": "4025:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 393,
												"id": 400,
												"nodeType": "Return",
												"src": "4018:59:5"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "3892:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "3916:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "3943:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:5"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "3994:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 391,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:5"
									},
									"scope": 608,
									"src": "3861:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "4589:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 415,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "4628:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "4636:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 417,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "4642:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 414,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															422,
															472
														],
														"referencedDeclaration": 472,
														"src": "4606:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 413,
												"id": 420,
												"nodeType": "Return",
												"src": "4599:94:5"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4486:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4510:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 406,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4537:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:5"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4575:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 411,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:5"
									},
									"scope": 608,
									"src": "4446:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "5127:320:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 439,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$608",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$608",
																				"typeString": "library Address"
																			}
																		],
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 437,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5159:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 442,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "5170:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 449,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5247:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 448,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "5236:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 447,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:5"
											},
											{
												"assignments": [
													455,
													457
												],
												"declarations": [
													{
														"constant": false,
														"id": 455,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 471,
														"src": "5300:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 454,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 457,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 471,
														"src": "5314:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 456,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [
														{
															"id": 462,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "5367:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 458,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "5341:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5348:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 460,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "5360:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5406:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 467,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5415:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 468,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "5427:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 465,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "5389:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 435,
												"id": 470,
												"nodeType": "Return",
												"src": "5382:58:5"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "4988:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "5012:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 426,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "5039:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "5062:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 430,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:5"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "5113:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 433,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:5"
									},
									"scope": 608,
									"src": "4948:499:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "5724:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 483,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "5760:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 484,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "5768:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 482,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															489,
															524
														],
														"referencedDeclaration": 524,
														"src": "5741:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 481,
												"id": 487,
												"nodeType": "Return",
												"src": "5734:80:5"
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5652:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5668:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 476,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:5"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5710:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:5"
									},
									"scope": 608,
									"src": "5624:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "6163:228:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 503,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "6192:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 502,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "6181:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 501,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:5"
											},
											{
												"assignments": [
													509,
													511
												],
												"declarations": [
													{
														"constant": false,
														"id": 509,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 523,
														"src": "6252:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 508,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 511,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 523,
														"src": "6266:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 510,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 516,
												"initialValue": {
													"arguments": [
														{
															"id": 514,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "6311:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 512,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "6293:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6300:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "6350:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 519,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "6359:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 520,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "6371:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 517,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "6333:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 500,
												"id": 522,
												"nodeType": "Return",
												"src": "6326:58:5"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "6042:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "6066:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "6093:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 495,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:5"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "6149:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 498,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:5"
									},
									"scope": 608,
									"src": "6005:386:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "6667:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "6705:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "6713:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 534,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															541,
															576
														],
														"referencedDeclaration": 576,
														"src": "6684:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 533,
												"id": 539,
												"nodeType": "Return",
												"src": "6677:84:5"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "6600:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 528,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:5"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "6653:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 531,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:5"
									},
									"scope": 608,
									"src": "6570:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "7109:232:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 555,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "7138:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 554,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "7127:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:5"
											},
											{
												"assignments": [
													561,
													563
												],
												"declarations": [
													{
														"constant": false,
														"id": 561,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 575,
														"src": "7200:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 560,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 563,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 575,
														"src": "7214:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 562,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 568,
												"initialValue": {
													"arguments": [
														{
															"id": 566,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "7261:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 564,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "7241:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7248:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 570,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "7300:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 571,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "7309:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 572,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "7321:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 569,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "7283:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 552,
												"id": 574,
												"nodeType": "Return",
												"src": "7276:58:5"
											}
										]
									},
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "6993:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "7017:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 545,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "7044:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 547,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:5"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "7095:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 550,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:5"
									},
									"scope": 608,
									"src": "6954:387:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "7721:582:5",
										"statements": [
											{
												"condition": {
													"id": 588,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 579,
													"src": "7735:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 604,
													"nodeType": "Block",
													"src": "7792:505:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 592,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "7876:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7887:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 602,
																"nodeType": "Block",
																"src": "8234:53:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 599,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 583,
																					"src": "8259:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 598,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 601,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:5"
																	}
																]
															},
															"id": 603,
															"nodeType": "IfStatement",
															"src": "7872:415:5",
															"trueBody": {
																"id": 597,
																"nodeType": "Block",
																"src": "7899:329:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:5"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 581,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 581,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 596,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 605,
												"nodeType": "IfStatement",
												"src": "7731:566:5",
												"trueBody": {
													"id": 591,
													"nodeType": "Block",
													"src": "7744:42:5",
													"statements": [
														{
															"expression": {
																"id": 589,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "7765:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 587,
															"id": 590,
															"nodeType": "Return",
															"src": "7758:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:5",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "7596:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 578,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "7618:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 580,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "7651:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 582,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:5"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "7707:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 585,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:5"
									},
									"scope": 608,
									"src": "7561:742:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 609,
							"src": "194:8111:5",
							"usedErrors": []
						}
					],
					"src": "101:8205:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							630
						]
					},
					"id": 631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 610,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 611,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 630,
							"linearizedBaseContracts": [
								630
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 616,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 615,
												"id": 618,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 630,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 625,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 624,
												"id": 627,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 630,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 631,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							856
						]
					},
					"id": 857,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 633,
								"nodeType": "StructuredDocumentation",
								"src": "126:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 856,
							"linearizedBaseContracts": [
								856
							],
							"name": "Strings",
							"nameLocation": "169:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 636,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "208:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 856,
									"src": "183:58:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 634,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "183:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 635,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "223:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 639,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "270:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 856,
									"src": "247:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 637,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "247:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 638,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "288:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "463:632:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "665:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "674:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "665:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 653,
												"nodeType": "IfStatement",
												"src": "661:51:7",
												"trueBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "677:35:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "698:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 646,
															"id": 651,
															"nodeType": "Return",
															"src": "691:10:7"
														}
													]
												}
											},
											{
												"assignments": [
													655
												],
												"declarations": [
													{
														"constant": false,
														"id": 655,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "729:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 717,
														"src": "721:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 654,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "721:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 657,
												"initialValue": {
													"id": 656,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 642,
													"src": "736:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "721:20:7"
											},
											{
												"assignments": [
													659
												],
												"declarations": [
													{
														"constant": false,
														"id": 659,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "759:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 717,
														"src": "751:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 658,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "751:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 660,
												"nodeType": "VariableDeclarationStatement",
												"src": "751:14:7"
											},
											{
												"body": {
													"id": 671,
													"nodeType": "Block",
													"src": "793:57:7",
													"statements": [
														{
															"expression": {
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "807:8:7",
																"subExpression": {
																	"id": 664,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "807:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 666,
															"nodeType": "ExpressionStatement",
															"src": "807:8:7"
														},
														{
															"expression": {
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 667,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "829:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "837:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "829:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 670,
															"nodeType": "ExpressionStatement",
															"src": "829:10:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 661,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "782:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "790:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "782:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 672,
												"nodeType": "WhileStatement",
												"src": "775:75:7"
											},
											{
												"assignments": [
													674
												],
												"declarations": [
													{
														"constant": false,
														"id": 674,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "872:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 717,
														"src": "859:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 673,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "859:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 679,
												"initialValue": {
													"arguments": [
														{
															"id": 677,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "891:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "881:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 675,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "885:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "881:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:39:7"
											},
											{
												"body": {
													"id": 710,
													"nodeType": "Block",
													"src": "927:131:7",
													"statements": [
														{
															"expression": {
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 683,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "941:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "951:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "941:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 686,
															"nodeType": "ExpressionStatement",
															"src": "941:11:7"
														},
														{
															"expression": {
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 687,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "966:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 689,
																	"indexExpression": {
																		"id": 688,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "973:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "966:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 701,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 694,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "996:2:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 699,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 697,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 642,
																									"src": "1009:5:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 698,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1017:2:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "1009:10:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 696,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1001:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 695,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1001:7:7",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 700,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1001:19:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "996:24:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 693,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "990:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 692,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "990:5:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "990:31:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "983:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 690,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "983:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "983:39:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "966:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 705,
															"nodeType": "ExpressionStatement",
															"src": "966:56:7"
														},
														{
															"expression": {
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 706,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "1036:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1045:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1036:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 709,
															"nodeType": "ExpressionStatement",
															"src": "1036:11:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 680,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "915:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "924:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "915:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 711,
												"nodeType": "WhileStatement",
												"src": "908:150:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 714,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "1081:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1074:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 712,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1074:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1074:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 646,
												"id": 716,
												"nodeType": "Return",
												"src": "1067:21:7"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "297:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "401:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "418:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "410:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:15:7"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "448:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 644,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "448:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:15:7"
									},
									"scope": 856,
									"src": "392:703:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "1274:255:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 726,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "1288:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1297:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1288:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 732,
												"nodeType": "IfStatement",
												"src": "1284:54:7",
												"trueBody": {
													"id": 731,
													"nodeType": "Block",
													"src": "1300:38:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1321:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 725,
															"id": 730,
															"nodeType": "Return",
															"src": "1314:13:7"
														}
													]
												}
											},
											{
												"assignments": [
													734
												],
												"declarations": [
													{
														"constant": false,
														"id": 734,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1355:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 758,
														"src": "1347:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 733,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1347:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 736,
												"initialValue": {
													"id": 735,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 721,
													"src": "1362:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1347:20:7"
											},
											{
												"assignments": [
													738
												],
												"declarations": [
													{
														"constant": false,
														"id": 738,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1385:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 758,
														"src": "1377:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 737,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1377:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 740,
												"initialValue": {
													"hexValue": "30",
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1394:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1377:18:7"
											},
											{
												"body": {
													"id": 751,
													"nodeType": "Block",
													"src": "1423:57:7",
													"statements": [
														{
															"expression": {
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1437:8:7",
																"subExpression": {
																	"id": 744,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "1437:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 746,
															"nodeType": "ExpressionStatement",
															"src": "1437:8:7"
														},
														{
															"expression": {
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 747,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "1459:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1468:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1459:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 750,
															"nodeType": "ExpressionStatement",
															"src": "1459:10:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 741,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "1412:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1420:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1412:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "WhileStatement",
												"src": "1405:75:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "1508:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 755,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "1515:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															759,
															835,
															855
														],
														"referencedDeclaration": 835,
														"src": "1496:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 725,
												"id": 757,
												"nodeType": "Return",
												"src": "1489:33:7"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "1101:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1209:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1229:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "1221:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:15:7"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "1259:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 723,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1259:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:15:7"
									},
									"scope": 856,
									"src": "1200:329:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "1742:351:7",
										"statements": [
											{
												"assignments": [
													770
												],
												"declarations": [
													{
														"constant": false,
														"id": 770,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1765:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 834,
														"src": "1752:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 769,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1752:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 779,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1784:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 774,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 764,
																	"src": "1788:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1784:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1797:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1784:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1774:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 771,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1778:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1752:47:7"
											},
											{
												"expression": {
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 780,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "1809:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 782,
														"indexExpression": {
															"hexValue": "30",
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1816:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1809:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 783,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1821:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1809:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "1809:15:7"
											},
											{
												"expression": {
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 786,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "1834:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 788,
														"indexExpression": {
															"hexValue": "31",
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1841:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1834:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1846:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1834:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "1834:15:7"
											},
											{
												"body": {
													"id": 820,
													"nodeType": "Block",
													"src": "1904:87:7",
													"statements": [
														{
															"expression": {
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 806,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "1918:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 808,
																	"indexExpression": {
																		"id": 807,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "1925:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1918:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 809,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "1930:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 813,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 810,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 762,
																			"src": "1943:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1951:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1943:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1930:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1918:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 815,
															"nodeType": "ExpressionStatement",
															"src": "1918:37:7"
														},
														{
															"expression": {
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 816,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "1969:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1979:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1969:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 819,
															"nodeType": "ExpressionStatement",
															"src": "1969:11:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 800,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "1892:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1896:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1892:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 821,
												"initializationExpression": {
													"assignments": [
														793
													],
													"declarations": [
														{
															"constant": false,
															"id": 793,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1872:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 821,
															"src": "1864:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 792,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1864:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 799,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1876:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 795,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "1880:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1876:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1889:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1876:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1864:26:7"
												},
												"loopExpression": {
													"expression": {
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1899:3:7",
														"subExpression": {
															"id": 803,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "1901:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 805,
													"nodeType": "ExpressionStatement",
													"src": "1899:3:7"
												},
												"nodeType": "ForStatement",
												"src": "1859:132:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 823,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "2008:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2008:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2020:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 822,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2000:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2000:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "2000:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 831,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "2079:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2072:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 829,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2072:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2072:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 768,
												"id": 833,
												"nodeType": "Return",
												"src": "2065:21:7"
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "1535:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1661:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1681:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1673:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1696:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1688:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:31:7"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1727:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 766,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:15:7"
									},
									"scope": 856,
									"src": "1652:441:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "2318:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 848,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 838,
																			"src": "2363:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2355:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 846,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2355:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2355:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2347:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 844,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2347:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2347:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 851,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "2371:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 843,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															759,
															835,
															855
														],
														"referencedDeclaration": 835,
														"src": "2335:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 842,
												"id": 853,
												"nodeType": "Return",
												"src": "2328:59:7"
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "2099:141:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2254:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2274:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "2266:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:14:7"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "2303:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 840,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2303:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:15:7"
									},
									"scope": 856,
									"src": "2245:149:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 857,
							"src": "161:2235:7",
							"usedErrors": []
						}
					],
					"src": "101:2296:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							880
						],
						"IERC165": [
							892
						]
					},
					"id": 881,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 858,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 859,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 881,
							"sourceUnit": 893,
							"src": "124:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 861,
										"name": "IERC165",
										"nameLocations": [
											"754:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 892,
										"src": "754:7:8"
									},
									"id": 862,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 860,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 880,
							"linearizedBaseContracts": [
								880,
								892
							],
							"name": "ERC165",
							"nameLocation": "744:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										891
									],
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "920:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 871,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "937:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 873,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 892,
																	"src": "957:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$892_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$892_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 872,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$892",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 870,
												"id": 877,
												"nodeType": "Return",
												"src": "930:47:8"
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 867,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:8"
									},
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "856:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 864,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:8"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "914:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 868,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:8"
									},
									"scope": 880,
									"src": "829:155:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 881,
							"src": "726:260:8",
							"usedErrors": []
						}
					],
					"src": "99:888:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							892
						]
					},
					"id": 893,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 882,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 883,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 892,
							"linearizedBaseContracts": [
								892
							],
							"name": "IERC165",
							"nameLocation": "415:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "801:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 885,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:9"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "844:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 888,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:9"
									},
									"scope": 892,
									"src": "774:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 893,
							"src": "405:447:9",
							"usedErrors": []
						}
					],
					"src": "100:753:9"
				},
				"id": 9
			},
			"contracts/ERC721A.sol": {
				"ast": {
					"absolutePath": "contracts/ERC721A.sol",
					"exportedSymbols": {
						"Address": [
							608
						],
						"Context": [
							630
						],
						"ERC165": [
							880
						],
						"ERC721A": [
							1847
						],
						"IERC165": [
							892
						],
						"IERC721": [
							268
						],
						"IERC721Metadata": [
							313
						],
						"IERC721Receiver": [
							286
						],
						"Strings": [
							856
						]
					},
					"id": 1848,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 894,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "59:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 895,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1848,
							"sourceUnit": 269,
							"src": "86:58:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 896,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1848,
							"sourceUnit": 287,
							"src": "146:66:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"id": 897,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1848,
							"sourceUnit": 314,
							"src": "214:77:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 898,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1848,
							"sourceUnit": 609,
							"src": "293:51:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 899,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1848,
							"sourceUnit": 631,
							"src": "346:51:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 900,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1848,
							"sourceUnit": 857,
							"src": "399:51:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"id": 901,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1848,
							"sourceUnit": 881,
							"src": "452:64:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 903,
										"name": "Context",
										"nameLocations": [
											"981:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "981:7:10"
									},
									"id": 904,
									"nodeType": "InheritanceSpecifier",
									"src": "981:7:10"
								},
								{
									"baseName": {
										"id": 905,
										"name": "ERC165",
										"nameLocations": [
											"990:6:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 880,
										"src": "990:6:10"
									},
									"id": 906,
									"nodeType": "InheritanceSpecifier",
									"src": "990:6:10"
								},
								{
									"baseName": {
										"id": 907,
										"name": "IERC721",
										"nameLocations": [
											"998:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 268,
										"src": "998:7:10"
									},
									"id": 908,
									"nodeType": "InheritanceSpecifier",
									"src": "998:7:10"
								},
								{
									"baseName": {
										"id": 909,
										"name": "IERC721Metadata",
										"nameLocations": [
											"1007:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 313,
										"src": "1007:15:10"
									},
									"id": 910,
									"nodeType": "InheritanceSpecifier",
									"src": "1007:15:10"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 902,
								"nodeType": "StructuredDocumentation",
								"src": "520:439:10",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..).\n Does not support burning tokens to address(0).\n Assumes that an owner cannot have more than the 2**128 - 1 (max value of uint128) of supply"
							},
							"fullyImplemented": true,
							"id": 1847,
							"linearizedBaseContracts": [
								1847,
								313,
								268,
								880,
								892,
								630
							],
							"name": "ERC721A",
							"nameLocation": "970:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 913,
									"libraryName": {
										"id": 911,
										"name": "Address",
										"nameLocations": [
											"1036:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 608,
										"src": "1036:7:10"
									},
									"nodeType": "UsingForDirective",
									"src": "1030:26:10",
									"typeName": {
										"id": 912,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1048:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 916,
									"libraryName": {
										"id": 914,
										"name": "Strings",
										"nameLocations": [
											"1068:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 856,
										"src": "1068:7:10"
									},
									"nodeType": "UsingForDirective",
									"src": "1062:26:10",
									"typeName": {
										"id": 915,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1080:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "ERC721A.TokenOwnership",
									"id": 921,
									"members": [
										{
											"constant": false,
											"id": 918,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1137:4:10",
											"nodeType": "VariableDeclaration",
											"scope": 921,
											"src": "1129:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 917,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1129:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 920,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "1159:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 921,
											"src": "1152:21:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 919,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1152:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1103:14:10",
									"nodeType": "StructDefinition",
									"scope": 1847,
									"src": "1096:85:10",
									"visibility": "public"
								},
								{
									"canonicalName": "ERC721A.AddressData",
									"id": 926,
									"members": [
										{
											"constant": false,
											"id": 923,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "1227:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 926,
											"src": "1219:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 922,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1219:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 925,
											"mutability": "mutable",
											"name": "numberMinted",
											"nameLocation": "1253:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 926,
											"src": "1245:20:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 924,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1245:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressData",
									"nameLocation": "1196:11:10",
									"nodeType": "StructDefinition",
									"scope": 1847,
									"src": "1189:84:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 928,
									"mutability": "mutable",
									"name": "currentIndex",
									"nameLocation": "1298:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1847,
									"src": "1281:29:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 927,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1281:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 930,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1353:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 1847,
									"src": "1338:20:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 929,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1338:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 932,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1403:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1847,
									"src": "1388:22:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 931,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1388:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 937,
									"mutability": "mutable",
									"name": "_ownerships",
									"nameLocation": "1636:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1847,
									"src": "1592:55:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$921_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
									},
									"typeName": {
										"id": 936,
										"keyType": {
											"id": 933,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1600:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1592:34:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$921_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
										},
										"valueType": {
											"id": 935,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 934,
												"name": "TokenOwnership",
												"nameLocations": [
													"1611:14:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 921,
												"src": "1611:14:10"
											},
											"referencedDeclaration": 921,
											"src": "1611:14:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenOwnership_$921_storage_ptr",
												"typeString": "struct ERC721A.TokenOwnership"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 942,
									"mutability": "mutable",
									"name": "_addressData",
									"nameLocation": "1742:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1847,
									"src": "1702:52:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$926_storage_$",
										"typeString": "mapping(address => struct ERC721A.AddressData)"
									},
									"typeName": {
										"id": 941,
										"keyType": {
											"id": 938,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1710:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1702:31:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$926_storage_$",
											"typeString": "mapping(address => struct ERC721A.AddressData)"
										},
										"valueType": {
											"id": 940,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 939,
												"name": "AddressData",
												"nameLocations": [
													"1721:11:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 926,
												"src": "1721:11:10"
											},
											"referencedDeclaration": 926,
											"src": "1721:11:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressData_$926_storage_ptr",
												"typeString": "struct ERC721A.AddressData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 946,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1849:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1847,
									"src": "1813:51:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 945,
										"keyType": {
											"id": 943,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1821:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1813:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 944,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1832:7:10",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 952,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1975:18:10",
									"nodeType": "VariableDeclaration",
									"scope": 1847,
									"src": "1922:71:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 951,
										"keyType": {
											"id": 947,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1930:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1922:44:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 950,
											"keyType": {
												"id": 948,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1949:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1941:24:10",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 949,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1960:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "2058:60:10",
										"statements": [
											{
												"expression": {
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 959,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "2069:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 960,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "2077:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2069:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "2069:13:10"
											},
											{
												"expression": {
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 963,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "2093:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 964,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "2103:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2093:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "2093:17:10"
											}
										]
									},
									"id": 968,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2028:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "2014:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 953,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2014:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2049:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "2035:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 955,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2035:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:44:10"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2058:0:10"
									},
									"scope": 1847,
									"src": "2002:116:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "2179:38:10",
										"statements": [
											{
												"expression": {
													"id": 973,
													"name": "currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 928,
													"src": "2197:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 972,
												"id": 974,
												"nodeType": "Return",
												"src": "2190:19:10"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2135:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2146:2:10"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "2170:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2169:9:10"
									},
									"scope": 1847,
									"src": "2126:91:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										879,
										891
									],
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "2397:185:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 987,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "2424:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 989,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 268,
																			"src": "2444:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$268_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$268_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 988,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2439:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2439:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$268",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2453:11:10",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "2439:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "2424:40:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 993,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "2477:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 995,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 313,
																			"src": "2497:15:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$313_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$313_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 994,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2492:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2492:21:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$313",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2514:11:10",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "2492:33:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "2477:48:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2424:101:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1002,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "2562:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1000,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2538:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721A_$1847_$",
																	"typeString": "type(contract super ERC721A)"
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2544:17:10",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 879,
															"src": "2538:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2538:36:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2424:150:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 986,
												"id": 1005,
												"nodeType": "Return",
												"src": "2408:166:10"
											}
										]
									},
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "2225:58:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2298:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 983,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 981,
												"name": "ERC165",
												"nameLocations": [
													"2365:6:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 880,
												"src": "2365:6:10"
											},
											{
												"id": 982,
												"name": "IERC165",
												"nameLocations": [
													"2373:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 892,
												"src": "2373:7:10"
											}
										],
										"src": "2356:25:10"
									},
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2323:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2316:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 978,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2316:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2315:20:10"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2391:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 984,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:6:10"
									},
									"scope": 1847,
									"src": "2289:293:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										193
									],
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "2719:148:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1017,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "2738:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2755:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2747:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1018,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2747:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2747:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2738:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2759:45:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
																"typeString": "literal_string \"ERC721A: balance query for the zero address\""
															},
															"value": "ERC721A: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
																"typeString": "literal_string \"ERC721A: balance query for the zero address\""
															}
														],
														"id": 1016,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2730:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2730:75:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "2730:75:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1028,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "2831:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$926_storage_$",
																		"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																	}
																},
																"id": 1030,
																"indexExpression": {
																	"id": 1029,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "2844:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2831:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$926_storage",
																	"typeString": "struct ERC721A.AddressData storage ref"
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2851:7:10",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 923,
															"src": "2831:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2823:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1026,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2823:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1015,
												"id": 1033,
												"nodeType": "Return",
												"src": "2816:43:10"
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "2590:50:10",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2655:9:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1012,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2692:8:10"
									},
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2673:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "2665:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2665:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2664:15:10"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "2710:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:9:10"
									},
									"scope": 1847,
									"src": "2646:221:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "2945:159:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1043,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "2964:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2981:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2973:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1044,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2973:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2973:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2964:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a206e756d626572206d696e74656420717565727920666f7220746865207a65726f2061646472657373",
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2985:51:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c3e37e02c3080172abd6c32dc3a6b6918df0b3dc1fb7feda8214222d4942acc",
																"typeString": "literal_string \"ERC721A: number minted query for the zero address\""
															},
															"value": "ERC721A: number minted query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c3e37e02c3080172abd6c32dc3a6b6918df0b3dc1fb7feda8214222d4942acc",
																"typeString": "literal_string \"ERC721A: number minted query for the zero address\""
															}
														],
														"id": 1042,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2956:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2956:81:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "2956:81:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1054,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "3063:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$926_storage_$",
																		"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																	}
																},
																"id": 1056,
																"indexExpression": {
																	"id": 1055,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "3076:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3063:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$926_storage",
																	"typeString": "struct ERC721A.AddressData storage ref"
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3083:12:10",
															"memberName": "numberMinted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 925,
															"src": "3063:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3055:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1052,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3055:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3055:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1059,
												"nodeType": "Return",
												"src": "3048:48:10"
											}
										]
									},
									"id": 1061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "2884:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2906:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "2898:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2898:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2897:15:10"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "2936:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2936:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2935:9:10"
									},
									"scope": 1847,
									"src": "2875:229:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "3390:421:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1072,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "3417:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1071,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "3409:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3409:16:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3427:44:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
																"typeString": "literal_string \"ERC721A: owner query for nonexistent token\""
															},
															"value": "ERC721A: owner query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
																"typeString": "literal_string \"ERC721A: owner query for nonexistent token\""
															}
														],
														"id": 1070,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3401:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3401:71:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "3401:71:10"
											},
											{
												"id": 1107,
												"nodeType": "UncheckedBlock",
												"src": "3481:253:10",
												"statements": [
													{
														"body": {
															"id": 1105,
															"nodeType": "Block",
															"src": "3550:177:10",
															"statements": [
																{
																	"assignments": [
																		1089
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1089,
																			"mutability": "mutable",
																			"name": "ownership",
																			"nameLocation": "3587:9:10",
																			"nodeType": "VariableDeclaration",
																			"scope": 1105,
																			"src": "3565:31:10",
																			"stateVariable": false,
																			"storageLocation": "memory",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$921_memory_ptr",
																				"typeString": "struct ERC721A.TokenOwnership"
																			},
																			"typeName": {
																				"id": 1088,
																				"nodeType": "UserDefinedTypeName",
																				"pathNode": {
																					"id": 1087,
																					"name": "TokenOwnership",
																					"nameLocations": [
																						"3565:14:10"
																					],
																					"nodeType": "IdentifierPath",
																					"referencedDeclaration": 921,
																					"src": "3565:14:10"
																				},
																				"referencedDeclaration": 921,
																				"src": "3565:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$921_storage_ptr",
																					"typeString": "struct ERC721A.TokenOwnership"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1093,
																	"initialValue": {
																		"baseExpression": {
																			"id": 1090,
																			"name": "_ownerships",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 937,
																			"src": "3599:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$921_storage_$",
																				"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																			}
																		},
																		"id": 1092,
																		"indexExpression": {
																			"id": 1091,
																			"name": "curr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1078,
																			"src": "3611:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3599:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$921_storage",
																			"typeString": "struct ERC721A.TokenOwnership storage ref"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "3565:51:10"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1094,
																				"name": "ownership",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1089,
																				"src": "3635:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$921_memory_ptr",
																					"typeString": "struct ERC721A.TokenOwnership memory"
																				}
																			},
																			"id": 1095,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3645:4:10",
																			"memberName": "addr",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 918,
																			"src": "3635:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1098,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3661:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1097,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3653:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1096,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3653:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1099,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3653:10:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "3635:28:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1104,
																	"nodeType": "IfStatement",
																	"src": "3631:85:10",
																	"trueBody": {
																		"id": 1103,
																		"nodeType": "Block",
																		"src": "3665:51:10",
																		"statements": [
																			{
																				"expression": {
																					"id": 1101,
																					"name": "ownership",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1089,
																					"src": "3691:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenOwnership_$921_memory_ptr",
																						"typeString": "struct ERC721A.TokenOwnership memory"
																					}
																				},
																				"functionReturnParameters": 1069,
																				"id": 1102,
																				"nodeType": "Return",
																				"src": "3684:16:10"
																			}
																		]
																	}
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1081,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "3531:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3539:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3531:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1106,
														"initializationExpression": {
															"assignments": [
																1078
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1078,
																	"mutability": "mutable",
																	"name": "curr",
																	"nameLocation": "3515:4:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1106,
																	"src": "3507:12:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1077,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3507:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1080,
															"initialValue": {
																"id": 1079,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "3522:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3507:22:10"
														},
														"loopExpression": {
															"expression": {
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "--",
																"prefix": false,
																"src": "3542:6:10",
																"subExpression": {
																	"id": 1084,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "3542:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1086,
															"nodeType": "ExpressionStatement",
															"src": "3542:6:10"
														},
														"nodeType": "ForStatement",
														"src": "3502:225:10"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "455243373231413a20756e61626c6520746f2064657465726d696e6520746865206f776e6572206f6620746f6b656e",
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3753:49:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
																"typeString": "literal_string \"ERC721A: unable to determine the owner of token\""
															},
															"value": "ERC721A: unable to determine the owner of token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
																"typeString": "literal_string \"ERC721A: unable to determine the owner of token\""
															}
														],
														"id": 1108,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "3746:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3746:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "3746:57:10"
											}
										]
									},
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "3112:188:10",
										"text": " Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around in the collection over time."
									},
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownershipOf",
									"nameLocation": "3315:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3335:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "3327:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3327:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3326:17:10"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "3367:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$921_memory_ptr",
													"typeString": "struct ERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1067,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1066,
														"name": "TokenOwnership",
														"nameLocations": [
															"3367:14:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 921,
														"src": "3367:14:10"
													},
													"referencedDeclaration": 921,
													"src": "3367:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$921_storage_ptr",
														"typeString": "struct ERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3366:23:10"
									},
									"scope": 1847,
									"src": "3306:505:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										201
									],
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "3946:51:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1123,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "3976:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1122,
															"name": "ownershipOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "3964:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$921_memory_ptr_$",
																"typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
															}
														},
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3964:20:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$921_memory_ptr",
															"typeString": "struct ERC721A.TokenOwnership memory"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3985:4:10",
													"memberName": "addr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 918,
													"src": "3964:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1126,
												"nodeType": "Return",
												"src": "3957:32:10"
											}
										]
									},
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "3819:48:10",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "3882:7:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1118,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3919:8:10"
									},
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3898:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "3890:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3890:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3889:17:10"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "3937:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3937:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3936:9:10"
									},
									"scope": 1847,
									"src": "3873:124:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										298
									],
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "4133:31:10",
										"statements": [
											{
												"expression": {
													"id": 1135,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 930,
													"src": "4151:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1134,
												"id": 1136,
												"nodeType": "Return",
												"src": "4144:12:10"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "4005:53:10",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "4073:4:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1131,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4100:8:10"
									},
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4077:2:10"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "4118:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1132,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4118:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4117:15:10"
									},
									"scope": 1847,
									"src": "4064:100:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										304
									],
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "4304:33:10",
										"statements": [
											{
												"expression": {
													"id": 1145,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 932,
													"src": "4322:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1144,
												"id": 1146,
												"nodeType": "Return",
												"src": "4315:14:10"
											}
										]
									},
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "4172:55:10",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "4242:6:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1141,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4271:8:10"
									},
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4248:2:10"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "4289:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4289:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4288:15:10"
									},
									"scope": 1847,
									"src": "4233:104:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										312
									],
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "4496:247:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1159,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "4523:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1158,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "4515:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4515:16:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4533:49:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															},
															"value": "ERC721Metadata: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															}
														],
														"id": 1157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4507:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4507:76:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "4507:76:10"
											},
											{
												"assignments": [
													1165
												],
												"declarations": [
													{
														"constant": false,
														"id": 1165,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "4610:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1189,
														"src": "4596:21:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1164,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4596:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1168,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1166,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "4620:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4620:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4596:34:10"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1171,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1165,
																		"src": "4654:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4648:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1169,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "4648:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4648:14:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4663:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4648:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4673:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4648:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4733:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4648:87:10",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1180,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1165,
																		"src": "4701:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1181,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1151,
																				"src": "4710:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4718:8:10",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 718,
																			"src": "4710:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4710:18:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1178,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "4684:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4688:12:10",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "4684:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4684:45:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4677:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1176,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "4677:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4677:53:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1156,
												"id": 1188,
												"nodeType": "Return",
												"src": "4641:94:10"
											}
										]
									},
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "4345:57:10",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "4417:8:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1153,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4463:8:10"
									},
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4434:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "4426:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4426:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4425:17:10"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "4481:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1154,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4481:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4480:15:10"
									},
									"scope": 1847,
									"src": "4408:335:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "5057:28:10",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5075:2:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 1195,
												"id": 1197,
												"nodeType": "Return",
												"src": "5068:9:10"
											}
										]
									},
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "4751:234:10",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
									},
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "5000:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5008:2:10"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "5042:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1193,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5042:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5041:15:10"
									},
									"scope": 1847,
									"src": "4991:94:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										241
									],
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "5209:351:10",
										"statements": [
											{
												"assignments": [
													1209
												],
												"declarations": [
													{
														"constant": false,
														"id": 1209,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5228:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1242,
														"src": "5220:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1208,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5220:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1214,
												"initialValue": {
													"arguments": [
														{
															"id": 1212,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "5252:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1210,
															"name": "ERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "5236:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721A_$1847_$",
																"typeString": "type(contract ERC721A)"
															}
														},
														"id": 1211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5244:7:10",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1128,
														"src": "5236:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5236:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5220:40:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1216,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1202,
																"src": "5279:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1217,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "5285:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5279:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5292:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
																"typeString": "literal_string \"ERC721A: approval to current owner\""
															},
															"value": "ERC721A: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
																"typeString": "literal_string \"ERC721A: approval to current owner\""
															}
														],
														"id": 1215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5271:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5271:58:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1221,
												"nodeType": "ExpressionStatement",
												"src": "5271:58:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1223,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "5364:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5364:12:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1225,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1209,
																	"src": "5380:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5364:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1228,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1209,
																		"src": "5406:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1229,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 620,
																			"src": "5413:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5413:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1227,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1316,
																	"src": "5389:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5389:37:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5364:62:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5441:59:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
																"typeString": "literal_string \"ERC721A: approve caller is not owner nor approved for all\""
															},
															"value": "ERC721A: approve caller is not owner nor approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
																"typeString": "literal_string \"ERC721A: approve caller is not owner nor approved for all\""
															}
														],
														"id": 1222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5342:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:169:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "5342:169:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1237,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "5533:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1238,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "5537:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1239,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "5546:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1236,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "5524:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5524:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "5524:28:10"
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "5093:48:10",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5156:7:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1206,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5200:8:10"
									},
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5172:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "5164:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5164:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5184:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "5176:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5176:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5163:29:10"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5209:0:10"
									},
									"scope": 1847,
									"src": "5147:413:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										257
									],
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "5703:137:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1254,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "5730:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1253,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "5722:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5722:16:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5740:47:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
																"typeString": "literal_string \"ERC721A: approved query for nonexistent token\""
															},
															"value": "ERC721A: approved query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
																"typeString": "literal_string \"ERC721A: approved query for nonexistent token\""
															}
														],
														"id": 1252,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5714:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5714:74:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "5714:74:10"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1259,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "5808:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1261,
													"indexExpression": {
														"id": 1260,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "5824:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5808:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1251,
												"id": 1262,
												"nodeType": "Return",
												"src": "5801:31:10"
											}
										]
									},
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "5568:52:10",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "5635:11:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1248,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5676:8:10"
									},
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5655:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "5647:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5647:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5646:17:10"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "5694:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5694:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5693:9:10"
									},
									"scope": 1847,
									"src": "5626:214:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										249
									],
									"body": {
										"id": 1297,
										"nodeType": "Block",
										"src": "5988:212:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1274,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1267,
																"src": "6007:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1275,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "6019:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6019:12:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6007:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20617070726f766520746f2063616c6c6572",
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6033:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
																"typeString": "literal_string \"ERC721A: approve to caller\""
															},
															"value": "ERC721A: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
																"typeString": "literal_string \"ERC721A: approve to caller\""
															}
														],
														"id": 1273,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5999:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5999:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "5999:63:10"
											},
											{
												"expression": {
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1281,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "6075:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1285,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1282,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "6094:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6094:12:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6075:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1286,
														"indexExpression": {
															"id": 1284,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "6108:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6075:42:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1287,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1269,
														"src": "6120:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6075:53:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "6075:53:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1291,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "6159:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6159:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1293,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "6173:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1294,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "6183:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1290,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6144:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6144:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1296,
												"nodeType": "EmitStatement",
												"src": "6139:53:10"
											}
										]
									},
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "5848:58:10",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "5921:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1271,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5979:8:10"
									},
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5947:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "5939:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5939:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "5962:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "5957:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1268,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5957:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5938:33:10"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:0:10"
									},
									"scope": 1847,
									"src": "5912:288:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										267
									],
									"body": {
										"id": 1315,
										"nodeType": "Block",
										"src": "6374:61:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1309,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "6392:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1311,
														"indexExpression": {
															"id": 1310,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "6411:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6392:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1313,
													"indexExpression": {
														"id": 1312,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "6418:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6392:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1308,
												"id": 1314,
												"nodeType": "Return",
												"src": "6385:42:10"
											}
										]
									},
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "6208:57:10",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "6280:16:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1305,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6350:8:10"
									},
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6305:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "6297:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6297:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6320:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "6312:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6312:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6296:33:10"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "6368:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6368:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6367:6:10"
									},
									"scope": 1847,
									"src": "6271:164:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										233
									],
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "6617:47:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1328,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "6638:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1329,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "6644:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1330,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "6648:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1327,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "6628:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6628:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1332,
												"nodeType": "ExpressionStatement",
												"src": "6628:28:10"
											}
										]
									},
									"documentation": {
										"id": 1317,
										"nodeType": "StructuredDocumentation",
										"src": "6443:53:10",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6511:12:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1325,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6608:8:10"
									},
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6542:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "6534:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6534:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6565:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "6557:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6557:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6586:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "6578:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6523:77:10"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6617:0:10"
									},
									"scope": 1847,
									"src": "6502:162:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										223
									],
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "6854:58:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1346,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "6882:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1347,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "6888:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1348,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "6892:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6901:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1345,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1353,
															1383
														],
														"referencedDeclaration": 1383,
														"src": "6865:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6865:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "6865:39:10"
											}
										]
									},
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "6672:57:10",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6744:16:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1343,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6845:8:10"
									},
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6779:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "6771:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6771:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6802:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "6794:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6794:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6823:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "6815:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6815:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6760:77:10"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6854:0:10"
									},
									"scope": 1847,
									"src": "6735:177:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										213
									],
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "7131:207:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1367,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "7152:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1368,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "7158:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1369,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "7162:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1366,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "7142:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7142:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1371,
												"nodeType": "ExpressionStatement",
												"src": "7142:28:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1374,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1356,
																	"src": "7226:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1375,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "7232:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1376,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1360,
																	"src": "7236:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1377,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "7245:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1373,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1820,
																"src": "7203:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7203:48:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7266:53:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721A: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 1372,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7181:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7181:149:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "7181:149:10"
											}
										]
									},
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "6920:57:10",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6992:16:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1364,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7122:8:10"
									},
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7027:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "7019:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7019:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7050:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "7042:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7042:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7071:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "7063:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7063:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "7102:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "7089:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7089:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7008:106:10"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7131:0:10"
									},
									"scope": 1847,
									"src": "6983:355:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1395,
										"nodeType": "Block",
										"src": "7656:48:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1391,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "7674:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1392,
														"name": "currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "7684:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7674:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1390,
												"id": 1394,
												"nodeType": "Return",
												"src": "7667:29:10"
											}
										]
									},
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "7346:241:10",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),"
									},
									"id": 1396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7602:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7618:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "7610:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7610:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7609:17:10"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "7650:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1388,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7650:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7649:6:10"
									},
									"scope": 1847,
									"src": "7593:111:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "7770:46:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1404,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "7791:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1405,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "7795:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7805:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1403,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1410,
															1428
														],
														"referencedDeclaration": 1428,
														"src": "7781:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7781:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "7781:27:10"
											}
										]
									},
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "7721:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7739:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "7731:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7731:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "7751:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "7743:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7743:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7730:30:10"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7770:0:10"
									},
									"scope": 1847,
									"src": "7712:104:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "8291:51:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1421,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "8308:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1422,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "8312:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1423,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "8322:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8329:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1420,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1568,
														"src": "8302:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bytes memory,bool)"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8302:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "8302:32:10"
											}
										]
									},
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "7824:349:10",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
									},
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8188:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8216:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "8208:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8208:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "8237:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "8229:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8229:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "8269:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "8256:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1416,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8256:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8197:84:10"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8291:0:10"
									},
									"scope": 1847,
									"src": "8179:163:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "8729:1338:10",
										"statements": [
											{
												"assignments": [
													1441
												],
												"declarations": [
													{
														"constant": false,
														"id": 1441,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "8748:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1567,
														"src": "8740:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1440,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8740:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1443,
												"initialValue": {
													"id": 1442,
													"name": "currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 928,
													"src": "8763:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8740:35:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1445,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "8794:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8808:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8800:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1446,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8800:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8800:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8794:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8812:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d44a4129b83bd8f726e10653f1f05aa5a9f14d8c9c066d6e6701839279ddce3b",
																"typeString": "literal_string \"ERC721A: mint to the zero address\""
															},
															"value": "ERC721A: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d44a4129b83bd8f726e10653f1f05aa5a9f14d8c9c066d6e6701839279ddce3b",
																"typeString": "literal_string \"ERC721A: mint to the zero address\""
															}
														],
														"id": 1444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8786:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8786:62:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "8786:62:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1455,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "8867:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8879:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8867:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a207175616e74697479206d7573742062652067726561746572207468616e2030",
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8882:42:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dc1f9fb0e603971836d588a8edc31ad1917393079ad1425796c0e460d6033de1",
																"typeString": "literal_string \"ERC721A: quantity must be greater than 0\""
															},
															"value": "ERC721A: quantity must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dc1f9fb0e603971836d588a8edc31ad1917393079ad1425796c0e460d6033de1",
																"typeString": "literal_string \"ERC721A: quantity must be greater than 0\""
															}
														],
														"id": 1454,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8859:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8859:66:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "8859:66:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8968:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8960:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1462,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8960:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8960:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1466,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "8972:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1467,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "8976:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1468,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "8990:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1461,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1833,
														"src": "8938:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8938:61:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1470,
												"nodeType": "ExpressionStatement",
												"src": "8938:61:10"
											},
											{
												"id": 1556,
												"nodeType": "UncheckedBlock",
												"src": "9248:739:10",
												"statements": [
													{
														"expression": {
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1471,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "9269:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$926_storage_$",
																			"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1473,
																	"indexExpression": {
																		"id": 1472,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1431,
																		"src": "9282:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9269:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$926_storage",
																		"typeString": "struct ERC721A.AddressData storage ref"
																	}
																},
																"id": 1474,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "9286:7:10",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 923,
																"src": "9269:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1477,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1433,
																		"src": "9305:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9297:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 1475,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9297:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9297:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "9269:45:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"id": 1480,
														"nodeType": "ExpressionStatement",
														"src": "9269:45:10"
													},
													{
														"expression": {
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1481,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "9325:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$926_storage_$",
																			"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1483,
																	"indexExpression": {
																		"id": 1482,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1431,
																		"src": "9338:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9325:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$926_storage",
																		"typeString": "struct ERC721A.AddressData storage ref"
																	}
																},
																"id": 1484,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "9342:12:10",
																"memberName": "numberMinted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 925,
																"src": "9325:29:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1487,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1433,
																		"src": "9366:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9358:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 1485,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9358:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9358:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "9325:50:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"id": 1490,
														"nodeType": "ExpressionStatement",
														"src": "9325:50:10"
													},
													{
														"expression": {
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1491,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "9388:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$921_storage_$",
																			"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1493,
																	"indexExpression": {
																		"id": 1492,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1441,
																		"src": "9400:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9388:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$921_storage",
																		"typeString": "struct ERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1494,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "9414:4:10",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 918,
																"src": "9388:30:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1495,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "9421:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9388:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1497,
														"nodeType": "ExpressionStatement",
														"src": "9388:35:10"
													},
													{
														"expression": {
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1498,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "9434:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$921_storage_$",
																			"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1500,
																	"indexExpression": {
																		"id": 1499,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1441,
																		"src": "9446:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9434:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$921_storage",
																		"typeString": "struct ERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1501,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "9460:14:10",
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 920,
																"src": "9434:40:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1504,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "9484:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9490:9:10",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "9484:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9477:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1502,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "9477:6:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9477:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "9434:66:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1508,
														"nodeType": "ExpressionStatement",
														"src": "9434:66:10"
													},
													{
														"assignments": [
															1510
														],
														"declarations": [
															{
																"constant": false,
																"id": 1510,
																"mutability": "mutable",
																"name": "updatedIndex",
																"nameLocation": "9521:12:10",
																"nodeType": "VariableDeclaration",
																"scope": 1556,
																"src": "9513:20:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1509,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9513:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1512,
														"initialValue": {
															"id": 1511,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "9536:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9513:35:10"
													},
													{
														"body": {
															"id": 1550,
															"nodeType": "Block",
															"src": "9596:344:10",
															"statements": [
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 1525,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9633:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 1524,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9625:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1523,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9625:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1526,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9625:10:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1527,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1431,
																				"src": "9637:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1528,
																				"name": "updatedIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1510,
																				"src": "9641:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1522,
																			"name": "Transfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "9616:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9616:38:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1530,
																	"nodeType": "EmitStatement",
																	"src": "9611:43:10"
																},
																{
																	"condition": {
																		"id": 1531,
																		"name": "safe",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1437,
																		"src": "9673:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1546,
																	"nodeType": "IfStatement",
																	"src": "9669:229:10",
																	"trueBody": {
																		"id": 1545,
																		"nodeType": "Block",
																		"src": "9679:219:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"hexValue": "30",
																											"id": 1536,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "9759:1:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											},
																											"value": "0"
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											}
																										],
																										"id": 1535,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "9751:7:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_address_$",
																											"typeString": "type(address)"
																										},
																										"typeName": {
																											"id": 1534,
																											"name": "address",
																											"nodeType": "ElementaryTypeName",
																											"src": "9751:7:10",
																											"typeDescriptions": {}
																										}
																									},
																									"id": 1537,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "9751:10:10",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"id": 1538,
																									"name": "to",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1431,
																									"src": "9763:2:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"id": 1539,
																									"name": "updatedIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1510,
																									"src": "9767:12:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"id": 1540,
																									"name": "_data",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1435,
																									"src": "9781:5:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes_memory_ptr",
																										"typeString": "bytes memory"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_bytes_memory_ptr",
																										"typeString": "bytes memory"
																									}
																								],
																								"id": 1533,
																								"name": "_checkOnERC721Received",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1820,
																								"src": "9728:22:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																									"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																								}
																							},
																							"id": 1541,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "9728:59:10",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"hexValue": "455243373231413a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																							"id": 1542,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9810:53:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																								"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
																							},
																							"value": "ERC721A: transfer to non ERC721Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																								"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
																							}
																						],
																						"id": 1532,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "9698:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (bool,string memory) pure"
																						}
																					},
																					"id": 1543,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "9698:184:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1544,
																				"nodeType": "ExpressionStatement",
																				"src": "9698:184:10"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"id": 1548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "9914:14:10",
																		"subExpression": {
																			"id": 1547,
																			"name": "updatedIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1510,
																			"src": "9914:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1549,
																	"nodeType": "ExpressionStatement",
																	"src": "9914:14:10"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1516,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1514,
																"src": "9577:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1517,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "9581:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9577:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1551,
														"initializationExpression": {
															"assignments": [
																1514
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1514,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "9574:1:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1551,
																	"src": "9566:9:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1513,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9566:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1515,
															"nodeType": "VariableDeclarationStatement",
															"src": "9566:9:10"
														},
														"loopExpression": {
															"expression": {
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "9591:3:10",
																"subExpression": {
																	"id": 1519,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1514,
																	"src": "9591:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1521,
															"nodeType": "ExpressionStatement",
															"src": "9591:3:10"
														},
														"nodeType": "ForStatement",
														"src": "9561:379:10"
													},
													{
														"expression": {
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1552,
																"name": "currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "9952:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1553,
																"name": "updatedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1510,
																"src": "9967:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9952:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1555,
														"nodeType": "ExpressionStatement",
														"src": "9952:27:10"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10028:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10020:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1558,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10020:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10020:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1562,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "10032:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1563,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "10036:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1564,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "10050:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1557,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "9999:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9999:60:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1566,
												"nodeType": "ExpressionStatement",
												"src": "9999:60:10"
											}
										]
									},
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "8350:245:10",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
									},
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8610:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8634:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "8626:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8626:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "8655:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "8647:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "8687:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "8674:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1434,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8674:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "safe",
												"nameLocation": "8708:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "8703:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1436,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8703:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8615:104:10"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8729:0:10"
									},
									"scope": 1847,
									"src": "8601:1466:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "10425:1830:10",
										"statements": [
											{
												"assignments": [
													1580
												],
												"declarations": [
													{
														"constant": false,
														"id": 1580,
														"mutability": "mutable",
														"name": "prevOwnership",
														"nameLocation": "10458:13:10",
														"nodeType": "VariableDeclaration",
														"scope": 1732,
														"src": "10436:35:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$921_memory_ptr",
															"typeString": "struct ERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 1579,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1578,
																"name": "TokenOwnership",
																"nameLocations": [
																	"10436:14:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 921,
																"src": "10436:14:10"
															},
															"referencedDeclaration": 921,
															"src": "10436:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$921_storage_ptr",
																"typeString": "struct ERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1584,
												"initialValue": {
													"arguments": [
														{
															"id": 1582,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "10486:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1581,
														"name": "ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "10474:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$921_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10474:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$921_memory_ptr",
														"typeString": "struct ERC721A.TokenOwnership memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10436:58:10"
											},
											{
												"assignments": [
													1586
												],
												"declarations": [
													{
														"constant": false,
														"id": 1586,
														"mutability": "mutable",
														"name": "isApprovedOrOwner",
														"nameLocation": "10512:17:10",
														"nodeType": "VariableDeclaration",
														"scope": 1732,
														"src": "10507:22:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1585,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10507:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1607,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1587,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 620,
																			"src": "10533:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10533:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 1589,
																			"name": "prevOwnership",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1580,
																			"src": "10549:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$921_memory_ptr",
																				"typeString": "struct ERC721A.TokenOwnership memory"
																			}
																		},
																		"id": 1590,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10563:4:10",
																		"memberName": "addr",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 918,
																		"src": "10549:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "10533:34:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1593,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1575,
																				"src": "10592:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1592,
																			"name": "getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1264,
																			"src": "10580:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 1594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10580:20:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1595,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 620,
																			"src": "10604:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10604:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "10580:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "10533:83:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1600,
																			"name": "prevOwnership",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1580,
																			"src": "10646:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$921_memory_ptr",
																				"typeString": "struct ERC721A.TokenOwnership memory"
																			}
																		},
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10660:4:10",
																		"memberName": "addr",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 918,
																		"src": "10646:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1602,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 620,
																			"src": "10666:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10666:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1599,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1316,
																	"src": "10629:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10629:50:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10533:146:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1606,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10532:148:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10507:173:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1609,
															"name": "isApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "10701:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10720:52:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
																"typeString": "literal_string \"ERC721A: transfer caller is not owner nor approved\""
															},
															"value": "ERC721A: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
																"typeString": "literal_string \"ERC721A: transfer caller is not owner nor approved\""
															}
														],
														"id": 1608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10693:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10693:80:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1612,
												"nodeType": "ExpressionStatement",
												"src": "10693:80:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1614,
																	"name": "prevOwnership",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "10794:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$921_memory_ptr",
																		"typeString": "struct ERC721A.TokenOwnership memory"
																	}
																},
																"id": 1615,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10808:4:10",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 918,
																"src": "10794:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1616,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "10816:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10794:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10822:40:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
																"typeString": "literal_string \"ERC721A: transfer from incorrect owner\""
															},
															"value": "ERC721A: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
																"typeString": "literal_string \"ERC721A: transfer from incorrect owner\""
															}
														],
														"id": 1613,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10786:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10786:77:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1620,
												"nodeType": "ExpressionStatement",
												"src": "10786:77:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1622,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1573,
																"src": "10882:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10896:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10888:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1623,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10888:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10888:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10882:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10900:39:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
																"typeString": "literal_string \"ERC721A: transfer to the zero address\""
															},
															"value": "ERC721A: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
																"typeString": "literal_string \"ERC721A: transfer to the zero address\""
															}
														],
														"id": 1621,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10874:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10874:66:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "10874:66:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1632,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "10975:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "10981:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1634,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "10985:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10994:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1631,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1833,
														"src": "10953:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10953:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1637,
												"nodeType": "ExpressionStatement",
												"src": "10953:43:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11078:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11070:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1639,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11070:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11070:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1643,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "11082:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1644,
																"name": "prevOwnership",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1580,
																"src": "11091:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$921_memory_ptr",
																	"typeString": "struct ERC721A.TokenOwnership memory"
																}
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11105:4:10",
															"memberName": "addr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 918,
															"src": "11091:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1638,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "11061:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11061:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1647,
												"nodeType": "ExpressionStatement",
												"src": "11061:49:10"
											},
											{
												"id": 1718,
												"nodeType": "UncheckedBlock",
												"src": "11377:773:10",
												"statements": [
													{
														"expression": {
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1648,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "11398:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$926_storage_$",
																			"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1650,
																	"indexExpression": {
																		"id": 1649,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1571,
																		"src": "11411:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11398:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$926_storage",
																		"typeString": "struct ERC721A.AddressData storage ref"
																	}
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "11417:7:10",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 923,
																"src": "11398:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11428:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11398:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"id": 1654,
														"nodeType": "ExpressionStatement",
														"src": "11398:31:10"
													},
													{
														"expression": {
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1655,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "11440:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$926_storage_$",
																			"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1657,
																	"indexExpression": {
																		"id": 1656,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1573,
																		"src": "11453:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11440:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$926_storage",
																		"typeString": "struct ERC721A.AddressData storage ref"
																	}
																},
																"id": 1658,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "11457:7:10",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 923,
																"src": "11440:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11468:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11440:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"id": 1661,
														"nodeType": "ExpressionStatement",
														"src": "11440:29:10"
													},
													{
														"expression": {
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1662,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "11482:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$921_storage_$",
																			"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1664,
																	"indexExpression": {
																		"id": 1663,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1575,
																		"src": "11494:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11482:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$921_storage",
																		"typeString": "struct ERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1665,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "11503:4:10",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 918,
																"src": "11482:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1666,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1573,
																"src": "11510:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11482:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1668,
														"nodeType": "ExpressionStatement",
														"src": "11482:30:10"
													},
													{
														"expression": {
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1669,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "11523:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$921_storage_$",
																			"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1671,
																	"indexExpression": {
																		"id": 1670,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1575,
																		"src": "11535:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11523:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$921_storage",
																		"typeString": "struct ERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1672,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "11544:14:10",
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 920,
																"src": "11523:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1675,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "11568:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11574:9:10",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "11568:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11561:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1673,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "11561:6:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11561:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "11523:61:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1679,
														"nodeType": "ExpressionStatement",
														"src": "11523:61:10"
													},
													{
														"assignments": [
															1681
														],
														"declarations": [
															{
																"constant": false,
																"id": 1681,
																"mutability": "mutable",
																"name": "nextTokenId",
																"nameLocation": "11832:11:10",
																"nodeType": "VariableDeclaration",
																"scope": 1718,
																"src": "11824:19:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1680,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11824:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1685,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1682,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1575,
																"src": "11846:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11856:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11846:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11824:33:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1686,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "11872:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$921_storage_$",
																			"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1688,
																	"indexExpression": {
																		"id": 1687,
																		"name": "nextTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1681,
																		"src": "11884:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11872:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$921_storage",
																		"typeString": "struct ERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1689,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11897:4:10",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 918,
																"src": "11872:29:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11913:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11905:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1690,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11905:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11905:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11872:43:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1717,
														"nodeType": "IfStatement",
														"src": "11868:275:10",
														"trueBody": {
															"id": 1716,
															"nodeType": "Block",
															"src": "11917:226:10",
															"statements": [
																{
																	"condition": {
																		"arguments": [
																			{
																				"id": 1696,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1681,
																				"src": "11944:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1695,
																			"name": "_exists",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1396,
																			"src": "11936:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (uint256) view returns (bool)"
																			}
																		},
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11936:20:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1715,
																	"nodeType": "IfStatement",
																	"src": "11932:200:10",
																	"trueBody": {
																		"id": 1714,
																		"nodeType": "Block",
																		"src": "11958:174:10",
																		"statements": [
																			{
																				"expression": {
																					"id": 1704,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"baseExpression": {
																								"id": 1698,
																								"name": "_ownerships",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 937,
																								"src": "11977:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$921_storage_$",
																									"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																								}
																							},
																							"id": 1700,
																							"indexExpression": {
																								"id": 1699,
																								"name": "nextTokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1681,
																								"src": "11989:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "11977:24:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$921_storage",
																								"typeString": "struct ERC721A.TokenOwnership storage ref"
																							}
																						},
																						"id": 1701,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "12002:4:10",
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 918,
																						"src": "11977:29:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 1702,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1580,
																							"src": "12009:13:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$921_memory_ptr",
																								"typeString": "struct ERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 1703,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "12023:4:10",
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 918,
																						"src": "12009:18:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "11977:50:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 1705,
																				"nodeType": "ExpressionStatement",
																				"src": "11977:50:10"
																			},
																			{
																				"expression": {
																					"id": 1712,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"baseExpression": {
																								"id": 1706,
																								"name": "_ownerships",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 937,
																								"src": "12046:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$921_storage_$",
																									"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																								}
																							},
																							"id": 1708,
																							"indexExpression": {
																								"id": 1707,
																								"name": "nextTokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1681,
																								"src": "12058:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "12046:24:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$921_storage",
																								"typeString": "struct ERC721A.TokenOwnership storage ref"
																							}
																						},
																						"id": 1709,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "12071:14:10",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 920,
																						"src": "12046:39:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 1710,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1580,
																							"src": "12088:13:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$921_memory_ptr",
																								"typeString": "struct ERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 1711,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "12102:14:10",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 920,
																						"src": "12088:28:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"src": "12046:70:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				"id": 1713,
																				"nodeType": "ExpressionStatement",
																				"src": "12046:70:10"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1720,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "12176:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1721,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "12182:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1722,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "12186:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1719,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "12167:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12167:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1724,
												"nodeType": "EmitStatement",
												"src": "12162:32:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1726,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "12226:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1727,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "12232:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1728,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "12236:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12245:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1725,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "12205:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12205:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1731,
												"nodeType": "ExpressionStatement",
												"src": "12205:42:10"
											}
										]
									},
									"documentation": {
										"id": 1569,
										"nodeType": "StructuredDocumentation",
										"src": "10075:240:10",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "10330:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10358:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "10350:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10350:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10381:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "10373:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10373:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10402:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "10394:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10394:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10339:77:10"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10425:0:10"
									},
									"scope": 1847,
									"src": "10321:1934:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1755,
										"nodeType": "Block",
										"src": "12477:92:10",
										"statements": [
											{
												"expression": {
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1743,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "12488:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1745,
														"indexExpression": {
															"id": 1744,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1738,
															"src": "12504:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12488:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1746,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1736,
														"src": "12515:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12488:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1748,
												"nodeType": "ExpressionStatement",
												"src": "12488:29:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1750,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "12542:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1751,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "12549:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1752,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1738,
															"src": "12553:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1749,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "12533:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12533:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1754,
												"nodeType": "EmitStatement",
												"src": "12528:33:10"
											}
										]
									},
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "12263:104:10",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 1756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "12382:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12409:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "12401:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12401:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12430:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "12422:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12422:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12456:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "12448:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12448:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12390:78:10"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12477:0:10"
									},
									"scope": 1847,
									"src": "12373:196:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1819,
										"nodeType": "Block",
										"src": "13295:643:10",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1770,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "13310:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13313:10:10",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 331,
														"src": "13310:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13310:15:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1817,
													"nodeType": "Block",
													"src": "13893:38:10",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13915:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1769,
															"id": 1816,
															"nodeType": "Return",
															"src": "13908:11:10"
														}
													]
												},
												"id": 1818,
												"nodeType": "IfStatement",
												"src": "13306:625:10",
												"trueBody": {
													"id": 1814,
													"nodeType": "Block",
													"src": "13327:560:10",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1794,
																		"nodeType": "Block",
																		"src": "13443:97:10",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1792,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1786,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1784,
																						"src": "13469:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"arguments": [
																									{
																										"id": 1788,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1761,
																										"src": "13495:2:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1787,
																									"name": "IERC721Receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 286,
																									"src": "13479:15:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$286_$",
																										"typeString": "type(contract IERC721Receiver)"
																									}
																								},
																								"id": 1789,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13479:19:10",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC721Receiver_$286",
																									"typeString": "contract IERC721Receiver"
																								}
																							},
																							"id": 1790,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "13499:16:10",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 285,
																							"src": "13479:36:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																								"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																							}
																						},
																						"id": 1791,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "13516:8:10",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "13479:45:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "13469:55:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 1769,
																				"id": 1793,
																				"nodeType": "Return",
																				"src": "13462:62:10"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1795,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1785,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1784,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "13435:6:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 1795,
																				"src": "13428:13:10",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1783,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "13428:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "13427:15:10"
																	},
																	"src": "13419:121:10"
																},
																{
																	"block": {
																		"id": 1811,
																		"nodeType": "Block",
																		"src": "13569:307:10",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1802,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1799,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1797,
																							"src": "13592:6:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1800,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "13599:6:10",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "13592:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1801,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13609:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "13592:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1809,
																					"nodeType": "Block",
																					"src": "13722:139:10",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "13754:88:10",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "13792:2:10",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "13796:6:10"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "13788:3:10"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "13788:15:10"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "13811:6:10"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "13805:5:10"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "13805:13:10"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "13781:6:10"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "13781:38:10"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "13781:38:10"
																									}
																								]
																							},
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 1797,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "13796:6:10",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1797,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "13811:6:10",
																									"valueSize": 1
																								}
																							],
																							"id": 1808,
																							"nodeType": "InlineAssembly",
																							"src": "13745:97:10"
																						}
																					]
																				},
																				"id": 1810,
																				"nodeType": "IfStatement",
																				"src": "13588:273:10",
																				"trueBody": {
																					"id": 1807,
																					"nodeType": "Block",
																					"src": "13612:104:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243373231413a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 1804,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "13642:53:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																											"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721A: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																											"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 1803,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "13635:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1805,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13635:61:10",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1806,
																							"nodeType": "ExpressionStatement",
																							"src": "13635:61:10"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1812,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1798,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1797,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "13561:6:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 1812,
																				"src": "13548:19:10",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1796,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "13548:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "13547:21:10"
																	},
																	"src": "13541:335:10"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1777,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 620,
																			"src": "13383:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13383:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1779,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1759,
																		"src": "13397:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1780,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1763,
																		"src": "13403:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1781,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1765,
																		"src": "13412:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1774,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1761,
																				"src": "13362:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1773,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 286,
																			"src": "13346:15:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$286_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13346:19:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$286",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13366:16:10",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 285,
																	"src": "13346:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13346:72:10",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1813,
															"nodeType": "TryStatement",
															"src": "13342:534:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1757,
										"nodeType": "StructuredDocumentation",
										"src": "12577:551:10",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "13143:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13184:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "13176:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13176:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13207:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "13199:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13199:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13228:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "13220:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13220:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "13259:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "13246:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1764,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13246:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13165:106:10"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "13289:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1767,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13289:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13288:6:10"
									},
									"scope": 1847,
									"src": "13134:804:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1832,
										"nodeType": "Block",
										"src": "14583:2:10",
										"statements": []
									},
									"documentation": {
										"id": 1821,
										"nodeType": "StructuredDocumentation",
										"src": "13946:474:10",
										"text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`."
									},
									"id": 1833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "14435:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14475:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "14467:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14467:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14498:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "14490:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14490:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "14519:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "14511:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14511:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "14550:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "14542:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14542:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14456:109:10"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14583:0:10"
									},
									"scope": 1847,
									"src": "14426:159:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1845,
										"nodeType": "Block",
										"src": "15153:2:10",
										"statements": []
									},
									"documentation": {
										"id": 1834,
										"nodeType": "StructuredDocumentation",
										"src": "14593:398:10",
										"text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n minting.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero."
									},
									"id": 1846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "15006:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15045:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "15037:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15037:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15068:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "15060:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15060:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "15089:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "15081:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15081:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15120:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "15112:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15112:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15026:109:10"
									},
									"returnParameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15153:0:10"
									},
									"scope": 1847,
									"src": "14997:158:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1848,
							"src": "961:14197:10",
							"usedErrors": []
						}
					],
					"src": "59:15099:10"
				},
				"id": 10
			},
			"contracts/Gluttony.sol": {
				"ast": {
					"absolutePath": "contracts/Gluttony.sol",
					"exportedSymbols": {
						"Address": [
							608
						],
						"Context": [
							630
						],
						"ERC165": [
							880
						],
						"ERC721A": [
							1847
						],
						"Gluttony": [
							2230
						],
						"IERC165": [
							892
						],
						"IERC721": [
							268
						],
						"IERC721Metadata": [
							313
						],
						"IERC721Receiver": [
							286
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							152
						],
						"Strings": [
							856
						]
					},
					"id": 2231,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1849,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:11"
						},
						{
							"absolutePath": "contracts/ERC721A.sol",
							"file": "./ERC721A.sol",
							"id": 1850,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2231,
							"sourceUnit": 1848,
							"src": "62:23:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1851,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2231,
							"sourceUnit": 113,
							"src": "87:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1852,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2231,
							"sourceUnit": 153,
							"src": "141:62:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1853,
										"name": "ERC721A",
										"nameLocations": [
											"228:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1847,
										"src": "228:7:11"
									},
									"id": 1854,
									"nodeType": "InheritanceSpecifier",
									"src": "228:7:11"
								},
								{
									"baseName": {
										"id": 1855,
										"name": "Ownable",
										"nameLocations": [
											"237:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "237:7:11"
									},
									"id": 1856,
									"nodeType": "InheritanceSpecifier",
									"src": "237:7:11"
								},
								{
									"baseName": {
										"id": 1857,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"246:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 152,
										"src": "246:15:11"
									},
									"id": 1858,
									"nodeType": "InheritanceSpecifier",
									"src": "246:15:11"
								}
							],
							"canonicalName": "Gluttony",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2230,
							"linearizedBaseContracts": [
								2230,
								152,
								112,
								1847,
								313,
								268,
								880,
								892,
								630
							],
							"name": "Gluttony",
							"nameLocation": "216:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1861,
									"libraryName": {
										"id": 1859,
										"name": "Strings",
										"nameLocations": [
											"275:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 856,
										"src": "275:7:11"
									},
									"nodeType": "UsingForDirective",
									"src": "269:26:11",
									"typeName": {
										"id": 1860,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "287:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "8d859f3e",
									"id": 1863,
									"mutability": "mutable",
									"name": "PRICE",
									"nameLocation": "318:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 2230,
									"src": "303:20:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1862,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "303:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "32cb6b0c",
									"id": 1865,
									"mutability": "mutable",
									"name": "MAX_SUPPLY",
									"nameLocation": "345:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 2230,
									"src": "330:25:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1864,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "330:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1867,
									"mutability": "mutable",
									"name": "BASE_URI",
									"nameLocation": "377:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 2230,
									"src": "362:23:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1866,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "362:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "10b0c052",
									"id": 1869,
									"mutability": "mutable",
									"name": "FREE_MINT_LIMIT_PER_WALLET",
									"nameLocation": "407:26:11",
									"nodeType": "VariableDeclaration",
									"scope": 2230,
									"src": "392:41:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1868,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "392:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "09ef6527",
									"id": 1871,
									"mutability": "mutable",
									"name": "MAX_MINT_AMOUNT_PER_TX",
									"nameLocation": "455:22:11",
									"nodeType": "VariableDeclaration",
									"scope": 2230,
									"src": "440:37:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1870,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "440:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "76d02b71",
									"id": 1873,
									"mutability": "mutable",
									"name": "IS_SALE_ACTIVE",
									"nameLocation": "496:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 2230,
									"src": "484:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1872,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "484:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4065b85f",
									"id": 1875,
									"mutability": "mutable",
									"name": "FREE_MINT_IS_ALLOWED_UNTIL",
									"nameLocation": "532:26:11",
									"nodeType": "VariableDeclaration",
									"scope": 2230,
									"src": "517:41:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1874,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "517:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fdb4953a",
									"id": 1877,
									"mutability": "mutable",
									"name": "METADATA_FROZEN",
									"nameLocation": "614:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 2230,
									"src": "602:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1876,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "602:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1881,
									"mutability": "mutable",
									"name": "freeMintCountMap",
									"nameLocation": "674:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 2230,
									"src": "638:52:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1880,
										"keyType": {
											"id": 1878,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "646:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "638:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1879,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "657:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1930,
										"nodeType": "Block",
										"src": "899:301:11",
										"statements": [
											{
												"expression": {
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1902,
														"name": "PRICE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1863,
														"src": "910:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1903,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1883,
														"src": "918:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "910:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1905,
												"nodeType": "ExpressionStatement",
												"src": "910:13:11"
											},
											{
												"expression": {
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1906,
														"name": "MAX_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1865,
														"src": "934:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1907,
														"name": "maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1885,
														"src": "947:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "934:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1909,
												"nodeType": "ExpressionStatement",
												"src": "934:22:11"
											},
											{
												"expression": {
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1910,
														"name": "BASE_URI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "967:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1911,
														"name": "baseUri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1887,
														"src": "978:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "967:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1913,
												"nodeType": "ExpressionStatement",
												"src": "967:18:11"
											},
											{
												"expression": {
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1914,
														"name": "FREE_MINT_LIMIT_PER_WALLET",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1869,
														"src": "996:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1915,
														"name": "freeMintAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1889,
														"src": "1025:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "996:46:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1917,
												"nodeType": "ExpressionStatement",
												"src": "996:46:11"
											},
											{
												"expression": {
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1918,
														"name": "MAX_MINT_AMOUNT_PER_TX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1871,
														"src": "1053:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1919,
														"name": "maxMintPerTx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1891,
														"src": "1078:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1053:37:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1921,
												"nodeType": "ExpressionStatement",
												"src": "1053:37:11"
											},
											{
												"expression": {
													"id": 1924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1922,
														"name": "IS_SALE_ACTIVE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1873,
														"src": "1101:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1923,
														"name": "isSaleActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1893,
														"src": "1118:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1101:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1925,
												"nodeType": "ExpressionStatement",
												"src": "1101:29:11"
											},
											{
												"expression": {
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1926,
														"name": "FREE_MINT_IS_ALLOWED_UNTIL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1875,
														"src": "1141:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1927,
														"name": "freeMintIsAllowedUntil",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1895,
														"src": "1170:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1141:51:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1929,
												"nodeType": "ExpressionStatement",
												"src": "1141:51:11"
											}
										]
									},
									"id": 1931,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "476c7574746f6e79",
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "876:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c49138c222204bee9709d6c6752845e031dc3cfca6a7dad547089861d1c8abae",
														"typeString": "literal_string \"Gluttony\""
													},
													"value": "Gluttony"
												},
												{
													"hexValue": "474c542d374453",
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "888:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_6061c9d70ec00b9ac7dde16275eed9938d3c72ef3cbb96ea0d780d3e54a4913a",
														"typeString": "literal_string \"GLT-7DS\""
													},
													"value": "GLT-7DS"
												}
											],
											"id": 1900,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1897,
												"name": "ERC721A",
												"nameLocations": [
													"868:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1847,
												"src": "868:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "868:30:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "719:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "711:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "maxSupply",
												"nameLocation": "734:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "726:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "726:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "baseUri",
												"nameLocation": "759:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "745:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1886,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "freeMintAllowance",
												"nameLocation": "776:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "768:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "maxMintPerTx",
												"nameLocation": "803:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "795:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "isSaleActive",
												"nameLocation": "822:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "817:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1892,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "817:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "freeMintIsAllowedUntil",
												"nameLocation": "844:22:11",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "836:30:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "710:157:11"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "899:0:11"
									},
									"scope": 2230,
									"src": "699:501:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1945,
										"nodeType": "Block",
										"src": "1301:52:11",
										"statements": [
											{
												"expression": {
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1939,
															"name": "freeMintCountMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "1312:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1941,
														"indexExpression": {
															"id": 1940,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1934,
															"src": "1329:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1312:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1942,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "1340:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1312:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1944,
												"nodeType": "ExpressionStatement",
												"src": "1312:33:11"
											}
										]
									},
									"documentation": {
										"id": 1932,
										"nodeType": "StructuredDocumentation",
										"src": "1208:17:11",
										"text": "FREE MINT *"
									},
									"id": 1946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateFreeMintCount",
									"nameLocation": "1242:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "1270:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "1262:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "count",
												"nameLocation": "1286:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "1278:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1278:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1261:31:11"
									},
									"returnParameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1301:0:11"
									},
									"scope": 2230,
									"src": "1233:120:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1199
									],
									"body": {
										"id": 1955,
										"nodeType": "Block",
										"src": "1459:34:11",
										"statements": [
											{
												"expression": {
													"id": 1953,
													"name": "BASE_URI",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1867,
													"src": "1477:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1952,
												"id": 1954,
												"nodeType": "Return",
												"src": "1470:15:11"
											}
										]
									},
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "1361:15:11",
										"text": "GETTERS *"
									},
									"id": 1956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "1393:8:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1949,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1426:8:11"
									},
									"parameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1401:2:11"
									},
									"returnParameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "1444:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1950,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1444:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1443:15:11"
									},
									"scope": 2230,
									"src": "1384:109:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1968,
										"nodeType": "Block",
										"src": "1582:38:11",
										"statements": [
											{
												"expression": {
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1964,
														"name": "PRICE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1863,
														"src": "1593:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1965,
														"name": "customPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1959,
														"src": "1601:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1593:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1967,
												"nodeType": "ExpressionStatement",
												"src": "1593:19:11"
											}
										]
									},
									"documentation": {
										"id": 1957,
										"nodeType": "StructuredDocumentation",
										"src": "1501:15:11",
										"text": "SETTERS *"
									},
									"functionSelector": "91b7f5ed",
									"id": 1969,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1962,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1961,
												"name": "onlyOwner",
												"nameLocations": [
													"1572:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1572:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1572:9:11"
										}
									],
									"name": "setPrice",
									"nameLocation": "1533:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "customPrice",
												"nameLocation": "1550:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "1542:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:21:11"
									},
									"returnParameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1582:0:11"
									},
									"scope": 2230,
									"src": "1524:96:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1994,
										"nodeType": "Block",
										"src": "1693:189:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1977,
																"name": "newMaxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1971,
																"src": "1712:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1978,
																"name": "MAX_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1865,
																"src": "1727:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1712:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206e6577206d617820737570706c79",
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1739:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b72e8ae0edd5a513ad336746f164deb3f6e417f35e767bb8deba9958034035ed",
																"typeString": "literal_string \"Invalid new max supply\""
															},
															"value": "Invalid new max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b72e8ae0edd5a513ad336746f164deb3f6e417f35e767bb8deba9958034035ed",
																"typeString": "literal_string \"Invalid new max supply\""
															}
														],
														"id": 1976,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1704:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1704:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1982,
												"nodeType": "ExpressionStatement",
												"src": "1704:60:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1984,
																"name": "newMaxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1971,
																"src": "1783:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1985,
																"name": "currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "1799:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1783:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206e6577206d617820737570706c79",
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1813:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b72e8ae0edd5a513ad336746f164deb3f6e417f35e767bb8deba9958034035ed",
																"typeString": "literal_string \"Invalid new max supply\""
															},
															"value": "Invalid new max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b72e8ae0edd5a513ad336746f164deb3f6e417f35e767bb8deba9958034035ed",
																"typeString": "literal_string \"Invalid new max supply\""
															}
														],
														"id": 1983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1775:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1775:63:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1989,
												"nodeType": "ExpressionStatement",
												"src": "1775:63:11"
											},
											{
												"expression": {
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1990,
														"name": "MAX_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1865,
														"src": "1849:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1991,
														"name": "newMaxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1971,
														"src": "1862:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1849:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1993,
												"nodeType": "ExpressionStatement",
												"src": "1849:25:11"
											}
										]
									},
									"functionSelector": "c4e9374d",
									"id": 1995,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1974,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1973,
												"name": "onlyOwner",
												"nameLocations": [
													"1683:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1683:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1683:9:11"
										}
									],
									"name": "lowerMaxSupply",
									"nameLocation": "1637:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "newMaxSupply",
												"nameLocation": "1660:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "1652:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1652:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1651:22:11"
									},
									"returnParameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1693:0:11"
									},
									"scope": 2230,
									"src": "1628:254:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2012,
										"nodeType": "Block",
										"src": "1959:100:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1978:16:11",
															"subExpression": {
																"id": 2003,
																"name": "METADATA_FROZEN",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1877,
																"src": "1979:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d657461646174612066726f7a656e21",
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1996:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c155652365f31b560217ab6dcf4c24f3e9bd67eb9c1aab565a9269af9210eeb7",
																"typeString": "literal_string \"Metadata frozen!\""
															},
															"value": "Metadata frozen!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c155652365f31b560217ab6dcf4c24f3e9bd67eb9c1aab565a9269af9210eeb7",
																"typeString": "literal_string \"Metadata frozen!\""
															}
														],
														"id": 2002,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1970:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1970:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2007,
												"nodeType": "ExpressionStatement",
												"src": "1970:45:11"
											},
											{
												"expression": {
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2008,
														"name": "BASE_URI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "2026:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2009,
														"name": "customBaseURI_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1997,
														"src": "2037:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2026:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2011,
												"nodeType": "ExpressionStatement",
												"src": "2026:25:11"
											}
										]
									},
									"functionSelector": "55f804b3",
									"id": 2013,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2000,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1999,
												"name": "onlyOwner",
												"nameLocations": [
													"1949:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1949:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1949:9:11"
										}
									],
									"name": "setBaseURI",
									"nameLocation": "1899:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "customBaseURI_",
												"nameLocation": "1924:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "1910:28:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1996,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1910:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1909:30:11"
									},
									"returnParameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1959:0:11"
									},
									"scope": 2230,
									"src": "1890:169:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2024,
										"nodeType": "Block",
										"src": "2143:65:11",
										"statements": [
											{
												"expression": {
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2020,
														"name": "FREE_MINT_LIMIT_PER_WALLET",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1869,
														"src": "2154:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2021,
														"name": "freeMintAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "2183:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2154:46:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2023,
												"nodeType": "ExpressionStatement",
												"src": "2154:46:11"
											}
										]
									},
									"functionSelector": "b0551ac4",
									"id": 2025,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2018,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2017,
												"name": "onlyOwner",
												"nameLocations": [
													"2133:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2133:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2133:9:11"
										}
									],
									"name": "setFreeMintAllowance",
									"nameLocation": "2076:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "freeMintAllowance",
												"nameLocation": "2105:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 2025,
												"src": "2097:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:27:11"
									},
									"returnParameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2143:0:11"
									},
									"scope": 2230,
									"src": "2067:141:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2036,
										"nodeType": "Block",
										"src": "2282:56:11",
										"statements": [
											{
												"expression": {
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2032,
														"name": "MAX_MINT_AMOUNT_PER_TX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1871,
														"src": "2293:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2033,
														"name": "maxMintPerTx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2027,
														"src": "2318:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2293:37:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2035,
												"nodeType": "ExpressionStatement",
												"src": "2293:37:11"
											}
										]
									},
									"functionSelector": "616cdb1e",
									"id": 2037,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2030,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2029,
												"name": "onlyOwner",
												"nameLocations": [
													"2272:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2272:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2272:9:11"
										}
									],
									"name": "setMaxMintPerTx",
									"nameLocation": "2225:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "maxMintPerTx",
												"nameLocation": "2249:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "2241:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2240:22:11"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2282:0:11"
									},
									"scope": 2230,
									"src": "2216:122:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2048,
										"nodeType": "Block",
										"src": "2407:48:11",
										"statements": [
											{
												"expression": {
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2044,
														"name": "IS_SALE_ACTIVE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1873,
														"src": "2418:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2045,
														"name": "saleIsActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2039,
														"src": "2435:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2418:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2047,
												"nodeType": "ExpressionStatement",
												"src": "2418:29:11"
											}
										]
									},
									"functionSelector": "841718a6",
									"id": 2049,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2042,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2041,
												"name": "onlyOwner",
												"nameLocations": [
													"2397:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2397:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2397:9:11"
										}
									],
									"name": "setSaleActive",
									"nameLocation": "2355:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "saleIsActive",
												"nameLocation": "2374:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "2369:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2038,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2369:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:19:11"
									},
									"returnParameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2407:0:11"
									},
									"scope": 2230,
									"src": "2346:109:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2060,
										"nodeType": "Block",
										"src": "2547:70:11",
										"statements": [
											{
												"expression": {
													"id": 2058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2056,
														"name": "FREE_MINT_IS_ALLOWED_UNTIL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1875,
														"src": "2558:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2057,
														"name": "freeMintIsAllowedUntil",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2051,
														"src": "2587:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2558:51:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2059,
												"nodeType": "ExpressionStatement",
												"src": "2558:51:11"
											}
										]
									},
									"functionSelector": "8b85e43d",
									"id": 2061,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2054,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2053,
												"name": "onlyOwner",
												"nameLocations": [
													"2537:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2537:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2537:9:11"
										}
									],
									"name": "setFreeMintAllowedUntil",
									"nameLocation": "2472:23:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "freeMintIsAllowedUntil",
												"nameLocation": "2504:22:11",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "2496:30:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2495:32:11"
									},
									"returnParameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2547:0:11"
									},
									"scope": 2230,
									"src": "2463:154:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2070,
										"nodeType": "Block",
										"src": "2670:41:11",
										"statements": [
											{
												"expression": {
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2066,
														"name": "METADATA_FROZEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1877,
														"src": "2681:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2067,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2699:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2681:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2069,
												"nodeType": "ExpressionStatement",
												"src": "2681:22:11"
											}
										]
									},
									"functionSelector": "d111515d",
									"id": 2071,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2064,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2063,
												"name": "onlyOwner",
												"nameLocations": [
													"2660:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2660:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2660:9:11"
										}
									],
									"name": "freezeMetadata",
									"nameLocation": "2634:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2648:2:11"
									},
									"returnParameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2670:0:11"
									},
									"scope": 2230,
									"src": "2625:86:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2097,
										"nodeType": "Block",
										"src": "2784:204:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2077,
																	"name": "_mintAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2074,
																	"src": "2803:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2817:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2803:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2080,
																	"name": "_mintAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2074,
																	"src": "2822:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 2081,
																	"name": "MAX_MINT_AMOUNT_PER_TX",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1871,
																	"src": "2837:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2822:37:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2803:56:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206d696e7420616d6f756e7421",
															"id": 2084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2afc881382e53668af85e40886889fd546013099ff9b53bdd0e598bbbfa87bda",
																"typeString": "literal_string \"Invalid mint amount!\""
															},
															"value": "Invalid mint amount!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2afc881382e53668af85e40886889fd546013099ff9b53bdd0e598bbbfa87bda",
																"typeString": "literal_string \"Invalid mint amount!\""
															}
														],
														"id": 2076,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2795:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2795:89:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2086,
												"nodeType": "ExpressionStatement",
												"src": "2795:89:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2088,
																	"name": "currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "2903:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2089,
																	"name": "_mintAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2074,
																	"src": "2918:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2903:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2091,
																"name": "MAX_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1865,
																"src": "2933:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2903:40:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d617820737570706c7920657863656564656421",
															"id": 2093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2945:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c61dd4df19bfedc67e9e65903122dd2df745b4c85f6abbd7f899090fbd4396a3",
																"typeString": "literal_string \"Max supply exceeded!\""
															},
															"value": "Max supply exceeded!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c61dd4df19bfedc67e9e65903122dd2df745b4c85f6abbd7f899090fbd4396a3",
																"typeString": "literal_string \"Max supply exceeded!\""
															}
														],
														"id": 2087,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2895:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2895:73:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2095,
												"nodeType": "ExpressionStatement",
												"src": "2895:73:11"
											},
											{
												"id": 2096,
												"nodeType": "PlaceholderStatement",
												"src": "2979:1:11"
											}
										]
									},
									"documentation": {
										"id": 2072,
										"nodeType": "StructuredDocumentation",
										"src": "2719:12:11",
										"text": "MINT *"
									},
									"id": 2098,
									"name": "mintCompliance",
									"nameLocation": "2748:14:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "_mintAmount",
												"nameLocation": "2771:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "2763:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2763:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2762:21:11"
									},
									"src": "2739:249:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2180,
										"nodeType": "Block",
										"src": "3074:801:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2107,
															"name": "IS_SALE_ACTIVE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1873,
															"src": "3093:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c65206973206e6f742061637469766521",
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3109:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b2e2dcfc27254beaa6bfe8a568c90788b9920eb389c662813e1427b0b2225259",
																"typeString": "literal_string \"Sale is not active!\""
															},
															"value": "Sale is not active!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b2e2dcfc27254beaa6bfe8a568c90788b9920eb389c662813e1427b0b2225259",
																"typeString": "literal_string \"Sale is not active!\""
															}
														],
														"id": 2106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3085:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3085:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2110,
												"nodeType": "ExpressionStatement",
												"src": "3085:46:11"
											},
											{
												"assignments": [
													2112
												],
												"declarations": [
													{
														"constant": false,
														"id": 2112,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "3152:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2180,
														"src": "3144:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2111,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3144:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2116,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2113,
														"name": "PRICE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1863,
														"src": "3160:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2114,
														"name": "_mintAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2100,
														"src": "3168:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3160:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3144:35:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2117,
														"name": "currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "3196:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2118,
														"name": "FREE_MINT_IS_ALLOWED_UNTIL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1875,
														"src": "3211:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3196:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2165,
												"nodeType": "IfStatement",
												"src": "3192:566:11",
												"trueBody": {
													"id": 2164,
													"nodeType": "Block",
													"src": "3239:519:11",
													"statements": [
														{
															"assignments": [
																2121
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2121,
																	"mutability": "mutable",
																	"name": "remainingFreeMint",
																	"nameLocation": "3262:17:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 2164,
																	"src": "3254:25:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2120,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3254:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2128,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2122,
																	"name": "FREE_MINT_LIMIT_PER_WALLET",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1869,
																	"src": "3282:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"id": 2123,
																		"name": "freeMintCountMap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1881,
																		"src": "3311:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2126,
																	"indexExpression": {
																		"expression": {
																			"id": 2124,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3328:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3332:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3328:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3311:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3282:57:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3254:85:11"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2129,
																	"name": "remainingFreeMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "3358:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3378:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3358:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2163,
															"nodeType": "IfStatement",
															"src": "3354:393:11",
															"trueBody": {
																"id": 2162,
																"nodeType": "Block",
																"src": "3381:366:11",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2132,
																				"name": "_mintAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2100,
																				"src": "3404:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 2133,
																				"name": "remainingFreeMint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2121,
																				"src": "3419:17:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3404:32:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 2160,
																			"nodeType": "Block",
																			"src": "3594:138:11",
																			"statements": [
																				{
																					"expression": {
																						"id": 2152,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 2148,
																							"name": "price",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2112,
																							"src": "3617:5:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "-=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2151,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2149,
																								"name": "_mintAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2100,
																								"src": "3626:11:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 2150,
																								"name": "PRICE",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1863,
																								"src": "3640:5:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3626:19:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3617:28:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2153,
																					"nodeType": "ExpressionStatement",
																					"src": "3617:28:11"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 2155,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "3688:3:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 2156,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "3692:6:11",
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "3688:10:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2157,
																								"name": "_mintAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2100,
																								"src": "3700:11:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2154,
																							"name": "updateFreeMintCount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1946,
																							"src": "3668:19:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256)"
																							}
																						},
																						"id": 2158,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3668:44:11",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2159,
																					"nodeType": "ExpressionStatement",
																					"src": "3668:44:11"
																				}
																			]
																		},
																		"id": 2161,
																		"nodeType": "IfStatement",
																		"src": "3400:332:11",
																		"trueBody": {
																			"id": 2147,
																			"nodeType": "Block",
																			"src": "3438:150:11",
																			"statements": [
																				{
																					"expression": {
																						"id": 2139,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 2135,
																							"name": "price",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2112,
																							"src": "3461:5:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "-=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2138,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2136,
																								"name": "remainingFreeMint",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2121,
																								"src": "3470:17:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 2137,
																								"name": "PRICE",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1863,
																								"src": "3490:5:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3470:25:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3461:34:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2140,
																					"nodeType": "ExpressionStatement",
																					"src": "3461:34:11"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 2142,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "3538:3:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 2143,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "3542:6:11",
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "3538:10:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2144,
																								"name": "remainingFreeMint",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2121,
																								"src": "3550:17:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2141,
																							"name": "updateFreeMintCount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1946,
																							"src": "3518:19:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256)"
																							}
																						},
																						"id": 2145,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3518:50:11",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2146,
																					"nodeType": "ExpressionStatement",
																					"src": "3518:50:11"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2167,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3778:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3782:5:11",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3778:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2169,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2112,
																"src": "3791:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3778:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e647321",
															"id": 2171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3798:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f996caab982251e084504d5fd2ef64388ceaab43bf427eb5c8324e92803cd686",
																"typeString": "literal_string \"Insufficient funds!\""
															},
															"value": "Insufficient funds!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f996caab982251e084504d5fd2ef64388ceaab43bf427eb5c8324e92803cd686",
																"typeString": "literal_string \"Insufficient funds!\""
															}
														],
														"id": 2166,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3770:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3770:50:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2173,
												"nodeType": "ExpressionStatement",
												"src": "3770:50:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2175,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3843:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3847:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3843:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2177,
															"name": "_mintAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2100,
															"src": "3855:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2174,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1410,
															1428
														],
														"referencedDeclaration": 1410,
														"src": "3833:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3833:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2179,
												"nodeType": "ExpressionStatement",
												"src": "3833:34:11"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 2181,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2103,
													"name": "_mintAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2100,
													"src": "3061:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2102,
												"name": "mintCompliance",
												"nameLocations": [
													"3046:14:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2098,
												"src": "3046:14:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3046:27:11"
										}
									],
									"name": "mint",
									"nameLocation": "3005:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "_mintAmount",
												"nameLocation": "3018:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "3010:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3010:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3009:21:11"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3074:0:11"
									},
									"scope": 2230,
									"src": "2996:879:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2198,
										"nodeType": "Block",
										"src": "3981:46:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2194,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2183,
															"src": "4002:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2195,
															"name": "_mintAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2185,
															"src": "4007:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2193,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1410,
															1428
														],
														"referencedDeclaration": 1410,
														"src": "3992:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3992:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2197,
												"nodeType": "ExpressionStatement",
												"src": "3992:27:11"
											}
										]
									},
									"functionSelector": "408cbf94",
									"id": 2199,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2188,
													"name": "_mintAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2185,
													"src": "3958:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2189,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2187,
												"name": "mintCompliance",
												"nameLocations": [
													"3943:14:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2098,
												"src": "3943:14:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3943:27:11"
										},
										{
											"id": 2191,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2190,
												"name": "onlyOwner",
												"nameLocations": [
													"3971:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3971:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3971:9:11"
										}
									],
									"name": "mintOwner",
									"nameLocation": "3892:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3910:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "3902:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3902:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "_mintAmount",
												"nameLocation": "3923:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "3915:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3915:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3901:34:11"
									},
									"returnParameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3981:0:11"
									},
									"scope": 2230,
									"src": "3883:144:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2200,
										"nodeType": "StructuredDocumentation",
										"src": "4035:14:11",
										"text": "PAYOUT *"
									},
									"id": 2203,
									"mutability": "constant",
									"name": "payoutAddress",
									"nameLocation": "4082:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 2230,
									"src": "4057:88:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2201,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4057:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307863393139634531623337466334653034303538383561333335304343313533423237646430366530",
										"id": 2202,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4103:42:11",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xc919cE1b37Fc4e0405885a3350CC153B27dd06e0"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2228,
										"nodeType": "Block",
										"src": "4204:121:11",
										"statements": [
											{
												"assignments": [
													2211
												],
												"declarations": [
													{
														"constant": false,
														"id": 2211,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "4223:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2228,
														"src": "4215:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2210,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4215:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2217,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2214,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "4241:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Gluttony_$2230",
																	"typeString": "contract Gluttony"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Gluttony_$2230",
																	"typeString": "contract Gluttony"
																}
															],
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4233:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2212,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4233:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 2215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4233:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4247:7:11",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "4233:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4215:39:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2223,
																	"name": "payoutAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2203,
																	"src": "4293:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4285:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2221,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4285:8:11",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4285:22:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2225,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "4309:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2218,
															"name": "Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "4267:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Address_$608_$",
																"typeString": "type(library Address)"
															}
														},
														"id": 2220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4275:9:11",
														"memberName": "sendValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 365,
														"src": "4267:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
															"typeString": "function (address payable,uint256)"
														}
													},
													"id": 2226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4267:50:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2227,
												"nodeType": "ExpressionStatement",
												"src": "4267:50:11"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 2229,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2206,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2205,
												"name": "onlyOwner",
												"nameLocations": [
													"4181:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4181:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4181:9:11"
										},
										{
											"id": 2208,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2207,
												"name": "nonReentrant",
												"nameLocations": [
													"4191:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 151,
												"src": "4191:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4191:12:11"
										}
									],
									"name": "withdraw",
									"nameLocation": "4163:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4171:2:11"
									},
									"returnParameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4204:0:11"
									},
									"scope": 2230,
									"src": "4154:171:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2231,
							"src": "207:4121:11",
							"usedErrors": []
						}
					],
					"src": "35:4293:11"
				},
				"id": 11
			}
		}
	}
}